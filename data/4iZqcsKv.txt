К собесу:

DDD:
1. Единый язык
2. Ограниченный контекст
3. Предметная область, предметная подобласть, смысловое ядро

Принципы ООП:
1. Абстракция
	Отделение концепции от ее экземпляра.
2. Полиморфизм
	Реализация задач одной и той же идеи разными способами.
3. Наследование
	Способность объекта или класса базироваться на другом объекте или классе. 
	Наследственное отношение классов четко определяет их иерархию.
4. Инкапсуляция
	Размещение одного объекта или класса внутри другого для разграничения доступа к ним.

Принципы SOLID:
1. Принцип единой ответственности (Single Responsibility Principle)
	Каждый класс должен отвечать только за одну операцию.
2. Принцип открытости-закрытости (Open-closed principle)
	Классы должны  быть  открыты для расширения, но закрыты для модификации.
3. Принцип подстановки Барбары Лисков (Liskov substitution principle)
	Необходимо, чтобы класс-потомок был способен обрабатывать те же запросы, что и родитель, и выдавать тот же результат.
4. Принцип разделения интерфейсов (Interface Segregation)
	Разделение интерфейсов на более маленькие и узконаправленные.
5. Принцип инверсии зависимостей (Dependency Inversion)
	Класс должен быть соединён с интерфейсом, который поможет установить связь между инструментом и классом.

HTTP-методы:
1. GET
	Метод GET запрашивает представление ресурса. Запросы с использованием этого метода могут только извлекать данные.
2. POST
	POST используется для отправки сущностей к определённому ресурсу. 
	Часто вызывает изменение состояния или какие-то побочные эффекты на сервере.
3. PUT
	PUT заменяет все текущие представления ресурса данными запроса.
5. DELETE
	DELETE удаляет указанный ресурс.
6. HEAD
	HEAD запрашивает ресурс так же, как и метод GET, но без тела ответа.
7. CONNECT
	CONNECT устанавливает "туннель" к серверу, определённому по ресурсу.
8. OPTIONS
	OPTIONS используется для описания параметров соединения с ресурсом.
9. TRACE
	TRACE выполняет вызов возвращаемого тестового сообщения с ресурса.
10. PATCH
	PATCH используется для частичного изменения ресурса.

Все HTTP Methods можно разделить на три большие группы:
1. Безопасные — не меняют данные, можно выполнять их в любой последовательности. К ним относятся GET, HEAD и OPTIONS.
2. Идемпотентные — при повторном выполнении результаты ожидаемо одинаковые. GET, HEAD, PUT, DELETE, OPTIONS, TRACE.
3. Неидемпотентные — при повторном выполнении результаты будут отличаться. POST и PATCH.

Иногда также возникает вопрос, чем отличаются POST и PUT. Ключевое отличие в том, что PUT это идемпотентный метод, а POST — неидемпотентный.

Базовый заголовок авторизации HTTP - Authorization, Proxy-Authorization.

ПАТТЕРНЫ ПРОЕКТИРОВАНИЯ:
1. Singleton (Паттерн-антипатерн. Добавляет состояние в глобальную область видимости, что порождает ошибки в будущем и занимает память) 
2. Factory (Удобный интерфейс, который позволяет единый уровень объектов, и предоставляет точку входа)
3. Builder (Для создания сложных структур, дополнение и расширение сущности под условиями)
4. Decorator 

СТРУКТУРЫ:
1. DTO (Data Transfer Object) - объект используется для сериализации/десериализации данных и передачи между слоями приложения.
2. Value Object - объект, который может быть заменен другим объектом того же класса. Содержит бизнес-логику.

ПРОГРАММИРОВАНИЕ:
Рефлексия - процесс, во время которого программа может отслеживать и модифицировать собственную структуру и поведение во время выполнения.

СТРУКТУРЫ ДАННЫХ:
1. Стек - первый зашел - последный вышел
2. Очередь - первый зашел - первый вышел
3. Связный список - состоит из двух узлов, первый из которых содержит фактические данные, а второй ссылку или указатель на следующий элемент списка.
4. Map - структура, которая хранит данные в паре ключ/значение.
5. Хэш-таблицы - структура, которая хранит данные в виде пары ключ/значение. Она использует хэш-функцию для вычисления индекса в массиве из блоков данных, чтобы найти желаемое значение.
6. Двоичное дерево поиска - структура данных, состоящая из узлов
7. Массив - таблица. У каждого элемента есть индекс и фактическое значение.
8. Граф - это более общий случай дерева. Графы бывают ориентированные и неориентированные. У первых рёбра между узлами имеют направление, так что порядок элементов важен. У вторых направлений нет, и элементы можно читать и обходить в любом порядке.

PSR:
PHP Standart Recomendation - мануал, в котором в нескольких частях описаны стандарты/рекомендации, к различным аспектам языка. Как называть классы, метода, определение правил синтаксиса. 

PHP:
Переменные передаются по значению, если мы хотим передавать по ссылке, то добавляем &(амперсант) перед названием переменной.
Объекты передаются по ссылке. 
Массивы передаются по значению.

Trait - механизм, который реализует механизм миксинов. Трейт позволяет добавить повторяющийся функционал в несколько классов.
Приватный метод из трейта будет доступен в классе.

Замыкание - анонимная функция, в которую передаются переменные из внешнего пространства имен, через use. Функция первого класса, в теле которой присутствуют ссылки на переменные, объявленные вне тела этой функции в окружающем коде и не являющиеся её параметрами. 

В PHP нельзя наследовать несколько классов (возможный обход - Trait). 
В PHP можно реализовать много интерфейсов.

Тесты:

Mock - искусственное замещение реальной сущности, которая может применяться для тестирования и разработки.

Docker/Docker-compose

docker-compose up -d --build - базовая команда поднятия и ребилда проекта
docker-compose down - команда остановки и удаления контейнеров
docker-compose restart service - перезапуск определенного сервиса

OpCache:
Надстройка над PHP. Кэширует байт-код, который позже будет исполняться.