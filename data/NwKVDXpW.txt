from bs4 import BeautifulSoup, Comment
from requests import get

def read_file(name, path="./", mode="r"):
	with open(path+name, mode) as file:
		_file = file.read() 
	return _file

def request_from_file(link_src):
	#https://animekiduniya.net/full-time-magister-quanzhi-fashi-season-1-5-download/
	response = get(read_file(link_src))
	return response if response.status_code == 200 else False

def _request(site):
	response = get(site)
	return response if response.status_code == 200 else False



def parse_html(request_obj, feature="html.parser"):
	soup = BeautifulSoup(request_obj.content, feature)
	return soup

def select_seasons(parsed_content, class_=None):
	all_episodes = {}
	raw_seasons = parsed_content.select(f"{class_} > table")

	for i, season in enumerate(raw_seasons, 1):
		episodes = []
		all_episodes[f"season {i}"] = [];
		for ep in season.select("a"):
			all_episodes[f"season {i}"].append(ep.get("href"))

	return all_episodes

def format_site(string):
	if string:
		splitted_tokens = string.split(',')
		for i,_str in enumerate(splitted_tokens):
			splitted_tokens[i] = _str[1:len(_str)-1]
	return splitted_tokens

def format_site_str(ep_link):
	curr_ep = _request(ep_link)
	if curr_ep:
		soup = parse_html(curr_ep)
		download_link = str(soup.find("div", {"class":"box"}))
		download_link = download_link[download_link.index("(")+1:download_link.index(")")]
		return download_link
	return False
		
def convert_navigatable(seasons):
	navigatable_links= []

	for key, value in seasons.items():
		for elem in value:
			formatted_site = format_site(format_site_str(elem))
			v_link = f"https://ssbstream.net/dl?op=download_orig&id={formatted_site[0]}&mode{formatted_site[1]}&hash={formatted_site[2]}"
			navigatable_links.append(v_link)

	return navigatable_links



parsed_content = parse_html(request_from_file("site.txt"))
seasons = select_seasons(parsed_content, ".wp-block-table")

