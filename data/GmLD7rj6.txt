#include<bits/stdc++.h>
using namespace std;
const int maxn=1024;
const long long inf=-(1LL<<60);
int Tests,n;
int path[maxn][maxn];
long long a[maxn];
/*vector<long long> dp;
vector<bool> open;*/
//long long dp[maxn];
//bool open[maxn];
long long dp[maxn][maxn];
char s[maxn];
void rec(int i,int j)
{
    if(j-i==1)
    {
        s[i]='(';
        s[j]=')';
        return;
    }
    if(path[i][j]==1)
    {
        rec(i+1,j-1);
        s[i]='(';
        s[j]=')';
    }
    if(path[i][j]==2)
    {
        rec(i+2,j);
        s[i]='(';
        s[i+1]=')';
    }
    if(path[i][j]==3)
    {
        rec(i+2,j);
        s[i]='(';
        s[i+1]='(';
        s[i+2]=')';
    }
    if(path[i][j]==4)
    {
        rec(i,j-2);
        s[j-1]='(';
        s[j]=')';
    }
    if(path[i][j]==5)
    {
        rec(i,j-2);
        s[j-2]='(';
        s[j-1]=')';
        s[j]=')';
    }
}
int main()
{
	/*ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);*/
	cin>>Tests;
	int i,j,st;
    long long mini;
	while(Tests)
    {
        cin>>n;
        for(int i=0;i<n;++i)
            cin>>a[i];
        memset(dp,0,sizeof(dp));
        for(i=0;i<n-1;++i)
            dp[i][i+1]=a[i];
        for(int len=4;len<=n;len+=2)
        {
            for(i=0,j=len-1;j<n;++i,++j)
            {
                mini=a[i]+dp[i+1][j-1];/// ( ready )
                path[i][j]=1;
                if(mini<a[i]+dp[i+2][j])/// () ready
                {
                    mini=a[i]+dp[i+2][j];
                        path[i][j]=2;
                }
                if(mini<a[i]+a[i+1]-a[i+2]+dp[i+2][j])/// (( ')'-ready
                {
                    mini=a[i]+a[i+1]-a[i+2]+dp[i+2][j];
                    path[i][j]=3;
                }
                if(mini<dp[i][j-2]+a[j-1])/// ready ()
                {
                    mini=dp[i][j-2]+a[j-1];
                    path[i][j]=4;
                }
                if(mini<dp[i][j-2]+a[j-2])/// ready-'(' ))
                {
                    mini=dp[i][j-2]+a[j-2];
                    path[i][j]=5;
                }
                dp[i][j]=mini;
            }
        }
        rec(0,n-1);
        s[n]='\0';
        cout<<s<<'\n';
        --Tests;
    }
return 0;
}
