items1 = {"Shining", "Icy", "Tarnished", "Heroic", "Tropical", "Classical", "Elastic", "Decaying", "Tolerant", "Prehistoric", "Phantasmal", "Excited", "Exotic", "Decomposing", "Nuclear", "Fungal", "Slate", "Lime", "Caffeinated", "Glittering", "Roman", "Jaded", "Cultivated", "Darkened", "Rusty", "Water", "Corrosive", "Meadows", "Resilient", "Sweetened", "Abyssal", "Ocean", "Valiant", "Farmed", "Spatial", "Sugary", "Cyanite", "Viscous", "Embittered", "Imperial", "Shadowed", "Vengeful", "Robust", "Unstable", "Modest", "Farmerly", "Rural", "Majestic", "Secluded", "Ruby", "Blutonium", "Avenging", "Arid", "Marshy", "Primeval", "Noble", "Stained", "Desolate", "Ebony", "Ecstatic", "Fiendish", "Barren", "Radioactive", "Caustic", "Celebratory", "Gnawing", "Distilled", "Greek", "Infectious", "Unweary", "Resinous", "Growing", "Skeletal", "Edenic", "Quantum", "Galvanized", "Azure", "Glutinous", "Spectral", "Virulent", "Hermitic", "Furious", "Bleached", "Creepy", "Emerald", "Ripening", "Bovine", "Valuable", "Sticky", "Saffron", "Prussian", "Corroded", "Marble", "Sepia", "Industrious", "Fossilised", "Leaden", "Forest", "Rocky", "Invincible", "Sphalerite", "Lavender", "Frigid", "Glowering", "Indigo", "Sinister", "Wintry", "Abnormal", "Amber", "Sapphire", "Agrarian", "Miry", "Ender", "Ancient", "Hazardous", "Lapis", "Fermented", "Energetic", "Lustered", "Acidic", "Frugal", "Refined", "Austere", "River", "Diligent", "Thriving", "Demonic", "Fuchsia", "Mystical", "Turquoise", "Oily", "Steadfast", "Monastic", "Absolute", "Common", "Relic", "Blooming", "Natural", "Damp", "Volcanic", "Glacial", "Ashen", "Tarry", "Diamond", "Boggy", "Impregnable", "Fruity", "Vindictive", "Malicious", "Sodden", "Maroon"}
p = peripheral.wrap("front")
nameList = {}
print(items1) 
sleep(1)
function names()
for i, item in pairs(p.getAvailableItems()) do
  -- item is a table with properties such as name, count, and metadata
  local value = item.getValue1()
  --print(item.help())
  --print(value)
  --print(value)
  for key, val in pairs(value) do
    -- key is the name of a property (e.g. "name", "count", "metadata")
    -- val is the value of that property
    a = value.getName()
    --print(key .. ": " .. tostring(val))
  end
  --print(a)
  table.insert(nameList, a)
end
--print("list:")
--for i = 1, #nameList, 1 do
--print(nameList[i])
--end
--print(nameList)
return(nameList)
end
c = 0
storage = names()


for key, val in pairs(len) do
    if c == 1 then
    
    end
    if c == 2 then
    
    end
    print("VAL " .. val)
    print("KEY " .. key)
end




-- Create a copy of the list
storage = storage

-- Create an empty list to store the common items
common_items = {}

-- Loop through each item in the list
for i, item in ipairs(items) do
  -- Loop through each item in the copy of the list
  for j, item_copy in ipairs(items_copy) do
    -- Check if the item is present in the copy of the list
    if item == item_copy then
      -- Add the item to the list of common items
      common_items[#common_items + 1] = item
      -- Remove the item from the copy of the list to avoid duplicates
      table.remove(items_copy, j)
      break
    end
  end
end

-- Sort the list of common items
table.sort(common_items)






