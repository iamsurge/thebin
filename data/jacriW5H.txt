import random

abc = r'iSК%?вnЩфНW7}ЖЕsВзgоу,Ьм.T-ЁdRD]Ц(ILUнТ3ркИc*ч=ЫйwP;{СJ/цCъe0vЯ#Q[Л"YЧ\еЗPaZпKД86mГ1FЮqyЪBOт<УЙ@$ОащШг!ПVfubРlжzшX4БM9kсьG5бtxHМ_Аядэr&:иopФE)Э^ANл+j>ю`Ххыё2h'
abc += abc.upper() + ' '
crypt_dict = {}
decrypt_dict = {}
# Пока что не используется
CRYPT_OFFSET = random.randint(100, 200)


for offset, item in enumerate(abc):
    crypt_dict[item] = str(offset + 10)

for key, item in crypt_dict.items():
    decrypt_dict[item] = key


def crypt_mode(mode):
    text = ''

    if mode == 'crypt':
        text = input('crypt >>> ')
    elif mode == 'cryptf':
        file = input('cryptf >>> ')
        with open(file, mode='r', encoding='utf-8') as f:
            for i in f:
                text += i

    crypt_text = ''

    max_key = max(list(map(int, decrypt_dict.keys())))

    for crypt_s in text:
        if crypt_s in crypt_dict.keys():
            crypt_text += crypt_dict[crypt_s] + (
                '_' + str(random.randint(max_key, max_key + 200)) + '_' if random.randint(0, 1) else '_')

    crypt_text += str(CRYPT_OFFSET)

    if mode == 'crypt':
        print(crypt_text)
    elif mode == 'cryptf':
        print(crypt_text, file=open(file+'.crypt', 'w', encoding='utf-8'))


def decrypt_mode(mode):
    text = ''
    if mode == 'decrypt':
        text = input('decrypt >>> ').split('_')
    elif mode == 'decryptf':
        with open(input('decryptf >>> '), mode='r') as f:
            for i in f:
                text += i
            text = text.split('_')
    decrypt_offset = text.pop(-1)
    decrypt_text = ''

    for crypt_s in text:
        if crypt_s in decrypt_dict.keys():
            decrypt_text += decrypt_dict[crypt_s]

    print(decrypt_text)


while True:
    switch = input('mode[crypt(1) or decrypt(2) or cryptf(3) or decryptf(4) or exit(-1)]: ')

    if switch == 'crypt' or switch == '1':
        crypt_mode('crypt')
    elif switch == 'decrypt' or switch == '2':
        decrypt_mode('decrypt')
    elif switch == 'cryptf' or switch == '3':
        crypt_mode('cryptf')
    elif switch == 'decryptf' or switch == '4':
        decrypt_mode('decryptf')
    elif switch == 'exit' or switch == '3':
        break
    else:
        print('There is no such mode of operation...')


print('Exit...')
