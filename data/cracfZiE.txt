#include <iostream>
#include <cmath>
#include <vector>
#include <queue>
#include <algorithm>
#include <string>
#include <stack>
#include <set>
#include <map>
#define pii pair <int, int>
#define pb(x) push_back(x)
using namespace std;
using ll = long long;
using ld = long double;
using db = double;
void cv(vector <int> &v) {
    for (auto x : v) cout << x << ' ';
    cout << "\n";
}

void cvl(vector <ll> &v) {
    for (auto x : v) cout << x << ' ';
    cout << "\n";
}


void cvv(vector <vector <int> > &v) {
    for (auto x : v) cv(x);
    cout << "\n";
}

void cvb(vector <bool> v) {
    for (bool x : v) cout << x << ' ';
    cout << "\n";
}

void cvs(vector <string>  v) {
    for (auto a : v) {
        cout << a << "\n";
    }
}

void cvp(vector <pii> a) {
    for (auto p : a) {
        cout << p.first << ' ' << p.second << "\n";
    }
    cout << "\n";
}

string s = "0000110010101111010011010110001110101110";
int n;

string f(int d1, int d2) {
    string r = "";
    for (int i = 0; i + d1 + d2 < n; ++i) {
        int x, y, z;
        x = s[i] - '0';
        y = s[i + d1] - '0';
        z = s[i + d1 + d2] - '0';
        int xyz =  x + y - z;
        if (xyz >= 1) {
            r += '1';
        } else {
            r += '0';
        }
    }
    return r;
}


int main() {
    ios::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
    n = s.size();
    for (int i = 1; i <= 9; ++i) {
        for (int j = i + 1; i + j <= 11; ++j) {
            string t = f(i, j);
            cout << "(" << i << "," << j << ")\n";
            cout << t << "\n";
        }
    }
}
