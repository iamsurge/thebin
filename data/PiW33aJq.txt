

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace HelloWorldSY2022
{
    public class MyProgram
    {

        /*  Uppställning av saker i en klass
         * 
         * 1. Variabler högst upp
         * 2. Konstruktor av klass
         * 3. Accessors/Properties etc. (Programmering 2)
         * 4. Metoder som klassen använder sig av . Start med första som kallas (om någon finns)
         * 
         */


        #region Kommentarer och hur man använda dessa

        // Kommentar - enstaka rad

        /// <summary>
        ///  Dokumentations kommentarer - Vi använder oss inte av dessa då vi inte 
        ///  skapar program av den kalibern
        /// </summary>

        /*  Flera raders kommentarer
         * 
         *  Allt blir till kommentarer från /* till stjärna/  Kan inte använda tecknet då det
         *                                                    avslutar kommentarsfältet
         */

        #endregion


        #region Variabler

        // Variabler - De överlever endast sitt egna scope -- se strecken till vänster
        int integer;                // Heltlal, 1 2 3 4 
        float   decimalNumber;          // Decimaltal, tio-potens, 3.14  eller 3*10^4
        bool    boolean;                // Boolean, true/false
        string  arrayOfChar;            // En array av tecken. "Hello World!"
        int [] arrayOfInt;              // en array av heltal
        
        #endregion


        #region Konstruktor för Klassen
        public MyProgram()      // Konstruktor för klassen - Programmering 2
        {
            // Sätta värden på variabler som finns i klassen (initiera/reset)
            integer = 2;
            decimalNumber = 3.14f;
            boolean = true;
            arrayOfChar = "Hello World! x3";
            arrayOfInt = new int[] { 1, 2, 3 };
            arrayOfInt = new int[3];

            int numberThatCanNotBeUsed = 2;     // Variabeln överlever inte konstruktorn

        }

        #endregion


        #region Första Metoden som kallas på när programmet körs
        public void Run()               // En metod som heter Run och som är publik, den returnerar inget
        {                               // Sätt måsvingarna på ny rad så att linjeringen passar in i 
                                        // Visual Studio IDE
            
            
            Console.WriteLine("Hello World! x1");   // Använder Console och metoden WriteLine för att skriva
                                                    // ut Hello World! och sedan addera radbryt.

            
            
            
            TypeThis("Hello World! x2");            // Kallar på Metoden TypeThis som är definierad under.
                                                    // Skickar med string "Hello World! x2" till metoden

            
            
            
            
            TypeThis(arrayOfChar);                  // Istället för att skriva in string används variabeln.


            TypeThis(AddOne(integer).ToString());   // Kallar på metoden AddOne först med
                                                    // indata integer-variabeln. Resultatet som returneras
                                                    // omvandlas till en string och sedan hanteras som indata
                                                    // till metoden TypeThis

            WhileLoop(5);

            ForLoop(4);

            arrayOfInt = GetRandomValuesForArray(arrayOfInt);

            TypeIntArrayValues(arrayOfInt);
        }

        #endregion


        #region Nya Metoder som endast finns i klassen

        void TypeThis(string messageToType)     // En metod som heter TypeThis och som tar emot en string
        {                                       // värdet som tas emot hamna i lokala variabel messateToType
            Console.WriteLine(messageToType);   // Skriver ut string värdet som portats utifrån metoden.
        }


        int AddOne(int addToThis)               // Metod som tar ett heltal och adderar 1 
        {                                       // sedan returnerar resultat
            addToThis++;                        // efter raden adderas 1 till variabeln addToThis
            return addToThis;                   // metoden returnerar addToThis
        }

        void WhileLoop(int howManyLoopsToRun)   // Metod som kör en while-loop antal ggr som indata 
        {                                       
            /* En while-loop kan byggas på olika sätt
             * ex.  while( condition )
             *      {
             *          // Kod som körs i loopen
             *      }
             * 
             * alt. 
             *      do
             *      {
             *          // Kod som körs minst en gång
             *      } while( condition )             // Om condition är true körs loopen om.
             * 
             */
        
            while(howManyLoopsToRun > 0)  // Man kan också skriva in en bool variabel direkt
            {
                Console.WriteLine("This many runs with whole-loop to go: " + howManyLoopsToRun);
                howManyLoopsToRun--;
            }
        }

        void ForLoop(int howManyLoopsToRun)     // Metod som kör en for-loop antal ggr som indata
        {
            /* En for-loop är uppdelad i flera delar
             * for( del 1; del 2; del 3)
             * 
             *  del 1 använder man för att initiera en indexerare för loopen
             *  ex. int i = 0
             *  
             *  del 2 är ett condition som behöver vara true för att loopen ska köras igen
             *  ex. i < 4
             * 
             *  del 3 är vad som händer i slutet på loopen, man använder den för att ändra indexeraren i
             *  ex. i++
             * 
             *  koden som körs finns (hos mig) innanför måsvingarna under.
             * 
             */ 

            for (int i = 0; i < howManyLoopsToRun; i++)
            {
                Console.WriteLine("This many runs with for-loop to go: " + (howManyLoopsToRun-i));
            }
        }

        int[] GetRandomValuesForArray(int[] baseArray)  // Metod som fyller array med random värden <10
        {
            int[] newArray = new int[baseArray.Length]; // Skapar ny array

            Random random = new Random();   // Skapar ett random-objekt som har en metod som ger tal

            for (int i = 0; i < newArray.Length; i++)
            {
                newArray[i] = random.Next(10); // använder random-objekts-metod för att få tal <10

            }

            return newArray;
        }

        void TypeIntArrayValues(int[] arrayToType)  // Metod som skriver ut heltal från array
        {
            for (int i = 0; i < arrayToType.Length; i++)
            {
                Console.WriteLine(arrayToType[i].ToString());
            }
        }

        #endregion

    }
}
