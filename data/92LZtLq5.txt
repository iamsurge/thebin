local EVal

getgenv().ADunk = false;
getgenv().SCollect = false;
getgenv().AEgg = false;
getgenv().ABest = false;

function AutoDunk()
    spawn(function ()
        while getgenv().ADunk == true do
game:GetService("ReplicatedStorage").Remotes.DunkRequest:FireServer() wait(0.1)
        end
    end)
end
function SemiCollect()
    spawn(function ()
        while getgenv().SCollect == true do
game:GetService("ReplicatedStorage").Remotes.CollectRequest:FireServer() wait(0.1)
        end
    end)
end
function AutoEgg()
    spawn(function ()
        while getgenv().AEgg == true do
if EVal == "1" then local args = {[1] = 1,[2] = {}} game:GetService("ReplicatedStorage").Remotes.BuyEgg:InvokeServer(unpack(args)) wait(0.1) end
if EVal == "2" then local args = {[1] = 2,[2] = {}} game:GetService("ReplicatedStorage").Remotes.BuyEgg:InvokeServer(unpack(args)) wait(0.1) end
if EVal == "3" then local args = {[1] = 3,[2] = {}} game:GetService("ReplicatedStorage").Remotes.BuyEgg:InvokeServer(unpack(args)) wait(0.1) end
if EVal == "4" then local args = {[1] = 4,[2] = {}} game:GetService("ReplicatedStorage").Remotes.BuyEgg:InvokeServer(unpack(args)) wait(0.1) end
if EVal == "5" then local args = {[1] = 5,[2] = {}} game:GetService("ReplicatedStorage").Remotes.BuyEgg:InvokeServer(unpack(args)) wait(0.1) end
if EVal == "6" then local args = {[1] = 6,[2] = {}} game:GetService("ReplicatedStorage").Remotes.BuyEgg:InvokeServer(unpack(args)) wait(0.1) end
if EVal == "7" then local args = {[1] = 7,[2] = {}} game:GetService("ReplicatedStorage").Remotes.BuyEgg:InvokeServer(unpack(args)) wait(0.1) end
if EVal == "8" then local args = {[1] = 8,[2] = {}} game:GetService("ReplicatedStorage").Remotes.BuyEgg:InvokeServer(unpack(args)) wait(0.1) end
if EVal == "9" then local args = {[1] = 9,[2] = {}} game:GetService("ReplicatedStorage").Remotes.BuyEgg:InvokeServer(unpack(args)) wait(0.1) end
if EVal == "10" then local args = {[1] = 10,[2] = {}} game:GetService("ReplicatedStorage").Remotes.BuyEgg:InvokeServer(unpack(args)) wait(0.1) end
if EVal == "11" then local args = {[1] = 11,[2] = {}} game:GetService("ReplicatedStorage").Remotes.BuyEgg:InvokeServer(unpack(args)) wait(0.1) end
if EVal == "12" then local args = {[1] = 12,[2] = {}} game:GetService("ReplicatedStorage").Remotes.BuyEgg:InvokeServer(unpack(args)) wait(0.1) end
if EVal == "13" then local args = {[1] = 13,[2] = {}} game:GetService("ReplicatedStorage").Remotes.BuyEgg:InvokeServer(unpack(args)) wait(0.1) end
if EVal == "14" then local args = {[1] = 14,[2] = {}} game:GetService("ReplicatedStorage").Remotes.BuyEgg:InvokeServer(unpack(args)) wait(0.1) end
if EVal == "15" then local args = {[1] = 15,[2] = {}} game:GetService("ReplicatedStorage").Remotes.BuyEgg:InvokeServer(unpack(args)) wait(0.1) end
        end
    end)
end
function AutoBest()
    spawn(function ()
        while getgenv().ABest == true do
game:GetService("ReplicatedStorage").Remotes.EquipBestPets:InvokeServer() wait(0.1)
        end
    end)
end

local library = loadstring(game:HttpGet(('https://raw.githubusercontent.com/bloodball/-back-ups-for-libs/main/wall%20v3')))()

local w = library:CreateWindow("Dunking Race")

local b = w:CreateFolder("Autofarm")

b:Toggle("Auto Dunk",function(val)
getgenv().ADunk = val
AutoDunk()
end)

b:Toggle("Auto Collect Shoes",function(val)
getgenv().SCollect = val
SemiCollect()
end)

b:Toggle("Auto Best Pet",function(val)
getgenv().ABest = val
AutoBest()
end)

b:Toggle("Auto Egg",function(val)
getgenv().AEgg = val
AutoEgg()
end)

b:Box("Egg Number","number",function(val)
EVal = val
end)

local w = library:CreateWindow("Others")
 
local S
local J
local H
local G
local C
local CF
 
local b = w:CreateFolder("LocalPlayer")
 
b:Box("Speed","number",function(val)
S = val
end)
b:Box("Jump","number",function(val)
J = val
end)
b:Box("Hip Height","number",function(val)
H = val
end)
b:Box("Gravity","number",function(val)
G = val
end)
 
b:Toggle("Speed",function(bool)
getgenv().Speed = bool
Speed(S)
end)
b:Toggle("Jump",function(bool)
getgenv().Jump = bool
Jump(J)
end)
b:Toggle("Hip Height",function(bool)
getgenv().Hip = bool
Hip(H)
end)
b:Toggle("Gravity",function(bool)
getgenv().Grav = bool
Grav(G)
end)
 
b:Slider("FOV (Default is 70)",{min = 0;max = 120;precise = true;},function(val)
    game.workspace.CurrentCamera.FieldOfView = val
end)
 
b:Button("Print Current XYZ",function()
function GetPOS() return game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame end print(GetPOS())
end)
 
local b = w:CreateFolder("Stuff")
 
b:Box("Chat","Message",function(val)
    C = val
end)
 
b:Box("Cooldown","Speed",function(val)
    CF = val
end)
 
b:Toggle("Spam",function(bool)
    getgenv().Chat = bool
    Chat(C, CF)
end)
 
b:Button("Rejoin",function() loadstring(game:HttpGet("https://pastebin.com/raw/mM7JBG5h", true))() end)
 
b:Button("Giant",function() loadstring(game:HttpGet("https://pastebin.com/raw/2jnKKARG", true))() end)
 
b:Button("Noclip",function() loadstring(game:HttpGet("https://pastebin.com/raw/hd03Vdwm", true))() end)
 
b:Button("Reset",function() loadstring(game:HttpGet("https://pastebin.com/raw/EEY6SATj", true))() end)
 
b:Button("RTX Summer",function() loadstring(game:HttpGet("https://paste.ee/r/h4fL2", true))() end)
 
b:Button("RTX Autumn",function() loadstring(game:HttpGet("https://paste.ee/r/9eV0M", true))() end)
 
b:Button("Anti-Report",function() loadstring(game:HttpGet("https://paste.ee/r/GphmF", true))() end)
 
local b = w:CreateFolder("Credits")
 
b:Label("Made by X_LuaF#0705",{
    TextSize = 21;
    TextColor = Color3.fromRGB(255,255,255);
    BgColor = Color3.fromRGB(69,69,69);
})
 
b:Button("Copy Discord Invite",function() setclipboard("discord.gg/8tRb8MQcW5") end)
 
b:DestroyGui()
 
getgenv().Speed = false;
getgenv().Jump = false;
getgenv().Hip = false;
getgenv().Chat = false;
getgenv().Grav = false;
 
function Chat(Mes, Freq)
    spawn(function ()
        while getgenv().Chat == true do
local args = {[1] = Mes,[2] = "All"} game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(unpack(args))
wait(Freq)
        end
    end)
end
 
function Speed(Nume)
    spawn(function ()
        if getgenv().Speed == true then
            while getgenv().Speed == true do
                game:GetService("Players").LocalPlayer.Character.Humanoid.WalkSpeed = Nume
                wait()
            end
        elseif getgenv().Speed == false then
            game:GetService("Players").LocalPlayer.Character.Humanoid.WalkSpeed = 16
        end
    end)
end
function Jump(Nume)
    spawn(function ()
        if getgenv().Jump == true then
            while getgenv().Jump == true do
                game:GetService("Players").LocalPlayer.Character.Humanoid.JumpPower = Nume
                wait()
        end
    elseif getgenv().Jump == false then
            game:GetService("Players").LocalPlayer.Character.Humanoid.JumpPower = 50
        end
    end)
end
function Hip(Nume)
    spawn(function ()
        if getgenv().Hip == true then
            while getgenv().Hip == true do
            game:GetService("Players").LocalPlayer.Character.Humanoid.HipHeight = Nume
            wait()
        end
    elseif getgenv().Hip == false then
            game:GetService("Players").LocalPlayer.Character.Humanoid.HipHeight = 0.1
        end
    end)
end
function Grav(Nume)
    spawn(function ()
        if getgenv().Grav == true then
            while getgenv().Grav == true do
                game:GetService("Workspace").Gravity = Nume
            wait()
        end
    elseif getgenv().Grav == false then
        game:GetService("Workspace").Gravity = 196.2
        end
    end)
end
 
function TPTo(PCFrame)
    local plr = game.Players.LocalPlayer;
           if plr.Character then
            plr.Character.HumanoidRootPart.CFrame = PCFrame
        end
    end