Random random = new Random();

// Возвращает случайное число типа int в диапазоне
int GetRandomIntFromRange(int min, int max) {
	return random.Next(min, max);
}

// Инициализация двухмерной матрицы случайными числами
int[,] Create2DMatrix(int rows, int cols)
{
	int[,] result = new int[rows, cols];
	for (int i = 0; i < rows; ++i) {
		for (int j = 0; j < cols; ++j) {
			result[i, j] = GetRandomIntFromRange(1, 9);
		}
	}
	return result;
}

// Отображает в консоли двухмерную матрицу
void Print2DMatrix(int[,] target_matrix) {
	for (int i = 0; i < target_matrix.GetLength(0); ++i)
	{
		for (int j = 0; j < target_matrix.GetLength(1); ++j)
		{
			Console.Write(target_matrix[i, j] + " ");
		}
		Console.WriteLine();
	}
}

// Сортировка двухмерной матрицы
// ascending_direction: направление сортировки, true по возрастанию
int[,] Sort2DMatrix(int[,] target_matrix, bool ascending_direction) {
	int [,] result = target_matrix;
	
	for (int i = 0; i < result.GetLength(0); i++)
	{
		for (int j = 0; j < result.GetLength(1) - 1; j++)
		{
			for (int k = 0; k < result.GetLength(1) - 1; k++)
			{
				// Сортировка по возрастанию по умолчанию
				bool direction_statement = true;
				
				if(ascending_direction) {
					direction_statement = result[i, k] > result[i, k + 1];
				} else {
					direction_statement = result[i, k] < result[i, k + 1];
				}
				
				if (direction_statement)
				{
					int sorted_value = 0;
					sorted_value = result[i, k];
					result[i, k] = result[i, k + 1];
					result[i, k + 1] = sorted_value;
				}
			}
		}
	}
	
	return result;
}

Console.WriteLine();

// Определяем размерность
Console.Write("Введите количество строк матрицы: ");
int matrix_rows = int.TryParse(Console.ReadLine(), out matrix_rows) ? matrix_rows : 3;

Console.Write("Введите количество стобцов матрицы: ");
int matrix_cols = int.TryParse(Console.ReadLine(), out matrix_cols) ? matrix_cols : 4;

// Инициализируем матрицу
int[,] matrix = Create2DMatrix(matrix_rows, matrix_cols);

// Отображаем исходную
Console.WriteLine("Исходная матрица: ");
Print2DMatrix(matrix);

Console.WriteLine();

// Отображаем отсортированную
Console.WriteLine("Отсортированная матрица:");
Print2DMatrix(Sort2DMatrix(matrix, true));