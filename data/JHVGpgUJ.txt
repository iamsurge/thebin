#include <algorithm>
#include <chrono>
#include <iostream>
#include <vector>
using namespace std::chrono;
using namespace std;


void merge(int* A, int sz1, int* B, int sz2, int * C){

    int indA = 0;
    int indB = 0;
    int indC = 0;

    while (indA < sz1 && indB < sz2) {
        if (A[indA] <= B[indB]) C[indC++] = A[indA++];
        else C[indC++] = B[indB++];
    }
    if (indA < sz1) {
        for (int i = indA; i < sz1; i++) C[indC++] = A[indA++];
    }
    else {
        for (int i = indB; i < sz2; i++) C[indC++] = B[indB++];
    }
}

int fillArr(int* arr, int sz) {
    for (int i = 0; i < sz; i++) {
        arr[i] = rand();
    }
    return 0;
}
int main() {
    srand(time(0));
    cout << "varianta s mejdinna proverka" << endl;
    const int szA = 1000, szB = 1000;
    int A[szA], B[szB], C[szA + szB];
    fillArr(A, szA);
    fillArr(B, szB);
    sort(A, A+szA);
    sort(B, B+szB);

    auto start = high_resolution_clock::now();
    merge(A, szA, B, szB, C);
    auto stop = high_resolution_clock::now();
    auto duration = duration_cast<microseconds>(stop - start);
    cout << "Time taken by function: " << duration.count() << " microseconds" << endl;
    return 0;
}