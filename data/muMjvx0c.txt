package lab52;

import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;

public class kfMeller {
    public static void main(String[] args) {
        System.out.println("Введите количество узлов N1, N2, N3:");
        Scanner scanner = new Scanner(System.in);
        int N1 = scanner.nextInt();
        int N2 = scanner.nextInt();
        int N3 = scanner.nextInt();

        task(N1);
        task(N2);
        task(N3);
    }

    public static void task(int N) {
        System.out.println("Число узлов N = " + N);
        Map<Double, Double> xA = getXkAk(N);

        int num = 1;
        for (var xkAk : xA.entrySet()) {
            System.out.println("x" + num + " = " + xkAk.getKey() + "; A" + num + " = " + xkAk.getValue());
            num++;
        }

        double res = calcIntegral(xA);

        double srcValueIntegral = srcIntegral();
        System.out.println("Точное значение интеграла: " + srcValueIntegral);
        System.out.println("Найденное приближенное значение интеграла: " + res);
        System.out.println("Разница с точным значением: " + Math.abs(srcValueIntegral - res));
        System.out.println();
    }

    public static double f(double x) {
        return (Math.cos(3 * x)) / (0.3 + Math.pow(x, 2));
    }

    public static double srcIntegral() {
        return 0.5771004933085546;
    }

    public static Map<Double, Double> getXkAk(double N) {
        Map<Double, Double> xA = new HashMap<>();

        for (int k = 1; k < N + 1; k++) {
            double xk = Math.cos(((2 * k - 1) / (2 * N)) * 3.1416);
            double Ak = 3.1416 / N;

            xA.put(xk, Ak);
        }
        return xA;
    }

    public static double calcIntegral(Map<Double, Double> xA) {
        double res = 0;
        for (var xkAk : xA.entrySet()) {
            res += xkAk.getValue() * f(xkAk.getKey());
        }
        return res;
    }
}
