import PlaygroundSupport
import Foundation
import SwiftUI
import UniformTypeIdentifiers



struct Edge: View {
    @State var glove = Double()
    @State var edgenum = Double()
    
    let formatter: NumberFormatter = {
        let formatter = NumberFormatter()
        formatter.numberStyle = .scientific
        formatter.positiveFormat = "0.###E+0"
        formatter.exponentSymbol = "e"
        return formatter
    }()
    
    func glove(gloveresult: Double) -> Double {  sqrt(2+pow(edgenum, cbrt(4))) }
    var body: some View {
        HStack(alignment: .top) {
            
            VStack(alignment: .leading) {
                
                Text("DART Edge Measure (Limit | 100):")
                    .font(.callout)
                    .bold()
                // .colorInvert()
                TextField("#", value: self.$edgenum, formatter: formatter)
                //.colorInvert()
                
                    .textFieldStyle(RoundedBorderTextFieldStyle())
                    .overlay(
                        RoundedRectangle(cornerRadius: 6)
                            .stroke(Color.blue, lineWidth: 2)
                    )
                
                Text("DART Edge: \(glove(gloveresult: edgenum))")
                    .font(.callout)
                    .bold()
                    .frame(width: 150, height: 60, alignment: .leading)
                //.colorInvert()
            }.padding()
            Divider()
            HStack(alignment: .top) {
                VStack(alignment: .leading) {
                    
                    HStack(alignment: .center) {
                        Image(systemName: "minus")
                        Slider(value: $edgenum, in: 0...100, step: 1)
                            .accentColor(Color.blue)
                        Image(systemName: "plus")
                        
                    }.foregroundColor(Color.blue).padding(10)
                        .overlay(
                            RoundedRectangle(cornerRadius: 6)
                                .stroke(Color.blue, lineWidth: 2)
                        ).shadow(radius: 3)
                    
                    Text("Edge Scale Plus:")
                        .font(.callout)
                        .bold()
                    //  .colorInvert()
                    TextField("#", value: self.$edgenum, formatter: formatter)
                    //  .colorInvert()
                    
                        .textFieldStyle(RoundedBorderTextFieldStyle())
                        .overlay(
                            RoundedRectangle(cornerRadius: 6)
                                .stroke(Color.blue, lineWidth: 2)
                        )
                    
                    Text("Edge Scale : \(glove(gloveresult: edgenum))")
                        .font(.callout)
                        .bold()
                        .frame(width: 150, height: 60, alignment: .leading)
                    //    .colorInvert()
                }.padding()
                Divider()
                
                
            }
        }.background(Color.indigo)
    }
}
