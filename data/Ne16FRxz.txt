
    energy_consumption:
      friendly_name: Total energy consumption
      device_class: energy
      unit_of_measurement: kWh
      value_template: "{{ states('sensor.energy_consumption_tarif_1')|float + states('sensor.energy_consumption_tarif_2')|float }}"
    energy_production:
      friendly_name: Total energy production
      device_class: energy
      unit_of_measurement: kWh
      value_template: "{{ states('sensor.energy_production_tarif_1')|float + states('sensor.energy_production_tarif_2')|float }}"

    #### BEREKENING LAAGTARIEF + HOOGTARIEF ####
    hourly_energy:
      friendly_name: Hourly energy
      unit_of_measurement: kWh
      value_template: "{{ states('sensor.hourly_energy_offpeak')|float + states('sensor.hourly_energy_peak')|float }}"
    daily_energy:
      friendly_name: Daily energy
      unit_of_measurement: kWh
      value_template: "{{ states('sensor.daily_energy_offpeak')|float + states('sensor.daily_energy_peak')|float }}"
    weekly_energy:
      friendly_name: Weekly energy
      unit_of_measurement: kWh
      value_template: "{{ states('sensor.weekly_energy_offpeak')|float + states('sensor.weekly_energy_peak')|float }}"
    monthly_energy:
      friendly_name: Monthly energy
      unit_of_measurement: kWh
      value_template: "{{ states('sensor.monthly_energy_offpeak')|float + states('sensor.monthly_energy_peak')|float }}"
    yearly_energy:
      friendly_name: Yearly energy
      unit_of_measurement: kWh
      value_template: "{{ states('sensor.yearly_energy_offpeak')|float + states('sensor.yearly_energy_peak')|float }}"
    hourly_energy_produced:
      friendly_name: Hourly energy produced
      unit_of_measurement: kWh
      value_template: "{{ states('sensor.hourly_energy_production_offpeak')|float + states('sensor.hourly_energy_production_peak')|float }}"
    daily_energy_produced:
      friendly_name: Daily energy produced
      unit_of_measurement: kWh
      value_template: "{{ states('sensor.daily_energy_production_offpeak')|float + states('sensor.daily_energy_production_peak')|float }}"
    weekly_energy_produced:
      friendly_name: Weekly energy produced
      unit_of_measurement: kWh
      value_template: "{{ states('sensor.weekly_energy_production_offpeak')|float + states('sensor.weekly_energy_production_peak')|float }}"
    monthly_energy_produced:
      friendly_name: Monthly energy produced
      unit_of_measurement: kWh
      value_template: "{{ states('sensor.monthly_energy_production_offpeak')|float + states('sensor.monthly_energy_production_peak')|float }}"
    yearly_energy_produced:
      friendly_name: Yearly energy produced
      unit_of_measurement: kWh
      value_template: "{{ states('sensor.yearly_energy_production_offpeak')|float + states('sensor.yearly_energy_production_peak')|float }}"

    ##### NETTO VERBRUIK ####
    daily_energy_net:
      friendly_name: Daily energy net
      unit_of_measurement: kWh
      value_template: "{{ states('sensor.daily_energy')|float - states('sensor.daily_energy_produced')|float }}"
    weekly_energy_net:
      friendly_name: Weekly energy net
      unit_of_measurement: kWh
      value_template: "{{ states('sensor.weekly_energy')|float - states('sensor.weekly_energy_produced')|float }}"
    monthly_energy_net:
      friendly_name: Monthly energy net
      unit_of_measurement: kWh
      value_template: "{{ states('sensor.monthly_energy')|float - states('sensor.monthly_energy_produced')|float }}"
    yearly_energy_net:
      friendly_name: Yearly energy net
      unit_of_measurement: kWh
      value_template: "{{ states('sensor.yearly_energy')|float - states('sensor.yearly_energy_produced')|float }}"

    #### AFGELOPEN PERIODEN GASVERBRUIK ####
    yesterday_gas:
      friendly_name: Yesterday Gas
      unit_of_measurement: m3
      value_template: "{{ state_attr('sensor.daily_gas','last_period') }}"
    last_week_gas:
      friendly_name: last Week Gas
      unit_of_measurement: m3
      value_template: "{{ state_attr('sensor.weekly_gas','last_period') }}"
    last_month_gas:
      friendly_name: last Month Gas
      unit_of_measurement: m3
      value_template: "{{ state_attr('sensor.monthly_gas','last_period') }}"
    last_year_gas:
      friendly_name: last Year Gas
      unit_of_measurement: m3
      value_template: "{{ state_attr('sensor.yearly_gas','last_period') }}"

    #### AFGELOPEN PERIODEN ENERGIE ####
    yesterday_energy:
      friendly_name: Yesterday energy
      unit_of_measurement: kWh
      value_template: "{{ state_attr('sensor.daily_energy_offpeak','last_period')|float + state_attr('sensor.daily_energy_peak','last_period')|float }}"
    last_week_energy:
      friendly_name: Last Week energy
      unit_of_measurement: kWh
      value_template: "{{ state_attr('sensor.weekly_energy_offpeak','last_period')|float + state_attr('sensor.weekly_energy_peak','last_period')|float }}"
    last_month_energy:
      friendly_name: Last Month energy
      unit_of_measurement: kWh
      value_template: "{{ state_attr('sensor.monthly_energy_offpeak','last_period')|float + state_attr('sensor.monthly_energy_peak','last_period')|float }}"
    last_year_energy:
      friendly_name: Last Year energy
      unit_of_measurement: kWh
      value_template: "{{ state_attr('sensor.yearly_energy_offpeak','last_period')|float + state_attr('sensor.yearly_energy_peak','last_period')|float }}"

    yesterday_energy_produced:
      friendly_name: Yesterday energy produced
      unit_of_measurement: kWh
      value_template: "{{ state_attr('sensor.daily_energy_production_offpeak','last_period')|float + state_attr('sensor.daily_energy_production_peak','last_period')|float }}"
    last_week_energy_produced:
      friendly_name: Last Week energy produced
      unit_of_measurement: kWh
      value_template: "{{ state_attr('sensor.weekly_energy_production_offpeak','last_period')|float + state_attr('sensor.weekly_energy_production_peak','last_period')|float }}"
    last_month_energy_produced:
      friendly_name: Last Month energy produced
      unit_of_measurement: kWh
      value_template: "{{ state_attr('sensor.monthly_energy_production_offpeak','last_period')|float + state_attr('sensor.monthly_energy_production_peak','last_period')|float }}"
    last_year_energy_produced:
      friendly_name: Last Year energy produced
      unit_of_measurement: kWh
      value_template: "{{ state_attr('sensor.yearly_energy_production_offpeak','last_period')|float + state_attr('sensor.yearly_energy_production_peak','last_period')|float }}"

    yesterday_energy_net:
      friendly_name: Yesterday energy net
      unit_of_measurement: kWh
      value_template: "{{ states('sensor.yesterday_energy')|float - states('sensor.yesterday_energy_produced')|float }}"
    last_week_energy_net:
      friendly_name: Last Week energy net
      unit_of_measurement: kWh
      value_template: "{{ states('sensor.last_week_energy')|float - states('sensor.last_week_energy_produced')|float }}"
    last_month_energy_net:
      friendly_name: Last Month energy net
      unit_of_measurement: kWh
      value_template: "{{ states('sensor.last_month_energy')|float - states('sensor.last_month_energy_produced')|float }}"
    last_year_energy_net:
      friendly_name: Last Year energy net
      unit_of_measurement: kWh
      value_template: "{{ states('sensor.last_year_energy')|float - states('sensor.last_year_energy_produced')|float }}"

    # SHORT energy
    daily_energy_short:
      value_template: "{{ '%.3f'%(states('sensor.daily_energy') | float) | float }}"
      unit_of_measurement: "kWh"

    yesterday_energy_short:
      value_template: "{{ '%.3f'%(states('sensor.yesterday_energy') | float) | float }}"
      unit_of_measurement: "kWh"

    weekly_energy_short:
      value_template: "{{ '%.3f'%(states('sensor.weekly_energy') | float) | float }}"
      unit_of_measurement: "kWh"

    last_week_energy_short:
      value_template: "{{ '%.3f'%(states('sensor.last_week_energy') | float) | float }}"
      unit_of_measurement: "kWh"

    monthly_energy_short:
      value_template: "{{ '%.3f'%(states('sensor.monthly_energy') | float) | float }}"
      unit_of_measurement: "kWh"

    last_month_energy_short:
      value_template: "{{ '%.3f'%(states('sensor.last_month_energy') | float) | float }}"
      unit_of_measurement: "kWh"

    yearly_energy_short:
      value_template: "{{ '%.3f'%(states('sensor.yearly_energy') | float) | float }}"
      unit_of_measurement: "kWh"

    last_year_energy_short:
      value_template: "{{ '%.3f'%(states('sensor.last_year_energy') | float) | float }}"
      unit_of_measurement: "kWh"

    daily_energy_produced_short:
      value_template: "{{ '%.3f'%(states('sensor.daily_energy_produced') | float) | float }}"
      unit_of_measurement: "kWh"

    yesterday_energy_produced_short:
      value_template: "{{ '%.3f'%(states('sensor.yesterday_energy_produced') | float) | float }}"
      unit_of_measurement: "kWh"

    weekly_energy_produced_short:
      value_template: "{{ '%.3f'%(states('sensor.weekly_energy_produced') | float) | float }}"
      unit_of_measurement: "kWh"

    last_week_energy_produced_short:
      value_template: "{{ '%.3f'%(states('sensor.last_week_energy_produced') | float) | float }}"
      unit_of_measurement: "kWh"

    monthly_energy_produced_short:
      value_template: "{{ '%.3f'%(states('sensor.monthly_energy_produced') | float) | float }}"
      unit_of_measurement: "kWh"

    last_month_energy_produced_short:
      value_template: "{{ '%.3f'%(states('sensor.last_month_energy_produced') | float) | float }}"
      unit_of_measurement: "kWh"

    yearly_energy_produced_short:
      value_template: "{{ '%.3f'%(states('sensor.yearly_energy_produced') | float) | float }}"
      unit_of_measurement: "kWh"

    last_year_energy_produced_short:
      value_template: "{{ '%.3f'%(states('sensor.last_year_energy_produced') | float) | float }}"
      unit_of_measurement: "kWh"

    daily_energy_net_short:
      value_template: "{{ '%.3f'%(states('sensor.daily_energy_net') | float) | float }}"
      unit_of_measurement: "kWh"

    yesterday_energy_net_short:
      value_template: "{{ '%.3f'%(states('sensor.yesterday_energy_net') | float) | float }}"
      unit_of_measurement: "kWh"

    weekly_energy_net_short:
      value_template: "{{ '%.3f'%(states('sensor.weekly_energy_net') | float) | float }}"
      unit_of_measurement: "kWh"

    last_week_energy_net_short:
      value_template: "{{ '%.3f'%(states('sensor.last_week_energy_net') | float) | float }}"
      unit_of_measurement: "kWh"

    monthly_energy_net_short:
      value_template: "{{ '%.3f'%(states('sensor.monthly_energy_net') | float) | float }}"
      unit_of_measurement: "kWh"

    last_month_energy_net_short:
      value_template: "{{ '%.3f'%(states('sensor.last_month_energy_net') | float) | float }}"
      unit_of_measurement: "kWh"

    yearly_energy_net_short:
      value_template: "{{ '%.3f'%(states('sensor.yearly_energy_net') | float) | float }}"
      unit_of_measurement: "kWh"

    last_year_energy_net_short:
      value_template: "{{ '%.3f'%(states('sensor.last_year_energy_net') | float) | float }}"
      unit_of_measurement: "kWh"

    # Calculations
    solar_wh_to_watt:
      friendly_name: "Opbrengst zonnepanelen"
      unit_of_measurement: "Watt"
      value_template: "{{ (states.sensor.zonnepanelen_current_power.state) | round(0) }}"
    grid_production_kwh_to_watt:
      friendly_name: "Grid teruglevering"
      unit_of_measurement: "Watt"
      value_template: "{{ (states.sensor.power_production.state | float * 1000) | round(0) }}"
    power_kwh_to_watt:
      friendly_name: "Actueel verbruik"
      unit_of_measurement: "Watt"
      value_template: "{{ (states.sensor.power_consumption.state | float * 1000) | round(0) }}"
    power_production_kwh_to_watt:
      friendly_name: "Actuele opbrengst"
      unit_of_measurement: "Watt"
      value_template: "{{ (states.sensor.power_production_phase_l3.state | float * 1000) | round(0) }}"
    watt_phase1:
      friendly_name: "L1 Wattage"
      unit_of_measurement: "Watt"
      value_template: "{{ (states.sensor.power_consumption_phase_l1.state | float * 1000) | round(0) }}"
    watt_phase2:
      friendly_name: "L2 Wattage"
      unit_of_measurement: "Watt"
      value_template: "{{ (states.sensor.power_consumption_phase_l2.state | float * 1000) | round(0) }}"
    watt_phase3:
      friendly_name: "L3 Wattage"
      unit_of_measurement: "Watt"
      value_template: "{{ (states.sensor.power_consumption_phase_l3.state | float * 1000) | round(0) }}"
    ampere_phase1:
      friendly_name: "L1 Ampere"
      unit_of_measurement: "A"
      value_template: >-
        {% set a = states('sensor.watt_phase1') | float %}
        {{ (a / 230) | round(1) }}
    ampere_phase2:
      friendly_name: "L2 Ampere"
      unit_of_measurement: "A"
      value_template: >-
        {% set a = states('sensor.watt_phase2') | float %}
        {{ (a / 230) | round(1) }}
    ampere_phase3:
      friendly_name: "L3 Ampere"
      unit_of_measurement: "A"
      value_template: >-
        {% set a = states('sensor.watt_phase3') | float %}
        {{ (a / 230) | round(1) }}
    solar_total_kwh:
      friendly_name: "Meterstand opgewekt"
      unit_of_measurement: "kWh"
      value_template: >-
        {% set a = states('sensor.zonnepanelen_lifetime_energy') | float %}
        {{ (a / 1000) | round(3) }}

    #Gemiddeld
    average_gas_day:
      unit_of_measurement: "m3"
      value_template: >-
        {% set a = states('sensor.last_month_gas') | float %}
        {{ (a / 30.41) | round(3) }}
    #Gemiddeld
    average_energy_day:
      unit_of_measurement: "kWh"
      value_template: >-
        {% set a = states('sensor.last_month_energy') | float %}
        {{ (a / 30.41) | round(3) }}

      # PRICES GAS
    today_gas_price:
      unit_of_measurement: "EUR"
      value_template: >-
        {% set a = states('sensor.daily_gas') | float %}
        {% set b = states('input_number.all_in_enkeltarief_gas') | float %}
        {% set c = states('input_number.netbeheerkosten_gas') | float / 365 %}
        {% set d = states('input_number.vaste_leveringskosten_gas') | float / 365 %}
        {{ (((a * b) + c) + d) | round(2) }}

    yesterday_gas_price:
      unit_of_measurement: "EUR"
      value_template: >-
        {% set a = states('sensor.yesterday_gas') | float %}
        {% set b = states('input_number.all_in_enkeltarief_gas') | float %}
        {% set c = states('input_number.netbeheerkosten_gas') | float / 365 %}
        {% set d = states('input_number.vaste_leveringskosten_gas') | float / 365 %}
        {{ (((a * b) + c) + d) | round(2) }}

    week_gas_price:
      unit_of_measurement: "EUR"
      value_template: >-
        {% set a = states('sensor.weekly_gas') | float %}
        {% set b = states('input_number.all_in_enkeltarief_gas') | float %}
        {% set c = states('input_number.netbeheerkosten_gas') | float / 52 %}
        {% set d = states('input_number.vaste_leveringskosten_gas') | float / 52 %}
        {{ (((a * b) + c) + d) | round(2) }}

    last_week_gas_price:
      unit_of_measurement: "EUR"
      value_template: >-
        {% set a = states('sensor.last_week_gas') | float %}
        {% set b = states('input_number.all_in_enkeltarief_gas') | float %}
        {% set c = states('input_number.netbeheerkosten_gas') | float / 52 %}
        {% set d = states('input_number.vaste_leveringskosten_gas') | float / 52 %}
        {{ (((a * b) + c) + d) | round(2) }}

    month_gas_price:
      unit_of_measurement: "EUR"
      value_template: >-
        {% set a = states('sensor.monthly_gas') | float %}
        {% set b = states('input_number.all_in_enkeltarief_gas') | float %}
        {% set c = states('input_number.netbeheerkosten_gas') | float / 12 %}
        {% set d = states('input_number.vaste_leveringskosten_gas') | float / 12 %}
        {{ (((a * b) + c) + d) | round(2) }}

    last_month_gas_price:
      unit_of_measurement: "EUR"
      value_template: >-
        {% set a = states('sensor.last_month_gas') | float %}
        {% set b = states('input_number.all_in_enkeltarief_gas') | float %}
        {% set c = states('input_number.netbeheerkosten_gas') | float / 12 %}
        {% set d = states('input_number.vaste_leveringskosten_gas') | float / 12 %}
        {{ (((a * b) + c) + d) | round(2) }}

    year_gas_price:
      unit_of_measurement: "EUR"
      value_template: >-
        {% set a = states('sensor.yearly_gas') | float %}
        {% set b = states('input_number.all_in_enkeltarief_gas') | float %}
        {% set c = states('input_number.netbeheerkosten_gas') | float %}
        {% set d = states('input_number.vaste_leveringskosten_gas') | float %}
        {{ (((a * b) + c) + d) | round(2) }}

    last_year_gas_price:
      unit_of_measurement: "EUR"
      value_template: >-
        {% set a = states('sensor.last_year_gas') | float %}
        {% set b = states('input_number.all_in_enkeltarief_gas') | float %}
        {% set c = states('input_number.netbeheerkosten_gas') | float %}
        {% set d = states('input_number.vaste_leveringskosten_gas') | float %}
        {{ (((a * b) + c) + d) | round(2) }}

      # PRICES energy
    today_energy_price:
      unit_of_measurement: "EUR"
      value_template: >-
        {% set a = states('sensor.daily_energy_net') | float %}
        {% set b = states('input_number.all_in_enkeltarief_stroom') | float %}
        {% set c = states('input_number.netbeheerkosten_stroom') | float / 365 %}
        {% set d = states('input_number.vaste_leveringskosten_stroom') | float / 365 %}
        {% set e = states('input_number.vermindering_energiebelasting_stroom') | float / 365 %}
        {{ ((((a * b) + c) + d) + e) | round(2) }}

    yesterday_energy_price:
      unit_of_measurement: "EUR"
      value_template: >-
        {% set a = states('sensor.yesterday_energy_net') | float %}
        {% set b = states('input_number.all_in_enkeltarief_stroom') | float %}
        {% set c = states('input_number.netbeheerkosten_stroom') | float / 365 %}
        {% set d = states('input_number.vaste_leveringskosten_stroom') | float / 365 %}
        {% set e = states('input_number.vermindering_energiebelasting_stroom') | float / 365 %}
        {{ ((((a * b) + c) + d) + e) | round(2) }}

    week_energy_price:
      unit_of_measurement: "EUR"
      value_template: >-
        {% set a = states('sensor.weekly_energy_net') | float %}
        {% set b = states('input_number.all_in_enkeltarief_stroom') | float %}
        {% set c = states('input_number.netbeheerkosten_stroom') | float / 52 %}
        {% set d = states('input_number.vaste_leveringskosten_stroom') | float / 52 %}
        {% set e = states('input_number.vermindering_energiebelasting_stroom') | float / 52 %}
        {{ ((((a * b) + c) + d) + e) | round(2) }}

    last_week_energy_price:
      unit_of_measurement: "EUR"
      value_template: >-
        {% set a = states('sensor.last_week_energy_net') | float %}
        {% set b = states('input_number.all_in_enkeltarief_stroom') | float %}
        {% set c = states('input_number.netbeheerkosten_stroom') | float / 52 %}
        {% set d = states('input_number.vaste_leveringskosten_stroom') | float / 52 %}
        {% set e = states('input_number.vermindering_energiebelasting_stroom') | float / 52 %}
        {{ ((((a * b) + c) + d) + e) | round(2) }}

    month_energy_price:
      unit_of_measurement: "EUR"
      value_template: >-
        {% set a = states('sensor.monthly_energy_net') | float %}
        {% set b = states('input_number.all_in_enkeltarief_stroom') | float %}
        {% set c = states('input_number.netbeheerkosten_stroom') | float / 12 %}
        {% set d = states('input_number.vaste_leveringskosten_stroom') | float / 12 %}
        {% set e = states('input_number.vermindering_energiebelasting_stroom') | float / 12 %}
        {{ ((((a * b) + c) + d) + e) | round(2) }}

    last_month_energy_price:
      unit_of_measurement: "EUR"
      value_template: >-
        {% set a = states('sensor.last_month_energy_net') | float %}
        {% set b = states('input_number.all_in_enkeltarief_stroom') | float %}
        {% set c = states('input_number.netbeheerkosten_stroom') | float / 12 %}
        {% set d = states('input_number.vaste_leveringskosten_stroom') | float / 12 %}
        {% set e = states('input_number.vermindering_energiebelasting_stroom') | float / 12 %}
        {{ ((((a * b) + c) + d) + e) | round(2) }}

    year_energy_price:
      unit_of_measurement: "EUR"
      value_template: >-
        {% set a = states('sensor.yearly_energy_net') | float %}
        {% set b = states('input_number.all_in_enkeltarief_stroom') | float %}
        {% set c = states('input_number.netbeheerkosten_stroom') | float %}
        {% set d = states('input_number.vaste_leveringskosten_stroom') | float %}
        {% set e = states('input_number.vermindering_energiebelasting_stroom') | float %}
        {{ ((((a * b) + c) + d) + e) | round(2) }}

    last_year_energy_price:
      unit_of_measurement: "EUR"
      value_template: >-
        {% set a = states('sensor.last_year_energy_net') | float %}
        {% set b = states('input_number.all_in_enkeltarief_stroom') | float %}
        {% set c = states('input_number.netbeheerkosten_stroom') | float %}
        {% set d = states('input_number.vaste_leveringskosten_stroom') | float %}
        {% set e = states('input_number.vermindering_energiebelasting_stroom') | float %}
        {{ ((((a * b) + c) + d) + e) | round(2) }}

    #TOTALEN ENERGIE+GAS

    today_total_price:
      unit_of_measurement: "EUR"
      value_template: >-
        {% set a = states('sensor.today_gas_price') | float %}
        {% set b = states('sensor.today_energy_price') | float %}
        {{ (a + b) | round(2) }}

    yesterday_total_price:
      unit_of_measurement: "EUR"
      value_template: >-
        {% set a = states('sensor.yesterday_gas_price') | float %}
        {% set b = states('sensor.yesterday_energy_price') | float %}
        {{ (a + b) | round(2) }}

    week_total_price:
      unit_of_measurement: "EUR"
      value_template: >-
        {% set a = states('sensor.week_gas_price') | float %}
        {% set b = states('sensor.week_energy_price') | float %}
        {{ (a + b) | round(2) }}

    last_week_total_price:
      unit_of_measurement: "EUR"
      value_template: >-
        {% set a = states('sensor.last_week_gas_price') | float %}
        {% set b = states('sensor.last_week_energy_price') | float %}
        {{ (a + b) | round(2) }}

    month_total_price:
      unit_of_measurement: "EUR"
      value_template: >-
        {% set a = states('sensor.month_gas_price') | float %}
        {% set b = states('sensor.month_energy_price') | float %}
        {{ (a + b) | round(2) }}

    last_month_total_price:
      unit_of_measurement: "EUR"
      value_template: >-
        {% set a = states('sensor.last_month_gas_price') | float %}
        {% set b = states('sensor.last_month_energy_price') | float %}
        {{ (a + b) | round(2) }}

    year_total_price:
      unit_of_measurement: "EUR"
      value_template: >-
        {% set a = states('sensor.year_gas_price') | float %}
        {% set b = states('sensor.year_energy_price') | float %}
        {{ (a + b) | round(2) }}

    last_year_total_price:
      unit_of_measurement: "EUR"
      value_template: >-
        {% set a = states('sensor.last_year_gas_price') | float %}
        {% set b = states('sensor.last_year_energy_price') | float %}
        {{ (a + b) | round(2) }}
