#include <iostream>
using namespace std;

//masiv 1 - [from, mid];
//masiv 2 - [mid+1, end];
void merge(int arr[], int from, int mid, int to)
{
	
	int leftSize = mid - from + 1;
	int rightArr = to - mid;
	cout << "left size: " << leftSize << "\n";
	cout << "right size: " << rightArr << "\n";

	int* leftArr = new int[leftSize];
	int* rigthArr = new int[rightArr];

	for (int i = 0; i < leftSize; i++) leftArr[i] = arr[from + i];
	for (int j = 0; j < rightArr; j++) rigthArr[j] = arr[mid + 1 + j];


	int leftIndex = 0;
	int rightIndex = 0;
	int newIndex = from;

	while (leftIndex < leftSize && rightIndex < rightArr) {
		if (leftArr[leftIndex] <= rigthArr[rightIndex]) {
			cout << "from left arr -> newArr[" << newIndex << "] = la[" << leftIndex << "](" << leftArr[leftIndex] << ")" << endl;
			arr[newIndex++] = leftArr[leftIndex++];
		}
		else {
			cout << "from right arr -> newArr[" << newIndex << "] = ra[" << leftIndex << "](" << rigthArr[rightIndex] << ")" << endl;
			arr[newIndex++] = rigthArr[rightIndex++];
			
		}
	}

	while (leftIndex < leftSize) {
		cout << "from left arr -> newArr[" << newIndex << "] = la[" << leftIndex << "](" << leftArr[leftIndex] << ")" << endl;
		arr[newIndex++] = leftArr[leftIndex++];
	}

	while (rightIndex < rightArr) {
		cout << "from right arr -> newArr[" << newIndex << "] = ra[" << leftIndex << "](" << rigthArr[rightIndex] << ")" << endl;
		arr[newIndex++] = rigthArr[rightIndex++];
	}
}

void mergeSort(int array[], int const begin, int const end)
{
	if (begin >= end) {
		cout << "duno" << endl;
		return;
	}

	int mid = begin + (end - begin) / 2;

	cout << "potuvane nalyavo  ";
	//cout << "left --> begin: " << begin << " | mid: " << mid << " \n";
	cout << "start merge sort(" << begin << "," << mid << ")" << endl;
	mergeSort(array, begin, mid);
	cout << "izplyvane nalyavo  end merge sort(" << begin << "," << mid << ")" << endl;
	cout << "potuvane nadyasno  ";
	//cout << "right --> mid: " << mid + 1 << " | end: " << end << " \n";
	cout << "start merge sort(" << mid+1 << "," << end << ")" << endl;
	mergeSort(array, mid + 1, end);
	cout << "izplyvane nadyasno  end merge sort(" << mid + 1 << "," << end << ")" << endl;
	//cout << "duno -> izplyvane" << endl;

	cout << "prenarejdaneto na 2 naredeni masiva  merge( " << begin << "," << mid << "," << end << ")" << endl;
	//cout << "begin: " << begin << " | mid: " << mid << " | end: " << end << " \n";
	merge(array, begin, mid, end);

	cout << "izplyvane kum predniya merge sort" << endl << endl;
	
}

void printArray(int A[], int size)
{
	for (auto i = 0; i < size; i++) cout << A[i] << " ";
	cout << endl;
}

int main()
{
	int arr[] = { 1,3,4,7,9,10 };
	int arr_size = sizeof(arr) / sizeof(arr[0]);

	cout << "Given array is \n";
	printArray(arr, arr_size);
	cout << "merge sort(0,6)" << endl;
	mergeSort(arr, 0, arr_size - 1);

	cout << "\n Sorted array is \n";
	printArray(arr, arr_size);
	return 0;
}