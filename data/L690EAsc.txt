#include <iostream>
#include <cmath>
#include <vector>
#include <queue>
#include <algorithm>
#include <string>
#include <stack>
#include <set>
#include <map>
#define pii pair <int, int>
#define pb(x) push_back(x)
using namespace std;
using ll = long long;
using ld = long double;
using db = double;
void cv(vector <int> &v) {
    for (auto x : v) cout << x << ' ';
    cout << "\n";
}

void cvl(vector <ll> &v) {
    for (auto x : v) cout << x << ' ';
    cout << "\n";
}


void cvv(vector <vector <int> > &v) {
    for (auto x : v) cv(x);
    cout << "\n";
}

void cvb(vector <bool> v) {
    for (bool x : v) cout << x << ' ';
    cout << "\n";
}

void cvs(vector <string>  v) {
    for (auto a : v) {
        cout << a << "\n";
    }
}

void cvp(vector <pii> a) {
    for (auto p : a) {
        cout << p.first << ' ' << p.second << "\n";
    }
    cout << "\n";
}

bool sh = 1;

vector <vector <int> > a(1e2, vector <int> (1e2, 0)), b(1e2, vector <int> (1e2, 0));
int ans = -1;

void mv(vector <vector <int> > &a, int x, int y, int n, int k) {
    a[x][y] = 1;
    for (int go = 0; go < 5; ++go) {
        for (int i = 0; i < n; ++i) {
            x--;
            a[x][y] = 1;
        }
        for (int i = 0; i < n; ++i) {
            y++;
            a[x][y] = 1;
        }
        n += k;
        for (int i = 0; i < n; ++i) {
            x++;
            a[x][y] = 1;
        }
        for (int i = 0; i < n; ++i) {
            y--;
            a[x][y] = 1;
        }
    }
    if (sh) {
        //cvv(a);
    }
}


void chk() {

}

int main() {
    ios::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
    int ax = 50, ay = 50;
    mv(a, ax, ay, 5, 5);
    int bx = ax + 7, by = ax + 7;
    int fr = 5, tl = 4;
    for (int k = fr; k <= tl; ++k) {
        b.assign(1e2, vector <int> (1e2, 0));
        mv(a, bx, by, k, k);
        chk();
    }
    cout << ans;
}
