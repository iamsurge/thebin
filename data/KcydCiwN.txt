
export function changeBuffer(value:number): number
export function connectToBlock(x:number, y:number, z:number): boolean
export function getPlayer(name:string):Player
export function getPlayers(): LuaTable
export function getWorld(id:number | null): World

export function getWorlds(): LuaTable
export function getX():number
export function getY():number
export function getZ():number
export function isModLoaded(name:string):boolean
export function runCommand(command:string):[number, string]
export function test():Scoreboard
export function getScoreboard():Scoreboard
export function sendToDebugCard(address:string, data:string):void
export function sendToClipboard(player:string, text:string):void
export function scanContentsAt(x: number, y: number, z: number, worldId: number | null): [boolean, string, LuaTable]
export function getMetadata(x:number, y:number, z:number):number
export function getBlockId(x:number, y:number, z:number):number
export function getDimensionId():number
export function isLoaded(x:number, y:number, z:number):number
export function getSeed():number
export function removeFluid(amount:number, x:number, y:number, z:number, side:number):boolean
export function insertFluid(id:string, amount:number, x:number, y:number, z:number, side:number):boolean
export function getDimensionName():string
export function getTime():number
export function setTime(value:number):void
export function getLightValue(x:number, y:number, z:number):number
export function isRaining():boolean
export function setRaining(value:boolean):void
export function isThundering():boolean
export function setThundering(value:boolean):void
export function setBlock(x:number, y:number, z:number, id:number|string, meta:number):number
export function setBlocks(x1:number, y1:number, z1:number, x2:number, y2:number, z2:number, id:number|string, meta:number):number
export function removeItem(x:number, y:number, z:number, slot:number, count:number | null):number
export function insertItem(id:string, count:number, damage:number, nbt:string, x:number, y:number, z:number, side:number):boolean
export function getSpawnPoint():[number, number, number]
export function setSpawnPoint(x:number, y:number, z:number):void
export function canSeeSky(x:number, y:number, z:number):number
export function getLightOpacity(x:number, y:number, z:number):number
export function hasTileEntity(x:number, y:number, z:number):number
export function playSoundAt(x:number, y:number, z:number, sound:string, range:number):void
export function getTileNBT(x:number, y:number, z:number):LuaTable
export function setTileNBT(x:number, y:number, z:number, nbt:LuaTable):boolean
export function getBlockState(x:number, y:number, z:number, actualState:boolean | null):void

export function getWorld():World
export function getGameType():string
export function setGameType(gametype:string):void
export function getHealth():number
export function setHealth(health:number):void
export function getMaxHealth():number
export function getPosition():[number, number, number]
export function setPosition(x:number, y:number, z:number):void
export function getExperienceTotal():number
export function getLevel():number
export function addExperienceLevel(level:number):void
export function removeExperienceLevel(level:number):void
export function insertItem(id:string, amount:number, meta:number, nbt:string | null):number
export function clearInventory():void

export function addObjective(objectiveName:string, objectiveCriteria:string):void
export function removeObjective(objectiveName:string):void
export function increasePlayerScore(playerName:string, objectiveName:string, score:number):void
export function decreasePlayerScore(playerName:string, objectiveName:string, score:number):void
export function addPlayerToTeam(player:string, team:string):boolean
export function removePlayerFromTeam(player:string, team:string):boolean
export function removePlayerFromTeams(player:string):boolean
export function addTeam(team:string):void
export function removeTeam(teamName: string):void
export function getPlayerScore(playerName:string, objectiveName:string):number
export function setPlayerScore(playerName:string, objectiveName:string, score:number):void

type World      = any
type Player     = any
type Scoreboard = any

// Usage in .ts: 
// import * as debug from "./debug";