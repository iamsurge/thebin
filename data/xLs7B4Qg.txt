class Solution {
    public int maxPalindromes(String s, int k) {
        int l, r;
        int n = s.length();
        int[] dp = new int[n + 1];
        for (int i = 0; i < n; ++i) {
            for (int j = 0; j < n; ++j) {
                l = i - j;
                r = i + j;
                if (l < 0 || r >= n) {
                    break;
                }
                dp[r + 1] = Math.max(dp[r + 1], dp[r]);
                if (s.charAt(l) != s.charAt(r)) {
                    break;
                }
                dp[r + 1] = Math.max(dp[r + 1], dp[l] + 1);
            }
            for (int j = 0; j < n; ++j) {
                l = i - j;
                r = i + j + 1;
                if (l < 0 || r >= n) {
                    break;
                }
                dp[r + 1] = Math.max(dp[r + 1], dp[r]);
                if (s.charAt(l) != s.charAt(r)) {
                    break;
                }
                dp[r + 1] = Math.max(dp[r + 1], dp[l] + 1);
            }
        }
        return dp[n];
    }
}
