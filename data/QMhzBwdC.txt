#include <iostream>
#include <fstream>

using namespace std;

struct Marcatori {
  string nome="";
  string squadra="";
  int goal=0;
};

void stampa(Marcatori v[], int quanti)
{
  for (int i=0; i<quanti; i++)
    cout << "Calciatore: " << v[i].nome << "   "
         << "Squadra: " << v[i].squadra<< "   "
         << "Goal: " << v[i].goal << endl;
}

int main()
{
    const int MAX=100;
    Marcatori classifica[MAX];

    int inseriti=0;

    while (inseriti<MAX)
    {
      cout << "Nome calciatore (STOP per terminare): ";
      cin>>classifica[inseriti].nome;

      if (classifica[inseriti].nome == "STOP") break;

      cout << "Nome squadra: ";
      cin>>classifica[inseriti].squadra;

      cout << "Goal segnati: ";
      cin>>classifica[inseriti].goal;

      inseriti++;
    }

    stampa(classifica, inseriti);


    ifstream leggi("dati.txt");

    inseriti=0;

    while( getline(leggi, classifica[inseriti].nome) )
    {
      getline(leggi, classifica[inseriti].squadra);

      string riga="";
      getline(leggi, riga);
      classifica[inseriti].goal = stoi(riga);

      inseriti++;
    }

    leggi.close(); leggi.clear();

    stampa(classifica, inseriti);


    //dal nome di una squadra al suo primo calciatore nell'array
    string cercata="";
    cout << "Cercata: ";
    cin>>cercata;

    int posTrovato=-1;
    for(int i=0; i<inseriti; i++)
      if (classifica[i].squadra == cercata)
      {
        posTrovato = i;
        break;
      }

    if (posTrovato>=0)
    {
      cout << "Calciatore: " << classifica[posTrovato].nome << "   "
           << "Goal: " << classifica[posTrovato].goal << endl;
    }

    //ricerca del capo cannoniere
    int posMax=0;
    for(int i=1; i<inseriti; i++)
      if(classifica[i].goal > classifica[posMax].goal) posMax=i;

    cout << "Calciatore: " << classifica[posMax].nome << "   "
      << "Squadra: " << classifica[posMax].squadra<< "   "
      << "Goal: " << classifica[posMax].goal << endl;
    return 0;
}
