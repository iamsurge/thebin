import java.util.LinkedList;
import java.util.Scanner;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class usuario {
	private String nombre;
	private String apellido;
	private String nomUsuario;
	private String clave;
	private String correo;
	private String tipoCuenta;
	///Expresion regular para validar un correo electronico, extraido de https://www.techiedelight.com/es/validate-email-address-java/
	private static final String EMAIL_REGEX = "(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])";
	 private static final String PASSWORD_REGEX =
		        "^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[_/+:~@#$%^&=!])(?=\\S+$).{8,12}$";
	private static final Pattern EMAIL_PATTERN = Pattern.compile(EMAIL_REGEX);
	private static final Pattern PASSWORD_PATTERN =Pattern.compile(PASSWORD_REGEX);
	private LinkedList<usuario> lista;
	public usuario() {
		// TODO Auto-generated constructor stub
	}
	
	public usuario(String nombre,String apellido, String usuario, String clave, String correo, char TipoCuenta) {
		this.nombre=nombre;
		this.apellido=apellido;
		this.nomUsuario=usuario;
		this.clave=clave;
		this.correo=correo;
		this.tipoCuenta=identificarTipoCuenta(TipoCuenta);
	}
	 public String toString() {
	        return this.nombre + " - " + this.apellido + " - " + this.nomUsuario +" - "+this.clave+" - "+this.correo+" - "+this.tipoCuenta;
	 }
	public String identificarTipoCuenta(char cuenta) {
		String aux="";	
	    if(cuenta=='p'){
	    	aux="Premium";
	    }else{
	    	aux="Gratuita";
	    }
		return aux;
	}

	  public static boolean verificarNombre(String cadena) {
	        for (int i = 0; i < cadena.length(); i++) {
	            char c = cadena.charAt(i);
	            if (!((c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z') || c == ' ')) {
	            	System.out.println("Nombre y apellido deben contener solamente letras y espacios en blanco.");
	            	return false;
	            }
	        }
	        return true;
	  }
	  public static boolean verificarUsuario(String cadena) {
	        for (int i = 0; i < cadena.length(); i++) {
	            char c = cadena.charAt(i);
	            if (!((c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z')|| (c >= '1' && c <= '9'))) {
	            	System.out.println("El usuario puede contener solo letras o letras y dígitos.");
	            	return false;
	            }
	        }
	        return true;
	  }
	  public static boolean emailValidator(String email)
	    {
	        if (email == null) {
	        	System.out.println("Ingrese correo!!,campo vacio.");
	            return false;
	        }
	 
	        Matcher matcher = EMAIL_PATTERN.matcher(email);
	        if(!matcher.matches()) {
	        	System.out.println("Correo no valido");
	        }
	        return matcher.matches();
	 }
	 public static boolean contraseñaValidator(String clave)
	    {
	        if (clave == null) {
	            return false;
	        }
	        Matcher matcher= PASSWORD_PATTERN.matcher(clave);
	        if(!matcher.matches()) {
	        	System.out.println("Clave no valida");
	        }
	        return matcher.matches();
	 }
	public void registrarUsuario() {
		Scanner lectura=new Scanner(System.in);
		char aux;
		do {
			System.out.println("Ingrese nombre");
			nombre=lectura.nextLine();
			System.out.println("Ingrese apellido");	
			apellido=lectura.nextLine();
			System.out.println("Ingrese usuario");
			nomUsuario=lectura.nextLine();
			System.out.println("Ingrese clave");	
			clave=lectura.nextLine();
			System.out.println("Ingrese correo");	
			correo=lectura.nextLine();
			System.out.println("Ingrese tipo de cuenta(p:premium o g:gratiuita)");	
			aux=lectura.next().charAt(0);
			lectura.nextLine();
			}while(!(evaluarRegistro(nombre, apellido, nomUsuario, clave, correo)));
				if (lista.size()==0) {
					lista.add(new usuario(nombre,apellido,nomUsuario,clave,correo,aux));
				}else {
					for(int i=0;i<lista.size();i++) {
						if (lista.contains(nomUsuario)&& lista.contains(correo) ) {
						    System.out.println("El usuario y/o el correo estan registrados");
						} else {
						    System.out.println("El valor no esta en la lista");
						    lista.add(new usuario(nombre,apellido,nomUsuario,clave,correo,aux));
						}
					}
		}
		
	}
	//PARA MOSTRAR POR COINCIDENCIA DEBEN HACERLO EN OTRA LISTA
	public LinkedList<usuario> buscarPorNombreApellido(String nombre,String apellido){
	    LinkedList<usuario> e = new LinkedList();
	    for(usuario u : lista){
	        if(u.getNombre().contains(nombre) || u.getNombre().contains(nombre) ){
	            e.add(u);
	        }
	    }
	    return e;
	}  
	public LinkedList<usuario> buscarPorTipoCuenta(String tipoCuenta ){
	    LinkedList<usuario> e = new LinkedList();
	    for(usuario u : lista){
	        if(u.getTipoCuenta().contains(tipoCuenta)){
	            e.add(u);
	        }
	    }
	    return e;
	} 

	public boolean evaluarRegistro(String nombre,String apellido, String usuario, String clave, String correo) {
		if(verificarNombre(nombre)&& verificarNombre(apellido)){
			if(verificarUsuario(usuario)){
				if(emailValidator(correo)) {
						if(contraseñaValidator(clave)) {
							return true;
						}else {
							
							return false;
						}
				}else {
					
					return false;
				}
				
			}else{
				
				 return false;
			}
		}else{
			return false;
		}
	}

	public String getNombre() {
		return nombre;
	}

	public void setNombre(String nombre) {
		this.nombre = nombre;
	}

	public String getApellido() {
		return apellido;
	}

	public void setApellido(String apellido) {
		this.apellido = apellido;
	}

	public String getNomUsuario() {
		return nomUsuario;
	}

	public void setNomUsuario(String nomUsuario) {
		this.nomUsuario = nomUsuario;
	}

	public String getClave() {
		return clave;
	}

	public void setClave(String clave) {
		this.clave = clave;
	}

	public String getCorreo() {
		return correo;
	}

	public void setCorreo(String correo) {
		this.correo = correo;
	}

	public String getTipoCuenta() {
		return tipoCuenta;
	}

	public void setTipoCuenta(String tipoCuenta) {
		this.tipoCuenta = tipoCuenta;
	}

	public LinkedList<usuario> getLista() {
		return lista;
	}

	public void setLista(LinkedList<usuario> lista) {
		this.lista = lista;
	}
	
}