#include <iostream>
#include <cmath>
#include <vector>
#include <queue>
#include <algorithm>
#include <string>
#include <stack>
#include <set>
#include <map>
#define pii pair <int, int>
#define pb(x) push_back(x)
using namespace std;
using ll = long long;
using ld = long double;
using db = double;
void cv(vector <int> &v) {
    for (auto x : v) cout << x << ' ';
    cout << "\n";
}

void cvl(vector <ll> &v) {
    for (auto x : v) cout << x << ' ';
    cout << "\n";
}


void cvv(vector <vector <int> > &v) {
    for (auto x : v) cv(x);
    cout << "\n";
}

void cvb(vector <bool> v) {
    for (bool x : v) cout << x << ' ';
    cout << "\n";
}

void cvs(vector <string>  v) {
    for (auto a : v) {
        cout << a << "\n";
    }
}

void cvp(vector <pii> a) {
    for (auto p : a) {
        cout << p.first << ' ' << p.second << "\n";
    }
    cout << "\n";
}

bool impl(bool a, bool b) {
    return !a || b;
}

bool f(bool a, bool b, bool c, bool d, bool e) {
    bool one, two, three;
    one = impl(a, b && c) || !c;
    two = impl(b, c && d) || !d;
    three = impl(!e, c && d) || !c;
    return impl(impl(one, two), three);
}


int main() {
    ios::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
    vector <bool> v = {0, 1};
    for (bool a: v) {
        for (bool b: v) {
            for (bool c: v) {

                for (bool d: v) {
                    for (bool e: v) {
                        cout << a << ' ' << b << ' ' << c << ' ' << d << ' ' << e << ' ' << f(a, b, c, d, e) << "\n";
                    }

                }

            }
        }
    }
}
