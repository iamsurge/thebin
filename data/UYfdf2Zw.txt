<!DOCTYPE html>
<html>
<head>        
    <title>Area Selection Page</title>
</head>
<body>
  <nav>
    <a href="/">Refresh Page</a> |    
  </nav>
  <h1>Area Selection Page</h1>
  <form>
    <label for="area-select">Select an area:</label>
    <br>
    <select id="area-select" name="Area">
        <option value="None">NONE</option>
        <option value="area1">Area_1</option>
        <option value="area2">Area_2</option>        
    </select>
    <br><br>
    <label for="subarea-select">Select a sub-area:</label>
    <br>
    <select id="subarea-select" name="Subarea">
    </select>
    <br><br>
    <label for="accept">Accept to Continue</label>
    <input type="checkbox" id="accept" name="accept" value="accept" required>    
    <!-- <input type="checkbox" id="accept" name="accept" value="accept">    -->
    <!-- attempting to hide until later-->
    <div id="additional-form-data" style="display:None;">            
        <h4>Testing Hidden Features</h4>        
        <ol>
            <li>Validate Area/Subarea above</li>
            <li>More to come......</li>
            <li>..tbd...</li>
        </ol>    
        <br>
        <button type="submit" id="submit" disabled>Submit</button>
      </div>
  </form>
  
<script>
    // inital variables
    const areaSelect = document.getElementById('area-select');
    const subareaSelect = document.getElementById('subarea-select');
    const acceptCheckbox = document.getElementById('accept');    
    acceptCheckbox.disabled = true;    
    const submitButton = document.getElementById('submit');
    const additionalFormData = document.getElementById('additional-form-data');
    window.onload = function() {
        document.getElementById('area-select').selectedIndex = 0;
    }        

    // drop down data for subareas
    function updateSubareaOptions(area) {
        // clear options 
        while (subareaSelect.firstChild) {
            subareaSelect.removeChild(subareaSelect.firstChild);
        }
        // switch between areas and subareas
        switch (area) {
            case 'area1':
                const option_1a = document.createElement('option');
                    option_1a.value = 'None';
                    option_1a.text = 'NONE';
                    subareaSelect.appendChild(option_1a);
                const option_1b = document.createElement('option');
                    option_1b.value = 'sub_area1';
                    option_1b.text = 'SUB_AREA1';
                    subareaSelect.appendChild(option_1b);                      
                    break;
            case 'area2':
                const option_2a = document.createElement('option');
                    option_2a.value = 'None';
                    option_2a.text = 'NONE';
                    subareaSelect.appendChild(option_2a);
                const option_2b = document.createElement('option');
                    option_2b.value = 'sub_area2';
                    option_2b.text = 'SUB_AREA2';
                    subareaSelect.appendChild(option_2b);
                    break;
                    
    }}

    // drop down for area with subareas choies
    areaSelect.addEventListener('change', function() {
        updateSubareaOptions(this.value);
        checkIfReadyToSubmit();
    });
    
    //drop down for subareas
    subareaSelect.addEventListener('change', function() {
        checkIfReadyToSubmit();
    });
////////////////////////////////////////////////////////
////////////////////////////////////////////////////////    
    // attempting to unhide additional choices, it no longer works :/
    function checkIfReadyToSubmit() {
        // check area and subarea are selected
        const formIsValid = areaSelect.value !== 'None' && subareaSelect.value !== 'None';
        console.log('formIsValid:', formIsValid);

        // If form is valid, enable the checkbox
        if (formIsValid) {
            acceptCheckbox.disabled = false;
        } else {
            // disable the checkbox and uncheck it
            acceptCheckbox.disabled = true;
            // acceptCheckbox.checked = false;
        }

        // if checkbox is checked
        const checkboxIsChecked = acceptCheckbox.checked;
        acceptCheckbox.addEventListener('change', function() {
        console.log('checkbox value changed to:', this.checked);        
        });

        // form and checkbox valid, enable hidden features
        // if (formIsValid && checkboxIsChecked) {
        if (checkboxIsChecked) {            
            additionalFormData.style.display = 'block';
            submitButton.disabled = false;
        } else {
            // form and checkbox invalid, disenable hidden features            
            additionalFormData.style.display = 'none';
            submitButton.disabled = true;
    }}      
////////////////////////////////////////////////////////   
//////////////////////////////////////////////////////// 
//   function updateAcceptCheckbox(formIsValid) {
//     if (formIsValid) {
//         acceptCheckbox.disabled = false;
//     } else {
//         acceptCheckbox.disabled = true;
//         acceptCheckbox.checked = false;
//     }
//   }

//   function updateAdditionalFormData(checkboxIsChecked) {
//     if (checkboxIsChecked) {
//         additionalFormData.style.display = 'block';
//         submitButton.disabled = false;
//     } else {
//         additionalFormData.style.display = 'none';
//         submitButton.disabled = true;
//   }
//   }
//   function checkIfReadyToSubmit() {
//     // Check if the form is valid (i.e., both the area and subarea are not equal to 'None')
//     const formIsValid = areaSelect.value !== 'None' && subareaSelect.value !== 'None';
//     console.log('formIsValid:', formIsValid);

//     // Update the accept checkbox based on the form's validity
//     updateAcceptCheckbox(formIsValid);

//     // Check if the checkbox is checked
//     const checkboxIsChecked = acceptCheckbox.checked;
//     acceptCheckbox.addEventListener('change', function() {
//       console.log('checkbox value changed to:', this.checked);
//   });

//     // Update the additional form data based on the checkbox's checked state
//     updateAdditionalFormData(checkboxIsChecked);
// }
////////////////////////////////////////////////////////
////////////////////////////////////////////////////////
  
  </script> 
  </body>
  </html>
  
