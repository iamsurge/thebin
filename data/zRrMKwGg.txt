海阔视界规则分享，当前分享的是：二级页面详情￥page_detail￥快科技-小米双11大获成功！全渠道累计支付金额突破170亿...@@{"data":"{\"associatedModelsMapForJoinTable\":{},\"associatedModelsMapWithFK\":{},\"associatedModelsMapWithoutFK\":{},\"fieldsToSetToDefault\":[],\"id\":0,\"last_chapter_rule\":\"\",\"listToClearAssociatedFK\":[],\"listToClearSelfFK\":[],\"pageList\":[{\"col_type\":\"movie_3\",\"name\":\"接口\",\"path\":\"apis\",\"rule\":\"js:\\nconst baseUrl = 'https://api.yinrss.com';\\nconst fetchApi = function (path) {\\n  const res = JSON.parse(fetch(baseUrl + path));\\n  if (res.errno !== 0) {\\n\\ttoast(res.error);\\n  }\\n  return res;\\n}\\n\\nfunction getSource() {\\n  return fetchApi('/source');\\n}\\n\\nfunction getFeed(media, id) {\\n  return fetchApi('/feed?limit=25&id=' + id + '&media=' + media + '&keyword=');\\n}\\n\\nfunction getDetail(id) {\\n  return fetchApi('/detail?id=' + id);\\n}\\n\\n$.exports = {\\n  getSource: getSource,\\n  getFeed: getFeed,\\n  getDetail: getDetail,\\n}\"},{\"col_type\":\"rich_text\",\"name\":\"页面->详情\",\"path\":\"detail\",\"rule\":\"js: require(\\\"https://lf3-cdn-tos.bytecdntp.com/cdn/expire-1-M/moment.js/2.29.1/moment.min.js\\\");\\nrequire(\\\"https://lf6-cdn-tos.bytecdntp.com/cdn/expire-1-M/moment.js/2.29.1/locale/zh-cn.min.js\\\");\\nconst apis = $.require('hiker://page/apis');\\n\\nconst data = [];\\nconst id = getParam(\\\"id\\\", 0);\\nconst read_array = getItem(\\\"read_array\\\", \\\"\\\").split(\\\",\\\");\\nread_array.push(id);\\nsetItem(\\\"read_array\\\", read_array.join(\\\",\\\"));\\nconst detail = apis.getDetail(id).data;\\nconst subtitle =\\n  '<font color=\\\"#9e9e9e\\\">' +\\n  detail.source +\\n  \\\"  \\\" +\\n  moment(detail.date).calendar() +\\n  \\\"</font><br/>\\\";\\ndata.push({\\n  title: \\\"<h1>\\\" + detail.title + \\\"</h1>\\\" + subtitle + detail.content,\\n});\\nsetResult(data);\\n\"},{\"col_type\":\"movie_1\",\"name\":\"页面->列表\",\"path\":\"feed\",\"rule\":\"js: require(\\\"https://lf3-cdn-tos.bytecdntp.com/cdn/expire-1-M/moment.js/2.29.1/moment.min.js\\\");\\nrequire(\\\"https://lf6-cdn-tos.bytecdntp.com/cdn/expire-1-M/moment.js/2.29.1/locale/zh-cn.min.js\\\");\\nconst apis = $.require('hiker://page/apis');\\n\\nconst data = [];\\nconst media = getParam(\\\"id\\\", 0);\\nconst read_array = getItem(\\\"read_array\\\", \\\"\\\").split(\\\",\\\");\\nif (MY_PAGE === 1) clearMyVar(\\\"page_\\\" + media);\\nconst startId = getMyVar(\\\"page_\\\" + media, \\\"\\\");\\nconst feed = apis.getFeed(media, startId).data;\\nfeed.length && putMyVar(\\\"page_\\\" + media, feed[feed.length - 1].id);\\naddListener(\\n  \\\"onRefresh\\\",\\n  $.toString((media) => clearMyVar(\\\"page_\\\" + media), media)\\n);\\naddListener(\\n  \\\"onClose\\\",\\n  $.toString((media) => clearMyVar(\\\"page_\\\" + media), media)\\n);\\ndata.push.apply(\\n  data,\\n  feed.map((d) => {\\n    function getRead() {\\n      return read_array.includes(d.id);\\n    }\\n\\n    function wrap(text) {\\n      return '‘‘’’<font color=\\\"#9e9e9e\\\">' + text + \\\"</font>’’’\\\";\\n    }\\n\\n    const desc = d.source + \\\"·\\\" + moment(d.date).fromNow();\\n\\n    return {\\n      title: getRead() ? wrap(d.title) : d.title,\\n      desc: getRead() ? wrap(desc) : desc,\\n      img: d.img,\\n      url: $('#noLoading#').lazyRule(\\n        (d, desc, wrap) => {\\n          updateItem({\\n            title: wrap(d.title),\\n            desc: wrap(desc),\\n            extra: {\\n              id: d.id,\\n            },\\n          });\\n          return \\\"hiker://page/detail?id=\\\" + d.id;\\n        },\\n        d,\\n        desc,\\n        wrap\\n      ),\\n      col_type: d.img ? 'movie_1' : 'text_1',\\n      extra: {\\n        id: d.id,\\n      },\\n    };\\n  })\\n);\\nsetResult(data);\\n\"}],\"params\":\"{\\\"id\\\":\\\"1487653\\\"}\",\"saved\":false,\"title\":\"YINRSS\",\"version\":0,\"url\":\"hiker://page/detail?id=1487653\",\"col_type\":\"rich_text\",\"find_rule\":\"js: require(\\\"https://lf3-cdn-tos.bytecdntp.com/cdn/expire-1-M/moment.js/2.29.1/moment.min.js\\\");\\nrequire(\\\"https://lf6-cdn-tos.bytecdntp.com/cdn/expire-1-M/moment.js/2.29.1/locale/zh-cn.min.js\\\");\\nconst apis = $.require('hiker://page/apis');\\n\\nconst data = [];\\nconst id = getParam(\\\"id\\\", 0);\\nconst read_array = getItem(\\\"read_array\\\", \\\"\\\").split(\\\",\\\");\\nread_array.push(id);\\nsetItem(\\\"read_array\\\", read_array.join(\\\",\\\"));\\nconst detail = apis.getDetail(id).data;\\nconst subtitle =\\n  '<font color=\\\"#9e9e9e\\\">' +\\n  detail.source +\\n  \\\"  \\\" +\\n  moment(detail.date).calendar() +\\n  \\\"</font><br/>\\\";\\ndata.push({\\n  title: \\\"<h1>\\\" + detail.title + \\\"</h1>\\\" + subtitle + detail.content,\\n});\\nsetResult(data);\\n\",\"group\":\"⑧阅读\",\"ua\":\"mobile\",\"preRule\":\"\",\"pages\":\"[{\\\"col_type\\\":\\\"movie_3\\\",\\\"name\\\":\\\"接口\\\",\\\"path\\\":\\\"apis\\\",\\\"rule\\\":\\\"js:\\\\nconst baseUrl = 'https://api.yinrss.com';\\\\nconst fetchApi = function (path) {\\\\n  const res = JSON.parse(fetch(baseUrl + path));\\\\n  if (res.errno !== 0) {\\\\n\\\\ttoast(res.error);\\\\n  }\\\\n  return res;\\\\n}\\\\n\\\\nfunction getSource() {\\\\n  return fetchApi('/source');\\\\n}\\\\n\\\\nfunction getFeed(media, id) {\\\\n  return fetchApi('/feed?limit=25&id=' + id + '&media=' + media + '&keyword=');\\\\n}\\\\n\\\\nfunction getDetail(id) {\\\\n  return fetchApi('/detail?id=' + id);\\\\n}\\\\n\\\\n$.exports = {\\\\n  getSource: getSource,\\\\n  getFeed: getFeed,\\\\n  getDetail: getDetail,\\\\n}\\\"},{\\\"col_type\\\":\\\"rich_text\\\",\\\"name\\\":\\\"页面->详情\\\",\\\"path\\\":\\\"detail\\\",\\\"rule\\\":\\\"js: require(\\\\\\\"https://lf3-cdn-tos.bytecdntp.com/cdn/expire-1-M/moment.js/2.29.1/moment.min.js\\\\\\\");\\\\nrequire(\\\\\\\"https://lf6-cdn-tos.bytecdntp.com/cdn/expire-1-M/moment.js/2.29.1/locale/zh-cn.min.js\\\\\\\");\\\\nconst apis = $.require('hiker://page/apis');\\\\n\\\\nconst data = [];\\\\nconst id = getParam(\\\\\\\"id\\\\\\\", 0);\\\\nconst read_array = getItem(\\\\\\\"read_array\\\\\\\", \\\\\\\"\\\\\\\").split(\\\\\\\",\\\\\\\");\\\\nread_array.push(id);\\\\nsetItem(\\\\\\\"read_array\\\\\\\", read_array.join(\\\\\\\",\\\\\\\"));\\\\nconst detail = apis.getDetail(id).data;\\\\nconst subtitle =\\\\n  '<font color=\\\\\\\"#9e9e9e\\\\\\\">' +\\\\n  detail.source +\\\\n  \\\\\\\"  \\\\\\\" +\\\\n  moment(detail.date).calendar() +\\\\n  \\\\\\\"</font><br/>\\\\\\\";\\\\ndata.push({\\\\n  title: \\\\\\\"<h1>\\\\\\\" + detail.title + \\\\\\\"</h1>\\\\\\\" + subtitle + detail.content,\\\\n});\\\\nsetResult(data);\\\\n\\\"},{\\\"col_type\\\":\\\"movie_1\\\",\\\"name\\\":\\\"页面->列表\\\",\\\"path\\\":\\\"feed\\\",\\\"rule\\\":\\\"js: require(\\\\\\\"https://lf3-cdn-tos.bytecdntp.com/cdn/expire-1-M/moment.js/2.29.1/moment.min.js\\\\\\\");\\\\nrequire(\\\\\\\"https://lf6-cdn-tos.bytecdntp.com/cdn/expire-1-M/moment.js/2.29.1/locale/zh-cn.min.js\\\\\\\");\\\\nconst apis = $.require('hiker://page/apis');\\\\n\\\\nconst data = [];\\\\nconst media = getParam(\\\\\\\"id\\\\\\\", 0);\\\\nconst read_array = getItem(\\\\\\\"read_array\\\\\\\", \\\\\\\"\\\\\\\").split(\\\\\\\",\\\\\\\");\\\\nif (MY_PAGE === 1) clearMyVar(\\\\\\\"page_\\\\\\\" + media);\\\\nconst startId = getMyVar(\\\\\\\"page_\\\\\\\" + media, \\\\\\\"\\\\\\\");\\\\nconst feed = apis.getFeed(media, startId).data;\\\\nfeed.length && putMyVar(\\\\\\\"page_\\\\\\\" + media, feed[feed.length - 1].id);\\\\naddListener(\\\\n  \\\\\\\"onRefresh\\\\\\\",\\\\n  $.toString((media) => clearMyVar(\\\\\\\"page_\\\\\\\" + media), media)\\\\n);\\\\naddListener(\\\\n  \\\\\\\"onClose\\\\\\\",\\\\n  $.toString((media) => clearMyVar(\\\\\\\"page_\\\\\\\" + media), media)\\\\n);\\\\ndata.push.apply(\\\\n  data,\\\\n  feed.map((d) => {\\\\n    function getRead() {\\\\n      return read_array.includes(d.id);\\\\n    }\\\\n\\\\n    function wrap(text) {\\\\n      return '‘‘’’<font color=\\\\\\\"#9e9e9e\\\\\\\">' + text + \\\\\\\"</font>’’’\\\\\\\";\\\\n    }\\\\n\\\\n    const desc = d.source + \\\\\\\"·\\\\\\\" + moment(d.date).fromNow();\\\\n\\\\n    return {\\\\n      title: getRead() ? wrap(d.title) : d.title,\\\\n      desc: getRead() ? wrap(desc) : desc,\\\\n      img: d.img,\\\\n      url: $('#noLoading#').lazyRule(\\\\n        (d, desc, wrap) => {\\\\n          updateItem({\\\\n            title: wrap(d.title),\\\\n            desc: wrap(desc),\\\\n            extra: {\\\\n              id: d.id,\\\\n            },\\\\n          });\\\\n          return \\\\\\\"hiker://page/detail?id=\\\\\\\" + d.id;\\\\n        },\\\\n        d,\\\\n        desc,\\\\n        wrap\\\\n      ),\\\\n      col_type: d.img ? 'movie_1' : 'text_1',\\\\n      extra: {\\\\n        id: d.id,\\\\n      },\\\\n    };\\\\n  })\\\\n);\\\\nsetResult(data);\\\\n\\\"}]\",\"proxy\":\"\"}","picUrl":"http://img.yinrss.com/c07d19a0-6216-11ed-8e3e-bb36144adbe1/news_thumb","title":"快科技-小米双11大获成功！全渠道累计支付金额突破170亿..."}