import 'dart:convert';

import 'package:equatable/equatable.dart';

class Repair extends Equatable {
  final int? id_repair;
  final String? customer;
  final DateTime? date_accept;
  final DateTime? date_delive;
  final String? user;
  final String? technician;
  final String? path_photo;
  final String? objects;
  final String? works_to_do;
  final double? p_cost;
  final double? p_part1;
  final double? p_part2;
  final double? p_part3;
  final String? note;
  final double? p_public;

  const Repair({
    required this.id_repair,
    required this.customer,
    required this.date_accept,
    required this.date_delive,
    required this.user,
    required this.technician,
    required this.path_photo,
    required this.objects,
    required this.works_to_do,
    required this.p_cost,
    required this.p_part1,
    required this.p_part2,
    required this.p_part3,
    required this.note,
    required this.p_public,
  });

  

  factory Repair.fromJson(Map<String, dynamic> json) {
    return Repair(
      json['id_repair']?.toInt(),
      json['customer'],
      json['date_accept'] != null
          ? DateTime.fromMillisecondsSinceEpoch(json['date_accept'])
          : null,
      json['date_delive'] != null
          ? DateTime.fromMillisecondsSinceEpoch(json['date_delive'])
          : null,
      json['user'],
      json['technician'],
      json['path_photo'],
      json['objects'],
      json['works_to_do'],
      json['p_cost']?.toDouble(),
      json['p_part1']?.toDouble(),
      json['p_part2']?.toDouble(),
      json['p_part3']?.toDouble(),
      json['note'],
      json['p_public']?.toDouble(),
    );
  }