public class DepositActivity extends BaseActivity implements DepositView,DepositRouter,
        BuySellVmoneyView {
        
	VmoneyListAdapter adapter;
    @Inject
    public DepositPresenter presenter;
    @Inject
    public BuySellVmoneyPresenter buySellVmoneyPresenter;

  @Override
    protected void onCreate(@Nullable Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        binding = DataBindingUtil.setContentView(this, R.layout.activity_deposit);

        getAppComponent().inject(this);
        presenter.setView(this);
        presenter.setRouter(this);
        presenter.onStart();
        buySellVmoneyPresenter.setView(this);
        adapter = new VmoneyListAdapter(this::gotoWithCrypto, presenter.db, VmoneyListAdapter.SELL);
        
        binding.btnSearch.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                toggleSearch();
            }
        });

        binding.searchInput.addTextChangedListener(new TextWatcher() {
            @Override
            public void beforeTextChanged(CharSequence charSequence, int i, int i1, int i2) {

            }

            @Override
            public void onTextChanged(CharSequence charSequence, int i, int i1, int i2) {

            }

            @Override
            public void afterTextChanged(Editable editable) {
                adapter.getFilter().filter(editable.toString());
            }
        });
    }
 @Override
    public void toggleSearch() {
        boolean show = !binding.btnSearch.isActivated();
        binding.btnSearch.setActivated(show);
        if(show) {
            binding.searchInput.setVisibility(View.VISIBLE);
            binding.toolbar.setVisibility(View.INVISIBLE);
            binding.searchInput.requestFocus();
            showKeybaord();
        } else {
            binding.searchInput.setText("");
            hideKeyboard(binding.searchInput);
            binding.searchInput.setVisibility(View.INVISIBLE);
            binding.toolbar.setVisibility(View.VISIBLE);
        }
    }

    @Override
    public void enableSearch(boolean enable) {
        if(binding.btnSearch.isActivated()){
            //toggle off if search activated
            toggleSearch();
        }
        if(enable) {
            binding.searchContainer.setVisibility(View.VISIBLE);
            binding.searchInput.addTextChangedListener(this);
        }
        else{
            binding.searchContainer.setVisibility(View.GONE);
            binding.searchInput.removeTextChangedListener(this);
        }
    }
}