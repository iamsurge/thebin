const db = {};

const writeToDb = (userId, key, value) => {
	if (!db[userId]) {
		db[userId] = {};
	}

	db[userId][key] = value;
};

const getKey = (userId, key) => {
	if (!db[userId]) return undefined;
	return db[userId][key];
};

const formatMessage = (message, userId) => {
	if (message.includes(":")) {
		const data = db[userId] || {};
		const variables = Object.keys(data);

		for (let i = 0; i < variables.length; i++) {
			const pattern = `:${variables[i]}`;

			if (message.includes(pattern) && data[variables[i]]) {
				message = message.replace(pattern, data[variables[i]]);
			}
		}
	}

	return message
	  .replace(/\_/g, "\\_")
    // .replace(/\*/g, "\\*")
    .replace(/\[/g, "\\[")
    .replace(/\]/g, "\\]")
    .replace(/\(/g, "\\(")
    .replace(/\)/g, "\\)")
    .replace(/\~/g, "\\~")
    .replace(/\`/g, "\\`")
    .replace(/\>/g, "\\>")
    .replace(/\#/g, "\\#")
    .replace(/\+/g, "\\+")
    .replace(/\-/g, "\\-")
    .replace(/\=/g, "\\=")
    .replace(/\|/g, "\\|")
    .replace(/\{/g, "\\{")
    .replace(/\}/g, "\\}")
    .replace(/\./g, "\\.")
    .replace(/\!/g, "\\!");
};

const getStep = (userId) => {
  const step = db[userId]?.step;

  if (!step)	{
  	writeToDb(userId, "step", 0);
  	return 0;
  }

  return step;
};

const delUser = (userId) => {
	delete db[userId];
};

module.exports = {
	writeToDb,
	formatMessage,
	getStep,
	delUser,
	getKey,
};