#define _CRT_SECURE_NO_WARNINGS
#include <windows.h>
#include <stdio.h>

int IllegalSingleByteOpcodes[] = { 0x06 ,0x07, 0x0e, 0x16, 0x17, 0x1e, 0x1f, 0x27, 0x2f, 0x37, 0x3f, 0x60, 0x61, 0xce, 0xd6 };

int IllegalDoubleByteOpcodes[][2] = { {0x0f,0x04},{0x0f,0x0a},{0x0f,0x0b},{0x0f,0x0c},{0x0f,0x0e},{0x0f,0x0f},{0x0f,0x24},{0x0f,0x25},{0x0f,0x26},{0x0f,0x27},{0x0f,0x36},{0x0f,0x37},{0x0f,0xaa},{0x26,0x06},{0x26,0x07},{0x26,0x0e},{0x26,0x16},{0x26,0x17},{0x26,0x1e},{0x26,0x1f},{0x26,0x27},{0x26,0x2f},{0x26,0x37},{0x26,0x3f},{0x26,0x60},{0x26,0x61},{0x26,0xce},{0x26,0xd6},{0x2e,0x06},{0x2e,0x07},{0x2e,0x0e},{0x2e,0x16},{0x2e,0x17},{0x2e,0x1e},{0x2e,0x1f},{0x2e,0x27},{0x2e,0x2f},{0x2e,0x37},{0x2e,0x3f},{0x2e,0x60},{0x2e,0x61},{0x2e,0xce},{0x2e,0xd6},{0x36,0x06},{0x36,0x07},{0x36,0x0e},{0x36,0x16},{0x36,0x17},{0x36,0x1e},{0x36,0x1f},{0x36,0x27},{0x36,0x2f},{0x36,0x37},{0x36,0x3f},{0x36,0x60},{0x36,0x61},{0x36,0xce},{0x36,0xd6},{0x3e,0x06},{0x3e,0x07},{0x3e,0x0e},{0x3e,0x16},{0x3e,0x17},{0x3e,0x1e},{0x3e,0x1f},{0x3e,0x27},{0x3e,0x2f},{0x3e,0x37},{0x3e,0x3f},{0x3e,0x60},{0x3e,0x61},{0x3e,0xce},{0x3e,0xd6},{0x40,0x06},{0x40,0x07},{0x40,0x0e},{0x40,0x16},{0x40,0x17},{0x40,0x1e},{0x40,0x1f},{0x40,0x27},{0x40,0x2f},{0x40,0x37},{0x40,0x3f},{0x40,0x60},{0x40,0x61},{0x40,0xce},{0x40,0xd6},{0x41,0x06},{0x41,0x07},{0x41,0x0e},{0x41,0x16},{0x41,0x17},{0x41,0x1e},{0x41,0x1f},{0x41,0x27},{0x41,0x2f},{0x41,0x37},{0x41,0x3f},{0x41,0x60},{0x41,0x61},{0x41,0xce},{0x41,0xd6},{0x42,0x06},{0x42,0x07},{0x42,0x0e},{0x42,0x16},{0x42,0x17},{0x42,0x1e},{0x42,0x1f},{0x42,0x27},{0x42,0x2f},{0x42,0x37},{0x42,0x3f},{0x42,0x60},{0x42,0x61},{0x42,0xce},{0x42,0xd6},{0x43,0x06},{0x43,0x07},{0x43,0x0e},{0x43,0x16},{0x43,0x17},{0x43,0x1e},{0x43,0x1f},{0x43,0x27},{0x43,0x2f},{0x43,0x37},{0x43,0x3f},{0x43,0x60},{0x43,0x61},{0x43,0xce},{0x43,0xd6},{0x44,0x06},{0x44,0x07},{0x44,0x0e},{0x44,0x16},{0x44,0x17},{0x44,0x1e},{0x44,0x1f},{0x44,0x27},{0x44,0x2f},{0x44,0x37},{0x44,0x3f},{0x44,0x60},{0x44,0x61},{0x44,0xce},{0x44,0xd6},{0x45,0x06},{0x45,0x07},{0x45,0x0e},{0x45,0x16},{0x45,0x17},{0x45,0x1e},{0x45,0x1f},{0x45,0x27},{0x45,0x2f},{0x45,0x37},{0x45,0x3f},{0x45,0x60},{0x45,0x61},{0x45,0xce},{0x45,0xd6},{0x46,0x06},{0x46,0x07},{0x46,0x0e},{0x46,0x16},{0x46,0x17},{0x46,0x1e},{0x46,0x1f},{0x46,0x27},{0x46,0x2f},{0x46,0x37},{0x46,0x3f},{0x46,0x60},{0x46,0x61},{0x46,0xce},{0x46,0xd6},{0x47,0x06},{0x47,0x07},{0x47,0x0e},{0x47,0x16},{0x47,0x17},{0x47,0x1e},{0x47,0x1f},{0x47,0x27},{0x47,0x2f},{0x47,0x37},{0x47,0x3f},{0x47,0x60},{0x47,0x61},{0x47,0xce},{0x47,0xd6},{0x48,0x06},{0x48,0x07},{0x48,0x0e},{0x48,0x16},{0x48,0x17},{0x48,0x1e},{0x48,0x1f},{0x48,0x27},{0x48,0x2f},{0x48,0x37},{0x48,0x3f},{0x48,0x60},{0x48,0x61},{0x48,0xce},{0x48,0xd6},{0x49,0x06},{0x49,0x07},{0x49,0x0e},{0x49,0x16},{0x49,0x17},{0x49,0x1e},{0x49,0x1f},{0x49,0x27},{0x49,0x2f},{0x49,0x37},{0x49,0x3f},{0x49,0x60},{0x49,0x61},{0x49,0xce},{0x49,0xd6},{0x4a,0x06},{0x4a,0x07},{0x4a,0x0e},{0x4a,0x16},{0x4a,0x17},{0x4a,0x1e},{0x4a,0x1f},{0x4a,0x27},{0x4a,0x2f},{0x4a,0x37},{0x4a,0x3f},{0x4a,0x60},{0x4a,0x61},{0x4a,0xce},{0x4a,0xd6},{0x4b,0x06},{0x4b,0x07},{0x4b,0x0e},{0x4b,0x16},{0x4b,0x17},{0x4b,0x1e},{0x4b,0x1f},{0x4b,0x27},{0x4b,0x2f},{0x4b,0x37},{0x4b,0x3f},{0x4b,0x60},{0x4b,0x61},{0x4b,0xce},{0x4b,0xd6},{0x4c,0x06},{0x4c,0x07},{0x4c,0x0e},{0x4c,0x16},{0x4c,0x17},{0x4c,0x1e},{0x4c,0x1f},{0x4c,0x27},{0x4c,0x2f},{0x4c,0x37},{0x4c,0x3f},{0x4c,0x60},{0x4c,0x61},{0x4c,0xce},{0x4c,0xd6},{0x4d,0x06},{0x4d,0x07},{0x4d,0x0e},{0x4d,0x16},{0x4d,0x17},{0x4d,0x1e},{0x4d,0x1f},{0x4d,0x27},{0x4d,0x2f},{0x4d,0x37},{0x4d,0x3f},{0x4d,0x60},{0x4d,0x61},{0x4d,0xce},{0x4d,0xd6},{0x4e,0x06},{0x4e,0x07},{0x4e,0x0e},{0x4e,0x16},{0x4e,0x17},{0x4e,0x1e},{0x4e,0x1f},{0x4e,0x27},{0x4e,0x2f},{0x4e,0x37},{0x4e,0x3f},{0x4e,0x60},{0x4e,0x61},{0x4e,0xce},{0x4e,0xd6},{0x4f,0x06},{0x4f,0x07},{0x4f,0x0e},{0x4f,0x16},{0x4f,0x17},{0x4f,0x1e},{0x4f,0x1f},{0x4f,0x27},{0x4f,0x2f},{0x4f,0x37},{0x4f,0x3f},{0x4f,0x60},{0x4f,0x61},{0x4f,0xce},{0x4f,0xd6},{0x50,0x06},{0x50,0x07},{0x50,0x0e},{0x50,0x16},{0x50,0x17},{0x50,0x1e},{0x50,0x1f},{0x50,0x27},{0x50,0x2f},{0x50,0x37},{0x50,0x3f},{0x50,0x60},{0x50,0x61},{0x50,0xce},{0x50,0xd6},{0x51,0x06},{0x51,0x07},{0x51,0x0e},{0x51,0x16},{0x51,0x17},{0x51,0x1e},{0x51,0x1f},{0x51,0x27},{0x51,0x2f},{0x51,0x37},{0x51,0x3f},{0x51,0x60},{0x51,0x61},{0x51,0xce},{0x51,0xd6},{0x52,0x06},{0x52,0x07},{0x52,0x0e},{0x52,0x16},{0x52,0x17},{0x52,0x1e},{0x52,0x1f},{0x52,0x27},{0x52,0x2f},{0x52,0x37},{0x52,0x3f},{0x52,0x60},{0x52,0x61},{0x52,0xce},{0x52,0xd6},{0x53,0x06},{0x53,0x07},{0x53,0x0e},{0x53,0x16},{0x53,0x17},{0x53,0x1e},{0x53,0x1f},{0x53,0x27},{0x53,0x2f},{0x53,0x37},{0x53,0x3f},{0x53,0x60},{0x53,0x61},{0x53,0xce},{0x53,0xd6},{0x54,0x06},{0x54,0x07},{0x54,0x0e},{0x54,0x16},{0x54,0x17},{0x54,0x1e},{0x54,0x1f},{0x54,0x27},{0x54,0x2f},{0x54,0x37},{0x54,0x3f},{0x54,0x60},{0x54,0x61},{0x54,0xce},{0x54,0xd6},{0x55,0x06},{0x55,0x07},{0x55,0x0e},{0x55,0x16},{0x55,0x17},{0x55,0x1e},{0x55,0x1f},{0x55,0x27},{0x55,0x2f},{0x55,0x37},{0x55,0x3f},{0x55,0x60},{0x55,0x61},{0x55,0xce},{0x55,0xd6},{0x56,0x06},{0x56,0x07},{0x56,0x0e},{0x56,0x16},{0x56,0x17},{0x56,0x1e},{0x56,0x1f},{0x56,0x27},{0x56,0x2f},{0x56,0x37},{0x56,0x3f},{0x56,0x60},{0x56,0x61},{0x56,0xce},{0x56,0xd6},{0x57,0x06},{0x57,0x07},{0x57,0x0e},{0x57,0x16},{0x57,0x17},{0x57,0x1e},{0x57,0x1f},{0x57,0x27},{0x57,0x2f},{0x57,0x37},{0x57,0x3f},{0x57,0x60},{0x57,0x61},{0x57,0xce},{0x57,0xd6},{0x62,0x00},{0x62,0x08},{0x62,0x10},{0x62,0x18},{0x62,0x20},{0x62,0x28},{0x62,0x30},{0x62,0x38},{0x62,0xc0},{0x62,0xc4},{0x62,0xc8},{0x62,0xcc},{0x62,0xd0},{0x62,0xd4},{0x62,0xd8},{0x62,0xdc},{0x62,0xe0},{0x62,0xe4},{0x62,0xe8},{0x62,0xec},{0x62,0xf0},{0x62,0xf4},{0x62,0xf8},{0x62,0xfc},{0x64,0x06},{0x64,0x07},{0x64,0x0e},{0x64,0x16},{0x64,0x17},{0x64,0x1e},{0x64,0x1f},{0x64,0x27},{0x64,0x2f},{0x64,0x37},{0x64,0x3f},{0x64,0x60},{0x64,0x61},{0x64,0xce},{0x64,0xd6},{0x65,0x06},{0x65,0x07},{0x65,0x0e},{0x65,0x16},{0x65,0x17},{0x65,0x1e},{0x65,0x1f},{0x65,0x27},{0x65,0x2f},{0x65,0x37},{0x65,0x3f},{0x65,0x60},{0x65,0x61},{0x65,0xce},{0x65,0xd6},{0x66,0x06},{0x66,0x07},{0x66,0x0e},{0x66,0x16},{0x66,0x17},{0x66,0x1e},{0x66,0x1f},{0x66,0x27},{0x66,0x2f},{0x66,0x37},{0x66,0x3f},{0x66,0x60},{0x66,0x61},{0x66,0xce},{0x66,0xd6},{0x67,0x06},{0x67,0x07},{0x67,0x0e},{0x67,0x16},{0x67,0x17},{0x67,0x1e},{0x67,0x1f},{0x67,0x27},{0x67,0x2f},{0x67,0x37},{0x67,0x3f},{0x67,0x60},{0x67,0x61},{0x67,0xce},{0x67,0xd6},{0x71,0x94},{0x71,0xa4},{0x71,0xac},{0x71,0xb4},{0x71,0xbc},{0x71,0xc4},{0x71,0xcc},{0x71,0xce},{0x71,0xd6},{0x71,0xee},{0x73,0x92},{0x73,0xa2},{0x73,0xaa},{0x73,0xb2},{0x73,0xba},{0x73,0xc2},{0x73,0xca},{0x73,0xce},{0x73,0xd6},{0x73,0xec},{0x75,0x90},{0x75,0xa0},{0x75,0xa8},{0x75,0xb0},{0x75,0xb8},{0x75,0xc0},{0x75,0xc8},{0x75,0xce},{0x75,0xd6},{0x75,0xea},{0x77,0x8e},{0x77,0x9e},{0x77,0xa6},{0x77,0xae},{0x77,0xb6},{0x77,0xbe},{0x77,0xc6},{0x77,0xce},{0x77,0xd6},{0x77,0xe8},{0x79,0x8c},{0x79,0x9c},{0x79,0xa4},{0x79,0xac},{0x79,0xb4},{0x79,0xbc},{0x79,0xc4},{0x79,0xce},{0x79,0xd6},{0x79,0xe6},{0x7a,0x92},{0x7a,0xce},{0x7a,0xd6},{0x7a,0xe4},{0x7b,0x9a},{0x7b,0xb2},{0x7b,0xce},{0x7b,0xe4},{0x7d,0x88},{0x7d,0x98},{0x7d,0xa0},{0x7d,0xa8},{0x7d,0xb0},{0x7d,0xb8},{0x7d,0xc0},{0x7d,0xce},{0x7d,0xd6},{0x7d,0xe2},{0x7f,0x86},{0x7f,0x96},{0x7f,0x9e},{0x7f,0xa6},{0x7f,0xae},{0x7f,0xb6},{0x7f,0xbe},{0x7f,0xce},{0x7f,0xd6},{0x7f,0xe0},{0x8c,0x30},{0x8c,0x31},{0x8c,0x32},{0x8c,0x33},{0x8c,0x36},{0x8c,0x37},{0x8c,0x38},{0x8c,0x39},{0x8c,0x3a},{0x8c,0x3b},{0x8c,0x3e},{0x8c,0x3f},{0x8c,0xf0},{0x8c,0xf1},{0x8c,0xf2},{0x8c,0xf3},{0x8c,0xf4},{0x8c,0xf5},{0x8c,0xf6},{0x8c,0xf7},{0x8c,0xf8},{0x8c,0xf9},{0x8c,0xfa},{0x8c,0xfb},{0x8c,0xfc},{0x8c,0xfd},{0x8c,0xfe},{0x8c,0xff},{0x8d,0xc0},{0x8d,0xc1},{0x8d,0xc2},{0x8d,0xc3},{0x8d,0xc4},{0x8d,0xc5},{0x8d,0xc6},{0x8d,0xc7},{0x8d,0xc8},{0x8d,0xc9},{0x8d,0xca},{0x8d,0xcb},{0x8d,0xcc},{0x8d,0xcd},{0x8d,0xce},{0x8d,0xcf},{0x8d,0xd0},{0x8d,0xd1},{0x8d,0xd2},{0x8d,0xd3},{0x8d,0xd4},{0x8d,0xd5},{0x8d,0xd6},{0x8d,0xd7},{0x8d,0xd8},{0x8d,0xd9},{0x8d,0xda},{0x8d,0xdb},{0x8d,0xdc},{0x8d,0xdd},{0x8d,0xde},{0x8d,0xdf},{0x8d,0xe0},{0x8d,0xe1},{0x8d,0xe2},{0x8d,0xe3},{0x8d,0xe4},{0x8d,0xe5},{0x8d,0xe6},{0x8d,0xe7},{0x8d,0xe8},{0x8d,0xe9},{0x8d,0xea},{0x8d,0xeb},{0x8d,0xec},{0x8d,0xed},{0x8d,0xee},{0x8d,0xef},{0x8d,0xf0},{0x8d,0xf1},{0x8d,0xf2},{0x8d,0xf3},{0x8d,0xf4},{0x8d,0xf5},{0x8d,0xf6},{0x8d,0xf7},{0x8d,0xf8},{0x8d,0xf9},{0x8d,0xfa},{0x8d,0xfb},{0x8d,0xfc},{0x8d,0xfd},{0x8d,0xfe},{0x8d,0xff},{0x8e,0x08},{0x8e,0x09},{0x8e,0x0a},{0x8e,0x0b},{0x8e,0x0e},{0x8e,0x0f},{0x8e,0x30},{0x8e,0x31},{0x8e,0x32},{0x8e,0x33},{0x8e,0x36},{0x8e,0x37},{0x8e,0x38},{0x8e,0x39},{0x8e,0x3a},{0x8e,0x3b},{0x8e,0x3e},{0x8e,0x3f},{0x8e,0xc8},{0x8e,0xc9},{0x8e,0xca},{0x8e,0xcb},{0x8e,0xcc},{0x8e,0xcd},{0x8e,0xce},{0x8e,0xcf},{0x8e,0xf0},{0x8e,0xf1},{0x8e,0xf2},{0x8e,0xf3},{0x8e,0xf4},{0x8e,0xf5},{0x8e,0xf6},{0x8e,0xf7},{0x8e,0xf8},{0x8e,0xf9},{0x8e,0xfa},{0x8e,0xfb},{0x8e,0xfc},{0x8e,0xfd},{0x8e,0xfe},{0x8e,0xff},{0x8f,0x08},{0x8f,0x09},{0x8f,0x0a},{0x8f,0x0b},{0x8f,0x0e},{0x8f,0x0f},{0x8f,0x10},{0x8f,0x11},{0x8f,0x12},{0x8f,0x13},{0x8f,0x16},{0x8f,0x17},{0x8f,0x18},{0x8f,0x19},{0x8f,0x1a},{0x8f,0x1b},{0x8f,0x1e},{0x8f,0x1f},{0x8f,0x20},{0x8f,0x21},{0x8f,0x22},{0x8f,0x23},{0x8f,0x26},{0x8f,0x27},{0x8f,0x28},{0x8f,0x29},{0x8f,0x2a},{0x8f,0x2b},{0x8f,0x2e},{0x8f,0x2f},{0x8f,0x30},{0x8f,0x31},{0x8f,0x32},{0x8f,0x33},{0x8f,0x36},{0x8f,0x37},{0x8f,0x38},{0x8f,0x39},{0x8f,0x3a},{0x8f,0x3b},{0x8f,0x3e},{0x8f,0x3f},{0x8f,0xc8},{0x8f,0xc9},{0x8f,0xca},{0x8f,0xcb},{0x8f,0xcc},{0x8f,0xcd},{0x8f,0xce},{0x8f,0xcf},{0x8f,0xd0},{0x8f,0xd1},{0x8f,0xd2},{0x8f,0xd3},{0x8f,0xd4},{0x8f,0xd5},{0x8f,0xd6},{0x8f,0xd7},{0x8f,0xd8},{0x8f,0xd9},{0x8f,0xda},{0x8f,0xdb},{0x8f,0xdc},{0x8f,0xdd},{0x8f,0xde},{0x8f,0xdf},{0x8f,0xe0},{0x8f,0xe1},{0x8f,0xe2},{0x8f,0xe3},{0x8f,0xe4},{0x8f,0xe5},{0x8f,0xe6},{0x8f,0xe7},{0x8f,0xe8},{0x8f,0xe9},{0x8f,0xea},{0x8f,0xeb},{0x8f,0xec},{0x8f,0xed},{0x8f,0xee},{0x8f,0xef},{0x8f,0xf0},{0x8f,0xf1},{0x8f,0xf2},{0x8f,0xf3},{0x8f,0xf4},{0x8f,0xf5},{0x8f,0xf6},{0x8f,0xf7},{0x8f,0xf8},{0x8f,0xf9},{0x8f,0xfa},{0x8f,0xfb},{0x8f,0xfc},{0x8f,0xfd},{0x8f,0xfe},{0x8f,0xff},{0x90,0x06},{0x90,0x07},{0x90,0x0e},{0x90,0x16},{0x90,0x17},{0x90,0x1e},{0x90,0x1f},{0x90,0x27},{0x90,0x2f},{0x90,0x37},{0x90,0x3f},{0x90,0x60},{0x90,0x61},{0x90,0xce},{0x90,0xd6},{0x91,0x06},{0x91,0x07},{0x91,0x0e},{0x91,0x16},{0x91,0x17},{0x91,0x1e},{0x91,0x1f},{0x91,0x27},{0x91,0x2f},{0x91,0x37},{0x91,0x3f},{0x91,0x60},{0x91,0x61},{0x91,0xce},{0x91,0xd6},{0x92,0x06},{0x92,0x07},{0x92,0x0e},{0x92,0x16},{0x92,0x17},{0x92,0x1e},{0x92,0x1f},{0x92,0x27},{0x92,0x2f},{0x92,0x37},{0x92,0x3f},{0x92,0x60},{0x92,0x61},{0x92,0xce},{0x92,0xd6},{0x93,0x06},{0x93,0x07},{0x93,0x0e},{0x93,0x16},{0x93,0x17},{0x93,0x1e},{0x93,0x1f},{0x93,0x27},{0x93,0x2f},{0x93,0x37},{0x93,0x3f},{0x93,0x60},{0x93,0x61},{0x93,0xce},{0x93,0xd6},{0x95,0x06},{0x95,0x07},{0x95,0x0e},{0x95,0x16},{0x95,0x17},{0x95,0x1e},{0x95,0x1f},{0x95,0x27},{0x95,0x2f},{0x95,0x37},{0x95,0x3f},{0x95,0x60},{0x95,0x61},{0x95,0xce},{0x95,0xd6},{0x96,0x06},{0x96,0x07},{0x96,0x0e},{0x96,0x16},{0x96,0x17},{0x96,0x1e},{0x96,0x1f},{0x96,0x27},{0x96,0x2f},{0x96,0x37},{0x96,0x3f},{0x96,0x60},{0x96,0x61},{0x96,0xce},{0x96,0xd6},{0x97,0x06},{0x97,0x07},{0x97,0x0e},{0x97,0x16},{0x97,0x17},{0x97,0x1e},{0x97,0x1f},{0x97,0x27},{0x97,0x2f},{0x97,0x37},{0x97,0x3f},{0x97,0x60},{0x97,0x61},{0x97,0xce},{0x97,0xd6},{0x98,0x06},{0x98,0x07},{0x98,0x0e},{0x98,0x16},{0x98,0x17},{0x98,0x1e},{0x98,0x1f},{0x98,0x27},{0x98,0x2f},{0x98,0x37},{0x98,0x3f},{0x98,0x60},{0x98,0x61},{0x98,0xce},{0x98,0xd6},{0x99,0x06},{0x99,0x07},{0x99,0x0e},{0x99,0x16},{0x99,0x17},{0x99,0x1e},{0x99,0x1f},{0x99,0x27},{0x99,0x2f},{0x99,0x37},{0x99,0x3f},{0x99,0x60},{0x99,0x61},{0x99,0xce},{0x99,0xd6},{0x9b,0x06},{0x9b,0x07},{0x9b,0x0e},{0x9b,0x16},{0x9b,0x17},{0x9b,0x1e},{0x9b,0x1f},{0x9b,0x27},{0x9b,0x2f},{0x9b,0x37},{0x9b,0x3f},{0x9b,0x60},{0x9b,0x61},{0x9b,0xce},{0x9b,0xd6},{0x9c,0x06},{0x9c,0x07},{0x9c,0x0e},{0x9c,0x16},{0x9c,0x17},{0x9c,0x1e},{0x9c,0x1f},{0x9c,0x27},{0x9c,0x2f},{0x9c,0x37},{0x9c,0x3f},{0x9c,0x60},{0x9c,0x61},{0x9c,0xce},{0x9c,0xd6},{0x9e,0x06},{0x9e,0x07},{0x9e,0x0e},{0x9e,0x16},{0x9e,0x17},{0x9e,0x1e},{0x9e,0x1f},{0x9e,0x27},{0x9e,0x2f},{0x9e,0x37},{0x9e,0x3f},{0x9e,0x60},{0x9e,0x61},{0x9e,0xce},{0x9e,0xd6},{0x9f,0x06},{0x9f,0x07},{0x9f,0x0e},{0x9f,0x16},{0x9f,0x17},{0x9f,0x1e},{0x9f,0x1f},{0x9f,0x27},{0x9f,0x2f},{0x9f,0x37},{0x9f,0x3f},{0x9f,0x60},{0x9f,0x61},{0x9f,0xce},{0x9f,0xd6},{0xac,0x06},{0xac,0x07},{0xac,0x0e},{0xac,0x16},{0xac,0x17},{0xac,0x1e},{0xac,0x1f},{0xac,0x27},{0xac,0x2f},{0xac,0x37},{0xac,0x3f},{0xac,0x60},{0xac,0x61},{0xac,0xce},{0xac,0xd6},{0xad,0x06},{0xad,0x07},{0xad,0x0e},{0xad,0x16},{0xad,0x17},{0xad,0x1e},{0xad,0x1f},{0xad,0x27},{0xad,0x2f},{0xad,0x37},{0xad,0x3f},{0xad,0x60},{0xad,0x61},{0xad,0xce},{0xad,0xd6},{0xc4,0x00},{0xc4,0x08},{0xc4,0x10},{0xc4,0x18},{0xc4,0x20},{0xc4,0x28},{0xc4,0x30},{0xc4,0x38},{0xc4,0xc0},{0xc4,0xc4},{0xc4,0xc8},{0xc4,0xcc},{0xc4,0xd0},{0xc4,0xd4},{0xc4,0xd8},{0xc4,0xdc},{0xc4,0xe0},{0xc4,0xe4},{0xc4,0xe8},{0xc4,0xec},{0xc4,0xf0},{0xc4,0xf4},{0xc4,0xf8},{0xc4,0xfc},{0xd4,0x00},{0xd4,0x01},{0xd4,0x02},{0xd4,0x03},{0xd4,0x04},{0xd4,0x05},{0xd4,0x06},{0xd4,0x07},{0xd4,0x08},{0xd4,0x09},{0xd4,0x0a},{0xd4,0x0b},{0xd4,0x0c},{0xd4,0x0d},{0xd4,0x0e},{0xd4,0x0f},{0xd4,0x10},{0xd4,0x11},{0xd4,0x12},{0xd4,0x13},{0xd4,0x14},{0xd4,0x15},{0xd4,0x16},{0xd4,0x17},{0xd4,0x18},{0xd4,0x19},{0xd4,0x1a},{0xd4,0x1b},{0xd4,0x1c},{0xd4,0x1d},{0xd4,0x1e},{0xd4,0x1f},{0xd4,0x20},{0xd4,0x21},{0xd4,0x22},{0xd4,0x23},{0xd4,0x24},{0xd4,0x25},{0xd4,0x26},{0xd4,0x27},{0xd4,0x28},{0xd4,0x29},{0xd4,0x2a},{0xd4,0x2b},{0xd4,0x2c},{0xd4,0x2d},{0xd4,0x2e},{0xd4,0x2f},{0xd4,0x30},{0xd4,0x31},{0xd4,0x32},{0xd4,0x33},{0xd4,0x34},{0xd4,0x35},{0xd4,0x36},{0xd4,0x37},{0xd4,0x38},{0xd4,0x39},{0xd4,0x3a},{0xd4,0x3b},{0xd4,0x3c},{0xd4,0x3d},{0xd4,0x3e},{0xd4,0x3f},{0xd4,0x40},{0xd4,0x41},{0xd4,0x42},{0xd4,0x43},{0xd4,0x44},{0xd4,0x45},{0xd4,0x46},{0xd4,0x47},{0xd4,0x48},{0xd4,0x49},{0xd4,0x4a},{0xd4,0x4b},{0xd4,0x4c},{0xd4,0x4d},{0xd4,0x4e},{0xd4,0x4f},{0xd4,0x50},{0xd4,0x51},{0xd4,0x52},{0xd4,0x53},{0xd4,0x54},{0xd4,0x55},{0xd4,0x56},{0xd4,0x57},{0xd4,0x58},{0xd4,0x59},{0xd4,0x5a},{0xd4,0x5b},{0xd4,0x5c},{0xd4,0x5d},{0xd4,0x5e},{0xd4,0x5f},{0xd4,0x60},{0xd4,0x61},{0xd4,0x62},{0xd4,0x63},{0xd4,0x64},{0xd4,0x65},{0xd4,0x66},{0xd4,0x67},{0xd4,0x68},{0xd4,0x69},{0xd4,0x6a},{0xd4,0x6b},{0xd4,0x6c},{0xd4,0x6d},{0xd4,0x6e},{0xd4,0x6f},{0xd4,0x70},{0xd4,0x71},{0xd4,0x72},{0xd4,0x73},{0xd4,0x74},{0xd4,0x75},{0xd4,0x76},{0xd4,0x77},{0xd4,0x78},{0xd4,0x79},{0xd4,0x7a},{0xd4,0x7b},{0xd4,0x7c},{0xd4,0x7d},{0xd4,0x7e},{0xd4,0x7f},{0xd4,0x80},{0xd4,0x81},{0xd4,0x82},{0xd4,0x83},{0xd4,0x84},{0xd4,0x85},{0xd4,0x86},{0xd4,0x87},{0xd4,0x88},{0xd4,0x89},{0xd4,0x8a},{0xd4,0x8b},{0xd4,0x8c},{0xd4,0x8d},{0xd4,0x8e},{0xd4,0x8f},{0xd4,0x90},{0xd4,0x91},{0xd4,0x92},{0xd4,0x93},{0xd4,0x94},{0xd4,0x95},{0xd4,0x96},{0xd4,0x97},{0xd4,0x98},{0xd4,0x99},{0xd4,0x9a},{0xd4,0x9b},{0xd4,0x9c},{0xd4,0x9d},{0xd4,0x9e},{0xd4,0x9f},{0xd4,0xa0},{0xd4,0xa1},{0xd4,0xa2},{0xd4,0xa3},{0xd4,0xa4},{0xd4,0xa5},{0xd4,0xa6},{0xd4,0xa7},{0xd4,0xa8},{0xd4,0xa9},{0xd4,0xaa},{0xd4,0xab},{0xd4,0xac},{0xd4,0xad},{0xd4,0xae},{0xd4,0xaf},{0xd4,0xb0},{0xd4,0xb1},{0xd4,0xb2},{0xd4,0xb3},{0xd4,0xb4},{0xd4,0xb5},{0xd4,0xb6},{0xd4,0xb7},{0xd4,0xb8},{0xd4,0xb9},{0xd4,0xba},{0xd4,0xbb},{0xd4,0xbc},{0xd4,0xbd},{0xd4,0xbe},{0xd4,0xbf},{0xd4,0xc0},{0xd4,0xc1},{0xd4,0xc2},{0xd4,0xc3},{0xd4,0xc4},{0xd4,0xc5},{0xd4,0xc6},{0xd4,0xc7},{0xd4,0xc8},{0xd4,0xc9},{0xd4,0xca},{0xd4,0xcb},{0xd4,0xcc},{0xd4,0xcd},{0xd4,0xce},{0xd4,0xcf},{0xd4,0xd0},{0xd4,0xd1},{0xd4,0xd2},{0xd4,0xd3},{0xd4,0xd4},{0xd4,0xd5},{0xd4,0xd6},{0xd4,0xd7},{0xd4,0xd8},{0xd4,0xd9},{0xd4,0xda},{0xd4,0xdb},{0xd4,0xdc},{0xd4,0xdd},{0xd4,0xde},{0xd4,0xdf},{0xd4,0xe0},{0xd4,0xe1},{0xd4,0xe2},{0xd4,0xe3},{0xd4,0xe4},{0xd4,0xe5},{0xd4,0xe6},{0xd4,0xe7},{0xd4,0xe8},{0xd4,0xe9},{0xd4,0xea},{0xd4,0xeb},{0xd4,0xec},{0xd4,0xed},{0xd4,0xee},{0xd4,0xef},{0xd4,0xf0},{0xd4,0xf1},{0xd4,0xf2},{0xd4,0xf3},{0xd4,0xf4},{0xd4,0xf5},{0xd4,0xf6},{0xd4,0xf7},{0xd4,0xf8},{0xd4,0xf9},{0xd4,0xfa},{0xd4,0xfb},{0xd4,0xfc},{0xd4,0xfd},{0xd4,0xfe},{0xd4,0xff},{0xd5,0x00},{0xd5,0x01},{0xd5,0x02},{0xd5,0x03},{0xd5,0x04},{0xd5,0x05},{0xd5,0x06},{0xd5,0x07},{0xd5,0x08},{0xd5,0x09},{0xd5,0x0a},{0xd5,0x0b},{0xd5,0x0c},{0xd5,0x0d},{0xd5,0x0e},{0xd5,0x0f},{0xd5,0x10},{0xd5,0x11},{0xd5,0x12},{0xd5,0x13},{0xd5,0x14},{0xd5,0x15},{0xd5,0x16},{0xd5,0x17},{0xd5,0x18},{0xd5,0x19},{0xd5,0x1a},{0xd5,0x1b},{0xd5,0x1c},{0xd5,0x1d},{0xd5,0x1e},{0xd5,0x1f},{0xd5,0x20},{0xd5,0x21},{0xd5,0x22},{0xd5,0x23},{0xd5,0x24},{0xd5,0x25},{0xd5,0x26},{0xd5,0x27},{0xd5,0x28},{0xd5,0x29},{0xd5,0x2a},{0xd5,0x2b},{0xd5,0x2c},{0xd5,0x2d},{0xd5,0x2e},{0xd5,0x2f},{0xd5,0x30},{0xd5,0x31},{0xd5,0x32},{0xd5,0x33},{0xd5,0x34},{0xd5,0x35},{0xd5,0x36},{0xd5,0x37},{0xd5,0x38},{0xd5,0x39},{0xd5,0x3a},{0xd5,0x3b},{0xd5,0x3c},{0xd5,0x3d},{0xd5,0x3e},{0xd5,0x3f},{0xd5,0x40},{0xd5,0x41},{0xd5,0x42},{0xd5,0x43},{0xd5,0x44},{0xd5,0x45},{0xd5,0x46},{0xd5,0x47},{0xd5,0x48},{0xd5,0x49},{0xd5,0x4a},{0xd5,0x4b},{0xd5,0x4c},{0xd5,0x4d},{0xd5,0x4e},{0xd5,0x4f},{0xd5,0x50},{0xd5,0x51},{0xd5,0x52},{0xd5,0x53},{0xd5,0x54},{0xd5,0x55},{0xd5,0x56},{0xd5,0x57},{0xd5,0x58},{0xd5,0x59},{0xd5,0x5a},{0xd5,0x5b},{0xd5,0x5c},{0xd5,0x5d},{0xd5,0x5e},{0xd5,0x5f},{0xd5,0x60},{0xd5,0x61},{0xd5,0x62},{0xd5,0x63},{0xd5,0x64},{0xd5,0x65},{0xd5,0x66},{0xd5,0x67},{0xd5,0x68},{0xd5,0x69},{0xd5,0x6a},{0xd5,0x6b},{0xd5,0x6c},{0xd5,0x6d},{0xd5,0x6e},{0xd5,0x6f},{0xd5,0x70},{0xd5,0x71},{0xd5,0x72},{0xd5,0x73},{0xd5,0x74},{0xd5,0x75},{0xd5,0x76},{0xd5,0x77},{0xd5,0x78},{0xd5,0x79},{0xd5,0x7a},{0xd5,0x7b},{0xd5,0x7c},{0xd5,0x7d},{0xd5,0x7e},{0xd5,0x7f},{0xd5,0x80},{0xd5,0x81},{0xd5,0x82},{0xd5,0x83},{0xd5,0x84},{0xd5,0x85},{0xd5,0x86},{0xd5,0x87},{0xd5,0x88},{0xd5,0x89},{0xd5,0x8a},{0xd5,0x8b},{0xd5,0x8c},{0xd5,0x8d},{0xd5,0x8e},{0xd5,0x8f},{0xd5,0x90},{0xd5,0x91},{0xd5,0x92},{0xd5,0x93},{0xd5,0x94},{0xd5,0x95},{0xd5,0x96},{0xd5,0x97},{0xd5,0x98},{0xd5,0x99},{0xd5,0x9a},{0xd5,0x9b},{0xd5,0x9c},{0xd5,0x9d},{0xd5,0x9e},{0xd5,0x9f},{0xd5,0xa0},{0xd5,0xa1},{0xd5,0xa2},{0xd5,0xa3},{0xd5,0xa4},{0xd5,0xa5},{0xd5,0xa6},{0xd5,0xa7},{0xd5,0xa8},{0xd5,0xa9},{0xd5,0xaa},{0xd5,0xab},{0xd5,0xac},{0xd5,0xad},{0xd5,0xae},{0xd5,0xaf},{0xd5,0xb0},{0xd5,0xb1},{0xd5,0xb2},{0xd5,0xb3},{0xd5,0xb4},{0xd5,0xb5},{0xd5,0xb6},{0xd5,0xb7},{0xd5,0xb8},{0xd5,0xb9},{0xd5,0xba},{0xd5,0xbb},{0xd5,0xbc},{0xd5,0xbd},{0xd5,0xbe},{0xd5,0xbf},{0xd5,0xc0},{0xd5,0xc1},{0xd5,0xc2},{0xd5,0xc3},{0xd5,0xc4},{0xd5,0xc5},{0xd5,0xc6},{0xd5,0xc7},{0xd5,0xc8},{0xd5,0xc9},{0xd5,0xca},{0xd5,0xcb},{0xd5,0xcc},{0xd5,0xcd},{0xd5,0xce},{0xd5,0xcf},{0xd5,0xd0},{0xd5,0xd1},{0xd5,0xd2},{0xd5,0xd3},{0xd5,0xd4},{0xd5,0xd5},{0xd5,0xd6},{0xd5,0xd7},{0xd5,0xd8},{0xd5,0xd9},{0xd5,0xda},{0xd5,0xdb},{0xd5,0xdc},{0xd5,0xdd},{0xd5,0xde},{0xd5,0xdf},{0xd5,0xe0},{0xd5,0xe1},{0xd5,0xe2},{0xd5,0xe3},{0xd5,0xe4},{0xd5,0xe5},{0xd5,0xe6},{0xd5,0xe7},{0xd5,0xe8},{0xd5,0xe9},{0xd5,0xea},{0xd5,0xeb},{0xd5,0xec},{0xd5,0xed},{0xd5,0xee},{0xd5,0xef},{0xd5,0xf0},{0xd5,0xf1},{0xd5,0xf2},{0xd5,0xf3},{0xd5,0xf4},{0xd5,0xf5},{0xd5,0xf6},{0xd5,0xf7},{0xd5,0xf8},{0xd5,0xf9},{0xd5,0xfa},{0xd5,0xfb},{0xd5,0xfc},{0xd5,0xfd},{0xd5,0xfe},{0xd5,0xff},{0xd9,0x08},{0xd9,0x09},{0xd9,0x0a},{0xd9,0x0b},{0xd9,0x0e},{0xd9,0x0f},{0xd9,0xd1},{0xd9,0xd2},{0xd9,0xd3},{0xd9,0xd4},{0xd9,0xd5},{0xd9,0xd6},{0xd9,0xd7},{0xd9,0xe2},{0xd9,0xe3},{0xd9,0xe6},{0xd9,0xe7},{0xd9,0xef},{0xda,0xe0},{0xda,0xe1},{0xda,0xe2},{0xda,0xe3},{0xda,0xe4},{0xda,0xe5},{0xda,0xe6},{0xda,0xe7},{0xda,0xe8},{0xda,0xea},{0xda,0xeb},{0xda,0xec},{0xda,0xed},{0xda,0xee},{0xda,0xef},{0xda,0xf0},{0xda,0xf1},{0xda,0xf2},{0xda,0xf3},{0xda,0xf4},{0xda,0xf5},{0xda,0xf6},{0xda,0xf7},{0xda,0xf8},{0xda,0xf9},{0xda,0xfa},{0xda,0xfb},{0xda,0xfc},{0xda,0xfd},{0xda,0xfe},{0xda,0xff},{0xdb,0x20},{0xdb,0x21},{0xdb,0x22},{0xdb,0x23},{0xdb,0x26},{0xdb,0x27},{0xdb,0x30},{0xdb,0x31},{0xdb,0x32},{0xdb,0x33},{0xdb,0x36},{0xdb,0x37},{0xdb,0xe5},{0xdb,0xe6},{0xdb,0xe7},{0xdb,0xf8},{0xdb,0xf9},{0xdb,0xfa},{0xdb,0xfb},{0xdb,0xfc},{0xdb,0xfd},{0xdb,0xfe},{0xdb,0xff},{0xdd,0x28},{0xdd,0x29},{0xdd,0x2a},{0xdd,0x2b},{0xdd,0x2e},{0xdd,0x2f},{0xdd,0xf0},{0xdd,0xf1},{0xdd,0xf2},{0xdd,0xf3},{0xdd,0xf4},{0xdd,0xf5},{0xdd,0xf6},{0xdd,0xf7},{0xdd,0xf8},{0xdd,0xf9},{0xdd,0xfa},{0xdd,0xfb},{0xdd,0xfc},{0xdd,0xfd},{0xdd,0xfe},{0xdd,0xff},{0xde,0xd8},{0xde,0xda},{0xde,0xdb},{0xde,0xdc},{0xde,0xdd},{0xde,0xde},{0xde,0xdf},{0xdf,0xe1},{0xdf,0xe2},{0xdf,0xe3},{0xdf,0xe4},{0xdf,0xe5},{0xdf,0xe6},{0xdf,0xe7},{0xdf,0xf8},{0xdf,0xf9},{0xdf,0xfa},{0xdf,0xfb},{0xdf,0xfc},{0xdf,0xfd},{0xdf,0xfe},{0xdf,0xff},{0xe0,0xec},{0xe0,0xf2},{0xe0,0xf4},{0xe0,0xf8},{0xe2,0xe0},{0xe2,0xea},{0xe2,0xf0},{0xe2,0xf2},{0xe2,0xf6},{0xeb,0x8c},{0xeb,0xe8},{0xeb,0xf0},{0xf0,0x06},{0xf0,0x07},{0xf0,0x0e},{0xf0,0x16},{0xf0,0x17},{0xf0,0x1e},{0xf0,0x1f},{0xf0,0x27},{0xf0,0x2f},{0xf0,0x37},{0xf0,0x3f},{0xf0,0x50},{0xf0,0x51},{0xf0,0x52},{0xf0,0x53},{0xf0,0x54},{0xf0,0x55},{0xf0,0x56},{0xf0,0x57},{0xf0,0x58},{0xf0,0x59},{0xf0,0x5a},{0xf0,0x5b},{0xf0,0x5c},{0xf0,0x5d},{0xf0,0x5e},{0xf0,0x5f},{0xf0,0x60},{0xf0,0x61},{0xf0,0x90},{0xf0,0x91},{0xf0,0x92},{0xf0,0x93},{0xf0,0x94},{0xf0,0x95},{0xf0,0x96},{0xf0,0x97},{0xf0,0x98},{0xf0,0x99},{0xf0,0x9b},{0xf0,0x9c},{0xf0,0x9d},{0xf0,0x9e},{0xf0,0x9f},{0xf0,0xa4},{0xf0,0xa5},{0xf0,0xa6},{0xf0,0xa7},{0xf0,0xaa},{0xf0,0xab},{0xf0,0xac},{0xf0,0xad},{0xf0,0xae},{0xf0,0xaf},{0xf0,0xc3},{0xf0,0xc9},{0xf0,0xcb},{0xf0,0xcc},{0xf0,0xce},{0xf0,0xcf},{0xf0,0xd6},{0xf0,0xd7},{0xf0,0xf1},{0xf0,0xf5},{0xf0,0xf8},{0xf0,0xf9},{0xf0,0xfc},{0xf0,0xfd},{0xf2,0x06},{0xf2,0x07},{0xf2,0x0e},{0xf2,0x16},{0xf2,0x17},{0xf2,0x1e},{0xf2,0x1f},{0xf2,0x27},{0xf2,0x2f},{0xf2,0x37},{0xf2,0x3f},{0xf2,0x60},{0xf2,0x61},{0xf2,0xce},{0xf2,0xd6},{0xf3,0x06},{0xf3,0x07},{0xf3,0x0e},{0xf3,0x16},{0xf3,0x17},{0xf3,0x1e},{0xf3,0x1f},{0xf3,0x27},{0xf3,0x2f},{0xf3,0x37},{0xf3,0x3f},{0xf3,0x60},{0xf3,0x61},{0xf3,0xce},{0xf3,0xd6},{0xf5,0x06},{0xf5,0x07},{0xf5,0x0e},{0xf5,0x16},{0xf5,0x17},{0xf5,0x1e},{0xf5,0x1f},{0xf5,0x27},{0xf5,0x2f},{0xf5,0x37},{0xf5,0x3f},{0xf5,0x60},{0xf5,0x61},{0xf5,0xce},{0xf5,0xd6},{0xf8,0x06},{0xf8,0x07},{0xf8,0x0e},{0xf8,0x16},{0xf8,0x17},{0xf8,0x1e},{0xf8,0x1f},{0xf8,0x27},{0xf8,0x2f},{0xf8,0x37},{0xf8,0x3f},{0xf8,0x60},{0xf8,0x61},{0xf8,0xce},{0xf8,0xd6},{0xf9,0x06},{0xf9,0x07},{0xf9,0x0e},{0xf9,0x16},{0xf9,0x17},{0xf9,0x1e},{0xf9,0x1f},{0xf9,0x27},{0xf9,0x2f},{0xf9,0x37},{0xf9,0x3f},{0xf9,0x60},{0xf9,0x61},{0xf9,0xce},{0xf9,0xd6},{0xfc,0x06},{0xfc,0x07},{0xfc,0x0e},{0xfc,0x16},{0xfc,0x17},{0xfc,0x1e},{0xfc,0x1f},{0xfc,0x27},{0xfc,0x2f},{0xfc,0x37},{0xfc,0x3f},{0xfc,0x60},{0xfc,0x61},{0xfc,0xce},{0xfc,0xd6},{0xfd,0x06},{0xfd,0x07},{0xfd,0x0e},{0xfd,0x16},{0xfd,0x17},{0xfd,0x1e},{0xfd,0x1f},{0xfd,0x27},{0xfd,0x2f},{0xfd,0x37},{0xfd,0x3f},{0xfd,0x60},{0xfd,0x61},{0xfd,0xce},{0xfd,0xd6},{0xfe,0x10},{0xfe,0x11},{0xfe,0x12},{0xfe,0x13},{0xfe,0x16},{0xfe,0x17},{0xfe,0x18},{0xfe,0x19},{0xfe,0x1a},{0xfe,0x1b},{0xfe,0x1e},{0xfe,0x1f},{0xfe,0x20},{0xfe,0x21},{0xfe,0x22},{0xfe,0x23},{0xfe,0x26},{0xfe,0x27},{0xfe,0x28},{0xfe,0x29},{0xfe,0x2a},{0xfe,0x2b},{0xfe,0x2e},{0xfe,0x2f},{0xfe,0x30},{0xfe,0x31},{0xfe,0x32},{0xfe,0x33},{0xfe,0x36},{0xfe,0x37},{0xfe,0x38},{0xfe,0x39},{0xfe,0x3a},{0xfe,0x3b},{0xfe,0x3e},{0xfe,0x3f},{0xfe,0xd0},{0xfe,0xd1},{0xfe,0xd2},{0xfe,0xd3},{0xfe,0xd4},{0xfe,0xd5},{0xfe,0xd6},{0xfe,0xd7},{0xfe,0xd8},{0xfe,0xd9},{0xfe,0xda},{0xfe,0xdb},{0xfe,0xdc},{0xfe,0xdd},{0xfe,0xde},{0xfe,0xdf},{0xfe,0xe0},{0xfe,0xe1},{0xfe,0xe2},{0xfe,0xe3},{0xfe,0xe4},{0xfe,0xe5},{0xfe,0xe6},{0xfe,0xe7},{0xfe,0xe8},{0xfe,0xe9},{0xfe,0xea},{0xfe,0xeb},{0xfe,0xec},{0xfe,0xed},{0xfe,0xee},{0xfe,0xef},{0xfe,0xf0},{0xfe,0xf1},{0xfe,0xf2},{0xfe,0xf3},{0xfe,0xf4},{0xfe,0xf5},{0xfe,0xf6},{0xfe,0xf7},{0xfe,0xf8},{0xfe,0xf9},{0xfe,0xfa},{0xfe,0xfb},{0xfe,0xfc},{0xfe,0xfd},{0xfe,0xfe},{0xfe,0xff},{0xff,0x38},{0xff,0x39},{0xff,0x3a},{0xff,0x3b},{0xff,0x3e},{0xff,0x3f},{0xff,0xd8},{0xff,0xd9},{0xff,0xda},{0xff,0xdb},{0xff,0xdc},{0xff,0xdd},{0xff,0xde},{0xff,0xdf},{0xff,0xe8},{0xff,0xe9},{0xff,0xea},{0xff,0xeb},{0xff,0xec},{0xff,0xed},{0xff,0xee},{0xff,0xef},{0xff,0xf8},{0xff,0xf9},{0xff,0xfa},{0xff,0xfb},{0xff,0xfc},{0xff,0xfd},{0xff,0xfe},{0xff,0xff} };

bool exists_in_illegal_single(int target)
{
    int sizeIllegalSingle = sizeof(IllegalSingleByteOpcodes) / sizeof(IllegalSingleByteOpcodes[0]);

    for (size_t i = 0; i < sizeIllegalSingle; i++) {
        if (IllegalSingleByteOpcodes[i] == target) {
            return true;
        }
    }
    return false;
}

bool exists_in_illegal_double(int target1, int target2)
{
    int sizeIllegalDouble = sizeof(IllegalDoubleByteOpcodes) / sizeof(IllegalDoubleByteOpcodes[0]);

    for (size_t i = 0; i < sizeIllegalDouble; i++) {
        if (IllegalDoubleByteOpcodes[i][0] == target1 && IllegalDoubleByteOpcodes[i][1] == target2) {
            return true;
        }
    }
    return false;
}


int main()
{
    for (int i = 0; i <= 255; i++)
    {
        if (exists_in_illegal_single(i))
        {
            printf("\nSkipping Illegal Opcode 0x%02x ...\n", i);
            continue;
        }

        printf("\nChecking Opcode 0x%02x ...\n", i);

        for (int j = 0; j <= 255; j++)
        {
            if (exists_in_illegal_double(i, j))
            {
                printf("\nSkipping Illegal Opcodes 0x%02x 0x%02x ...\n", i, j);
                continue;
            }

            printf("\nChecking Opcodes 0x%02x 0x%02x ...\n", i, j);

            for (int k = 0; k <= 255; k++)
            {
                STARTUPINFO si;
                PROCESS_INFORMATION pi;

                ZeroMemory(&si, sizeof(si));
                si.cb = sizeof(si);
                ZeroMemory(&pi, sizeof(pi));

                char cmdline[256];
                sprintf(cmdline, "IllegalOpcodes.exe %d %d %d", i, j, k);

                if (!CreateProcess(NULL, cmdline, NULL, NULL, FALSE, 0, NULL, NULL, &si, &pi))
                {
                    printf("CreateProcess failed (%d).\n", GetLastError());
                    return 1;
                }

                if (WaitForSingleObject(pi.hProcess, 1000) != WAIT_OBJECT_0)
                {
                    TerminateProcess(pi.hProcess, 0);
                }

                CloseHandle(pi.hProcess);
                CloseHandle(pi.hThread);
            }
        }
    }

    return 0;
}


------------------- IllegalOpcodes.cpp -------------------


#include <windows.h>
#include <stdio.h>
 
int main(int argc, char* argv[])
{
    int opcode1 = atoi(argv[1]);
    int opcode2 = atoi(argv[2]);
    int opcode3 = atoi(argv[3]);
 
    LPVOID mem = VirtualAlloc(NULL, 3, MEM_COMMIT | MEM_RESERVE, PAGE_EXECUTE_READWRITE);
    DWORD oldProtect = VirtualProtect(mem, 3, PAGE_EXECUTE_READWRITE, &oldProtect);
 
    // Write three byte opcodes at the 4K page end.
    *((unsigned char*)mem + 0xFFD) = opcode1;
    *((unsigned char*)mem + 0xFFE) = opcode2;
    *((unsigned char*)mem + 0xFFF) = opcode3;
 
    __try
    {
        // Execute opcodes...
        ((void(*)())((unsigned char*)mem + 0xFFD))();
    }
    __except (EXCEPTION_EXECUTE_HANDLER)
    {
        if (GetExceptionCode() == EXCEPTION_ILLEGAL_INSTRUCTION)
        {
            printf(" 0x%02x,0x%02x,0x%02x ", opcode1, opcode2, opcode3);
        }
    }
 
    VirtualFree(mem, 0, MEM_RELEASE);
 
    return 0;
}
