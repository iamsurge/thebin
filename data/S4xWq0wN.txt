海阔视界规则分享，当前分享的是：二级页面详情￥page_detail￥黯夜守护者粤语@@{"data":"{\"associatedModelsMapForJoinTable\":{},\"associatedModelsMapWithFK\":{},\"associatedModelsMapWithoutFK\":{},\"fieldsToSetToDefault\":[],\"id\":0,\"last_chapter_rule\":\"js:\\nvar chp = [];\\ntry {\\n    var html = getResCode();\\n    var conts = parseDomForArray(html, 'body&&.stui-content__playlist');\\n    for (var i = 0; i < conts.length; i++) {\\n        var list = pdfa(conts[i], 'body&&li');\\n        chp.push(list.length);\\n    }     \\n} catch (e) {}\\nsetResult('更新至:' + (Math.max.apply(null, chp)));\",\"listToClearAssociatedFK\":[],\"listToClearSelfFK\":[],\"pageList\":[{\"col_type\":\"movie_3\",\"name\":\"动态分类\",\"path\":\"dt\",\"rule\":\"const empty = \\\"hiker://empty\\\"\\n\\ntry {\\n    var categories = pdfa(html, 大类定位).concat(pdfa(html, 拼接分类))\\n} catch (e) {\\n    var categories = pdfa(html, 大类定位)\\n}\\n\\nlet init_cate = []\\n\\nfor (let i = 0; i < 20; i++) {\\n    init_cate.push(\\\"0\\\")\\n}\\n\\nconst fold = getVar(MY_RULE.group, \\\"0\\\")\\nconst cate_temp_json = getVar(MY_RULE.title, JSON.stringify(init_cate))\\nconst cate_temp = JSON.parse(cate_temp_json)\\n\\nif (parseInt(page) === 1) {\\n    d.push({\\n        title: fold === '1' ? '““””<b><span style=\\\"color: #19B89D\\\">: (</span></b>' : '““””<b><span style=\\\"color: #910113\\\">: )</span></b>',\\n        url: $().lazyRule((fold) => {\\n            putVar(MY_RULE.group, fold === '1' ? '0' : '1');\\n            refreshPage(false);\\n            return \\\"hiker://empty\\\"\\n        }, fold),\\n        col_type: 'scroll_button',\\n    })\\n\\ncategories.forEach((category, index) => {\\n        let sub_categories = pdfa(category, 小类定位);\\n        if (index === 0) {\\n            sub_categories.forEach((item, key) => {\\n                let title = pdfh(item, 分类标题)\\n                d.push({\\n                    title: key.toString() === cate_temp[index] ? '““””<b><span style=\\\"color: ' + 分类颜色 + '\\\">' + title + '</span></b>' : title,\\n                    url: $(pd(item, 分类链接) + '#noLoading#').lazyRule((params) => {\\n                        let new_cate = []\\n                        params.cate_temp.forEach((cate, index) => {\\n                            new_cate.push(index === 0 ? params.key.toString() : \\\"0\\\")\\n                        })\\n                        putVar(MY_RULE.title, JSON.stringify(new_cate))\\n                        putVar(MY_RULE.url, input)\\n                        refreshPage(true)\\n                        return \\\"hiker://empty\\\"\\n                    }, {\\n                        cate_temp: cate_temp,\\n                        key: key,\\n                        page: page,\\n                    }),\\n                    col_type: 'scroll_button',\\n                })\\n            })\\n            d.push({\\n                col_type: \\\"blank_block\\\"\\n            });\\n        } else if (fold === '1') {\\n            sub_categories.forEach((item, key) => {\\n                let title = pdfh(item, 分类标题)\\n                d.push({\\n                    title: key.toString() === cate_temp[index] ? '““””<b><span style=\\\"color: ' + 分类颜色 + '\\\">' + title + '</span></b>' : title,\\n                    url: $(pd(item, 分类链接) + '#noLoading#').lazyRule((params) => {\\n                        params.cate_temp[params.index] = params.key.toString()\\n\\n                        putVar(MY_RULE.title, JSON.stringify(params.cate_temp))\\n                        putVar(MY_RULE.url, input)\\n                        refreshPage(true)\\n                        return \\\"hiker://empty\\\"\\n                    }, {\\n                        cate_temp: cate_temp,\\n                        index: index,\\n                        key: key,\\n                        page: page,\\n                    }),\\n                    col_type: 'scroll_button',\\n                })\\n            })\\n            d.push({\\n                col_type: \\\"blank_block\\\"\\n            });\\n        }\\n    })\\n}\\n\"},{\"col_type\":\"movie_3\",\"name\":\"动态解析\",\"path\":\"lazy\",\"rule\":\"var lazy = $(\\\"\\\").lazyRule(() => {\\nrequireCache('https://code.aliyun.com/lzk23559/PublicRule/raw/master/x5rule.js', 24);\\n    return x5rule(input, input);\\n});\"}],\"saved\":false,\"title\":\"万能影视♔\",\"version\":0,\"url\":\"https://wap.wnvod.net/voddetail/229426.html#immersiveTheme#;get;UTF-8;{User-Agent@Mozilla/5.0 (Windows NT 10.0；； Win64；； x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36}\",\"col_type\":\"movie_1\",\"find_rule\":\"js:\\nvar d = [];\\nvar html = getResCode();\\n\\neval(JSON.parse(request('hiker://page/lazy')).rule);\\n\\nvar arts = parseDomForArray(html,'.nav-tabs&&li');\\nvar tabs = [];\\nfor (var i in arts) {\\n    tabs.push(parseDomForHtml(arts[i], 'a&&Text'))\\n}\\n\\nvar conts = parseDomForArray(html, 'body&&.myui-content__list');\\nvar lists =[];\\nfor (var i in conts) {\\n    lists.push(parseDomForArray(conts[i], 'body&&a'))\\n}\\n\\n\\nd.push({\\n        title: \\\"\\\"+ parseDomForHtml(html, '.data,1&&Text').substring(0, 14) + '\\\\n' + parseDomForHtml(html, '.data,2&&Text').substring(0, 15) + '\\\\n' + parseDomForHtml(html, '.data,3&&Text').substring(0, 15),\\n\\n desc:  parseDomForHtml(html, '.data&&Text').substring(0, 33),\\n\\n\\n    pic_url:parseDom(getResCode(), '.lazyload&&data-original'),\\n\\n\\turl: getUrl(),\\n\\t col_type: 'movie_1_vertical_pic_blur',\\n    extra:{gradient: true}\\n});\\n\\nvar des_desc = parseDomForHtml(html, '.data,4&&Text');\\n\\nd.push({\\n        title: '‘‘’’<small>简介:<font color=\\\"#808080\\\" >' + des_desc.substr(0, 70) + '...</font><small><font color=\\\"#ff5f00\\\">详情</font></small></small>',\\n       url: 'hiker://empty#' + des_desc + `@rule=js:var res = {}; var d = [];d.push({title:MY_URL.split('hiker://empty#')[1],col_type: 'long_text'});res.data = d; setHomeResult(res);`,\\n       col_type: 'text_1'\\n   });\\n\\nfunction setTabs(tabs, vari) {\\n\\n\\nd.push({\\n        col_type: 'big_blank_block'\\n    })\\n    for (var i = 0; i < tabs.length; i++) {\\n\\n        d.push({\\n            title: getVar(vari, '0') == i ? '““' + tabs[i] + '””' : tabs[i],\\n            url: \\\"#noLoading#@lazyRule=.js:putVar('\\\" + vari + \\\"', '\\\" + i + \\\"');refreshPage(false);'toast://切换成功！';'#noHistory#hiker://empty'\\\",\\n            col_type: tabs.length > 3? 'scroll_button' : 'text_3'\\n        })\\n    }\\n    \\n}\\nfunction setLists(lists, index) {\\n        d.push({\\n            title: '‘‘选集’’',\\n            url: `#noLoading#@lazyRule=.js:let conf = getVar('shsort');if(conf=='1'){putVar({key:'shsort', value:'0'});}else{putVar({key:'shsort', value:'1'})};refreshPage();'toast://切换排序成功'`,\\n            col_type: 'text_center_1'\\n        })\\n        var list = lists[index];\\n\\nif (getVar('shsort') == '1') {\\n          try{  for (var j = list.length - 1; j >= 0; j--) {             \\nd.push({\\n                title: parseDomForHtml(list[j], 'a&&Text').replace(/第(\\\\d+)[集 话 季]/,'$1'),\\n                url: parseDom(list[j], 'a&&href') + lazy,\\n                col_type: list.length > 3 ? 'text_4' : 'text_2'\\n                });\\n}}catch(e){\\nd.push({\\ntitle:'没有选集哟，不信点图片去看看👀',\\ncol_type: 'text_center_1'\\n});\\n    }\\n            \\n        } else {\\n         try{   for (var j = 0; j < list.length; j++) {\\n                d.push({\\n                title: parseDomForHtml(list[j], 'a&&Text').replace(/第(\\\\d+)[集 话 季]/,'$1'),\\n                url: parseDom(list[j], 'a&&href') + lazy,\\n                col_type: list.length > 3? 'text_4' : 'text_2'\\n                });\\n}}catch(e){\\nd.push({\\ntitle:'没有选集哟，不信点图片去看看👀',\\ncol_type: 'text_center_1'\\n});\\n    }\\n            \\n        }\\n    }\\nsetTabs(tabs, MY_URL);\\nsetLists(lists, getVar(MY_URL, '0'));\\n\\nd.push({title: '<br>', col_type: 'rich_text'});\\nsetResult(d);\",\"group\":\"@珍藏\",\"ua\":\"pc\",\"preRule\":\"\",\"pages\":\"[{\\\"col_type\\\":\\\"movie_3\\\",\\\"name\\\":\\\"动态分类\\\",\\\"path\\\":\\\"dt\\\",\\\"rule\\\":\\\"const empty = \\\\\\\"hiker://empty\\\\\\\"\\\\n\\\\ntry {\\\\n    var categories = pdfa(html, 大类定位).concat(pdfa(html, 拼接分类))\\\\n} catch (e) {\\\\n    var categories = pdfa(html, 大类定位)\\\\n}\\\\n\\\\nlet init_cate = []\\\\n\\\\nfor (let i = 0; i < 20; i++) {\\\\n    init_cate.push(\\\\\\\"0\\\\\\\")\\\\n}\\\\n\\\\nconst fold = getVar(MY_RULE.group, \\\\\\\"0\\\\\\\")\\\\nconst cate_temp_json = getVar(MY_RULE.title, JSON.stringify(init_cate))\\\\nconst cate_temp = JSON.parse(cate_temp_json)\\\\n\\\\nif (parseInt(page) === 1) {\\\\n    d.push({\\\\n        title: fold === '1' ? '““””<b><span style=\\\\\\\"color: #19B89D\\\\\\\">: (</span></b>' : '““””<b><span style=\\\\\\\"color: #910113\\\\\\\">: )</span></b>',\\\\n        url: $().lazyRule((fold) => {\\\\n            putVar(MY_RULE.group, fold === '1' ? '0' : '1');\\\\n            refreshPage(false);\\\\n            return \\\\\\\"hiker://empty\\\\\\\"\\\\n        }, fold),\\\\n        col_type: 'scroll_button',\\\\n    })\\\\n\\\\ncategories.forEach((category, index) => {\\\\n        let sub_categories = pdfa(category, 小类定位);\\\\n        if (index === 0) {\\\\n            sub_categories.forEach((item, key) => {\\\\n                let title = pdfh(item, 分类标题)\\\\n                d.push({\\\\n                    title: key.toString() === cate_temp[index] ? '““””<b><span style=\\\\\\\"color: ' + 分类颜色 + '\\\\\\\">' + title + '</span></b>' : title,\\\\n                    url: $(pd(item, 分类链接) + '#noLoading#').lazyRule((params) => {\\\\n                        let new_cate = []\\\\n                        params.cate_temp.forEach((cate, index) => {\\\\n                            new_cate.push(index === 0 ? params.key.toString() : \\\\\\\"0\\\\\\\")\\\\n                        })\\\\n                        putVar(MY_RULE.title, JSON.stringify(new_cate))\\\\n                        putVar(MY_RULE.url, input)\\\\n                        refreshPage(true)\\\\n                        return \\\\\\\"hiker://empty\\\\\\\"\\\\n                    }, {\\\\n                        cate_temp: cate_temp,\\\\n                        key: key,\\\\n                        page: page,\\\\n                    }),\\\\n                    col_type: 'scroll_button',\\\\n                })\\\\n            })\\\\n            d.push({\\\\n                col_type: \\\\\\\"blank_block\\\\\\\"\\\\n            });\\\\n        } else if (fold === '1') {\\\\n            sub_categories.forEach((item, key) => {\\\\n                let title = pdfh(item, 分类标题)\\\\n                d.push({\\\\n                    title: key.toString() === cate_temp[index] ? '““””<b><span style=\\\\\\\"color: ' + 分类颜色 + '\\\\\\\">' + title + '</span></b>' : title,\\\\n                    url: $(pd(item, 分类链接) + '#noLoading#').lazyRule((params) => {\\\\n                        params.cate_temp[params.index] = params.key.toString()\\\\n\\\\n                        putVar(MY_RULE.title, JSON.stringify(params.cate_temp))\\\\n                        putVar(MY_RULE.url, input)\\\\n                        refreshPage(true)\\\\n                        return \\\\\\\"hiker://empty\\\\\\\"\\\\n                    }, {\\\\n                        cate_temp: cate_temp,\\\\n                        index: index,\\\\n                        key: key,\\\\n                        page: page,\\\\n                    }),\\\\n                    col_type: 'scroll_button',\\\\n                })\\\\n            })\\\\n            d.push({\\\\n                col_type: \\\\\\\"blank_block\\\\\\\"\\\\n            });\\\\n        }\\\\n    })\\\\n}\\\\n\\\"},{\\\"col_type\\\":\\\"movie_3\\\",\\\"name\\\":\\\"动态解析\\\",\\\"path\\\":\\\"lazy\\\",\\\"rule\\\":\\\"var lazy = $(\\\\\\\"\\\\\\\").lazyRule(() => {\\\\nrequireCache('https://code.aliyun.com/lzk23559/PublicRule/raw/master/x5rule.js', 24);\\\\n    return x5rule(input, input);\\\\n});\\\"}]\"}","picUrl":"https://imgs.movie09.com/upload/vod/20220906-1/029e4a724d973e743a438105308a1ba7.jpg","title":"黯夜守护者粤语"}