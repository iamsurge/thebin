#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <unistd.h> //borrar si usas Windows
#include <fcntl.h> //borrar si usas Windows

int getRandomNumber(int a, int b);
void clearBuffer();

int main()
{
    int contador_1 = 0;
    int contador_2 = 0;
    int contador_3 = 0;
    int contador_4 = 0;
    int contador_5 = 0;
    int contador_6 = 0;
    int contador_7 = 0;
    int contador_8 = 0;
    int contador_9 = 0;
    int contador_10 = 0;
    int contador_11 = 0;
    int contador_12 = 0;
    int contador_13 = 0;
    int contador_14 = 0;
    int contador_15 = 0;
    int contador_16 = 0;
    int contador_17 = 0;
    int contador_18 = 0;
    int contador_19 = 0;
    int contador_20 = 0;
    int number;
    const int A = 1;
    const int B = 20;
    char opc = 'n';

    srand(time(NULL));

    while ((opc != 'Y') && (opc != 'y')) {
        number = getRandomNumber(A, B + 1);
        printf("%d\n\n",number);
        switch (number) {
        case 1:
            contador_1++;
            break;
        case 2:
            contador_2++;
            break;
        case 3:
            contador_3++;
            break;
        case 4:
            contador_4++;
            break;
        case 5:
            contador_5++;
            break;
        case 6:
            contador_6++;
            break;
        case 7:
            contador_7++;
            break;
        case 8:
            contador_8++;
            break;
        case 9:
            contador_9++;
            break;
        case 10:
            contador_10++;
            break;
        case 11:
            contador_11++;
            break;
        case 12:
            contador_12++;
            break;
        case 13:
            contador_13++;
            break;
        case 14:
            contador_14++;
            break;
        case 15:
            contador_15++;
            break;
        case 16:
            contador_16++;
            break;
        case 17:
            contador_17++;
            break;
        case 18:
            contador_18++;
            break;
        case 19:
            contador_19++;
            break;
        case 20:
            contador_20++;
            break;
        default:
            break;
        }
        printf("Numero 1: %d\n", contador_1);
        printf("Numero 2: %d\n", contador_2);
        printf("Numero 3: %d\n", contador_3);
        printf("Numero 4: %d\n", contador_4);
        printf("Numero 5: %d\n", contador_5);
        printf("Numero 6: %d\n", contador_6);
        printf("Numero 7: %d\n", contador_7);
        printf("Numero 8: %d\n", contador_8);
        printf("Numero 9: %d\n", contador_9);
        printf("Numero 10: %d\n", contador_10);
        printf("Numero 11: %d\n", contador_11);
        printf("Numero 12: %d\n", contador_12);
        printf("Numero 13: %d\n", contador_13);
        printf("Numero 14: %d\n", contador_14);
        printf("Numero 15: %d\n", contador_15);
        printf("Numero 16: %d\n", contador_16);
        printf("Numero 17: %d\n", contador_17);
        printf("Numero 18: %d\n", contador_18);
        printf("Numero 19: %d\n", contador_19);
        printf("Numero 20: %d\n", contador_20);

        printf("\n¿Desea terminar con el programa? [Y/N]: ");
        opc = getchar();
        clearBuffer();
    }

    return 0;
}

int getRandomNumber(int a, int b) {
    return a + (rand() % (b - a));
}

void clearBuffer() {
    int fdflags;    //borrar si usas Windows
    fdflags = fcntl(STDIN_FILENO, F_GETFL, 0);  //borrar si usas Windows
    fcntl(STDIN_FILENO, F_SETFL, fdflags | O_NONBLOCK); //borrar si usas Windows
    while (getchar()!=EOF); //borrar si usas Windows
    fcntl(STDIN_FILENO, F_SETFL, fdflags);  //borrar si usas Windows
    //descomentar línea de abajo si usas Windows 
    //fflush(stdin)
}
