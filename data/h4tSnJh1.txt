// https://atcoder.jp/contests/abc269/tasks/abc269_f
#include<bits/stdc++.h>
using namespace std;

typedef long long LL;
const LL MOD = 998244353;
LL n, m, q, r1, r2, c1, c2, inv2;

LL fastPow(LL res, LL n) {
    LL ans;
    for (ans = 1; n != 0; n >>= 1) {
        if ((n & 1) == 1) {
            ans = ans * res % MOD;
        }
        res = res * res % MOD;
    }
    return ans;
}

LL getSum(LL r, LL c1, LL c2) {
    if ((r + c1) % 2 == 1) {
        ++c1;
    }
    if ((r + c2) % 2 == 1) {
        --c2;
    }
    if (c1 > c2) {
        return 0;
    }
    LL first = ((r - 1) * m % MOD + c1) % MOD;
    LL last = ((r - 1) * m % MOD + c2) % MOD;
    return (first + last) % MOD * ((c2 - c1) / 2 + 1) % MOD * inv2 % MOD;
}

LL getSum(LL r1, LL r2, LL a1, LL a2) {
    if ((r2 - r1) % 2 == 1) {
        --r2;
    }
    LL n = (r2 - r1) / 2 + 1;
    LL d = ((a2 - a1) % MOD + MOD) % MOD;
    LL an = (a1 + (n - 1) * d % MOD) % MOD;
    return (a1 + an) % MOD * n % MOD * inv2 % MOD;
}

int main() {
#ifdef ExRoc
    freopen("test.txt", "r", stdin);
#endif // ExRoc
    ios::sync_with_stdio(0);

    inv2 = fastPow(2, MOD - 2);
    cin >> n >> m >> q;
    while (q--) {
        cin >> r1 >> r2 >> c1 >> c2;
        LL sum1 = getSum(r1, c1, c2);
        LL sum2 = getSum(r1 + 1, c1, c2);
        LL sum3 = getSum(r1 + 2, c1, c2);
        LL sum4 = getSum(r1 + 3, c1, c2);
        switch (r2 - r1) {
        case 0:
            cout << sum1 << endl;
            break;
        case 1:
            cout << (sum1 + sum2) % MOD << endl;
            break;
        default:
            cout << (getSum(r1, r2, sum1, sum3) + getSum(r1 + 1, r2, sum2, sum4)) % MOD << endl;
        }
    }

    return 0;
}
