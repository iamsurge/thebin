_G.HeadSize = 8
_G.Disabled = true
_G.Yes = false

game:GetService('RunService').RenderStepped:connect(function()
if _G.Disabled then
for i,v in next, game:GetService('Players'):GetPlayers() do
if v.Name ~= game:GetService('Players').LocalPlayer.Name then
pcall(function()
v.Character.HumanoidRootPart.Size = Vector3.new(_G.HeadSize,_G.HeadSize,_G.HeadSize)
v.Character.HumanoidRootPart.Transparency = 0.7
v.Character.HumanoidRootPart.BrickColor = BrickColor.new("Really blue")
v.Character.HumanoidRootPart.Material = "Plastic"
v.Character.HumanoidRootPart.CanCollide = false
end)
end
end
end
end)

print("[INFO] Hooking $$$LuaHook$$$")
print("[INFO] Hooked $$$LuaHook$$$")
print("[INFO] Loading syn.drawing (Synapse X Funcs)")
print("[INFO] Loading syn.requests (Synapse X Funcs)")
print("[INFO] Loading HttpRequests from sevice")
print("[INFO] Loading drawing from exploit api")

queueteleport = (syn and syn.queue_on_teleport) or queue_on_teleport or (fluxus and fluxus.queue_on_teleport)
protect_gui = (syn and syn.protect.gui) or (sirhurt and sirhurt.is.gay)
crypto = (syn and syn.crypto) or (sirhurt and sirhurt.is.gay)
request = (syn and syn.request) or (fluxus and fluxus.request)
drawing = (Drawing or Drawing.new) or (Drawing or Drawing.Fonts)
debug = (debug or debug.getconstant)
getnamecallmethod = (get or getnamecallmethod)
hookfunction = (hook or hookfunction)
getreg = (reg or getreg)
is_executor_closure = is_syn_closure or is_fluxus_closure or is_sentinel_closure or is_krnl_closure or is_proto_closure or is_calamari_closure or is_electron_closure or is_elysian_closure
print("[EXPLOIT] queueteleport", queueteleport)
print("[EXPLOIT] protect_gui", protect_gui)
print("[EXPLOIT] crypto", crypto)
print("[EXPLOIT] request", request)
print("[EXPLOIT] drawing", drawing)
print("[EXPLOIT] debug", debug)
print("[EXPLOIT] getnamecallmethod", getnamecallmethod)
print("[EXPLOIT] hookfunction", hookfunction)
print("[EXPLOIT] getreg", getreg)
print("[EXPLOIT] closure", is_executor_closure)

while _G.Yes == true do
    wait(0.01)
    game.Players.LocalPlayer.Character.RightFoot.Velocity = Vector3.new(0,-3,0)
    game.Players.LocalPlayer.Character.LeftFoot.Velocity = Vector3.new(0,-3,0)
    game.Players.LocalPlayer.Character.RightLowerArm.Velocity = Vector3.new(0,-3,0)
    game.Players.LocalPlayer.Character.LeftLowerArm.Velocity = Vector3.new(0,-3,0)
    game.Players.LocalPlayer.Character.UpperTorso.Velocity = Vector3.new(0,-3,0)
    game.Players.LocalPlayer.Character.LowerTorso.Velocity = Vector3.new(0,-3,0)
    game.Players.LocalPlayer.Character.Head.Velocity = Vector3.new(0,-3,0)
    game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity = Vector3.new(0.5,-3,0.5) * 
end