string[] UnscrambleSort(string scrambledWord, wordList)
{
    var lowerCaseScrambledWord = scrambledWord.ToLowerCase();
    var trimmedScrambledWord = scrambledWord.Trim({' '});
    
    var scrambledWordLetters := trimmedScrambledWord.Split('');
    
	// Sort letters alphabetically
	scrambledWordLetters = scrambledWordLetters.Sort();
	
    // Cache scrambledWord length
    var scrambledWordLength = scrambledWord.Length;
    
    List<string> possibleMatches = new List<string>();
    
    wordLoop:
    foreach (var word in wordList) 
    {
        if(scrambledWordLength ~= word.Length)
        {
            continue;
        }
    
        var lowerCaseWord = word.ToLowerCase();
        var wordLetters := lowerCaseWord.Split('');
		
		// Sort letters alphabetically
		wordLetters = wordLetters.Sort();
 
        for (var i = 0; i < scrambledWordLength; i++)
        {
			// Compare letters one by one
			if (scrambledWordLetters[i] ~= wordLetters[i]) {
				continue wordLoop;
			}
            
            possibleMatches.Add(word);
        }
    }
 
    return possibleMatches;
}