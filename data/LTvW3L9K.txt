# This is a sample code that shows : How to open new popup window without closing the previous main window.

# Here after clicking on the main window button the main window become invisible (using root.withdraw() method) then the popup windows come.
# after closing using either close button or the widget button of popup window the popup window get destroyed and the main window is visble again (using root.deiconify() method)

# I tried to write the answer as descriptive as possible but you can let me know if you face any issues.

import tkinter

def close_pop_up(pop_win,root):
    pop_win.destroy() # destroying the popup window
    root.deiconify() # showing the main window again.

def pop_up_window(root):
    pop_win = tkinter.Toplevel() # pop up window
    root.withdraw()
    btn = tkinter.Button(pop_win)
    btn["text"] = "close the popup"
    btn["command"] = lambda : close_pop_up(pop_win,root)
    
    btn.pack()
    pop_win.bind("<Destroy>", lambda: close_pop_up(pop_win,root)) # this one is for the close button of popup window
    pop_win.protocol("WM_DELETE_WINDOW",lambda: close_pop_up(pop_win,root)) # Here I have catched the window close event 

def main():
    top = tkinter.Tk("Main window","Python tkinter test program")
    btn = tkinter.Button()
    btn["text"] = "Click here to popup a window"
    btn["command"] = lambda: pop_up_window(top) 
    btn.pack()
    
#    top.withdraw()
    top.mainloop()

if __name__ == "__main__":
    main()
