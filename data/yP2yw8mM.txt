        int n, i, j, mask = 0, N, ans = INF, cnt;
        cin >> n;
        N = (1 << n);
        vector <int> a(n);
        vector <int> b(n);
        vector <int> time(n);
        bool flag;
        for (i = 0; i < n; i++) {
            cin >> a[i];
        }
        for (i = 0; i < n; i++) {
            cin >> b[i];
        }
        for (mask; mask < N; mask++) {
            cnt = 0;
            flag = true;
            for (i = 0; i < n; i++) {
                if (mask & (1 << i)) {
                    cnt++;
                    time[i] = b[i];
                }
                else {
                    time[i] = (a[i] - b[i]);
                }
            }
            sort(all(time));
            for (i = 1; i < n; i++) {
                if (time[i] - time[i - 1] != 1) {
                    flag = false;
                }
            }
            if (flag) {
                ans = min(ans, cnt);
            }
        }
        if (ans == INF) {
            ans = -1;
        }
        cout << ans << endl;