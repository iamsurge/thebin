const dynamicRoutes = async (cb) => {
  const chunkSize = 100;
  const allDynamicRoutes = [];
  const locales = i18nConfig.locales.map((locale) => locale.code);
    
  // Blog Routes Generate
  const generateBlog = async (locale) => {
    const result = await axios.get(`${strapiUrl}/blog-main`, {
      params: {
        offset: 0,
        limit: 1,
        locale,
      },
    });
    const countAll = result.data.countFiltered;
    let offset = 0;
    const limit = chunkSize;

    for (let i = 0; i < Math.ceil(countAll / chunkSize); i++) {
      const chunkResult = await axios.get(`${strapiUrl}/blog-main`, {
        params: {
          offset,
          limit,
          locale,
        },
      });
      chunkResult.data.results.map((blog) => {
        allDynamicRoutes.push(`/${locale}/blog-article/${blog.latinName}`);
      });
      offset += limit;
    }
  };
  for (const locale of locales) {
    await generateBlog(locale);
  }
  cb(null, allDynamicRoutes);
};