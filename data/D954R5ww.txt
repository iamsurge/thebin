# problem 5
def common_length(a,b):
    n = len(a)
    m = len(b)
    max_len = 0
    s = ""
    for i in range(1, min(n,m)+1):
        if a[-i:] == b[:i]:
            if i > max_len:
                max_len = i
                s = a + b[i:]
            max_len = max(max_len, i)
    return max_len, s

def shortest_superstring(A):
    
    while len(A)>1:
        n = len(A)
        max_len = -1
        idx1 = -1
        idx2 = -1
        for i in range(n):
            for j in range(n):
                if i!=j:
                    x = common_length(A[i], A[j])
                    if x[0] > max_len:
                        max_len = x[0]
                        new_str = x[1]
                        idx1 = i
                        idx2 = j
        B = []
        for i in A:
            if i == A[idx1] or i == A[idx2]:
                continue
            else:
                B.append(i)
        B.append(new_str)
        A = B
    return A[0]
                        

print(shortest_superstring(["CATGC", "CTAAGT", "GCTA", "TTCA", "ATGCATC"]))
    