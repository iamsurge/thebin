#include <iostream>
#include <iomanip>
#include <string>
using namespace std;

int main() {
	bool loop = true;
	string O_List;
	int MainMenu, M_Orders, D_Orders, A_Orders;
	char O_Meal, O_Drinks, O_AddOns, O_Again;
	float Price, M_Price = 0, D_Price = 0, A_Price = 0;
	
	while (loop) {
		printf("Welcom to \'Maes-Resto\'!\n");
		printf("Here's our menu, What's your order?\n");
		printf("1 - Meals\n");
		printf("2 - Drinks\n");
		printf("3 - Add-ons\n");
		printf("4 - Exit\n");
		printf("Select your choice: "); cin >> MainMenu;
		
		switch (MainMenu){
			case 1:
				printf("Meals\n");
				printf("[B] Burger\n");
				printf("[F] French Fries\n");
				printf("[S] Chicken\n");
				printf("Select your choice: "); cin >> O_Meal;
				
				printf("How many orders? "); cin >> M_Orders;
				printf("How much per order? "); cin >> Price;
				
				M_Price += Price * M_Orders;
				O_List = O_List + 
						to_string(M_Orders) + 
						"\t" + 
						((O_Meal == 'B')? "Burger": (O_Meal == 'F')? "French Fries": "Chicken") +
						 "\t" + 
						to_string(Price).substr(0, 5) + 
						"\t" + 
						to_string(Price * M_Orders).substr(0, 5) + "\n";
				
				break;
			case 2:
				printf("Drinks\n");
				printf("[C] Coke\n");
				printf("[I] Ice Tea\n");
				printf("[E] Coffee\n");
				printf("[L] Lemonade\n");
				printf("Select your choice: "); cin >> O_Drinks;
				
				printf("How many orders? "); cin >> D_Orders;
				printf("How much per order? "); cin >> Price;
				
				D_Price += Price * D_Orders;
				break;
			case 3:
				printf("Add-Ons\n");
				printf("[R] Rice\n");
				printf("[M] Mushroom Soup\n");
				printf("[G] Gravy\n");
				printf("Select your choice: "); cin >> O_AddOns;
				
				printf("How many orders? "); cin >> A_Orders;
				printf("How much per order? "); cin >> Price;
				
				A_Price += Price * A_Orders;
				break;
			case 4:
				loop = false;
				continue;
		}
		
		printf("Add another order[y/n]? "); cin >> O_Again;
		loop = (O_Again == 'y') ? true: false;
	}
	
	cout << O_List;
}