local ReplicatedStorage = game:GetService("ReplicatedStorage")
local ServerScriptService = game:GetService("ServerScriptService")
local Rewards = require(ServerScriptService.Utils.Rewards)

local RewardUtils = require(ServerScriptService.Utils.Rewards)
local Gamepasses = require(ReplicatedStorage.Config.GamepassShop)
local Remotes = ReplicatedStorage:WaitForChild("Remotes")
local module = {}

function GetConfig(productId: number)
	for category, passes in pairs(Gamepasses) do
		for _, config in ipairs(passes) do
			if (config.Product and config.Product == productId) or (config.Pass and config.Pass == productId) then
				return category, config
			end
		end
	end
end

-- Coins
function module.Coins(player: Player, amount: number)
	RewardUtils.Coins(player, amount, false)

	return true
end


function module.Handler(player: Player, productId: number)
	local category, config = GetConfig(productId)
	if not category or not config then return end
	
	if category == "Coins" then
		if player.FrealacCreation.Value == false then
			return module.Coins(player, config.Reward)
		else
			-- no
		end
		if player.Dominus_Lord.Value == false then
			return module.Coins(player, config.Reward)
		else
			-- no
		end
		if player.God_Lord.Value == false then
			return module.Coins(player, config.Reward)

		else
			-- no
		end
	elseif category == "Pets" then
		if config.ID == "Frealac_Creation" then
			if player.FrealacCreation.Value == false then
				player.FrealacCreation.Value = true
				Remotes.PetGamepass:FireClient(player)
			end
		else
			-- nothing
		end
		
		if config.ID == "Dominus_Lord" then
			if player.Dominus_Lord.Value == false then
				player.Dominus_Lord.Value = true
				Remotes.PetGamepassDominus:FireClient(player)
			end
		else
			-- nothing
		end
			
		--
	elseif category == "Passes" then
		player.gamepasses[config.ID].Value = true
	end
end



return module

