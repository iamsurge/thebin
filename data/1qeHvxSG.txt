import React, {useState, useEffect } from 'react'
import { StatusBar } from 'expo-status-bar';
import { StyleSheet,Button, Text, View, ImageBackground, SafeAreaView } from 'react-native';
import { Pedometer } from 'expo-sensors';
import CircularProgress from 'react-native-circular-progress-indicator';
import 'expo-dev-client'
import { BannerAd, BannerAdSize, TestIds, InterstitialAd, AdEventType, RewardedInterstitialAd, RewardedAdEventType } from 'react-native-google-mobile-ads';

const adUnitId = __DEV__ ? TestIds.BANNER : 'ca-app-pub-xxxxxxxxxxxxx/yyyyyyyyyyyyyy';

const interstitial = InterstitialAd.createForAdRequest(TestIds.INTERSTITIAL, {
    requestNonPersonalizedAdsOnly: true
});



export default function App() {
    


    const [interstitialLoaded, setInterstitialLoaded] = useState(false);
    const [PedometerAvalibility, setPedometerAvalibility] = useState("");
    const loadInterstitial = () => {
        const unsubscribeLoaded = interstitial.addAdEventListener(
            AdEventType.LOADED,
            () => {
                setInterstitialLoaded(true);
            }
        );

        const unsubscribeClosed = interstitial.addAdEventListener(
            AdEventType.CLOSED,
            () => {
                setInterstitialLoaded(false);
                interstitial.load();
            }
        );

        interstitial.load();

        return () => {
            unsubscribeClosed();
            unsubscribeLoaded();
        }
    }

    const [stepCount, updateStepCount] = useState(0)

    const [number, setNumbers] = useState(0)
    const increment = () => {
        setNumbers(number+1)
    }

    var dist = stepCount / 1300;
    var distanceCoverd = dist.toFixed(1)

    var cal = dist * 60
    var calsBurnt = cal




    useEffect(() => {
        const unsubscribeInterststialEvents = loadInterstitial();

       return  unsubscribeInterststialEvents;
        subscribe();
    }, [])

    subscribe = () => {
        const subscription = Pedometer.watchStepCount((result) => {
            updateStepCount(result.steps)
        })

        Pedometer.isAvailableAsync().then(
            (result) => {
                setPedometerAvalibility(String(result))
            },
            (error) => {
                setPedometerAvalibility(error)
            }

        );
    }

  return (
      <View style={styles.container}>
          <ImageBackground
              style={{ flex: 1 }}
              resizeMode="cover"
              source={require('./assets/Black_colour.jpg')}
          >
              <View style={{ flex: 1, justifyContent: "center" }} >
                  <Text style={[styles.HeadingDesign, {
                      paddingBottom: 50 }
                  ]}>Pedometer Avalible:
                       {PedometerAvalibility}
                  </Text>
                  <SafeAreaView>
                  <BannerAd
                      unitId={adUnitId}
                      size={BannerAdSize.FULL_BANNER}
                      requestOptions={{
                          requestNonPersonalizedAdsOnly: true,
                      }}
                      />
                  </SafeAreaView>
  
                      <CircularProgress
                         
                          value={stepCount}
                          maxvalue={10000}
                          radius={192}
                          textColor={'#ECF01F'}
                          activeStrokeColor={'#0075C1'}
                          inActiveStrokeColor={'#AFAFAF'}
                          inActiveStrikeOpacity={0.5}
                          inActiveStrokeWidth={30}
                          activeStrokeWidth={30}
                          
                  />
                  <View style={{ flex: 3, justifyContent: "center" }} >

                      <View style={{ flex: .5, justifyContent: "center", width: "50%", marginLeft: 180, marginTop: -200 }} >
                          <Text style={styles.numDesign} > {number}  </Text>
                      </View>
                      
                      

                      <View style={{ flex: .5, justifyContent: "center", width: "50%", marginLeft: 95, marginTop: -140 }} >
                          {interstitialLoaded ? < Button title="Convert" onClick={increment} onPress={() => interstitial.show()}  /> : <Text>Loading...</Text>}
                          
                      </View>
                  </View>
                  <View style={{ flex: 3 ,justifyContent:"center" }}>
                      <View style={{ flex: 1 }}>
                          

                     
                          <Text style={styles.textDesign}> Target: 10,000 Steps(8km)</Text>
                      </View>
                      
                  

                      <View style={{ flex:  1}}>
                          <Text style={styles.textDesign}> Distance Covered : {distanceCoverd} km </Text>
                  </View>

                      <View style={{ flex: 1 }}>
                          <Text style={styles.textDesign}>Calories Burned : {calsBurnt} </Text>
                      </View>
                  </View>
              </View>
              

          </ImageBackground>
   
      <StatusBar style="auto" />
    </View>
    );

}



const styles = StyleSheet.create({
    container: {
        
        flex: 1,
        backgroundColor: '#fff',

    },

    headingDesign: {

        backgroundColor: "rgba(155, 89, 182,0.5)",



        alignSelf: "center",

        fontSize: 20,

        color: "white",

        fontWeight: "bold",
 

    },

    textDesign: {

        height: 50,

        width: '85%',

        marginBottom:60,
        
        fontSize: 25,

        color: "white",

        fontWeight: "bold",

    },

    numDesign: {

        height: 50,

        width: '85%',


        fontSize: 25,

        color: "white",

        fontWeight: "bold",

    },

});