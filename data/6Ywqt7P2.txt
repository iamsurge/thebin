bool f1(bool a, bool b, bool c) {
    return (!a || b) && (!b || c) && (!c || a);
}
bool f2(bool a, bool b, bool c) {
    return (a xor b) || (b xor c) || (c xor a);
}
bool f3(bool a, bool b, bool c) {
    return (!(!a || b) || c);
}
bool f4(bool a, bool b, bool c) {
    return ((a == b) && c) || ((a == c) && b) || ((b == c) && a);
}
bool f5(bool a, bool b, bool c) {
    return (a && b) || (b && c) || (a && c);
}

void solve() {
    int n = (1 << 3), i, x;
    vector <bool> f(n);
    for (i = 0; i < n; i++) {
        cin >> x;
        f[i] = x;
    }
    vector <vector<bool>> res(5, vector <bool>(n));
    for (i = 0; i < n; i++) {
        bool a, b, c;
        a = i & (1 << 2);
        b = i & (1 << 1);
        c = i & (1 << 0);
        res[0][i] = f1(a, b, c);
        res[1][i] = f2(a, b, c);
        res[2][i] = f3(a, b, c);
        res[3][i] = f4(a, b, c);
        res[4][i] = f5(a, b, c);
    }
    for (i = 0; i < 5; i++) {
        if (res[i] == f) {
            cout << i + 1 << endl;
        }
    }
}