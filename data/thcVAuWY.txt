#include <iostream>
using namespace std;

class Bankomat
{
public:
    Bankomat() :Id(0), currentMoney(0) {}
    void setId(int i);
    int  getId();
    int getMoneyCount();
    void depositMoney(int i);
    void withdrawMoney(int i);
private:
    int Id;
    int currentMoney;
    enum { max = 1000, min = 10 };
};

void Bankomat::withdrawMoney(int i)
{
    if ((i < min) || (i > max)) {
        cout << "Sorry but max = 1000, min = 10";
        return;
    }
    if ((currentMoney - i) < 0) {
        cout << "Problem" << endl
            << "get max: " << currentMoney << endl;
    }
    currentMoney -= i;
}

void Bankomat::depositMoney(int i) {
    if ((i < min) || (i > max)) {
        cout << "Sorry but max = 1000, min = 10";
        return;
    }
    if ((currentMoney + i) > max) {
        cout << "Please insert max = " << max - currentMoney << endl;
        return;
    }
    currentMoney = i;
}

void Bankomat::setId(int i)
{
    Id = i;
}

int Bankomat::getId()
{
    return Id;
}

int Bankomat::getMoneyCount()
{
    return currentMoney;
}

ostream& operator << (ostream& os, Bankomat& bank)
{
    return os << bank.getMoneyCount();
}

int main()
{
    Bankomat bank;
    bank.setId(123);
    bank.depositMoney(500);
    cout << bank << endl;
    bank.withdrawMoney(100);
    cout << bank << endl;
    return 0;
}