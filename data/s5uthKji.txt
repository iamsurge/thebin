#include <iostream>
#include <cmath>
#include <vector>
#include <queue>
#include <algorithm>
#include <string>
#include <stack>
#include <set>
#include <map>
#define pii pair <int, int>
#define pb(x) push_back(x)
using namespace std;
using ll = long long;
using ld = long double;
using db = double;
void cv(vector <int> &v) {
    for (auto x : v) cout << x << ' ';
    cout << "\n";
}

void cvl(vector <ll> &v) {
    for (auto x : v) cout << x << ' ';
    cout << "\n";
}


void cvv(vector <vector <int> > &v) {
    for (auto x : v) cv(x);
    cout << "\n";
}

void cvb(vector <bool> v) {
    for (bool x : v) cout << x << ' ';
    cout << "\n";
}

void cvs(vector <string>  v) {
    for (auto a : v) {
        cout << a << "\n";
    }
}

void cvp(vector <pii> a) {
    for (auto p : a) {
        cout << p.first << ' ' << p.second << "\n";
    }
    cout << "\n";
}

bool f(vector <bool> v) {
    vector <bool> x(6);
    for (int i = 0; i <= 4; ++i) {
        x[i + 1] = v[i];
    }
    bool A, B, C, D, E;
    A = x[2] || !x[1];
    A = A && (x[3] || !x[2]);
    A = A && (x[4] || !x[3]);
    A = A && (x[5] || !x[4]);
    B = x[1] && x[2] && x[3];
    C = x[3] && x[4] && x[5];
    D = B xor C;
    E = A || D;
    return E;
}

vector <bool> to(int x) {
    vector <bool> r;
    while (x > 0) {
        r.pb(x % 2);
        x /= 2;
    }
    while (r.size() < 5) {
        r.pb(0);
    }
    reverse(r.begin(), r.end());
    return r;
}

int main() {
    ios::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
    int ans = 0;
    for (int i = 0; i < 32; ++i) {
        auto v = to(i);
        if (f(v)) {
            ans++;
            cvb(v);
        }
    }
    cout << "ans = " << ans << "\n";
}
