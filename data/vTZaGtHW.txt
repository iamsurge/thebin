-- ceat_ceat
local runtimestart = os.clock()

local plrs = game:GetService("Players")
local runservice = game:GetService("RunService")
local httpservice = game:GetService("HttpService")
local uis = game:GetService("UserInputService")
local tweenservice = game:GetService("TweenService")
local debris = game:GetService("Debris")

local F3X_TOOL_NAME = "Building Tools"
local MODEL_STRING = "[\"Model\",{\"Name\":\"Saladnew\"},[[\"Model\",{\"Name\":\"RLeg\"},[[\"Part\",{\"Anchored\":true,\"Reflectance\":0,\"CanCollide\":false,\"Material\":\"Plastic\",\"Color\":[\"Color3\",[1,0.941,0.816]],\"Transparency\":0,\"Name\":\"RLeg\",\"CFrame\":[\"CFrame\",[-17.594,4.715,46.385,1,0,0,0,1,0,0,0,1]],\"Size\":[\"Vector3\",[0.394,1.117,0.394]]},[[\"SpecialMesh\",{\"MeshId\":\"rbxassetid://6228241744\",\"Scale\":[\"Vector3\",[0.52,0.52,0.52]]},[]]]]]],[\"Model\",{\"Name\":\"LLeg\"},[[\"Part\",{\"Anchored\":true,\"Reflectance\":0,\"CanCollide\":false,\"Material\":\"Plastic\",\"Color\":[\"Color3\",[1,0.941,0.816]],\"Transparency\":0,\"Name\":\"LLeg\",\"CFrame\":[\"CFrame\",[-18.219,4.715,46.385,1,0,0,0,1,0,0,0,1]],\"Size\":[\"Vector3\",[0.394,1.117,0.394]]},[[\"SpecialMesh\",{\"MeshId\":\"rbxassetid://6228238732\",\"Scale\":[\"Vector3\",[0.52,0.52,0.52]]},[]]]]]],[\"Model\",{\"Name\":\"Torso\"},[[\"Part\",{\"Anchored\":true,\"Reflectance\":0,\"CanCollide\":false,\"Material\":\"Plastic\",\"Color\":[\"Color3\",[1,0.941,0.816]],\"Transparency\":0,\"Name\":\"Torso\",\"CFrame\":[\"CFrame\",[-17.906,5.499,46.371,1,0,0,0,1,0,0,0,1]],\"Size\":[\"Vector3\",[0.958,1.285,0.598]]},[[\"SpecialMesh\",{\"MeshId\":\"rbxassetid://6228240108\",\"Scale\":[\"Vector3\",[0.52,0.52,0.52]]},[]]]],[\"Part\",{\"Anchored\":true,\"Reflectance\":0,\"CanCollide\":false,\"Material\":\"Plastic\",\"Color\":[\"Color3\",[0.949,0.953,0.953]],\"Transparency\":0,\"Name\":\"dress\",\"CFrame\":[\"CFrame\",[-17.906,5.249,46.371,1,0,0,0,1,0,0,0,1]],\"Size\":[\"Vector3\",[1.6,1.1,1.1]]},[[\"SpecialMesh\",{\"MeshId\":\"rbxassetid://6541540827\",\"Scale\":[\"Vector3\",[3.628,2.407,2.535]]},[]]]],[\"Part\",{\"Anchored\":true,\"Reflectance\":0,\"CanCollide\":false,\"Material\":\"Plastic\",\"Color\":[\"Color3\",[0.949,0.953,0.953]],\"Transparency\":0,\"Name\":\"the 12th white part in this model\",\"CFrame\":[\"CFrame\",[-17.906,5.424,46.371,1,0,0,0,1,0,0,0,1]],\"Size\":[\"Vector3\",[1.008,1.185,0.648]]},[[\"SpecialMesh\",{\"MeshId\":\"rbxassetid://6228240108\",\"Scale\":[\"Vector3\",[0.548,0.48,0.563]]},[]]]],[\"Part\",{\"Anchored\":true,\"Reflectance\":0,\"CanCollide\":false,\"Material\":\"Plastic\",\"Color\":[\"Color3\",[0.949,0.953,0.953]],\"Transparency\":0,\"Name\":\"wings\",\"CFrame\":[\"CFrame\",[-17.906,5.774,47.346,-1,0,-0,0,1,0,0,0,-1]],\"Size\":[\"Vector3\",[4.803,2.646,1.552]]},[[\"SpecialMesh\",{\"MeshId\":\"rbxassetid://7422711131\",\"Scale\":[\"Vector3\",[0.64,0.417,0.517]]},[]]]]]],[\"Model\",{\"Name\":\"Head\"},[[\"Part\",{\"Anchored\":true,\"Reflectance\":0,\"CanCollide\":false,\"Material\":\"Plastic\",\"Color\":[\"Color3\",[1,0.941,0.816]],\"Transparency\":0,\"Name\":\"Head\",\"CFrame\":[\"CFrame\",[-17.906,6.827,46.385,1,0,0,0,1,0,0,0,1]],\"Size\":[\"Vector3\",[1.663,1.6,1.014]]},[[\"SpecialMesh\",{\"MeshId\":\"rbxassetid://6228237120\",\"Scale\":[\"Vector3\",[0.52,0.52,0.52]]},[]]]],[\"Part\",{\"Anchored\":true,\"Reflectance\":0,\"CanCollide\":false,\"Material\":\"Plastic\",\"Color\":[\"Color3\",[0.949,0.953,0.953]],\"Transparency\":0,\"Name\":\"REUSE #7\",\"CFrame\":[\"CFrame\",[-17.906,6.202,46.435,1,0,0,0,1,0,0,0,1]],\"Size\":[\"Vector3\",[3.8,2.95,1.8]]},[[\"SpecialMesh\",{\"MeshId\":\"rbxassetid://1532831059\",\"Scale\":[\"Vector3\",[4.121,2.898,2.521]]},[]]]],[\"Part\",{\"Anchored\":true,\"Reflectance\":0,\"CanCollide\":false,\"Material\":\"Plastic\",\"Color\":[\"Color3\",[0.949,0.953,0.953]],\"Transparency\":0,\"Name\":\"roblox hair omg\",\"CFrame\":[\"CFrame\",[-17.906,6.777,46.435,1,0,0,0,1,0,0,0,1]],\"Size\":[\"Vector3\",[2.644,2.409,1.691]]},[[\"SpecialMesh\",{\"MeshId\":\"http://www.roblox.com/asset/?id=76056263\",\"Scale\":[\"Vector3\",[1.294,1.23,0.809]]},[]]]],[\"Part\",{\"Anchored\":true,\"Reflectance\":0,\"CanCollide\":false,\"Material\":\"Plastic\",\"Color\":[\"Color3\",[1,0.941,0.816]],\"Transparency\":0,\"Name\":\"ears :>\",\"CFrame\":[\"CFrame\",[-17.906,6.627,46.435,1,0,0,0,1,0,0,0,1]],\"Size\":[\"Vector3\",[2.365,0.367,0.193]]},[[\"SpecialMesh\",{\"MeshId\":\"rbxassetid://9398225132\",\"Scale\":[\"Vector3\",[0.951,1.236,1]]},[]]]],[\"Model\",{\"Name\":\"halo\"},[[\"Model\",{\"Name\":\"main\"},[[\"Part\",{\"Anchored\":true,\"Reflectance\":0,\"CanCollide\":false,\"Material\":\"Plastic\",\"Color\":[\"Color3\",[0.949,0.953,0.953]],\"Transparency\":0,\"Name\":\"ice cream\",\"CFrame\":[\"CFrame\",[-17.556,8.127,46.385,1,0,0,0,1,0,0,0,1]],\"Size\":[\"Vector3\",[0.15,0.3,0.35]]},[[\"SpecialMesh\",{\"MeshId\":\"rbxassetid://4742789434\",\"Scale\":[\"Vector3\",[0.075,0.15,0.175]]},[]]]],[\"Part\",{\"Anchored\":true,\"Reflectance\":0,\"CanCollide\":false,\"Material\":\"Plastic\",\"Color\":[\"Color3\",[0.949,0.953,0.953]],\"Transparency\":0,\"Name\":\"torus\",\"CFrame\":[\"CFrame\",[-17.906,7.977,46.385,1,0,0,0,1,0,0,0,1]],\"Size\":[\"Vector3\",[0.9,0.176,0.9]]},[[\"SpecialMesh\",{\"MeshId\":\"rbxassetid://7587978850\",\"Scale\":[\"Vector3\",[0.36,0.369,0.36]]},[]]]],[\"Part\",{\"Anchored\":true,\"Reflectance\":0,\"CanCollide\":false,\"Material\":\"Plastic\",\"Color\":[\"Color3\",[0.949,0.953,0.953]],\"Transparency\":0,\"Name\":\"koishi fumo crafting recipe\",\"CFrame\":[\"CFrame\",[-18.256,8.127,46.385,1,0,0,0,1,0,0,0,1]],\"Size\":[\"Vector3\",[0.15,0.3,0.35]]},[[\"SpecialMesh\",{\"MeshId\":\"rbxassetid://4742789434\",\"Scale\":[\"Vector3\",[0.075,0.15,0.175]]},[]]]],[\"Part\",{\"Anchored\":true,\"Reflectance\":0,\"CanCollide\":false,\"Material\":\"Plastic\",\"Color\":[\"Color3\",[0.949,0.953,0.953]],\"Transparency\":0,\"Name\":\"cone\",\"CFrame\":[\"CFrame\",[-17.906,8.127,46.035,1,0,0,0,1,0,0,0,1]],\"Size\":[\"Vector3\",[0.35,0.3,0.15]]},[[\"SpecialMesh\",{\"MeshId\":\"rbxassetid://4742789434\",\"Scale\":[\"Vector3\",[0.175,0.15,0.075]]},[]]]],[\"Part\",{\"Anchored\":true,\"Reflectance\":0,\"CanCollide\":false,\"Material\":\"Plastic\",\"Color\":[\"Color3\",[0.949,0.953,0.953]],\"Transparency\":0,\"Name\":\"2\",\"CFrame\":[\"CFrame\",[-17.906,8.127,46.735,1,0,0,0,1,0,0,0,1]],\"Size\":[\"Vector3\",[0.35,0.3,0.15]]},[[\"SpecialMesh\",{\"MeshId\":\"rbxassetid://4742789434\",\"Scale\":[\"Vector3\",[0.175,0.15,0.075]]},[]]]]]],[\"Part\",{\"Anchored\":true,\"Reflectance\":0,\"CanCollide\":false,\"Material\":\"Plastic\",\"Color\":[\"Color3\",[0.949,0.953,0.953]],\"Transparency\":0,\"Name\":\"thingys idk\",\"CFrame\":[\"CFrame\",[-17.156,7.977,46.385,0,1,0,-1,0,0,0,0,1]],\"Size\":[\"Vector3\",[0.25,0.3,0.25]]},[[\"SpecialMesh\",{\"MeshId\":\"rbxassetid://4742789434\",\"Scale\":[\"Vector3\",[0.125,0.15,0.125]]},[]]]],[\"Part\",{\"Anchored\":true,\"Reflectance\":0,\"CanCollide\":false,\"Material\":\"Plastic\",\"Color\":[\"Color3\",[0.949,0.953,0.953]],\"Transparency\":0,\"Name\":\"the other thingy\",\"CFrame\":[\"CFrame\",[-18.656,7.977,46.385,-0,-1,-0,-1,0,0,0,0,-1]],\"Size\":[\"Vector3\",[0.25,0.3,0.25]]},[[\"SpecialMesh\",{\"MeshId\":\"rbxassetid://4742789434\",\"Scale\":[\"Vector3\",[0.125,0.15,0.125]]},[]]]]]]]],[\"Model\",{\"Name\":\"RArm\"},[[\"Part\",{\"Anchored\":true,\"Reflectance\":0,\"CanCollide\":false,\"Material\":\"Plastic\",\"Color\":[\"Color3\",[1,0.941,0.816]],\"Transparency\":0,\"Name\":\"RArm\",\"CFrame\":[\"CFrame\",[-17.325,5.707,46.335,0.656,-0.755,0,0.755,0.656,0,0,0,1]],\"Size\":[\"Vector3\",[0.283,0.925,0.246]]},[[\"SpecialMesh\",{\"MeshId\":\"rbxassetid://6228913223\",\"Scale\":[\"Vector3\",[0.567,0.515,0.483]]},[]]]]]],[\"Model\",{\"Name\":\"LArm\"},[[\"Part\",{\"Anchored\":true,\"Reflectance\":0,\"CanCollide\":false,\"Material\":\"Plastic\",\"Color\":[\"Color3\",[1,0.941,0.816]],\"Transparency\":0,\"Name\":\"LArm\",\"CFrame\":[\"CFrame\",[-18.495,5.707,46.335,0.656,0.755,0,-0.755,0.656,0,0,0,1]],\"Size\":[\"Vector3\",[0.283,0.925,0.246]]},[[\"SpecialMesh\",{\"MeshId\":\"rbxassetid://6228913223\",\"Scale\":[\"Vector3\",[0.567,0.515,0.483]]},[]]]]]],[\"Model\",{\"Name\":\"LC\"},[[\"Part\",{\"Anchored\":true,\"Reflectance\":-1,\"CanCollide\":false,\"Material\":\"Glass\",\"Color\":[\"Color3\",[0.067,0.067,0.067]],\"Transparency\":1,\"Name\":\"Caster\",\"CFrame\":[\"CFrame\",[-15.948,4.554,55.34,-0,0.755,-0.656,0,-0.656,-0.755,-1,-0,0]],\"Size\":[\"Vector3\",[0.201,0.201,0.201]]},[]],[\"Part\",{\"Anchored\":true,\"Reflectance\":-1,\"CanCollide\":false,\"Material\":\"Plastic\",\"Color\":[\"Color3\",[0.067,0.067,0.067]],\"Transparency\":1,\"Name\":\"LC\",\"CFrame\":[\"CFrame\",[-17.108,5.564,46.198,0.656,0.755,0,0.755,-0.656,-0,0,0,-1]],\"Size\":[\"Vector3\",[1.004,1.004,1.004]]},[]],[\"Part\",{\"Anchored\":true,\"Reflectance\":-1,\"CanCollide\":false,\"Material\":\"Glass\",\"Color\":[\"Color3\",[0.067,0.067,0.067]],\"Transparency\":1,\"Name\":\"Hole\",\"CFrame\":[\"CFrame\",[-15.948,4.554,49.54,-0,0.755,-0.656,0,-0.656,-0.755,-1,-0,0]],\"Size\":[\"Vector3\",[0.201,0.201,0.201]]},[]],[\"Part\",{\"Anchored\":true,\"Reflectance\":0,\"CanCollide\":false,\"Material\":\"Neon\",\"Color\":[\"Color3\",[0.639,0.635,0.647]],\"Transparency\":0,\"Name\":\"NeonParts\",\"CFrame\":[\"CFrame\",[-16.315,4.875,47.219,-0.534,0.534,-0.656,0.464,-0.464,-0.755,-0.707,-0.707,0]],\"Size\":[\"Vector3\",[6.96,6.974,1.473]]},[[\"SpecialMesh\",{\"MeshId\":\"rbxassetid://11363224683\",\"Scale\":[\"Vector3\",[1,1,1]]},[]]]],[\"Part\",{\"Anchored\":true,\"Reflectance\":0,\"CanCollide\":false,\"Material\":\"Glass\",\"Color\":[\"Color3\",[0.067,0.067,0.067]],\"Transparency\":0,\"Name\":\"GunAdditions\",\"CFrame\":[\"CFrame\",[-16.141,4.718,45.288,0.534,0.534,0.656,-0.464,-0.464,0.755,0.707,-0.707,-0]],\"Size\":[\"Vector3\",[4.977,4.295,1.205]]},[[\"SpecialMesh\",{\"MeshId\":\"rbxassetid://11363202790\",\"Scale\":[\"Vector3\",[1,1,1]]},[]]]],[\"Part\",{\"Anchored\":true,\"Reflectance\":-1,\"CanCollide\":false,\"Material\":\"Glass\",\"Color\":[\"Color3\",[0.067,0.067,0.067]],\"Transparency\":0,\"Name\":\"Base\",\"CFrame\":[\"CFrame\",[-16.123,4.708,48.306,0.534,0.534,0.656,-0.464,-0.464,0.755,0.707,-0.707,0]],\"Size\":[\"Vector3\",[9.325,8.583,1.469]]},[[\"SpecialMesh\",{\"MeshId\":\"rbxassetid://11363981190\",\"Scale\":[\"Vector3\",[1,1,1]]},[]]]]]]]]"

local RESET_HOLD_DUR = 1
local RESET_KEY = Enum.KeyCode.R

local allconnections = {}

local V30 = Vector3.zero
local CN0 = CFrame.new()

local localplayer = plrs.LocalPlayer
local mouse = localplayer:GetMouse()

local resetholdtime = 0

function addconnection(c)
	if not table.find(allconnections, c) then
		table.insert(allconnections, c)
	end
end

function removeconnection(c)
	if table.find(allconnections, c) then
		table.remove(allconnections, table.find(allconnections, c))
	end
end

local f3x do
	local tool = localplayer.Character:FindFirstChild(F3X_TOOL_NAME) or localplayer.Backpack:FindFirstChild(F3X_TOOL_NAME)

	if not tool then
		local gottool = false

		local backpackchildadded
		local chrchildadded

		backpackchildadded = localplayer.Backpack.ChildAdded:Connect(function(inst)
			if inst.Name == F3X_TOOL_NAME then
				backpackchildadded:Disconnect()
				chrchildadded:Disconnect()

				tool = inst
				gottool = true
			end
		end)

		chrchildadded = localplayer.Character.ChildAdded:Connect(function(inst)
			if inst.Name == F3X_TOOL_NAME then
				backpackchildadded:Disconnect()
				chrchildadded:Disconnect()

				tool = inst
				gottool = true
			end
		end)

		repeat
			task.wait()
		until gottool
	end

	f3x = tool
end

local serverendpoint = f3x.SyncAPI.ServerEndpoint
local basetoreal = {}

local function invokeserver(...)
	return serverendpoint:InvokeServer(...)
end

local function invokeserverasync(...)
	coroutine.resume(coroutine.create(serverendpoint.InvokeServer), serverendpoint, ...)
end

local Instance = {} do
	local reginstance = getfenv().Instance

	local instance = {}
	instance.__index = instance

	local onpropertychange = {
		-- instance
		Parent = function(inst, real)
			invokeserverasync("SetParent", { real }, basetoreal[inst.Parent] or inst.Parent)
		end,
		Name = function(inst, real)
			invokeserverasync("SetName", { real }, inst.Name)
		end,

		-- part
		CFrame = function(part, real)
			invokeserverasync("SyncMove", {{ CFrame = part.CFrame, Part = real }})
		end,
		Size = function(part, real)
			invokeserverasync("SyncResize", {{ CFrame = part.CFrame, Size = part.Size , Part = real }})
		end,
		Color = function(part, real)
			invokeserverasync("SyncColor", {{ Color = part.Color, UnionColoring = true, Part = real }})
		end,
		Anchored = function(part, real)
			invokeserverasync("SyncAnchor", {{ Anchored = part.Anchored, Part = real }})
		end,
		CanCollide = function(part, real)
			invokeserverasync("SyncAnchor", {{ CanCollide = part.CanCollide, Part = real }})
		end,
		Material = function(part, real)
			invokeserverasync("SyncMaterial", {{ Material = part.Material, Part = real }})
		end,
		Transparency = function(part, real)
			invokeserverasync("SyncMaterial", {{ Transparency = part.Transparency, Part = real }})
		end,
		Reflectance = function(part, real)
			invokeserverasync("SyncMaterial", {{ Reflectance = part.Reflectance, Part = real }})
		end,

		-- specialmesh
		MeshId = function(mesh, real)
			invokeserverasync("SyncMesh", {{ Part = real.Parent, MeshId = mesh.MeshId }})
		end,
		TextureId = function(mesh, real)
			invokeserverasync("SyncMesh", {{ Part = real.Parent, TextureId = mesh.TextureId }})
		end,
		Scale = function(mesh, real)
			invokeserverasync("SyncMesh", {{ Part = real.Parent, Scale = mesh.Scale }})
		end,
		MeshType = function(mesh, real)
			invokeserverasync("SyncMesh", {{ Part = real.Parent, MeshType = mesh.MeshType }})
		end,
	}

	local classes = {
		Model = function(parent: Instance)
			return invokeserver("CreateGroup", "Model", parent, {})
		end,
		Part = function(parent: Instance)
			local part = invokeserver("CreatePart", "Normal", CFrame.new(), parent)

			return part
		end,
		SpecialMesh = function(parent: Instance)
			return invokeserver("CreateMeshes", {{ Part = parent }})[1]
		end
	}

	function Instance.new(class, parent)
		local new = reginstance.new(class, parent)

		if classes[class] then
			local f3xinstance = classes[class](basetoreal[parent] or parent)
			local properties = {}
			local connections = {}

			for prop in onpropertychange do
				if pcall(function() return new[prop] end) then
					properties[prop] = f3xinstance[prop]
				end
			end

			connections.Destroying = new.Destroying:Connect(function()
				for _, v in connections do
					v:Disconnect()
					removeconnection(v)
				end

				basetoreal[new] = nil
				invokeserverasync("Remove", { f3xinstance })
			end)

			connections.Heartbeat = runservice.Heartbeat:Connect(function()
				for propname, value in properties do
					if new[propname] ~= value then
						onpropertychange[propname](new, f3xinstance)
						properties[propname] = new[propname]
					end
				end
			end)

			addconnection(connections.Heartbeat)
			addconnection(connections.Destroying)

			if new:IsA("BasePart") then
				connections.RenderStepped = runservice.RenderStepped:Connect(function()
					new.LocalTransparencyModifier = 1
				end)

				addconnection(connections.RenderStepped)

				delay(0.1, function()
					invokeserverasync("SyncAnchor", {{ Anchored = true, Part = f3xinstance }})
					invokeserverasync("SyncCollision", {{ CanCollide = false, Part = f3xinstance }})
					invokeserverasync("SyncMove", {{ CFrame = new.CFrame, Part = f3xinstance }})
					invokeserverasync("SetLocked", { f3xinstance }, true)
				end)

				new.CanTouch = false
				new.CanQuery = false

				new.Anchored = true
				onpropertychange.Anchored(new, f3xinstance)
			end

			basetoreal[new] = f3xinstance
		end

		return new
	end
end

local cn, ca = CFrame.new, CFrame.Angles
local v3 = Vector3.new
local rad, sin, cos = math.rad, math.sin, math.cos

local camerapart = Instance.new("WedgePart", workspace)
camerapart.Anchored = true
camerapart.CanCollide = false
camerapart.CanTouch = false
camerapart.CanQuery = false
camerapart.Transparency = 1

function getruntime()
	return os.clock() - runtimestart
end

local model do
	local fulltree = httpservice:JSONDecode(MODEL_STRING)

	local function translate(tree, parent)
		local inst = Instance.new(tree[1], parent)

		for propname, value in tree[2] do
			if typeof(value) == "table" then
				inst[propname] = getfenv()[value[1]].new(unpack(value[2]))
			else
				inst[propname] = value
			end
		end

		for _, child in tree[3] do
			translate(child, inst)
		end

		return inst
	end
	
	local hint = Instance.new("Hint", workspace)
	hint.Text = "creating character"

	model = translate(fulltree, workspace)
	hint:Destroy()
end

model.Head.PrimaryPart = model.Head.Head
model.Torso.PrimaryPart = model.Torso.Torso
model.LArm.PrimaryPart = model.LArm.LArm
model.RArm.PrimaryPart = model.RArm.RArm
model.LLeg.PrimaryPart = model.LLeg.LLeg
model.RLeg.PrimaryPart = model.RLeg.RLeg
model.LC.PrimaryPart = model.LC.LC

local state = {
	IsRunning = true
}

local humanoid = {
	Position = cn(0, 10, 0),
	Velocity = V30,
	MoveDirection = V30,
	MoveSpeed = 25,
}

local animator = {} do
	local joints = {
		Head = {
			C0  = cn(0, 0.628, 0.014, 1, 0, 0, 0, 1, 0, 0, 0, 1),
			C1 = cn(0, -0.7, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1),
			Transform = CN0,
			Priority = 0,
			Joint0 = "Torso"
		},
		Torso = {
			C0  = CN0,
			C1 = CN0,
			Transform = CN0,
			Priority = 0,
			Joint0 = "Position"
		},
		LArm = {
			C0  = cn(-0.338, 0.408, -0.036, 0.656, 0.755, 0, -0.755, 0.656, 0, 0, 0, 1),
			C1 = cn(0.013, 0.32, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1),
			Transform = CN0,
			Priority = 0,
			Joint0 = "Torso"
		},
		RArm = {
			C0  = cn(0.332, 0.408, -0.036, 0.656, -0.755, 0, 0.755, 0.656, 0, 0, 0, 1),
			C1 = cn(-0.013, 0.32, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1),
			Transform = CN0,
			Priority = 0,
			Joint0 = "Torso"
		},
		LLeg = {
			C0  = cn(-0.312, -0.383, 0.014, 1, 0, 0, 0, 1, 0, 0, 0, 1),
			C1 = cn(0, 0.4, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1),
			Transform = CN0,
			Priority = 0,
			Joint0 = "Torso"
		},
		RLeg = {
			C0  = cn(0.312, -0.383, 0.014, 1, 0, 0, 0, 1, 0, 0, 0, 1),
			C1 = cn(0, 0.4, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1),
			Transform = CN0,
			Priority = 0,
			Joint0 = "Torso"
		},

		LC = {
			C0  = cn(0.035, -0.257, -0.137, 1, 0, 0, 0, -1, 0, 0, 0, -1),
			C1 = cn(0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1),
			Transform = CN0,
			Priority = 0,
			Joint0 = "RArm"
		},
	}

	local jointmodels = {
		Head = model.Head,
		Torso = model.Torso,
		LArm = model.LArm,
		RArm = model.RArm,
		LLeg = model.LLeg,
		RLeg = model.RLeg,

		LC = model.LC,
	}

	local function getglobalcf(joint)
		local joint = joints[joint]

		if joint.Joint0 == "Position" then
			return humanoid.Position * joint.C0 * joint.Transform * joint.C1:Inverse()
		end

		return getglobalcf(joint.Joint0) * joint.C0 * joint.Transform * joint.C1:Inverse()
	end

	function animator:LerpTransforms(transforms, delta, priority)
		delta = math.min(delta, 1)
		priority = priority or 0

		for jointname, cf in transforms do
			if priority >= joints[jointname].Priority then
				joints[jointname].Transform = joints[jointname].Transform:Lerp(cf, delta)
			end
		end
	end

	function animator:UpdatePartPositions()
		for jointname, jointmodel in jointmodels do
			jointmodel:SetPrimaryPartCFrame(getglobalcf(jointname))
		end
	end
end

workspace.CurrentCamera.CameraSubject = camerapart
localplayer.Character.HumanoidRootPart.CFrame = cn(1000000, 1000000, 1000000)

local bp = Instance.new("BodyPosition", localplayer.Character.HumanoidRootPart)
bp.Position = v3(1000000, 1000000, 1000000)

local keybinds = {
	mouse1 = {
		down = function()
			print("mouse down")
		end,
	},
	z = {
		down = function()
			local points = { humanoid.Position.Position, mouse.Hit.Position }
			humanoid.Position = cn(mouse.Hit.Position, mouse.Hit.Position + humanoid.Position.LookVector)

			for _, point in points do
				local part = Instance.new("Part", workspace)
				part.Anchored = true
				part.CanCollide = false
				part.CanTouch = false
				part.CanQuery = false
				part.Material = Enum.Material.Neon
				part.CFrame = cn(point)
				part.Size = v3(7, 7, 7)

				tweenservice:Create(part, TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.In), { Size = V30 }):Play()
				debris:AddItem(part, 0.3)
			end

			local beamlength = (points[2] - points[1]).Magnitude
			local beampart = Instance.new("Part", workspace)
			beampart.Anchored = true
			beampart.CanCollide = false
			beampart.CanTouch = false
			beampart.CanQuery = false
			beampart.Material = Enum.Material.Neon
			beampart.Size = v3(1.5, 1.5, 1)
			beampart.CFrame = cn(points[1], points[2]) * cn(0, 0, -beamlength/2)

			local mesh = Instance.new("SpecialMesh", beampart)
			mesh.MeshType = Enum.MeshType.Brick
			mesh.Scale = v3(1, 1, beamlength)

			tweenservice:Create(beampart, TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.In), { Size = v3(0, 0, 1) }):Play()
			debris:AddItem(beampart, 0.3)
		end,
	}
}

addconnection(mouse.KeyDown:Connect(function(key)
	if keybinds[key] and keybinds[key].down then
		keybinds[key].down()
	end
end))

addconnection(mouse.KeyUp:Connect(function(key)
	if keybinds[key] and keybinds[key].up then
		keybinds[key].up()
	end
end))

local removalhint

while state.IsRunning do
	local delta = runservice.Heartbeat:Wait()

	if uis:IsKeyDown(RESET_KEY) and not uis:GetFocusedTextBox() then
		resetholdtime += delta

		if resetholdtime >= RESET_HOLD_DUR then
			state.IsRunning = false
			break
		end
	else
		resetholdtime = math.max(resetholdtime - delta, 0)
	end

	if resetholdtime == 0 then
		if removalhint then
			removalhint:Destroy()
			removalhint = nil
		end
	else
		if not removalhint then
			removalhint = Instance.new("Hint", workspace)
		end
		
		removalhint.Text = "resetting " .. math.round((RESET_HOLD_DUR - resetholdtime)*100)/100 .. " (hold for 3s)"
	end

	-- move

	local movedirection = V30
	local direction = humanoid.Position
	local cameralv = workspace.CurrentCamera.CFrame.LookVector

	if not uis:GetFocusedTextBox() then
		movedirection = Vector3.new(
			(uis:IsKeyDown(Enum.KeyCode.D) and 1 or 0) - (uis:IsKeyDown(Enum.KeyCode.A) and 1 or 0),
			(uis:IsKeyDown(Enum.KeyCode.Space) and 1 or 0) - (uis:IsKeyDown(Enum.KeyCode.LeftControl) and 1 or 0),
			(uis:IsKeyDown(Enum.KeyCode.S) and 1 or 0) - (uis:IsKeyDown(Enum.KeyCode.W) and 1 or 0)
		)
	end

	humanoid.MoveDirection = movedirection
	humanoid.Velocity = humanoid.Velocity:Lerp(
		(cn(V30, cameralv) * cn(movedirection)).Position * humanoid.MoveSpeed,
		math.min(delta*10, 1)
	)

	if humanoid.Velocity.Magnitude > 0.5 then
		direction = direction:Lerp(
			cn(V30, cameralv) + direction.Position,
			math.min(delta*5, 1)
		)
	end

	local newposition = humanoid.Position.Position + humanoid.Velocity * delta
	humanoid.Position = cn(newposition, newposition + direction.LookVector)

	camerapart.CFrame = camerapart.CFrame:Lerp(humanoid.Position * cn(0, 1.5, 0), math.min(delta*5, 1))

	-- anim

	local runtime = getruntime()

	if humanoid.Velocity.Magnitude > 0.5 then
		-- movedirection object space
		local mdobjspace = humanoid.Position:VectorToObjectSpace(humanoid.Velocity)
		mdobjspace = mdobjspace.Unit * mdobjspace.Magnitude/humanoid.MoveSpeed

		animator:LerpTransforms({
			Head = ca(rad(-mdobjspace.Z * 70), rad(mdobjspace.X * 10), 0),
			Torso = cn(0, sin(runtime*2)/4, 0) * ca(rad(mdobjspace.Z * 70), rad(mdobjspace.X * 10), rad(-mdobjspace.X * 30)),
			LArm = ca(0, rad(-mdobjspace.Z * 10), rad(math.min(-9.408 - mdobjspace.X * 20, 30))),
			RArm = ca(rad(-16.101), rad(-25.659), rad(-23.689)),
			LLeg = ca(rad(-35 + mdobjspace.X*10), 0, 0),
			RLeg = ca(rad(mdobjspace.X*5), 0, 0),

			LC = ca(rad(5.319 + cos(runtime*2)*4), rad(19.919), rad(8.183))
		}, delta*5)
	else
		animator:LerpTransforms({
			Head = ca(0, rad(15), rad(7 + sin(runtime)*4)),
			Torso = cn(0, sin(runtime*2)/4, 0) * ca(0, rad(-15), 0),
			LArm = ca(rad(19.72), rad(-3.405), rad(-9.408 + cos(runtime*2)*7)),
			RArm = ca(rad(-16.101), rad(-25.659), rad(-23.689)),
			LLeg = ca(rad(-41.5 + cos(runtime*2)*7), 0, 0),
			RLeg = ca(rad(-cos(runtime*2)*7 + 3.5), 0, 0),

			LC = ca(rad(5.319 + cos(runtime*2)*4), rad(19.919), rad(8.183))
		}, delta*5)
	end

	animator:UpdatePartPositions()
end

-- stop script

model:Destroy()
camerapart:Destroy()

if removalhint then
	removalhint:Destroy()
end

for _, v in allconnections do
	v:Disconnect()
end

table.clear(allconnections)
invokeserverasync("Remove", basetoreal)

local finalhint = Instance.new("Hint", workspace)
finalhint.Text = "use g/r now lol"
task.wait(2)
finalhint:Destroy()