using static System.Formats.Asn1.AsnWriter;

namespace Navigator
{
    
    public class Person
    {
        string dest;
        MoveBehaviour MoveBeh;

        public Person(string dest, string MoveBehav)
        {
            this.dest = dest;
            switch (MoveBehav)
            {
                case "Taxi":
                    MoveBeh = new MoveByTaxi(dest);
                    break;
                case "Marshrutka":
                    MoveBeh = new Marshrutka(dest);
                    break;
                case "Foot":
                    MoveBeh = new MoveByFoot(dest);
                    break;
            }
        }
        public MoveBehaviour GetBehaviour
        {
            get
            {
                return MoveBeh;
            }
            set
            {
                MoveBeh = value;
            }
        }
        public virtual void Display()
        {
            switch (MoveBeh)
            {
                case Marshrutka:
                    Console.WriteLine("I love Marshrutka");
                    break;
                case MoveByTaxi:
                    Console.WriteLine("I love Taxi");
                    break;
                case MoveByFoot:
                    Console.WriteLine("I love moving by foot");
                    break;
            }
        }
        public void MovePerform()
        {
            switch (MoveBeh)
            {
                case MoveByTaxi:
                    MoveBehaviour Move1 = new MoveByTaxi(dest);
                    break;
                case MoveByFoot:
                    MoveBehaviour Move2 = new MoveByFoot(dest);
                    break;
                case Marshrutka:
                    MoveBehaviour Move3 = new Marshrutka(dest);
                    break;

            }
            
        }

    }
    public interface MoveBehaviour
    {

        public void Move(string[] stops);

    }
    public class Marshrutka : MoveBehaviour
    {
        Random rand = new Random();
        private string[] Arcadia = { "Avtodept", "Rozumovska", "Probrazenska", "Mala Arnautska", "Pryvokzalna Sq.", "Prospect Shevchenka", "Arcadia"};
        private string[] Peresyp = { "Avtodept", "Balkivska", "Peresyp" };
        private string[] University = { "Avtodept", "Rozumovska", "Preobrazaenksa", "Pastera" };
        public void Move(string[] stops)
        {
            foreach (string stop in stops)
            {
                Console.WriteLine("Stop " + stop); ;
            }
            Console.WriteLine("It had taken this time to get there  " + rand.Next(30, 154) + " min");
        }
        public Marshrutka(string DestPoint)
        {
            switch (DestPoint)
            {
                case "Arcadia":
                    Move(Arcadia);
                    break;
                case "Peresyp":
                    Move(Peresyp);
                    break;
                case "University":
                    Move(University);
                    break;
            }
        }
    }
    public class MoveByTaxi : MoveBehaviour
    {
        Random rand = new Random();
        private string[] Arcadia = { "Avtodept","Arcadia" };
        private string[] Peresyp = { "Avtodept","Peresyp" };
        private string[] University = { "Avtodept", "Pastera" };
        public void Move(string[] stops)
        {
            Console.WriteLine("Starting point  " + stops[0]);
            Console.WriteLine("Ending point  " + stops[1]);
            Console.WriteLine("It had taken this time to get there  " + rand.Next(30, 154) + " min");
        }
        public MoveByTaxi(string DestPoint)
        {
            switch (DestPoint)
            {
                case "Arcadia":
                    Move(Arcadia);
                    break;
                case "Peresyp":
                    Move(Peresyp);
                    break;
                case "University":
                    Move(University);
                    break;
            }
        }
    }
    public class MoveByFoot : MoveBehaviour
    {
        Random rand = new Random();
        private string[] Arcadia = { "Avtodept", "Rozumovska", "Probrazenska", "Mala Arnautska", "Pryvokzalna Sq.", "Prospect Shevchenka", "Arcadia" };
        private string[] Peresyp = { "Avtodept", "Balkivska", "Peresyp" };
        private string[] University = { "Avtodept", "Rozumovska", "Preobrazaenksa", "Pastera" };
        
        public void Move(string[] stops)
        {
            foreach (string stop in stops)
            {
                Console.WriteLine("Now Turn Here " + stop); ;
            }
            Console.WriteLine("It had taken this time to get there  " + rand.Next(30, 154) + " min");
        }
        public MoveByFoot(string DestPoint)
        {
            switch (DestPoint)
            {
                case "Arcadia":
                    Move(Arcadia);
                    break;
                case "Peresyp":
                    Move(Peresyp);
                    break;
                case "University":
                    Move(University);
                    break;
            }
        }

    }
    
    class Program
    {
        static void Main(string[] args)
        {
            Console.WriteLine("--------------------------------");
            Person person1 = new Person("Arcadia", "Marshrutka");
            person1.Display();
            Console.WriteLine("--------------------------------");
            Person person2 = new Person("Peresyp", "Taxi");
            person2.Display();
            Console.WriteLine("--------------------------------");
            Person person3 = new Person("University", "Foot");
            person3.Display();
            Console.WriteLine("--------------------------------");
        }
    }

}