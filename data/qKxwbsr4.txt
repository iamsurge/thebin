using System;
using System.Collections.Generic;

namespace Listas_Jugadores
{
    class Program
    {
        static List<Player> player_list = new List<Player>();

        static void showListPlayer()
        {
            foreach (Player item in player_list)
            {
                item.showInfo();
            }
        }
        static void Main(string[] args)
        {
            byte menu;
            do
            {
                Console.WriteLine("**---------------------- **MENÚ** -----------------------**");
                Console.WriteLine("1. Add player");
                Console.WriteLine("2. Add player in specific position");
                Console.WriteLine("3. Remove player");
                Console.WriteLine("4. Search player in the list");
                Console.WriteLine("5. Sort player list");
                Console.WriteLine("6. Remove all players");
                Console.WriteLine("7. Show Players");
                Console.WriteLine("8. Exit!");
                Console.WriteLine("-----------------------------------------------------------");
                _ = byte.TryParse(Console.ReadLine(), out menu);
                switch (menu)
                {
                    case 1:
                        Console.Clear();
                        Console.WriteLine("----------- ADD PLAYER ----------");
                        Player player_object = new Player(); // Creación objeto
                        Console.WriteLine("What is your player Id");
                        player_object.setIdPlayer(int.Parse(Console.ReadLine()));
                        Console.WriteLine("What is your name");
                        player_object.setName(Console.ReadLine());
                        Console.WriteLine("What is your favorite position");
                        player_object.setPosition(Console.ReadLine());
                        Console.WriteLine("When is your birthday");
                        DateTime birthDay = DateTime.Parse(Console.ReadLine());
                        player_object.BirthDay = birthDay;
                        Console.WriteLine("When did you join the team club?");
                        player_object.EntryDay = DateTime.Parse(Console.ReadLine());
                        Console.WriteLine("How much do you earn");
                        player_object.Salary = double.Parse(Console.ReadLine());
                        Console.WriteLine("How many goals have you done in your career?");
                        player_object.Goals = short.Parse(Console.ReadLine());

                        // Ingresar el objeto a la Lista
                        player_list.Add(player_object);
                        showListPlayer();
                        break;
                    case 2:
                        Console.Clear();
                        Console.WriteLine("----------- ADD PLAYER IN SPECIFIC POSITION ----------");
                        break;
                    case 3:
                        Console.Clear();
                        Console.WriteLine("----------- REMOVE PLAYER ----------");
                        showListPlayer();
                        Console.WriteLine("What player do you want to remove?");
                        _ = int.TryParse(Console.ReadLine(), out int indexRemove);
                        player_list.RemoveAt(indexRemove);
                        showListPlayer();
                        break;
                    case 4:
                        Console.Clear();
                        Console.WriteLine("----------- SEARCH PLAYER ----------");
                        
                        break;
                    case 5:
                        Console.Clear();
                        player_list.Sort();
                        showListPlayer();
                        break;
                    case 6:
                        Console.Clear();
                        Console.WriteLine("----------- REMOVE ALL PLAYERS ----------");
                        player_list.RemoveAll(delegate (Player p) {
                            return p.getName().Length > 0;
                        });
                        //player_list.Clear();
                        break;
                    case 7:
                        Console.Clear();
                        showListPlayer();
                        break;
                }
            } while (menu != 8);
            

            Console.ReadKey();
        }
    }
}
