function xd()
end
function setvalue(address,flags,value) xd('Modify address value(Address, value type, value to be modified)') local tt={} tt[1]={} tt[1].address=address tt[1].flags=flags tt[1].value=value gg.setValues(tt) end
function split(szFullString, szSeparator) local nFindStartIndex = 1 local nSplitIndex = 1 local nSplitArray = {} while true do local nFindLastIndex = string.find (szFullString, szSeparator, nFindStartIndex) if not nFindLastIndex then nSplitArray[nSplitIndex] = string.sub(szFullString, nFindStartIndex, string.len (szFullString)) break end nSplitArray[nSplitIndex] = string.sub (szFullString, nFindStartIndex, nFindLastIndex - 1) nFindStartIndex = nFindLastIndex + string.len (szSeparator) nSplitIndex = nSplitIndex + 1 end return nSplitArray end function xgxc(szpy, qmxg) for x = 1, #(qmxg) do xgpy = szpy + qmxg[x]["offset"] xglx = qmxg[x]["type"] xgsz = qmxg[x]["value"] xgdj = qmxg[x]["freeze"] if xgdj == nil or xgdj == "" then gg.setValues({[1] = {address = xgpy, flags = xglx, value = xgsz}}) else gg.addListItems({[1] = {address = xgpy, flags = xglx, freeze = xgdj, value = xgsz}}) end xgsl = xgsl + 1 xgjg = true end end function xqmnb(qmnb) gg.clearResults() gg.setRanges(qmnb[1]["memory"]) gg.searchNumber(qmnb[3]["value"], qmnb[3]["type"]) if gg.getResultCount() == 0 then gg.toast(qmnb[2]["name"] .. "") else gg.refineNumber(qmnb[3]["value"], qmnb[3]["type"]) gg.refineNumber(qmnb[3]["value"], qmnb[3]["type"]) gg.refineNumber(qmnb[3]["value"], qmnb[3]["type"]) if gg.getResultCount() == 0 then gg.toast(qmnb[2]["name"] .. "") else sl = gg.getResults(999999) sz = gg.getResultCount() xgsl = 0 if sz > 999999 then sz = 999999 end for i = 1, sz do pdsz = true for v = 4, #(qmnb) do if pdsz == true then pysz = {} pysz[1] = {} pysz[1].address = sl[i].address + qmnb[v]["offset"] pysz[1].flags = qmnb[v]["type"] szpy = gg.getValues(pysz) pdpd = qmnb[v]["lv"] .. ";" .. szpy[1].value szpd = split(pdpd, ";") tzszpd = szpd[1] pyszpd = szpd[2] if tzszpd == pyszpd then pdjg = true pdsz = true else pdjg = false pdsz = false end end end if pdjg == true then szpy = sl[i].address xgxc(szpy, qmxg) end end if xgjg == true then gg.toast(qmnb[2]["name"] .. "" .. xgsl .. "") else gg.toast(qmnb[2]["name"] .. "") end end end end function SearchWrite(Search, Write, Type) gg.clearResults() gg.setVisible(false) gg.searchNumber(Search[1][1], Type) local count = gg.getResultCount() local result = gg.getResults(count) gg.clearResults() local data = {} local base = Search[1][2] if (count > 0) then for i, v in ipairs(result) do v.isUseful = true end for k=2, #Search do local tmp = {} local offset = Search[k][2] - base local num = Search[k][1] for i, v in ipairs(result) do tmp[#tmp+1] = {} tmp[#tmp].address = v.address + offset tmp[#tmp].flags = v.flags end tmp = gg.getValues(tmp) for i, v in ipairs(tmp) do if ( tostring(v.value) ~= tostring(num) ) then result[i].isUseful = false end end end for i, v in ipairs(result) do if (v.isUseful) then data[#data+1] = v.address end end if (#data > 0) then local t = {} local base = Search[1][2] for i=1, #data do for k, w in ipairs(Write) do offset = w[2] - base t[#t+1] = {} t[#t].address = data[i] + offset t[#t].flags = Type t[#t].value = w[1] if (w[3] == true) then local item = {} item[#item+1] = t[#t] item[#item].freeze = true gg.addListItems(item) end end end gg.setValues(t) gg.toast(""..#t.."") gg.addListItems(t) else gg.toast("", false) return false end else gg.toast("Not Found") return false end end
function HOME()
MN = gg.multiChoice({
"Bypass V1 logo ", 
"Bypass V2 lobby ", 
"Exit",
},nil, (" bypass"))
if MN == nil then else
if MN[1] == true then Bypass1()end
if MN[2] == true then Bypass2()end
if MN[3] == true then EXIT()end
end
PUBGMH = -1
end
function Bypass1() 
function setvalue(address,flags,value) local tt={} tt[1]={} tt[1].address=address tt[1].flags=flags tt[1].value=value gg.setValues(tt) end
so=gg.getRangesList('libUE4.so')[1].start
setvalue(so + "0x6F7A580", 32, "h 00 00 80 D2 C0 03 5F D6")
function setvalue(address,flags,value)  local refinevalues={}  refinevalues[1]={}  refinevalues[1].address=address  refinevalues[1].flags=flags  refinevalues[1].value=value  gg.setValues(refinevalues)  end 
so=gg.getRangesList('libanogs.so')[1].start
setvalue(so + "0xF98", 4, "h 00 00 00 00")
setvalue(so + "0x5935BC", 4, "h 00 00 00 00")
setvalue(so + "0x59373C", 4, "h 00 00 00 00")
setvalue(so + "0x593B74", 4, "h 00 00 00 00")
setvalue(so + "0x594694", 4, "h 00 00 00 00")
setvalue(so + "0x591420", 4, "h 00 00 00 00")
setvalue(so + "0x591680", 4, "h 00 00 00 00")
setvalue(so + "0x591830", 4, "h 00 00 00 00")
setvalue(so + "0x591A20", 4, "h 00 00 00 00")
setvalue(so + "0x591DE8", 4, "h 00 00 00 00")
setvalue(so + "0x592164", 4, "h 00 00 00 00")
setvalue(so + "0x592710", 4, "h 00 00 00 00")
qmnb = 
{ 
{["memory"] = 16384}, 
{["name"] = ""}, 
{["value"] = 282584257676671, ["type"] = 32}, 
{["lv"] = 65794, ["offset"] = 4, ["type"] = 32}, 
}
qmxg = 
{
{["value"] = 0, ["offset"] = 0, ["type"] = 32},
{["value"] = 0, ["offset"] = 4, ["type"] = 32},
{["value"] = 0, ["offset"] = 8, ["type"] = 32},
{["value"] = 0, ["offset"] = 12, ["type"] = 32},
{["value"] = 0, ["offset"] = 16, ["type"] = 32},
{["value"] = 0, ["offset"] = 20, ["type"] = 32},
{["value"] = 0, ["offset"] = 24, ["type"] = 32},
{["value"] = 0, ["offset"] = 32, ["type"] = 32},
{["value"] = 0, ["offset"] = 40, ["type"] = 32},
{["value"] = 0, ["offset"] = 52, ["type"] = 32},
{["value"] = 0, ["offset"] = 56, ["type"] = 32},
 } 
xqmnb(qmnb)  
gg.alert("LAG315 active") 
end
function Bypass2() 
gg.clearResults()
gg.setRanges(gg.REGION_C_ALLOC | gg.REGION_OTHER)
gg.setVisible(false)
gg.searchNumber("144,387;133634", gg.TYPE_DWORD)
gg.clearList()
gg.getResults(99931)
gg.editAll("84,541,440", gg.TYPE_DWORD)
gg.clearResults()
gg.setRanges(gg.REGION_C_ALLOC | gg.REGION_OTHER)
gg.setVisible(false)
gg.searchNumber("134,658;134,658", gg.TYPE_DWORD)
gg.clearList()
gg.getResults(99931)
gg.editAll("67,108,880", gg.TYPE_DWORD)
gg.clearResults()
gg.setRanges(gg.REGION_C_ALLOC | gg.REGION_OTHER)
gg.setVisible(false)
gg.searchNumber("134,914;262,403", gg.TYPE_DWORD)
gg.clearList()
gg.getResults(99931)
gg.editAll("84,541,440", gg.TYPE_DWORD)
gg.clearResults()
gg.setRanges(gg.REGION_C_ALLOC | gg.REGION_OTHER)
gg.setVisible(false)
gg.searchNumber("133,378;133,634", gg.TYPE_DWORD)
gg.clearList()
gg.getResults(99931)
gg.editAll("67,108,880", gg.TYPE_DWORD)
gg.clearResults()
gg.setRanges(gg.REGION_C_ALLOC | gg.REGION_OTHER)
gg.setVisible(false)
gg.searchNumber("196,864;16,842,753", gg.TYPE_DWORD)
gg.clearList()
gg.getResults(99931)
gg.editAll("84,541,440", gg.TYPE_DWORD)
gg.clearResults()
gg.alert("LAG315 active") 
end
function EXIT()
gg.alert("")
gg.skipRestoreState()
gg.setVisible(true)
os.exit()
end
while true do
if gg.isVisible(true) then
PUBGMH = 1
gg.setVisible(false)
end
if PUBGMH == 1 then
HOME()
end
end
