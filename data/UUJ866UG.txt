#include <bits/stdc++.h>
#include <stdio.h>
#include <stdlib.h>
#include <string>
#include <cmath>
#include <windows.h>
#include <GL/gl.h>
#include <GL/glut.h>
using namespace std;

float speed=10;
int Gamex=30,Gamey=30;
int step=0,cntr=0,eatenCounter=0,length=1;
int x[100]={Gamex/2,0},y[100]={Gamey/2,0};
int xrand=(rand()%Gamex)+1,yrand=(rand()%Gamey)+1;
bool Over=false,eaten=true;



void Snake(){

    for(int i=length-1;i>0;i--){
        x[i]=x[i-1];
        y[i]=y[i-1];
    }

    if(step==1)x[0]--;
    else if(step==2)y[0]++;
    else if(step==3)x[0]++;
    else if(step==4)y[0]--;

    if(x[0]>=Gamex)x[0]=0;
    if(x[0]<0)x[0]=Gamex;
    if(y[0]<0)y[0]=Gamey-1;
    if(y[0]>=Gamey)y[0]=0;

    for(int i=0;i<length;i++){
        glColor3f(1,0,0);
        glRectd(x[i],y[i],x[i]+1,y[i]+1);
    }

    for(int i=1;i<length;i++){
        if(x[i]==x[0] and y[i]==y[0])Over=true;
    }

    if(x[0]==xrand and y[0]==yrand){
        eaten=true;
        length++;
        cntr++;
    }

    if(eatenCounter%2==0)speed+=0;

}

void food(){
    if(eaten==true){
        xrand=(rand()%Gamex),yrand=(rand()%Gamey);
        eaten=false;
        eatenCounter++;
    }

    glColor3f(0,1,0);
    glRectd(xrand,yrand,xrand+1,yrand+1);

}



void keyboard(int k,int x,int y){
    // 1 l
    // 2 u
    // 3
    if(k==GLUT_KEY_RIGHT){
        if(step!=1 and step!=3)step=3;
    }else if(k==GLUT_KEY_LEFT){
        if(step!=3 and step!=1)step=1;
    }else if(k==GLUT_KEY_UP){
        if(step!=4 and step!=2)step=2;
    }else if(k==GLUT_KEY_DOWN){
        if(step!=2 and step!=4)step=4;
    }
}
void reshape(int a,int b){
    glViewport(0,0,(GLsizei)a,(GLsizei)b);
    glMatrixMode(GL_PROJECTION);
    glLoadIdentity();
    glOrtho(0,Gamex,0,Gamey,-1,1);
    glMatrixMode(GL_MODELVIEW);
}

void timer(int){
    glutPostRedisplay();
    glutTimerFunc(1000/speed,timer,0);
}


void MainGame(){
    glClear(GL_COLOR_BUFFER_BIT);
    Snake();
    food();
    glutSwapBuffers();
    if(Over==true){
        char c[20]={0},res[9]="Score : ";
        itoa(cntr,c,10);
        strcat(res,c);
        MessageBox(NULL,res,"Don't Cry :(",0);
        // Try to add MaxScore
        exit(0);
    }
}

int main(int argc, char** argv)
{
    //Initialize GLUT and creat The Window
    glutInit(&argc, argv);
    glutInitWindowPosition(80,50);
    glutInitWindowSize(600, 600);
    glutInitDisplayMode(GLUT_DOUBLE|GLUT_RGB);
    glutCreateWindow("Game");

    //Create Main Functions
    glutDisplayFunc(MainGame);
    glutReshapeFunc(reshape);
    glutSpecialFunc(keyboard);
    glutTimerFunc(0,timer,0);


    //change Color of Window
    glClearColor(0,0,0,0);
    glutMainLoop();
    return 0;
}

