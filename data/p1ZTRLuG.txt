#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <ctype.h>
#define BUFF_SIZE 100
#define MEM_STEP 5
struct Sentence{
    char* str;
    int length;
    int size;
};

struct Text{
    struct Sentence** text;
    int length;
    int size;
};

typedef struct Sentence Sentence;
typedef struct Text Text;

Sentence* readSentence(){
    char c;
    int length = 0;
    int size = MEM_STEP;
    char* str = malloc(BUFF_SIZE * sizeof(char));
    do{
        if(length >= size-2){
            char *tmp = realloc(str, size + MEM_STEP);
            if(!tmp){}
            size += MEM_STEP;
            str = tmp;
        }
        c = (char)getchar();
        str[length++] = c;
    }while(c != '\n' && c != '.' && c != '!' && c != '?');
    str[length] = '\0';
    Sentence* sentence = malloc(sizeof(Sentence));
    sentence->str = str;
    sentence->size = size;
    sentence->length = length;
    return sentence;
}

Text readText(){
    int size = BUFF_SIZE;
    int length = 0;
    int nlcount = 0;
    Sentence** text = malloc(size * sizeof(Sentence*));
    Sentence* sentence;
    do{
        sentence = readSentence();
        if(sentence->str[0] == '\n')
            nlcount++;
        else{
            nlcount = 0;
            text[length++] = sentence;
        }
    }while(nlcount < 2);
    Text txt;
    txt.size = size;
    txt.text = text;
    txt.length = length;
    return txt;
}

void free_text(Text text){
    for(int i = 0; i < text.length; i++){
        free(text.text[i]->str);
    }
    free(text.text);
}

Text del_upper(Text text){

}

int main(){
    Text txt = readText();
    for(int i = 0; i < txt.length; i++)
        printf("%s", txt.text[i]->str);
    printf("\n");
    free_text(txt);
    return 0;
}
