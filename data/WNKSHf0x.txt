#include <algorithm>
#include <fstream>
#include <iostream>
#include <numeric>
#include <ranges>
#include <sstream>
#include <vector>

namespace y2022 {

using namespace std;
using namespace std::views;
using views::transform;

void day01() {
  auto elf_cals =
    (ostringstream() << (ifstream("2022/2022_day01_input.txt")).rdbuf()).str()
    | split("\n\n"s)
    | transform([](const auto& elf_bag_contents) {
        auto snack_cals = elf_bag_contents
          | split('\n')
          | transform([](const auto& snack) { return stoi(string(snack.begin(), snack.end())); });
        return accumulate(snack_cals.begin(), snack_cals.end(), 0);
      });

  // Copy view to owned memory for sorting.
  vector<int> v(elf_cals.begin(), elf_cals.end());
  ranges::partial_sort(v, next(v.begin(), 3), greater<int>());
  auto top3 = v | take(3);

  cout << "part 1: " << top3.front() << "\n";
  cout << "part 2: " << accumulate(top3.begin(), top3.end(), 0) << "\n";
}

}
