using System.Threading;
using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using System;

public class PlayerController : MonoBehaviour
{
    public float SpeedMove;

    private Rigidbody2D RB;
    private CapsuleCollider2D CC;
    private Vector2 moveVelocity;
    private Animator AM;

    public bool isWalkForward = false;
    public bool isWalkBackward = false;
    public bool isWalkLeft = false;
    public bool isWalkRight = false;
    public bool isStoped = false;


    private string currentAM;


    void Start()
    {
        RB = GetComponent<Rigidbody2D>();
        CC = GetComponent<CapsuleCollider2D>();
        AM = GetComponent<Animator>();
    }

    void Update()
    {
        Vector2 moveInput = new Vector2(Input.GetAxisRaw("Horizontal"), Input.GetAxisRaw("Vertical"));
        moveVelocity = moveInput.normalized * SpeedMove;

    }

    void FixedUpdate()
    {
        RB.MovePosition(RB.position + moveVelocity * Time.fixedDeltaTime);

        if (Input.GetAxisRaw("Vertical") > 0)
        {
            ChangeAnimation("Player_walk_forward");
            isWalkForward = true;
            isStoped = false;
        }

        if (Input.GetAxisRaw("Vertical") < 0)
        {
            ChangeAnimation("Player_walk_back");
            isWalkBackward = true;
            isStoped = false;
        }

        if (Input.GetAxisRaw("Horizontal") > 0)
        {
            gameObject.transform.localScale = new Vector3(57.6f, 57.6f, 57.6f);
            ChangeAnimation("Player_walk");
            isWalkRight = true;
            isStoped = false;
        }

        if (Input.GetAxisRaw("Horizontal") < 0)
        {
            gameObject.transform.localScale = new Vector3(-57.6f, 57.6f, 57.6f);
            ChangeAnimation("Player_walk");
            isWalkLeft = true;
            isStoped = false;
        }

        if (Input.GetAxisRaw("Vertical") == 0 && Input.GetAxisRaw("Horizontal") == 0)
        {
            isStoped = true;
        }

        // ++

            if (isWalkForward == true && isStoped == true)
        {
            ChangeAnimation("Player_idle_back");
            isWalkForward = false;
        }
        
        if (isWalkBackward == true && isStoped == true)
        {
            ChangeAnimation("Player_idle");
            isWalkBackward = false;
        }

        if (isWalkRight == true && isStoped == true)
        {
            ChangeAnimation("Player_idle_right");
            isWalkRight = false;
        }

        if (isWalkLeft == true && isStoped == true)
        {
            ChangeAnimation("Player_idle_right");
            isWalkLeft = false;
        }
       
    }

    void ChangeAnimation(string animation)
    {
        if (currentAM == animation) return;

        AM.Play(animation);

        currentAM = animation;  
    }
    
}

