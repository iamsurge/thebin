# в функции обучения класса SDG вы имплементируете процесс итеративного обучения, разделяя датсет на несколько частей, считает градиент и обновляете веса, которые являются коэффициентами для получения предсказаний. 

for i in range(batches_count):
                begin = i * self.batch_size # Задаем начальный индекс для нашего куска данных 
                end = (i + 1) * self.batch_size  # Задаем конечный индекс для нашего куска данных 
                X_batch = X[begin:end, :]  # Выделяем из датафрейма фичей по индексам нам кусок данных/батч
                y_batch = y[begin:end] # Выделяем из датафрейма с целевой переменной по индексам нам кусок данных/батч
                print(y_batch)
 				# Считаем градиент по формуле
                gradient = 2 * X_batch.T.dot(X_batch.dot(w) - y_batch) / X_batch.shape[0]# < напишите код здесь >
 				# Пересчитываем веса
                w -=  self.step_size * gradient  # < напишите код здесь >
 		# Обновляем веса
        self.w = w[1:]
        self.w0 = w[0]
        self.batches_count = batches_count