class SignUpForm(auth_forms.UserCreationForm):
    first_name = forms.CharField(validators=[
        validate_alphabet_characters_english,
        MinLengthValidator(2),
    ])
    last_name = forms.CharField(validators=[
        validate_alphabet_characters_english,
        MinLengthValidator(2),
    ])
    age = forms.IntegerField(validators=[
        age_validator,
    ])
    gender = forms.ChoiceField(
        choices=Gender.choices
    )

    class Meta:
        model = UserModel
        fields = (UserModel.USERNAME_FIELD, 'password1', 'password2', 'first_name', 'last_name', 'age', 'gender',)

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)
        self.fields['email'].widget.attrs['placeholder'] = 'Email'
        self.fields['password1'].widget.attrs['placeholder'] = 'Password'
        self.fields['password2'].widget.attrs['placeholder'] = 'Confirm Password'
        self.fields['first_name'].widget.attrs['placeholder'] = 'First Name'
        self.fields['last_name'].widget.attrs['placeholder'] = 'Last Name'
        self.fields['age'].widget.attrs['placeholder'] = 'Age'
        self.fields['gender'].widget.attrs['placeholder'] = 'Gender'

    # save with data for profile
    def save(self, commit=True):
        user = super().save(commit=commit)

        profile = Profile(
            first_name=self.cleaned_data['first_name'],
            last_name=self.cleaned_data['last_name'],
            age=self.cleaned_data['age'],
            gender=self.cleaned_data['gender'],
            user=user,
        )
        if commit:
            profile.save()

        return user