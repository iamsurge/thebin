Sekcja public i void setup


  int lewy;
  int prawy;

  
  int lewyPin = 2;
  int prawyPin = 3;
 // int awarPin = 4;
 
  

	// Called when starting the arduino (setup method in main sketch)
	void setup() 
	{

    
    pinMode(lewyPin,OUTPUT);
    pinMode(prawyPin,OUTPUT);
    // pinMode(awarPin,OUTPUT);
    
    digitalWrite(lewyPin,HIGH);
    digitalWrite(prawyPin,HIGH);
    //digitalWrite(awarPin,HIGH);

	}
    
    Sekcja void read 
    
    
    
    void read() 
	{     
        int lewy = FlowSerialReadStringUntil(';').toInt();
        int prawy = FlowSerialReadStringUntil('\n').toInt();
    

  if(lewy == 1 && prawy == 0)
            {
             digitalWrite(lewyPin,LOW);       //wlaczony lewy kierunkowskaz 
             digitalWrite(prawyPin,HIGH);    
             }
       
      else if (lewy == 0 && prawy == 1)
            {
             digitalWrite(lewyPin,HIGH); 
             digitalWrite(prawyPin,LOW);      //wlaczony prawy kierunkowskaz 
            }
      else if (lewy == 1 && prawy == 1)
            {
             digitalWrite(lewyPin,LOW); //wlaczone światła awaryjne 
             digitalWrite(prawyPin,LOW); 
            // digitalWrite(awarPin,LOW); 
            }
      else 
            {
             digitalWrite(lewyPin,HIGH); //wyłączone oba kierunkowskazy i światła awaryjne
             digitalWrite(prawyPin,HIGH); 
             //digitalWrite(awarPin,HIGH); 
            }
  
       
	  
	}
    
    
    SIMHUB
    
    if([DataCorePlugin.GameRunning], '1', '0' )

 + ';' +

if([DataCorePlugin.GameRawData.Lights.BlinkerLeftOn], '0', '1')

 + ';' +

if([DataCorePlugin.GameRawData.Lights.BlinkerRightOn], '0', '1')

 + ';' + 

if([DataCorePlugin.GameRawData.Lights.LowBeams], '0', '1')


 + ';' + 

if([DataCorePlugin.GameRawData.Lights.HighBeams], '0', '1')  
    