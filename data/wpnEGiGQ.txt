#include <iostream>
#include <cmath>
#include <vector>
#include <queue>
#include <algorithm>
#include <string>
#include <stack>
#include <set>
#include <map>
#define pii pair <int, int>
#define pb(x) push_back(x)
using namespace std;
using ll = long long;
using ld = long double;
using db = double;
void cv(vector <int> &v) {
    for (auto x : v) cout << x << ' ';
    cout << "\n";
}

void cvl(vector <ll> &v) {
    for (auto x : v) cout << x << ' ';
    cout << "\n";
}


void cvv(vector <vector <int> > &v) {
    for (auto x : v) cv(x);
    cout << "\n";
}

void cvb(vector <bool> v) {
    for (bool x : v) cout << x << ' ';
    cout << "\n";
}

void cvs(vector <string>  v) {
    for (auto a : v) {
        cout << a << "\n";
    }
}

void cvp(vector <pii> a) {
    for (auto p : a) {
        cout << p.first << ' ' << p.second << "\n";
    }
    cout << "\n";
}

bool sh = 0;
/*
3 1 2
-2 10 100
*/
int main() {
    ios::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
    ll n, k, p;
    cin >> n >> k >> p;
    vector <ll> a(n + 2), dp(n + 2, -1);
    a[0] = 0;
    a[n + 1] = 0;
    dp[0] = p;
    for (int i = 1; i <= n; ++i) {
        cin >> a[i];
    }
    if (sh) {
        cout << "n k p = " << n << ' ' << k << ' ' << p << "\n";
        cout << "a\n"; cvl(a);
    }
    for (ll i = 1; i <= n + 1; ++i) {
        if (sh) {
            cout << "i = " << i << "\n";
            cout << "dp\n"; cvl(dp);
            cout << "i - k  = " << i - k << "\n";
        }
        for (ll j = max(0LL, i - k); j <= i - 1; ++j) {
            if (sh) {
                cout << "j =  " << j << "\n";
            }
            if (dp[j] < 0) {
                continue;
            }
            dp[i] = max(dp[i], dp[j] + a[i]);
        }
    }
    if (sh) {
        cout << "a\n"; cvl(a);
        cout << "dp\n"; cvl(dp);
    }
    if (dp[n + 1] < 0 ) {
        cout << -1;
        exit(0);
    }
    cout << dp[n + 1];
}
