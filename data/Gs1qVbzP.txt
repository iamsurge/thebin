from itertools import product


class Solution:
    def letterCombinations(self, digits: str) -> list[str]:
        if not digits:
            return []

        digit_lists = [
            self.get_digit_list(number) for number in digits
        ]
        return [''.join(combination) for combination in product(*digit_lists)]

    @staticmethod
    def get_digit_list(number: str) -> list[str]:
        additional_start = 0 if number not in ['8', '9'] else 1
        iter_count = 3 if number not in ['7', '9'] else 4
        start_chr = 91 + int(number) * 3 + additional_start
        return [
            chr(start_chr + letter_iter) for letter_iter in range(iter_count)
        ]