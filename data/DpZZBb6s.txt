#!/usr/bin/env python
# -*- coding: utf-8 -*-
#
"""
POO programacion orientada a objetos es un paradigma de programación:
en POO: se intenta modelar un problema en funcion de objetos que tienen
propiedades y pueden hacer cosas

Problema: hacer un software que administre un aeropuerto:

objetos: avion boeing767, piloto Juan Gomez, azafata Luisa Lane
avion boeing 747, pasajero Juan Perez

Los objetos pueden agruparse en clases:
clase avion, clase piloto, clase azafata, clase despachante, clase pasajero

Cuando creo UN OBJETO PARTICULAR se dice que es una instancia de clase
ej boeing786 es una instancia de la clase avión

ATRIBUTOS: adjetivos   METODOS: verbos


# Vamos a crear una clase perro
# cada caracteristica de un perro es un atributo: pelaje, edad, raza, tamaño, etc
# la mayoria de los atributos varian de perro en perro
# Los atributos iguales para todos los perros se llaman ATRIBUTOS DE CLASE

class Perro:
    # atributos de clase
    especie = "Canis familiaris"
    
    def __init__(self,nombre,edad):
        '''Construye la instancia creando sus atributos'''
        self.nombre = nombre
        self.edad = edad
        
# creo dos instancias de perro
sultan = Perro("Sultan",6)
firulai = Perro("Firulai",4)

# imprime alguna atributos
print(f"Edad de firulai: {firulai.edad}")
print(f"ESpecie de los perros: {sultan.especie}")
print(f"Nombre de sultan: {sultan.nombre}")

# los atributos se pueden modificar /los objetos son mutables por default
sultan.especie = "Marca perro"
sultan.edad = 2

print(sultan.especie)
print(firulai.especie)
print(sultan.edad)


# Los métodos de la instancia son las cosas que puede hacer
# ladrar, comer, saltar, dormir, morder, jugar

# Resscribo la clase Perro pero con métodos
"""
class Perro:
    # atributos de clase
    especie = "Canis familiaris"
    
    def __init__(self,nombre,edad):
        """Construye la instancia creando sus atributos"""
        self.nombre = nombre
        self.edad = edad
        
    def describir(self):
        return f"{self.nombre} tiene {self.edad} años de edad"
        
    def ladrar(self,sonido="guau"):
        return f"{self.nombre} dijo {sonido}"
        
tronco = Perro("tronco",4)

print(tronco.describir())
print(tronco.ladrar())
print(tronco.ladrar("woof woof"))