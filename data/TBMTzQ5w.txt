local ww, wh = love.graphics.getDimensions()

local player = {}
player.width = 50
player.height = 50
player.x = ww / 2 - player.width / 2
player.y = wh / 2 - player.height / 2
player.speed = 200

local activeCoins = {}

local function spawnCoin(n)
	local radius = 20
	for _ = 1, n do
		local x = love.math.random(radius, ww - radius)
		local y = love.math.random(radius, wh - radius)
		table.insert(activeCoins, {x = x, y = y, radius = radius})
	end
end

function love.load()
	spawnCoin(5)
end

---Detect collision between rectangle and circle
---@param a any player
---@param b any coin
---@return boolean
local function detectCollision(a, b)
	if (a.x + a.width >= b.x - b.radius and a.x <= b.x + b.radius) and
	(a.y + a.height >= b.y - b.radius and a.y <= b.y + b.radius) then
		return true
	else
		return false
	end
end

local function removeCoin(i)
	table.remove(activeCoins, i)
end

local function playerMovement(dt)
	if love.keyboard.isDown("a") then
		player.x = player.x - player.speed * dt
	end
	if love.keyboard.isDown("d") then
		player.x = player.x + player.speed * dt
	end
	if love.keyboard.isDown("w") then
		player.y = player.y - player.speed * dt
	end
	if love.keyboard.isDown("s") then
		player.y = player.y + player.speed * dt
	end
end

local function updateCoins()
	for i, coin in ipairs(activeCoins) do
		if detectCollision(player, coin) then
			removeCoin(i)
		end
	end
end

function love.update(dt)
	playerMovement(dt)
	updateCoins()
end

local function drawActiveCoins()
	for _, coin in ipairs(activeCoins) do
		love.graphics.setColor(1, 1, 1)
		love.graphics.circle("fill", coin.x, coin.y, coin.radius)
	end
end

local function drawPlayer()
	love.graphics.setColor(0, 1, 0)
	love.graphics.rectangle("fill", player.x, player.y, player.width, player.height)
end

function love.draw()
	drawActiveCoins()
	drawPlayer()
end