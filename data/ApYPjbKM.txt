void openDoor(int** &main_maze, int doorI, int doorJ) {
    if (door1.i == doorI && door1.j == doorJ) {
        door1.isOpen = true;
    } else {
        door2.isOpen = true;
    }
    main_maze[doorI][doorJ] = pass;
}

sf::Vector2i findNearestDoor(int i, int j) {
    int n = 0;
    sf::Vector2i result;
    do{
        n++;
        for (int k=0; k<n; k++) {
            if (maze[i][j] == room_door) {
                result.x = i;
                result.y = j;
                return result;
            }
            i--;
        }
        for (int k=0; k<n; k++) {
            if (maze[i][j] == room_door) {
                result.x = i;
                result.y = j;
                return result;
            }
            j++;
        }
        n++;
        for (int k=0; k<n; k++) {
            if (maze[i][j] == room_door) {
                result.x = i;
                result.y = j;
                return result;
            }
            i++;
        }
        for (int k=0; k<n; k++) {
            if (maze[i][j] == room_door) {
                result.x = i;
                result.y = j;
                return result;
            }
            j--;
        }
    }
    while (true);
}