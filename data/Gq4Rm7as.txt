#include <iostream>
#include <cmath>
#include <vector>
#include <queue>
#include <algorithm>
#include <string>
#include <stack>
#include <set>
#include <map>
#define pii pair <int, int>
#define pb(x) push_back(x)
using namespace std;
using ll = long long;
using ld = long double;
using db = double;
void cv(vector <int> &v) {
    for (auto x : v) cout << x << ' ';
    cout << "\n";
}

void cvl(vector <ll> &v) {
    for (auto x : v) cout << x << ' ';
    cout << "\n";
}


void cvv(vector <vector <int> > &v) {
    for (auto x : v) cv(x);
    cout << "\n";
}

void cvb(vector <bool> v) {
    for (bool x : v) cout << x << ' ';
    cout << "\n";
}

void cvs(vector <string>  v) {
    for (auto a : v) {
        cout << a << "\n";
    }
}

void cvp(vector <pii> a) {
    for (auto p : a) {
        cout << p.first << ' ' << p.second << "\n";
    }
    cout << "\n";
}

string to(int x) {
    string r;
    while (x > 0) {
        r += x % 2 + '0';
        x /= 2;
    }
    reverse(r.begin(), r.end());
    return r;
}

int f(int x) {
    string s = to(x);
    int k = 0;
    for (char l: s) {
        k += l - '0';
    }
    k %= 2;
    s += k + '0';

    k = 0;
    for (char l: s) {
        k += l - '0';
    }
    k %= 2;
    s += k + '0';

    int r = 0;
    reverse(s.begin(), s.end());
    for (int i = 0; i < s.size(); ++i) {
        r += (s[i] - '0') * pow(2, i);
    }
    return r;
}

int main() {
    ios::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
    for (int i = 0; i < 100; ++i) {
        int r = f(i);
        cout << to(i) << ' ' << to(r) << "\n";
        if (r > 55) {
            cout << r;
            break;
        }
    }
}
