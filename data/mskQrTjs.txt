#include "stdio.h"
#include "math.h"
#include "stdlib.h"

char check(long long N, long double C, long long P, long long mid) { //Функция проверки подходит ли количество денег для оплаты долга(0 если не подходит, 1 если подходит)
    for (int i = 0; i < N * 12; i++) { //Проходимся по каждому месяцу
        C -= (long double)mid; //Вычисляем из общего числа долга

        if (C <= 0) { //Если долг выплачен, то возвращаем 1
            return 1;
        }

        C += C * ((long double)P / 100); // Если еще не выплачен, то прибавляем проценты
        C = ceill(C); // Округляем вверх

        if (C > 1000000000) { //Если сумма долга превышает 1000000000, то больше нет смысла платить долг, так как было бы выгоднее 1 раз заплатить всю сумму, иначе никогда не выплатим долг, и эта проверка сделана, чтобы C не превышала максимального значения long long
            return 0;
        }
    }

    return 0; // Если за все месяцы мы не выплатили долг, то возвращаем 0 соответственно
}

int main() {
    freopen("input.txt","r",stdin);
    freopen("output.txt","w",stdout);

    long long N, P, c;
    scanf("%lld %lld %lld", &N, &P, &c);

    long double C = (long double)c; // для удобства делаем C в виде вещественного числа

    int max = 1000000000; //Максимально возможная выплата долга, хотя лучше поставить C
    int min = 0; // Для удобства минимально возможно, хотя лучше поставить 1, тк 0 невозможен
    int mid = 500000000;// среднее значение, но лучше abs(max - min) / 2

    while(1) { //Здесь идет бинарный поиск работает за (N * 12) * log(max), но если учесть вышесказанные замечания, то (N*12)*log(C)
        char checker_minus = check(N, C, P, mid-1); // C Эту
        char checker = check(N, C, P, mid);
        char checker_plus = check(N, C, P, mid + 1);

        if (checker_minus == 0 && checker == 1) {
            printf("%d", mid);
            return 0;
        }

        if (checker_plus == 1 && checker == 0) {
            printf("%d", mid + 1);
            return 0;
        } //По эту у нас условие выхода

        if (checker == 0) { //С эту 
            min = mid;
            mid += abs(max - mid) / 2;
        } else {
            max = mid;
            mid -= abs(mid - min) / 2;
        } //По эту мы меняем наш mid в зависимости от того подходит ли предыдущий mid или нет
    }

    return 0;
}