package com.mojadiapp.pro.presentation.dashboard.fragment.payment.detail_payment.viewModel

import androidx.lifecycle.LiveData
import androidx.lifecycle.MutableLiveData
import androidx.lifecycle.ViewModel
import androidx.lifecycle.viewModelScope
import com.mojadiapp.pro.core.network.NetworkResult
import com.mojadiapp.pro.data.remote.dto.payment_course.BuyCourseDto
import com.mojadiapp.pro.data.remote.response.ResponseApi
import com.mojadiapp.pro.domain.repository.NetworkRepository
import dagger.hilt.android.lifecycle.HiltViewModel
import kotlinx.coroutines.launch
import javax.inject.Inject

@HiltViewModel
class BuyCourseViewModel @Inject constructor(
    private val networkRepository: NetworkRepository
) : ViewModel(){
    private val _buyCourse : MutableLiveData<NetworkResult<ResponseApi<BuyCourseDto>>> = MutableLiveData()
    val responseBuyCourse : LiveData<NetworkResult<ResponseApi<BuyCourseDto>>> = _buyCourse

    fun buyCourse(ids: ArrayList<Int>, bankName:String) = viewModelScope.launch {
        networkRepository.buyItemCourse(ids,bankName).collect{
            _buyCourse.value = it
        }
    }
}