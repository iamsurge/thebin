<?php
abstract class Generic {
    
    private static $reflectionCache = [];
    private static $object;
    
    public static function fromJson(object $json): self {
        
        self::$object = new static;
        print_r($json);
        self::setProperties($json);
        
        return self::$object;
        
    }
    
    private static function setProperties(object $json) {
        foreach (self::getProperties() as $property) {
            if ($property->getType()->getName() === 'bool') {
                self::$object->{$property->name} = (bool) $json->{$property->name};
            }
            if ($property->getType()->getName() === 'int') {
                self::$object->{$property->name} = (int) $json->{$property->name};
            }
            if ($property->getType()->getName() === 'string') {
                self::$object->{$property->name} = (int) $json->{$property->name};
            }
            if (class_exists($property->getType()->getName())) {
                $className = $property->getType()->getName();
                
                echo $className."\n";
                
                $reflection = new ReflectionClass($className);
                $instance = $reflection->newInstanceWithoutConstructor();
                #$test = new ReflectionMethod($className, 'fromJson');
                
                
        
                #$test->invoke($instance, $json);
                
                #self::$object->{$property->name} = $instance::fromJson($json->{$property->name});
            }
        }
    }
    
    private static function getProperties(): array {
        return self::getReflection()->getProperties();
    }
    
    private static function getReflection(): ReflectionClass
    {
        $class = static::class;

        return self::$reflectionCache[$class] ??= new ReflectionClass($class);
    }
}
    
class MainDto extends Generic {
    public string $name;
    public bool $status;
    public int $numbers;
    public KeyValueDto $settings;
}
    
class KeyValueDto extends Generic {
    public string $key;
    public string $value;
    
    public function __construct(string $key, string $value) {
        $this->key = $key;
        $this->value = $value;
    }
}
    
$demoData = new stdClass;
$demoData->name = 'My Name';
$demoData->status = true;
$demoData->numbers = 42;
$demoData->settings = new KeyValueDto('license', 'ABC-DEF-GHI');

$jsonString = json_encode($demoData);
echo $jsonString;
echo "\n\n";
$jsonObject = json_decode($jsonString);

print_r(MainDto::fromJson($jsonObject));
    