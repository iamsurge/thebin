#include <iostream>
#include <cmath>
#include <vector>
#include <queue>
#include <algorithm>
#include <string>
#include <stack>
#include <set>
#include <map>
#define pii pair <int, int>
#define pb(x) push_back(x)
using namespace std;
using ll = long long;
using ld = long double;
using db = double;
void cv(vector <int> &v) {
    for (auto x : v) cout << x << ' ';
    cout << "\n";
}

void cvl(vector <ll> &v) {
    for (auto x : v) cout << x << ' ';
    cout << "\n";
}


void cvv(vector <vector <int> > &v) {
    for (auto x : v) cv(x);
    cout << "\n";
}

void cvb(vector <bool> v) {
    for (bool x : v) cout << x << ' ';
    cout << "\n";
}

void cvs(vector <string>  v) {
    for (auto a : v) {
        cout << a << "\n";
    }
}

void cvp(vector <pii> a) {
    for (auto p : a) {
        cout << p.first << ' ' << p.second << "\n";
    }
    cout << "\n";
}

int n;

int f(vector <int> a) {
    for (int k: {0, 1} ) {
        if (count(a.begin(), a.end(), k) == 0) {
            return 0;
        }
    }
    vector <int> cnt(n, 0);
    cnt[0] = a[0];
    for (int i = 1; i < n; ++i) {
        cnt[i] = cnt[i - 1] + a[i];
    }
    int res = 2e9;
    for (int i = 0; i < n; ++i ) {
        int bl = n - 1 - i - (cnt[n - 1] - cnt[i]);
        int now = cnt[i] + bl;
        res = min(res, now);
    }
    return res;
}


int main() {
    ios::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);

    cin >> n;
    vector <int> a(n);
    for (int &i: a) cin >> i;
    int v1 = f(a);
    reverse(a.begin(), a.end());
    int v2 = f(a);
    int ans = min(v1, v2);
    cout << ans;
}
