#include<stdio.h>
#include<stdlib.h>
struct node
{
	int data;
	struct node *right;
	struct node *left;
};

struct node* create_node(int x)
{
	struct node *temp;
	temp=malloc(sizeof(struct node));
	temp->data=x;
	temp->left=NULL;
	temp->right=NULL;
	return temp;
}

struct node* insert(struct node *root,int x)
{
	if(root==NULL)
		return create_node(x);
	if(x > root->data)
		root->right=insert(root->right,x);
	else
		root->left=insert(root->left,x);
	return root;
}

// Inorder Traversal
void inorder(struct node *root)
{
    if(root!=NULL) // checking if the root is not null
    {
        inorder(root->left); // traversing left child
        printf(" %d ", root->data); // printing data at root
    	inorder(root->right);// traversing right child
    }
}

void main()
{
	int ch,x,i=1;
    struct node *root;
    while(1)
    {
    	printf("\n 1.insert node");
    	printf("\n 2.Inorder");
    	printf("\n 3.Exit");
    	printf("\n Enter your choice");
    	scanf("%d",&ch);
    	if(ch==3)
    		break;
    	switch(ch)
    	{
    		case 1:
    			printf("\n Enter value=>");
    			scanf("%d",&x);
    			if(i==1)
    			{
					root=create_node(x);
					i++;
				}
				else
				{
					insert(root,x);
				}
    			printf("\n Insert thy gayu");
    			break;
    	
    		case 2:
    			inorder(root);
    			break;
		}
	}
}

