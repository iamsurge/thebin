bool PopulateAionInfoDB()
{
	// Always run this function in a thread (and don't call functions within this routine as new thread)
	AionInfoDB_WaitForFileExtraction_mutex.lock();
	AionInfoDB_Initializing_mutex.lock();
	if (!AionInfoDB.IsOpen())
		OpenAionInfoDB();

	printf("\n \nAionInfoDB:: ****");
	printf("AionInfoDB:: isxAion will now populate the AionInfo Database (AionInfo.sql3) with");
	printf("AionInfoDB:: -GatherData-, -AbyssRanks-, -NPCInfo-, -ClientSkills-, -ClientItems-, and");
	printf("AionInfoDB::  -ClientStrings-. This action will take place in a seperate thread, so it"); 
	printf("AionInfoDB::  will not impact your Aion client.  However, you will need to monitor");
	printf("AionInfoDB:: this console window to know when the process has been completed.\n");
	printf("AionInfoDB:: Please be advised that this process may take a few minutes to complete.");
	printf("AionInfoDB:: You will know when it is complete after all four areas (mentioned above) have");
	printf("AionInfoDB::  \"finished\".\n\n");
	printf("AionInfoDB:: If you find that you need to quit Aion before the process has finished,");
	printf("AionInfoDB:: then you will need to enter the following command in this console next time");
	printf("AionInfoDB:: you load isxAion:");
	printf("AionInfoDB::       ISXAion:RebuildDB\n\n");
	printf("AionInfoDB:: The database created can be found in your InnerSpace/Extensions/isxAion/ClientData/ directory.");
	printf("AionInfoDB:: ****");

	///////////////
	// Set DB Version Information
	CppSQLite3Buffer bufSQL;
	try 
	{
		bufSQL.format("insert into DBInfo (id,isxAion_version_when_created) values (%d,%Q);",1,pExtension->DLLVersionInfo.GetProductVersion().c_str());
		AionInfoDB.execDML(bufSQL);
	}
	catch (CppSQLite3Exception& e)
	{
		printf("AionInfoDB:: Error inserting record into 'DBInfo' table. (Error: %s)",e.errorMessage());
	}
	//
	///////////////


	ProcessGatherDataXMLFile();
	ProcessNPCInfoXMLFile();
	ProcessClientStringsXMLFiles();
	ProcessClientSkillsXMLFile();
	ProcessClientItemsXMLFiles();
	// Always make sure that AbyssRanks is the LAST one processed so that it can properly tell the user that everything has finished.
	ProcessAbyssRanksXMLFile(true);

	AionInfoDB_WaitForFileExtraction_mutex.unlock();
	AionInfoDB_Initializing_mutex.unlock();

	printf("AionInfoDB:: **FINISHED**  isxAion is now ready for use.");
	return true;
}