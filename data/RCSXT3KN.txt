# 
#   _____ _                       __     _             
#  |_   _(_)_ __ ___   ___  ___  / _| __| | __ _ _   _ 
#    | | | | '_ ` _ \ / _ \/ _ \| |_ / _` |/ _` | | | |
#    | | | | | | | | |  __/ (_) |  _| (_| | (_| | |_| |
#    |_| |_|_| |_| |_|\___|\___/|_|  \__,_|\__,_|\__, |
#                                                |___/ 
# 


# Flexible start of time periods (morning, afternoon, evening, night)
# 

input_datetime:
# Timeofday Input Helpers : Minimum Time for Start of period of day for Workdays
  mattino_min_feriale:
    name: "Inizio Minimo Mattino Feriale"
    <<: &tod_anc1
      icon: mdi:progress-clock
      has_date: false
      has_time: true
  pomeriggio_min_feriale:
    name: "Inizio Minimo Pomeriggio Feriale"
    <<: *tod_anc1
  sera_min_feriale:
    name: "Inizio Minimo Sera Feriale"
    <<: *tod_anc1
  notte_min_feriale:
    name: "Inizio Minimo Notte Feriale"
    <<: *tod_anc1
# Timeofday Input Helpers : Minimum Time for Start of period of day for Holydays
  mattino_min_festivo:
    name: "Inizio Minimo Mattino Festivo"
    <<: *tod_anc1
  pomeriggio_min_festivo:
    name: "Inizio Minimo Pomeriggio Festivo"
    <<: *tod_anc1
  sera_min_festivo:
    name: "Inizio Minimo Sera Festivo"
    <<: *tod_anc1
  notte_min_festivo:
    name: "Inizio Minimo Notte Festivo"
    <<: *tod_anc1

# Timeofday Input Helpers : Maximum Time for Start period of of day Workdays
  mattino_max_feriale:
    name: "Inizio Massimo Mattino Feriale"
    <<: *tod_anc1
  pomeriggio_max_feriale:
    name: "Inizio Massimo Pomeriggio Feriale"
    <<: *tod_anc1
  sera_max_feriale:
    name: "Inizio Massimo Sera Feriale"
    <<: *tod_anc1
  notte_max_feriale:
    name: "Inizio Massimo Notte Feriale"
    <<: *tod_anc1
# Timeofday Input Helpers :  Maximum Time for Start period of of day Holidays
  mattino_max_festivo:
    name: "Inizio Massimo Mattino Festivo"
    <<: *tod_anc1
  pomeriggio_max_festivo:
    name: "Inizio Massimo Pomeriggio Festivo"
    <<: *tod_anc1
  sera_max_festivo:
    name: "Inizio Massimo Sera Festivo"
    <<: *tod_anc1
  notte_max_festivo:
    name: "Inizio Massimo Notte Festivo"
    <<: *tod_anc1

# Timeofday Input Helpers : Actual Time for Start period of of day Workdays
  mattino_act_feriale:
    name: "Inizio Effettivo Mattino Feriale"
    <<: *tod_anc1
  pomeriggio_act_feriale:
    name: "Inizio Effettivo Pomeriggio Feriale"
    <<: *tod_anc1
  sera_act_feriale:
    name: "Inizio Effettivo Sera Feriale"
    <<: *tod_anc1
  notte_act_feriale:
    name: "Inizio Effettivo Notte Feriale"
    <<: *tod_anc1
# Timeofday Input Helpers : Actual Time for Start period of of day Holydays
  mattino_act_festivo:
    name: "Inizio Effettivo Mattino Festivo"
    <<: *tod_anc1
  pomeriggio_act_festivo:
    name: "Inizio Effettivo Pomeriggio Festivo"
    <<: *tod_anc1
  sera_act_festivo:
    name: "Inizio Effettivo Sera Festivo"
    <<: *tod_anc1
  notte_act_festivo:
    name: "Inizio Effettivo Notte Festivo"
    <<: *tod_anc1
# Timeofday Input Helpers : Actual Time for Start period of day
  mattino_act:
    name: "Inizio Mattino"
    <<: *tod_anc1
  pomeriggio_act:
    name: "Inizio Pomeriggio"
    <<: *tod_anc1
  sera_act:
    name: "Inizio Sera"
    <<: *tod_anc1
  notte_act:
    name: "Inizio Notte"
    <<: *tod_anc1



input_boolean:
  tod_trigger:
    name: "Trigger Fascia"
    icon: mdi:shimmer

input_text:
  current_datetime:
    name: "Date Time da aggiornare"


template:
  - binary_sensor: 
      - 
        name: "Mattino"
        icon: mdi:weather-sunset-up                     
        state: >-
          {% set t1 = states('input_datetime.mattino_act_' ~ states('sensor.feriale_festivo')) %}
          {% set t2 = states('input_datetime.pomeriggio_act_' ~ states('sensor.feriale_festivo')) %}
          {% set t = states('sensor.time') ~ ':00' %}
          {{           (t < t2 or t1 <= t) if t1 > t2 else t1 <= t < t2  }}      
        unique_id: mattino
      - 
        name: "Pomeriggio"
        icon: mdi:weather-sunny          
        state: >
          {% set t1 = states('input_datetime.pomeriggio_act_' ~ states('sensor.feriale_festivo')) %}
          {% set t2 = states('input_datetime.sera_act_' ~ states('sensor.feriale_festivo')) %}
          {% set t = states('sensor.time') ~ ':00' %}
          {{           (t < t2 or t1 <= t) if t1 > t2 else t1 <= t < t2  }}      
        unique_id: pomeriggio
      - 
        name: "Sera"
        icon: mdi:weather-sunset-down
        state: >
          {% set t1 = states('input_datetime.sera_act_' ~ states('sensor.feriale_festivo')) %}
          {% set t2 = states('input_datetime.notte_act_' ~ states('sensor.feriale_festivo')) %}
          {% set t = states('sensor.time') ~ ':00' %}
          {{           (t < t2 or t1 <= t) if t1 > t2 else t1 <= t < t2  }}      
        unique_id: sera
      - 
        name: "Notte"
        icon: mdi:weather-night
        state: >
          {% set t1 = states('input_datetime.notte_act_' ~ states('sensor.feriale_festivo')) %}
          {% set t2 = states('input_datetime.mattino_act_' ~ states('sensor.feriale_festivo')) %}
          {% set t = states('sensor.time') ~ ':00' %}
          {{           (t < t2 or t1 <= t) if t1 > t2 else t1 <= t < t2  }}      
        unique_id: notte
  - sensor: 
      - 
        name: "Fascia del Giorno"
        state: >
          {% if states('binary_sensor.mattino') == "on" %}
            Mattino
          {% elif states('binary_sensor.pomeriggio') == "on" %}
            Pomeriggio
          {% elif states('binary_sensor.sera') == "on" %}
            Sera
          {% elif states('binary_sensor.notte') == "on" %}
            Notte
          {% else %}
            unknown
          {% endif %}
        unique_id: tod

automation:
  - id: A_TOD0_01
    alias: "A_TOD0_01 - Inizio Fascia Anticipo"
    initial_state: true
    mode: single
    max_exceeded: silent
    trigger:  
      - id: "mattino_min_festivo"
        platform: time
        at: input_datetime.mattino_min_festivo
      - id: "pomeriggio_min_festivo"
        platform: time
        at: input_datetime.pomeriggio_min_festivo
      - id: "sera_min_festivo"
        platform: time
        at: input_datetime.sera_min_festivo
      - id: "notte_min_festivo"
        platform: time
        at: input_datetime.notte_min_festivo
      - id: "mattino_min_feriale"
        platform: time
        at: input_datetime.mattino_min_feriale
      - id: "pomeriggio_min_feriale"
        platform: time
        at: input_datetime.pomeriggio_min_feriale
      - id: "sera_min_feriale"
        platform: time
        at: input_datetime.sera_min_feriale
      - id: "notte_min_feriale"
        platform: time
        at: input_datetime.notte_min_feriale
    condition: []
    action:
      - service: input_boolean.turn_off
        target:
          entity_id: input_boolean.tod_trigger
      - service: input_text.set_value
        target:
          entity_id: input_text.current_datetime
        data:
          value: "{{ trigger.id }}"
      - service: input_datetime.set_datetime
        target:
          entity_id: input_datetime.{{ trigger.id | replace('min','act') }}
        data:
          time: >
            {% set ent = 'input_datetime.' ~ trigger.id | replace('min','max') %}
            {{ states(ent) }}

  - id: A_TOD0_02
    alias: "A_TOD0_02 - Attivazione Anticipata Fascia"
    initial_state: true
    mode: single
    max_exceeded: silent
    trigger:
      - platform: state
        entity_id: input_boolean.tod_trigger
        to: "on"
    condition: "{{ states('input_datetime.' ~ states.input_text.current_datetime.state | replace('min','max')) == states('input_datetime.' ~ states.input_text.current_datetime.state | replace('min','act')) }}"
    action:
      - service: input_datetime.set_datetime
        target:
          entity_id: >
            {{ 'input_datetime.' ~ states.input_text.current_datetime.state | replace('min','act') }}
        data:
          time: >
            {{ now().strftime('%H:%M') }}
      - service: input_datetime.set_datetime
        target:
          entity_id: >
            {{ 'input_datetime.' ~ states.input_text.current_datetime.state | replace('min','act') | replace('_feriale','') | replace('_festivo','') }}
        data:
          time: >
            {{ states('input_datetime.' ~ states.input_text.current_datetime.state | replace('min','act')) }}
      - service: input_boolean.turn_off
        target:
          entity_id: input_boolean.tod_trigger

  - id: A_TOD0_03
    alias: "A_TOD0_03 - Attivazione Anticipata Fascia Dopo Primo trigger"
    initial_state: true
    mode: single
    max_exceeded: silent
    trigger:
      - platform: state
        entity_id: input_boolean.tod_trigger
        to: "on"
    condition: "{{ states('input_datetime.' ~ states.input_text.current_datetime.state | replace('min','max')) > states('input_datetime.' ~ states.input_text.current_datetime.state | replace('min','act')) }}"
    action:
      - service: input_boolean.turn_off
        target:
          entity_id: input_boolean.tod_trigger

  - id: A_TOD0_04
    alias: "A_TOD0_04 - Attivazione Fascia - Prima Attivazione"
    initial_state: true
    mode: single
    max_exceeded: silent
    trigger:
      - platform: time
        at: 
          - input_datetime.mattino_max_feriale
          - input_datetime.pomeriggio_max_feriale
          - input_datetime.sera_max_feriale
          - input_datetime.notte_max_feriale
          - input_datetime.mattino_max_festivo
          - input_datetime.pomeriggio_max_festivo
          - input_datetime.sera_max_festivo
          - input_datetime.notte_max_festivo
    action:
      - service: input_datetime.set_datetime
        target:
          entity_id: >
            {{ 'input_datetime.' ~ states(input_text.current_datetime) | replace('min','act') }}
        data:
          time: >
            {{ now().strftime('%H:%M') }}
      - service: input_boolean.turn_off
        target:
          entity_id: input_boolean.tod_trigger

script:
  inizializza_fasce:
    alias: "S_TOD0_01 - Inizializza fasce"
    description: "Inizializza fasce all'avvio"
    mode: single
    sequence:
      - service: input_datetime.set_datetime
        target:
          entity_id: input_datetime.mattino_act_festivo
        data:
          time: >
            {{ states('input_datetime.mattino_max_festivo') }}
      - service: input_datetime.set_datetime
        target:
          entity_id: input_datetime.pomeriggio_act_festivo
        data:
          time: >
            {{ states('input_datetime.pomeriggio_max_festivo') }}
      - service: input_datetime.set_datetime
        target:
          entity_id: input_datetime.sera_act_festivo
        data:
          time: >
            {{ states('input_datetime.sera_max_festivo') }}
      - service: input_datetime.set_datetime
        target:
          entity_id: input_datetime.notte_act_festivo
        data:
          time: >
            {{ states('input_datetime.notte_max_festivo') }}
      - service: input_datetime.set_datetime
        target:
          entity_id: input_datetime.mattino_act_feriale
        data:
          time: >
            {{ states('input_datetime.mattino_max_feriale') }}
      - service: input_datetime.set_datetime
        target:
          entity_id: input_datetime.pomeriggio_act_feriale
        data:
          time: >
            {{ states('input_datetime.pomeriggio_max_feriale') }}
      - service: input_datetime.set_datetime
        target:
          entity_id: input_datetime.sera_act_feriale
        data:
          time: >
            {{ states('input_datetime.sera_max_feriale') }}
      - service: input_datetime.set_datetime
        target:
          entity_id: input_datetime.notte_act_feriale
        data:
          time: >
            {{ states('input_datetime.notte_max_feriale') }}
      - service: input_datetime.set_datetime
        target:
          entity_id: input_datetime.start_morning
        data:
          time: >
            {{ states('input_datetime.mattino_act_'~ states('sensor.feriale_festivo')) }}
      - service: input_datetime.set_datetime
        target:
          entity_id: input_datetime.start_afternoon
        data:
          time: >
            {{ states('input_datetime.pomeriggio_act_'~ states('sensor.feriale_festivo')) }}
      - service: input_datetime.set_datetime
        target:
          entity_id: input_datetime.start_evening
        data:
          time: >
            {{ states('input_datetime.sera_act_'~ states('sensor.feriale_festivo')) }}
      - service: input_datetime.set_datetime
        target:
          entity_id: input_datetime.start_night
        data:
          time: >
            {{ states('input_datetime.notte_act_'~ states('sensor.feriale_festivo')) }}

