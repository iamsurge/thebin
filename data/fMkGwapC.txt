function Run()
	if script:FindFirstChild("OnScriptRun") then
		local lineDescendants = script:FindFirstChild("OnScriptRun"):GetDescendants()
	
		for _, Lines in pairs(lineDescendants) do
			if Lines:GetAttribute("Line") == RunningAt then
				if Lines.Name == "wait" then
					local useLocal = Lines:GetAttribute("useLocal")
					local LocalPath = Lines:GetAttribute("local")
					
					if useLocal == true then
						for _, Wait_Lines in pairs(lineDescendants) do
							if Wait_Lines.Name == "local" and Wait_Lines.Value == LocalPath then
								local Value = Wait_Lines:GetAttribute("Value")
								
								if Value == "Custom" and Wait_Lines:FindFirstChild("Custom") then
									local Custom = Wait_Lines:WaitForChild("Custom")
									local Path = Custom.Value
									
									local types = Custom:GetAttribute("type")
									
									if types == "Value" then
										--print("Waiting "..tostring(Path.Value).." seconds.")
										wait(tonumber(Path.Value))
									end
								else
									--print("Waiting "..tostring(Lines.Value).." seconds.")
									wait(tonumber(Lines.Value))
								end
							end
						end
					else
						Lua = Lua.."wait("..Lines.Value..[[)\]] --wait(Value) \n
					end
				elseif Lines.Name == "print" then
					local useLocal = Lines:GetAttribute("useLocal")
					local LocalPath = Lines:GetAttribute("local")

					if useLocal == true then
						
					else
						print(tostring(Lines.Value))
					end
				elseif Lines.Name == "Space" then
					Lua = Lua..[[\]]
				end
				
				RunningAt = RunningAt + 1
				LineRunned = LineRunned + 1
				break
			end
		end
	elseif script:FindFirstChild("While()Do") then
		print("Not Built")
	end
	
	if LineRunned < totalLines then
		Run()
	end
end