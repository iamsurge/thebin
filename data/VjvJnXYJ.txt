def solve(n, edges):
    def dfs(g, c, vis, res):
        vis[c] = True
        for adj in g[c]:
            if not vis[adj]:
                dfs(g, adj, vis, res)
            elif adj in res:
                res.remove(adj)

    g = {}
    for i in range(n):
        g[i] = []
    for e in edges:
        u, v = e
        g[u].append(v)

    res = set()
    vis = [False] * n
    for i in range(n):
        if not vis[i]:
            dfs(g, i, vis, res)
            res.add(i)
    return list(res)

T = int(input())

for t in range(T):
    N, M = map(int, input().split())
    edges = []
    for m in range(M):
        a, b = map(int, input().split())
        edges.append([a-1, b-1])
    ans = solve(N, edges)
    print(len(ans))