#include<bits/stdc++.h>
using namespace std;
int v[100010],dis[100010];
vector<int > g[100010];
vector<int > disNode[100010];
queue<int> que;
priority_queue<int > heap;
int main(){
	int n,m,st,mx=0;
	scanf("%d %d %d",&n,&m,&st);
	for(int i=1;i<=n;i++){
		scanf("%d",&v[i]);
		dis[i] = 1e9;
	}
	while(m--){
		int u,v;
		scanf("%d %d",&u,&v);
		g[u].push_back(v);
		g[v].push_back(u);
	}
	que.push(st);
	dis[st] = 0;
	while(!que.empty()){
		int now = que.front();
		que.pop();
		mx = max(mx,dis[now]);
		for(auto x:g[now]){
			if(dis[x]>dis[now]+1){
				dis[x] = dis[now]+1;
				que.push(x);
			}
		}
	}
	long long ans = 0;
	for(int i=1;i<=n;i++){
		if(v[i] <= 0)		continue;
		if(dis[i] == 1e9)	ans+=v[i];
		else				disNode[dis[i]].push_back(v[i]);
	}
	for(int i=mx;i>0;i--){
		for(auto x:disNode[i])
			heap.push(x);
		if(!heap.empty()){
			ans+=heap.top();
			heap.pop();
		}
	}
	printf("%lld\n",ans);
	return 0;
}