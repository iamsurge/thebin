using System;

namespace ConsoleApp1
{
    class program
    {
        static public void Main()
        {
            linkedList l1 = new linkedList();
            for(int i = 1; i <1000; ++i)
            {
                Random rd = new Random();
                l1.add(rd.Next(0, 1000));
            }
            l1.print();

            linkedList l2 = new linkedList();
            for (int i = 1; i < 1000; ++i)
            {
                Random rd = new Random();
                l1.add(rd.Next(0, 1000));
            }
            l2.print();
            note n = l2.getHead();
            for (int i = 1; i < 1000; ++i)
            {
                if(n._data % 2 == 0) { l2.remove(n); }
                n = n.getNext();
            }
            l2.print();
        }
    }
    class note
    {
        public note _next;
        public note _prev;
        public int _data;
        public note(int val)
        {
            _next = null;
            _prev = null;
            _data = val;
        }
        public note getNext() { return _next; }
        public note getPrev() { return _prev; }
    }

    class linkedList
    {
        private note _head;
        private note _tail;
        public int _len;
        public linkedList()
        {
            _tail = null;
            _head = null;
            _len = 0;
        }

        public note getHead() { return _head; }
        public note getNote(int index)
        {
            note n = _head;
            for (int i = 0; i < index; ++i)
            {
                n = n.getNext();
            }
            return n;
        }
        public int getLen() { return _len; }
        public void add(int val)
        {
            if(_head == null)
            {
                _head = new note(val);
                _tail = _head;
            }
            else
            {
                note n = new note(val);
                _tail._next = n;
                _tail = n;
            }
            _len++;
        }
        public void insert(int index, int val)
        {
            note prev = _head;
            note n = new note(val);

            for (int i = 0; i < index; ++i)
            {
                prev = prev.getNext();
            }
            n._next = prev._next;
            prev._next = n;
            _len++;
        }
        public void removeAt(int index)
        {
            note prev = _head;
            for (int i = 0; i < index; ++i)
            {
                prev = prev.getNext();
            }
            prev._next = prev.getNext().getNext();
            _len--;
        }
        public void remove(note n)
        {
            n._next = n.getNext().getNext();
            n._prev = n.getPrev().getPrev();
            _len--;
        }
        public int get(int index)
        {
            note n = _head;
            for (int i = 0; i < index; ++i)
            {
                n = n.getNext();
            }
            return n._data;
        }
        public int find(int val)
        {
            note n = _head;
            for (int i = 0; i < _len; ++i)
            {
                n = n.getNext();
                if(n._data == val)
                {
                    return n._data;
                }
            }
            return -1;//לבדוק מה להחזיר את המספר לא נמצא
        }
        public void print()
        {
            note n = _head;
            while (n != null)
            {
                Console.WriteLine(n._data);
                n = n.getNext();
            }
        }
        public void printReverse()
        {
            note n = _tail;
            while (n != null)
            {
                Console.WriteLine(n._data);
                n = n.getPrev();
            }
        }
    }
}
