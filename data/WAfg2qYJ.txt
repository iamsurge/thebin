/*Write a code to develop a 2D grid of integers. Each of the boxes in the grid
contains an integer. You have to identify the cell whose sum of adjacent cells
is maximum. Alternatively you can print another 2D grid that contains the sum
of adjacent cells for each existent cell.*/

#include <stdio.h>

int main() {
  int n = 5;
  // scanf("%d",&n);
  // int arr[n][n];
  // int arr2[n][n];
  //
  // for(int i = 1; i <= n; i++){
  //   for(int j = 1; j <= n; j++){
  //     scanf("%d", &arr[i][j]);
  //   }
  // }

  int arr[n][n] = {
                    {1, 2, 3, 4, 5},
                    {6, 7, 8, 9, 10},
                    {11, 12, 13, 14, 15},
                    {16, 17, 18, 19, 20},
                    {21, 22, 23, 24, 25}
                  };

  int max_sum = 0;
  int max_row = 0, max_col = 0;

  for (int i = 1; i < n-1; i++) {
    for (int j = 1; j < n-1; j++) {
      int sum = arr[i - 1][j] + arr[i + 1][j] + arr[i][j - 1] + arr[i][j + 1];
      if (sum > max_sum) {
        max_sum = sum;
        max_row = i;
        max_col = j;
      }
    }
  }
  printf("Cell (%d, %d) has the maximum sum of %d among its adjacent cells.\n", max_row, max_col, max_sum);

  int arr1[n][n];
  for (int i = 1; i < n - 1 ; i++) {
    for (int j = 1; j < n - 1; j++) {
      // Initialize sum to the value of the current cell
      arr1[i][j] = arr[i][j];

      // Check for top row and add value of cell above if it exists
      if (i > 0) {
        arr1[i][j] += arr[i - 1][j];
      }
      // Check for bottom row and add value of cell below if it exists
      if (i < n - 1) {
        arr1[i][j] += arr[i + 1][j];
      }
      // Check for left column and add value of cell to the left if it exists
      if (j > 0) {
        arr1[i][j] += arr[i][j - 1];
      }
      // Check for right column and add value of cell to the right if it exists
      if (j < n - 1) {
        arr1[i][j] += arr[i][j + 1];
      }
    }
  }

  printf("Sum grid:\n");
  for (int i = 1; i < n-1; i++) {
    for (int j = 1; j < n-1; j++) {
      printf("%d ", arr1[i][j]);
    }
    printf("\n");
  }

  return 0;
}