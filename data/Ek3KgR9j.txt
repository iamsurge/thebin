海阔视界规则分享，当前分享的是：二级页面详情￥page_detail￥爱奇艺-唐朝诡事录@@eyJkYXRhIjoie1wiYXNzb2NpYXRlZE1vZGVsc01hcEZvckpvaW5UYWJsZVwiOnt9LFwiYXNzb2NpYXRlZE1vZGVsc01hcFdpdGhGS1wiOnt9LFwiYXNzb2NpYXRlZE1vZGVsc01hcFdpdGhvdXRGS1wiOnt9LFwiZmllbGRzVG9TZXRUb0RlZmF1bHRcIjpbXSxcImlkXCI6MCxcImxhc3RfY2hhcHRlcl9ydWxlXCI6XCJqczpcXG5mdW5jdGlvbiBnZXREb3ViYW5SZXModXJsKSB7XFxuICAgIGlmICh1cmwuaW5kZXhPZignYXBpa2V5JykgPT09IC0xKSB7XFxuICAgICAgICB1cmwgKz0gKHVybC5pbmRleE9mKCc/JykgPT09IC0xID8gJz8nIDogJyYnKSArIFxcXCJhcGlrZXk9MGRhZDU1MWVjMGY4NGVkMDI5MDdmZjVjNDJlOGVjNzBcXFwiXFxuICAgIH1cXG4gICAgbGV0IHMgPSBmZXRjaCh1cmwsIHtcXG4gICAgICAgIGhlYWRlcnM6IHtcXG4gICAgICAgICAgICBcXFwiVXNlci1BZ2VudFxcXCI6IFxcXCJSZXh4YXItQ29yZS8wLjEuMyBhcGktY2xpZW50LzEgY29tLmRvdWJhbi5mcm9kby83LjkuMC5iZXRhMigyMTUpIEFuZHJvaWQvMjUgcHJvZHVjdC9UQVMtQUwwMCB2ZW5kb3IvSFVBV0VJIG1vZGVsL1RBUy1BTDAwICByb20vYW5kcm9pZCAgbmV0d29yay93aWZpICBwbGF0Zm9ybS9tb2JpbGUgY29tLmRvdWJhbi5mcm9kby83LjkuMC5iZXRhMigyMTUpIFJleHhhci8xLjIuMTUxICBwbGF0Zm9ybS9tb2JpbGUgMS4yLjE1MVxcXCJcXG4gICAgICAgIH0sXFxuICAgICAgICBtZXRob2Q6ICdQT1NUJyxcXG4gICAgICAgIGJvZHk6ICdob3N0PWZyb2RvLmRvdWJhbi5jb20nXFxuICAgIH0pO1xcbiAgICByZXR1cm4gSlNPTi5wYXJzZShzKTtcXG59XFxubGV0IHR5cGUgPSBnZXRQYXJhbSgndHlwZScsICcnKSxcXG4gICAgaWQgPSBnZXRQYXJhbSgnaWQnLCAnJyksXFxuICAgIHRpdGxlID0gZ2V0UGFyYW0oJ3RpdGxlJywgJycpO1xcbmxldCByZXMgPSBnZXREb3ViYW5SZXMoXFxcImh0dHBzOi8vZnJvZG8uZG91YmFuLmNvbS9hcGkvdjIvXFxcIiArIHR5cGUgKyBcXFwiL1xcXCIgKyBpZCk7XFxubGV0IHVwZGF0ZSA9IFxcXCJcXFwiO1xcbmlmICh0aXRsZSA9PSAnJykge1xcbiAgICBsZXQgbGVuZ3RoID0gcmVzLnZlbmRvcnMubGVuZ3RoO1xcbiAgICB1cGRhdGUgKz0gbGVuZ3RoID4gMCA/ICflhbEnICsgbGVuZ3RoICsgJ+S4queJh+a6kCcgOiAn5pqC5peg54mH5rqQJztcXG4gICAgaWYgKGxlbmd0aCA+IDApIHtcXG4gICAgICAgIGxldCBlID0gcmVzLnZlbmRvcnNbMF07XFxuICAgICAgICB1cGRhdGUgKz0gZS5lcGlzb2Rlc19pbmZvID8gXFxcInxcXFwiICsgZS5lcGlzb2Rlc19pbmZvIDogXFxcIlxcXCI7XFxuICAgIH1cXG59IGVsc2Uge1xcbiAgICBmb3IgKGxldCBlIG9mIHJlcy52ZW5kb3JzKSB7XFxuICAgICAgICBpZiAoZS50aXRsZSA9PSB0aXRsZSkge1xcbiAgICAgICAgICAgIHVwZGF0ZSArPSBlLmVwaXNvZGVzX2luZm8gPyBlLmVwaXNvZGVzX2luZm8gOiBcXFwiXFxcIjtcXG4gICAgICAgICAgICBicmVhaztcXG4gICAgICAgIH1cXG4gICAgfVxcbn1cXG5zZXRSZXN1bHQodXBkYXRlKTtcIixcImxpc3RUb0NsZWFyQXNzb2NpYXRlZEZLXCI6W10sXCJsaXN0VG9DbGVhclNlbGZGS1wiOltdLFwicGFnZUxpc3RcIjpbe1wiY29sX3R5cGVcIjpcIm1vdmllXzNcIixcIm5hbWVcIjpcIumFjee9rue8lui+keeVjOmdolwiLFwicGF0aFwiOlwic2V0dGluZy1lZGl0b3JcIixcInJ1bGVcIjpcImpzOlxcbmV2YWwocmVxdWVzdChnZXRWYXIoJ3FkYl9maWxlJykpKVxcbmxldCBkID0gW107XFxubGV0IGNvbmZpZ1R5cGUgPSBnZXRWYXIoXFxcImlucHV0X2NvbmZpZ190eXBlXFxcIilcXG5pZiAoY29uZmlnVHlwZSA9PT0gJ+ino+aekOaPkuS7tumFjee9ricpIHtcXG4gICAgc2V0UGFnZVRpdGxlKFxcXCLnvJbovpHop6PmnpDku6PnoIFcXFwiKVxcbiAgICBhbmFseXNpc01vZGVFZGl0UGFnZShkKVxcbn0gZWxzZSBpZiAoY29uZmlnVHlwZSA9PT0gJ+W9seeJh+ivpuaDhemhtemdoumFjee9ricpIHtcXG4gICAgc2V0UGFnZVRpdGxlKFxcXCLnvJbovpHlvbHniYfor6bmg4XpobXpnaLku6PnoIFcXFwiKVxcbiAgICBkZXRhaWxWaWV3TW9kZUVkaXRQYWdlKGQpXFxufSBlbHNlIHtcXG4gICAgc2V0RXJyb3IoJ+mUmeivr+eahOmFjee9ricpO1xcbn1cXG5zZXRSZXN1bHQoZClcIn0se1wiY29sX3R5cGVcIjpcIm1vdmllXzNcIixcIm5hbWVcIjpcIuino+mZpOiiq+WwgWlwXCIsXCJwYXRoXCI6XCJyZWxlYXNlSVBcIixcInJ1bGVcIjpcImpzOlxcbmxldCBpZCA9IGdldFBhcmFtKCdpZCcpO1xcbmxldCBkID0gW107XFxuZC5wdXNoKHtcXG4gICAgdGl0bGU6ICfmgqjlt7LooqvlsIHnpoFJUOWcsOWdgOaIluinpuWPkeS6huS6uuacuumqjOivge+8jOivt+aMieeFp+S7peS4i+atpemqpOWkhOeQhijlpoLkuI3lpITnkIbmgqjlsIblnKjkuIDmrrXml7bpl7TlhoXml6Dms5XmraPluLjojrflj5bliafpm4bliJfooagpJyxcXG4gICAgdXJsOiAnaGlrZXI6Ly9lbXB0eScsXFxuICAgIGNvbF90eXBlOiAndGV4dF8xJ1xcbn0pO1xcbmQucHVzaCh7XFxuICAgIHRpdGxlOiAnMS7ngrnlh7vmraTlpITlr7zlhaXoh6rliqjojrflj5ZDb29raWXmj5Lku7YnLFxcbiAgICB1cmw6ICQoKVxcbiAgICAgICAgLmxhenlSdWxlKCgpID0+IHtcXG4gICAgICAgICAgICBsZXQgZ2V0RG91YmFuQ29va2llID0gXFxcIihmdW5jdGlvbigpe2lmKHdpbmRvd1snbG9jYXRpb24nXVsnaG9zdCddPT0nd3d3LmRvdWJhbi5jb20nKXtmeV9icmlkZ2VfYXBwWyd3cml0ZUZpbGUnXSgnaGlrZXI6Ly9maWxlcy9jYWNoZS9kb3ViYW5jb29raWUudHh0JyxmeV9icmlkZ2VfYXBwWydnZXRDb29raWUnXSgnaHR0cHM6Ly93d3cuZG91YmFuLmNvbS8nKSk7fWlmKHdpbmRvd1snbG9jYXRpb24nXVsnaG9zdCddPT0nbS5kb3ViYW4uY29tJyl7ZnlfYnJpZGdlX2FwcFsnd3JpdGVGaWxlJ10oJ2hpa2VyOi8vZmlsZXMvY2FjaGUvZG91YmFuY29va2llLnR4dCcsZnlfYnJpZGdlX2FwcFsnZ2V0Q29va2llJ10oJ2h0dHBzOi8vbS5kb3ViYW4uY29tLycpKTt9fSgpKTtcXFwiXFxuICAgICAgICAgICAgaWYgKCFmaWxlRXhpc3QoJ2hpa2VyOi8vZmlsZXMvY2FjaGUvZ2xvYmFsX2dldERvdWJhbkNvb2tpZS5qcycpKSB7XFxuICAgICAgICAgICAgICAgIHdyaXRlRmlsZSgnaGlrZXI6Ly9maWxlcy9jYWNoZS9nbG9iYWxfZ2V0RG91YmFuQ29va2llLmpzJywgZ2V0RG91YmFuQ29va2llKTtcXG4gICAgICAgICAgICB9O1xcbiAgICAgICAgICAgIHJldHVybiAncnVsZTovLycgKyBiYXNlNjRFbmNvZGUoJ+a1t+mYlOinhueVjO+8jOe9kemhteaPkuS7tu+/pWpzX3VybO+/pWdsb2JhbF9nZXREb3ViYW5Db29raWVAaGlrZXI6Ly9maWxlcy9jYWNoZS9nbG9iYWxfZ2V0RG91YmFuQ29va2llLmpzJyk7XFxuICAgICAgICB9KSxcXG4gICAgY29sX3R5cGU6ICd0ZXh0XzEnXFxufSk7XFxuZC5wdXNoKHtcXG4gICAgdGl0bGU6ICcyLueCueWHu+atpOWkhOi/m+WFpee9kemhtei/m+ihjOeZu+W9leaIluS6uuacuumqjOivge+8jOWujOaIkOWQjui/lOWbnuatpOmhtemdoicsXFxuICAgIHVybDogJ2h0dHBzOi8vbW92aWUuZG91YmFuLmNvbS9zdWJqZWN0LycgKyBpZCArICcvJyxcXG4gICAgY29sX3R5cGU6ICd0ZXh0XzEnXFxufSk7XFxuZC5wdXNoKHtcXG4gICAgdGl0bGU6ICczLuWujOaIkOeZu+W9leaIluS6uuacuumqjOivgeWQjui/lOWbnuW9seeJh+ivpuaDhemhtemdoumHjeaWsOi/m+WFpScsXFxuICAgIHVybDogJ2hpa2VyOi8vZW1wdHknLFxcbiAgICBjb2xfdHlwZTogJ3RleHRfMSdcXG59KTtcXG5zZXRSZXN1bHQoZClcIn0se1wiY29sX3R5cGVcIjpcIm1vdmllXzNcIixcIm5hbWVcIjpcIuaKouaVkemhtemdolwiLFwicGF0aFwiOlwidXJnZW5jeU1vZGVcIixcInJ1bGVcIjpcImpzOlxcbmxldCBkID0gW107XFxuZC5wdXNoKHtcXG4gICAgdGl0bGU6ICflvojmmI7mmL4s5Ye65LqG5LiA5Lqb5bCP6Zeu6aKYLOW7uuiurumHjeeUnycsXFxuICAgIGNvbF90eXBlOiAndGV4dF9jZW50ZXJfMScsXFxuICAgIHVybDogJ2hpa2VyOi8vZW1wdHknXFxufSlcXG5kLnB1c2goe1xcbiAgICB0aXRsZTogJ+eCueaIkeabtOaWsOS+nei1licsXFxuICAgIGNvbF90eXBlOiAndGV4dF8xJyxcXG4gICAgdXJsOiAkKCdoaWtlcjovL2VtcHR5JykubGF6eVJ1bGUoKCkgPT4ge1xcbiAgICAgICAgbGV0IGZpbGUgPSBcXFwiaGlrZXI6Ly9maWxlcy9ydWxlcy9qb2tlci9xZGIuanNcXFwiO1xcbiAgICAgICAgbGV0IGdpdGZpbGUgPSAnaHR0cHM6Ly9naXRjb2RlLm5ldC9xcV80MTg0Njc1Ni9oaWtlci8tL3Jhdy9tYXN0ZXIvcWRiLmpzJztcXG4gICAgICAgIGxldCB0ZXh0ID0gcmVxdWVzdChnaXRmaWxlKTtcXG4gICAgICAgIHdyaXRlRmlsZShmaWxlLCB0ZXh0KTtcXG4gICAgICAgIHJlZnJlc2hQYWdlKCk7XFxuICAgICAgICByZXR1cm4gJ3RvYXN0Oi8v5L6d6LWW5paH5Lu25pu05paw5oiQ5YqfJ1xcbiAgICB9KVxcbn0pXFxuZC5wdXNoKHtcXG4gICAgdGl0bGU6ICfngrnmiJHmgaLlpI3pu5jorqTorr7nva4nLFxcbiAgICBjb2xfdHlwZTogJ3RleHRfMScsXFxuICAgIHVybDogJChcXFwi56Gu5a6a6KaB5oGi5aSN77yfXFxcIikuY29uZmlybSgoKSA9PiB7XFxuICAgICAgICBkZWZhdWx0Q29uZmlncyA9IHtcXG4gICAgICAgICAgICBzdGFyQ29sb3I6IFxcXCIjZmZhYzJkXFxcIixcXG4gICAgICAgICAgICBjaG9vc2VDb2xvcjogXFxcIiNGQTcyOThcXFwiLFxcbiAgICAgICAgICAgIHF1aWNrU2VhcmNoQ29uZmlnczoge1xcbiAgICAgICAgICAgICAgICBvcmRlcjogW11cXG4gICAgICAgICAgICB9LFxcbiAgICAgICAgICAgIGRldGFpbHNWaWV3Q29uZmlnczoge1xcbiAgICAgICAgICAgICAgICB1c2U6IFxcXCLpu5jorqRcXFwiLFxcbiAgICAgICAgICAgICAgICBcXFwi6buY6K6kXFxcIjoge1xcbiAgICAgICAgICAgICAgICAgICAgY29uZmlnOiBcXFwiZXZhbChmZXRjaChnZXRWYXIoJ3FkYl9maWxlJykpKTtkZXRhaWxzVmlldyh0eXBlLCBpZCk7XFxcIlxcbiAgICAgICAgICAgICAgICB9XFxuICAgICAgICAgICAgfSxcXG4gICAgICAgICAgICBhbmFseXNpc0NvbmZpZ3M6IHtcXG4gICAgICAgICAgICAgICAgdXNlOiBcXFwi5LiN6Kej5p6QXFxcIixcXG4gICAgICAgICAgICAgICAgXFxcIuS4jeino+aekFxcXCI6IHtcXG4gICAgICAgICAgICAgICAgICAgIGNvbmZpZzogJC50b1N0cmluZygoKSA9PiB7XFxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGlucHV0O1xcbiAgICAgICAgICAgICAgICAgICAgfSksXFxuICAgICAgICAgICAgICAgICAgICBzZXR0aW5nOiAkLnRvU3RyaW5nKCgpID0+IHtcXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gXFxcInRvYXN0Oi8v6K+l5o+S5Lu25peg6K6+572u6aG16Z2iXFxcIjtcXG4gICAgICAgICAgICAgICAgICAgIH0pXFxuICAgICAgICAgICAgICAgIH0sXFxuICAgICAgICAgICAgICAgIFxcXCLmlq3mj5JcXFwiOiB7XFxuICAgICAgICAgICAgICAgICAgICBjb25maWc6ICQudG9TdHJpbmcoKCkgPT4ge1xcbiAgICAgICAgICAgICAgICAgICAgICAgIGxldCBmaWxlID0gXFxcImhpa2VyOi8vZmlsZXMvcnVsZXMvRHVhbk5pYW4vTXlQYXJzZS5qc29uXFxcIjtcXG4gICAgICAgICAgICAgICAgICAgICAgICBsZXQgb2xkZmlsZSA9IFxcXCJoaWtlcjovL2ZpbGVzL2NhY2hlL015UGFyc2VTZXQuanNvblxcXCI7XFxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGZpbGVFeGlzdChmaWxlKSkge1xcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBldmFsKCdqc29uPScgKyBmZXRjaChmaWxlKSk7XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxldCBqc1VybCA9IGpzb24uc2V0dGluZ3MuY2o7XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV2YWwoZmV0Y2goanNVcmwpKTtcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGF5dG1QYXJzZShpbnB1dCk7XFxuICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmIChmaWxlRXhpc3Qob2xkZmlsZSkpIHtcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbGV0IGpzVXJsID0gSlNPTi5wYXJzZShmZXRjaChvbGRmaWxlKSkuY2o7XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV2YWwoZmV0Y2goanNVcmwpKTtcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGF5dG1QYXJzZShpbnB1dCk7XFxuICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuICd0b2FzdDovL+ayoeaJvuWIsOaWreaPkumFjee9ruaWh+S7tic7XFxuICAgICAgICAgICAgICAgICAgICAgICAgfVxcbiAgICAgICAgICAgICAgICAgICAgfSksXFxuICAgICAgICAgICAgICAgICAgICBzZXR0aW5nOiAkLnRvU3RyaW5nKCgpID0+IHtcXG4gICAgICAgICAgICAgICAgICAgICAgICBsZXQgZmlsZSA9IFxcXCJoaWtlcjovL2ZpbGVzL3J1bGVzL0R1YW5OaWFuL015UGFyc2UuanNvblxcXCI7XFxuICAgICAgICAgICAgICAgICAgICAgICAgbGV0IG9sZGZpbGUgPSBcXFwiaGlrZXI6Ly9maWxlcy9jYWNoZS9NeVBhcnNlU2V0Lmpzb25cXFwiO1xcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChmaWxlRXhpc3QoZmlsZSkpIHtcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZXZhbCgnanNvbj0nICsgZmV0Y2goZmlsZSkpO1xcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZXQganNVcmwgPSBqc29uLnNldHRpbmdzLmNqO1xcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBldmFsKGZldGNoKGpzVXJsKSk7XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBzZXRVcmw7XFxuICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmIChmaWxlRXhpc3Qob2xkZmlsZSkpIHtcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbGV0IGpzVXJsID0gSlNPTi5wYXJzZShmZXRjaChvbGRmaWxlKSkuY2o7XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV2YWwoZmV0Y2goanNVcmwpKTtcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHNldFVybDtcXG4gICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gXFxcImhpa2VyOi8vcGFnZS9Sb3V0ZT9ydWxlPU15RmllbGThtLDigb8mdHlwZT3orr7nva5cXFwiO1xcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cXG4gICAgICAgICAgICAgICAgICAgIH0pXFxuICAgICAgICAgICAgICAgIH1cXG4gICAgICAgICAgICB9XFxuICAgICAgICB9XFxuICAgICAgICB3cml0ZUZpbGUoZ2V0VmFyKCdxZGJfY29uZmlnJyksIEpTT04uc3RyaW5naWZ5KGRlZmF1bHRDb25maWdzKSk7XFxuICAgICAgICByZWZyZXNoUGFnZSgpO1xcbiAgICAgICAgcmV0dXJuIFxcXCJ0b2FzdDovL+W3suaBouWkjem7mOiupOiuvue9rlxcXCI7XFxuICAgIH0pXFxufSlcXG5kLnB1c2goe1xcbiAgICB0aXRsZTogJ+iLpemHjeeUn+S4jei1t+S9nOeUqCzngrnmiJHlpI3liLbplJnor6/kv6Hmga/mj5DkuqTnu5nlvIDlj5HogIUnLFxcbiAgICBjb2xfdHlwZTogJ3RleHRfMScsXFxuICAgIHVybDogJ2NvcHk6Ly8nICsgZS5tZXNzYWdlXFxufSlcXG5zZXRSZXN1bHQoZCk7XCJ9LHtcImNvbF90eXBlXCI6XCJtb3ZpZV8zXCIsXCJuYW1lXCI6XCLpobrkvazkuJPnlKjor6bmg4XpobVcIixcInBhdGhcIjpcIlNkZXRhaWxcIixcInJ1bGVcIjpcImpzOlxcbnB1dFZhcigncWRiX2ZpbGUnLCAnaGlrZXI6Ly9maWxlcy9ydWxlcy9qb2tlci9xZGIuanMnKTtcXG5ldmFsKGZldGNoKGdldFZhcihcXFwicWRiX2ZpbGVcXFwiKSkpO1xcbnByZSgpO1xcbmxldCB0eXBlID0gZ2V0UGFyYW0oJ3R5cGUnLCAnJyksXFxuICAgIGlkID0gZ2V0UGFyYW0oJ2lkJywgJycpO1xcbmRldGFpbHNWaWV3KHR5cGUsIGlkKTtcIn1dLFwic2F2ZWRcIjpmYWxzZSxcInRpdGxlXCI6XCLpnZLosYZcIixcInZlcnNpb25cIjowLFwidXJsXCI6XCJoaWtlcjovL2VtcHR5P2lkPTM1MjM1MTUxJnR5cGU9IHR2JnRpdGxlPeeIseWlh+iJujtnZXQ7VVRGLTg7e1VzZXItQWdlbnRATW96aWxsYS81LjAgKExpbnV477yb77ybIEFuZHJvaWQgMTHvvJvvvJsgTWkgMTAgUHJvKSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvODguMC40MzI0LjE1MiBNb2JpbGUgU2FmYXJpLzUzNy4zNn1cIixcImNvbF90eXBlXCI6XCJtb3ZpZV8xX3ZlcnRpY2FsX3BpY1wiLFwiZmluZF9ydWxlXCI6XCJqczooXFxuKHJlcywgaWQsIGUsIGxhenksIGV4dHJhKSA9PiB7XFxuICAgIGxldCB0aXRsZSA9IHJlcy50aXRsZSwgcGljID0gcmVzLnBpYy5ub3JtYWwgKyBcXFwiQFJlZmVyZXI9XFxcIiArIHJlcy5waWMubm9ybWFsO1xcbiAgICBzZXRQYWdlVGl0bGUoZS50aXRsZSArIFxcXCItXFxcIiArIHRpdGxlKTtcXG4gICAgdHJ5IHtcXG4gICAgICAgIHNldFBhZ2VQaWNVcmwocGljKTtcXG4gICAgfVxcbiAgICBjYXRjaCAoZSkge1xcbiAgICB9XFxuICAgIGV2YWwoZmV0Y2goZ2V0VmFyKFxcXCJxZGJfZmlsZVxcXCIpKSk7XFxuICAgIGxldCB1cmxzID0gZ2V0VHZVcmxzKGlkLCBlLmlkKTtcXG4gICAgbGF6eSA9ICQoXFxcIlxcXCIpLmxhenlSdWxlKGxhenkgPT4ge1xcbiAgICAgICAgbGV0IHJlc3VsdFVybCA9IFxcXCJ0b2FzdDovL1xcXFx1ODllM1xcXFx1Njc5MFxcXFx1NTkzMVxcXFx1OGQyNVxcXCI7XFxuICAgICAgICB0cnkge1xcbiAgICAgICAgICAgIGlmIChsYXp5LnN0YXJ0c1dpdGgoXFxcIihcXFwiKSkge1xcbiAgICAgICAgICAgICAgICBldmFsKFxcXCJyZXN1bHRVcmwgPSBcXFwiICsgbGF6eSk7XFxuICAgICAgICAgICAgfSBlbHNlIHtcXG4gICAgICAgICAgICAgICAgZXZhbChcXFwicmVzdWx0VXJsID0gXFxcIiArIFxcXCIoKCkgPT4ge1xcXCIgKyBsYXp5ICsgXFxcIn0pKClcXFwiKTtcXG4gICAgICAgICAgICB9XFxuICAgICAgICB9XFxuICAgICAgICBjYXRjaCAoZSkge1xcbiAgICAgICAgICAgIGxvZyhlLm1lc3NhZ2UpO1xcbiAgICAgICAgfVxcbiAgICAgICAgcmV0dXJuIHJlc3VsdFVybDtcXG4gICAgfVxcbiAgICAsIGxhenkpO1xcbiAgICBsZXQgZCA9IFtdO1xcbiAgICBpZiAodHlwZW9mICh1cmxzKSA9PSBcXFwib2JqZWN0XFxcIikge1xcbiAgICAgICAgbGV0IGQgPSBbXTtcXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdXJscy5sZW5ndGg7IGkrKykge1xcbiAgICAgICAgICAgIGQucHVzaCh7dGl0bGU6IFxcXCJcXFxcdTdiMmNcXFwiICsgKGkgKyAxKSArIFxcXCJcXFxcdTk2YzZcXFwiLCBjb2xfdHlwZTogXFxcInRleHRfNFxcXCIsIHVybDogbGF6eSA/IHVybHNbaV0gKyBsYXp5IDogdXJsc1tpXSwgZXh0cmE6IGV4dHJhfSk7XFxuICAgICAgICB9XFxuICAgICAgICBzZXRSZXN1bHQoZCk7XFxuICAgIH0gZWxzZSB7XFxuICAgICAgICBpZiAodHlwZW9mICh1cmxzKSA9PSBcXFwic3RyaW5nXFxcIiAmJiB1cmxzID09IFxcXCJcXFxcdTg4YWJcXFxcdTVjMDFpcFxcXCIpIHtcXG4gICAgICAgICAgICBsZXQgcnVsZSA9IEpTT04ucGFyc2UocmVxdWVzdChcXFwiaGlrZXI6Ly9wYWdlL3JlbGVhc2VJUD9ydWxlPVxcXFx1OTc1MlxcXFx1OGM0NlxcXCIpKS5ydWxlO1xcbiAgICAgICAgICAgIGV2YWwocnVsZSk7XFxuICAgICAgICB9IGVsc2Uge1xcbiAgICAgICAgICAgIGlmICh0eXBlb2YgKHVybHMpID09IFxcXCJzdHJpbmdcXFwiICYmIHVybHMgPT0gXFxcIlxcXFx1NmNhMVxcXFx1NjcwOVxcXFx1NjUzNlxcXFx1NWY1NVxcXCIpIHtcXG4gICAgICAgICAgICAgICAgbGV0IGQgPSBbXTtcXG4gICAgICAgICAgICAgICAgZC5wdXNoKHt0aXRsZTogXFxcIlxcXFx1OGM0NlxcXFx1NzRlM1xcXFx1NmNhMVxcXFx1NjcwOVxcXFx1NjUzNlxcXFx1NWY1NVxcXFx1NmI2NFxcXFx1ODljNlxcXFx1OTg5MVxcXFx1NmU5MFxcXFx1NzY4NFxcXFx1OGJlNlxcXFx1N2VjNlxcXFx1NGZlMVxcXFx1NjA2ZlxcXCIsIGRlc2M6IFxcXCJcXFxcdTcwYjlcXFxcdTYyMTFcXFxcdTUzZWZcXFxcdTRlZTVcXFxcdTUzYmJcXFxcdTg5YzZcXFxcdTk4OTFcXFxcdTZlOTBcXFxcdTdmNTFcXFxcdTdhZDlcXFxcdTc3MGJcXFxcdTc3MGJcXFwiLCBjb2xfdHlwZTogXFxcInRleHRfY2VudGVyXzFcXFwiLCB1cmw6IGUudXJsfSk7XFxuICAgICAgICAgICAgICAgIHNldFJlc3VsdChkKTtcXG4gICAgICAgICAgICB9XFxuICAgICAgICB9XFxuICAgIH1cXG59XFxuKSh7XFxcInJhdGluZ1xcXCI6e1xcXCJjb3VudFxcXCI6MTM3MzY2LFxcXCJtYXhcXFwiOjEwLFxcXCJzdGFyX2NvdW50XFxcIjo0LFxcXCJ2YWx1ZVxcXCI6Ny45fSxcXFwibGluZXRpY2tldF91cmxcXFwiOlxcXCJcXFwiLFxcXCJjb250cm92ZXJzeV9yZWFzb25cXFwiOlxcXCJcXFwiLFxcXCJwdWJkYXRlXFxcIjpbXFxcIjIwMjItMDktMjco5Lit5Zu95aSn6ZmGKVxcXCJdLFxcXCJsYXN0X2VwaXNvZGVfbnVtYmVyXFxcIjpudWxsLFxcXCJwaWNcXFwiOntcXFwibGFyZ2VcXFwiOlxcXCJodHRwczovL2ltZzEuZG91YmFuaW8uY29tL3ZpZXcvcGhvdG8vbV9yYXRpb19wb3N0ZXIvcHVibGljL3AyODgzOTk1NjY3LndlYnBcXFwiLFxcXCJub3JtYWxcXFwiOlxcXCJodHRwczovL2ltZzEuZG91YmFuaW8uY29tL3ZpZXcvcGhvdG8vc19yYXRpb19wb3N0ZXIvcHVibGljL3AyODgzOTk1NjY3LndlYnBcXFwifSxcXFwidmVuZG9yX2NvdW50XFxcIjoxLFxcXCJib2R5X2JnX2NvbG9yXFxcIjpcXFwiZjlmNmY0XFxcIixcXFwiaXNfdHZcXFwiOnRydWUsXFxcImhlYWRfaW5mb1xcXCI6bnVsbCxcXFwiaW50cm9cXFwiOlxcXCLmmpflpJzpgqrku5nku47lpKnogIzpmY3vvIzprLzluILlnLDlrqvpnLLlh7rlhrDlsbHkuIDop5LvvIzogIzpo47pnaHplb/lronnmoTor6HlvILnuqLojLbnqbbnq5/mmK/lhbvnlJ/kuYvoja/ov5jmmK/lrrPkurrkuYvnianvvJ/plb/lronln47ph4zmlrDlqJjlpLHouKrmoYjmjqXov57lj5HnlJ/vvIzkvLzkuY7kuI7nuqLojLbmnInnnYDljYPkuJ3kuIfnvJXnmoTogZTns7vigKbigKbmoYjku7bmiZHmnJTov7fnprvvvIzkurrlv4PnjoTlppnpmr7pibTvvIHph5HlkL7ljavkuK3pg47lsIbljaLlh4zpo47lpYnlkb3mn6XmoYjvvIzpga3pgYflubPnlJ/mnIDlvLrlr7nmiYvni4Tku4HmnbDlhbPpl6jlvJ/lrZDoi4/ml6DlkI3vvIzlj4zlvLrmkLrmiYvlhbHnoLTplb/lronlpYfmoYjvvIHkuZ3kuKrkuI3lkIzpo47moLznmoTor6HlvILmoYjku7bvvIzjgIrplb/lronnuqLojLbjgIvjgIrnn7PmoaXlm77jgIvjgIrkvJfnlJ/loILjgIvjgIrpu4TmooXmnYDjgIvjgIrnlJjmo6Dpqb/mgKrosIjjgIvjgIrpvI3npZ7jgIvjgIrkurrpnaLoirHjgIvjgIrlj4LlpKnmpbzjgIvvvIzkuIDkuIDkuLrmgqjmj63mmZPlpKfllJDlpJzoibLnrLznvankuYvkuIvnmoTlpYfpl7vlvILlvZXvvIFcXFxcbuingeivgeWUkOivl+S5i+Wklu+8jOiiq+a5ruayoeWNg+W5tOeahOWlh+ivoeaDs+ixoeOAguWNg+W5tOWJjeeahOWUkOacne+8jOS4h+mCpuadpeacne+8jOaYr+W9k+S5i+aXoOaEp+eahOS4lueVjOS4reW/g+OAguS8mOi2iueahOeJqei0qOeUn+a0u++8jOWkmuagt+eahOaWh+WMluiejeWQiO+8jOWCrOeUn+S6huWUkOacneS6uuaegeiHtOeahOaDs+ixoeWKm+OAglxcXFxu6Zmk5LqG5p2O55m944CB5p2c55Sr44CB55m95bGF5piT562J5LiA5Luj5Lyg5aWH6K+X5Lq677yM55So5ZSQ6K+X5o+P57uY5Ye655qE5Y2O5Li955qE5aSn5ZSQ576O5Y2377yb5biC5LqV6Ze055qE6LSp5aSr6LWw5Y2S77yM5pu055So5LuW5Lus5pu05Yqg5LiN576B55qE5oOz6LGh5Yqb77yM5Zyo5ZSQ5pyd55qE5aSc5bmV5LitIOWLvuWLkuWHuuelnumtlOmsvOaAqueahOaGp+aGp+mtheW9se+8muS7memtlOeyvuWmluOAgeWlh+mXu+aAquiwiOOAgeW5u+acr+mBk+azleOAgeW8guWfn+S8oOivtOOAgeePjeemveW8guWFveOAgeWuq+W7t+i9tuS6i+KApuKAplxcXCIsXFxcInRpY2tldF9wcmljZV9pbmZvXFxcIjpcXFwiXFxcIixcXFwid2ViaXNvZGVfY291bnRcXFwiOjAsXFxcInllYXJcXFwiOlxcXCIyMDIyXFxcIixcXFwiY2FyZF9zdWJ0aXRsZVxcXCI6XFxcIjIwMjIgLyDkuK3lm73lpKfpmYYgLyDmgqznlpEg5aWH5bm7IOatpuS+oCAvIOafj+adiSAvIOadqOaXreaWhyDmnajlv5fliJpcXFwiLFxcXCJmb3J1bV9pbmZvXFxcIjpudWxsLFxcXCJ3ZWJpc29kZVxcXCI6bnVsbCxcXFwiaWRcXFwiOlxcXCIzNTIzNTE1MVxcXCIsXFxcImdhbGxlcnlfdG9waWNfY291bnRcXFwiOjAsXFxcImxhbmd1YWdlc1xcXCI6W1xcXCLmsYnor63mma7pgJror51cXFwiXSxcXFwiZ2VucmVzXFxcIjpbXFxcIuaCrOeWkVxcXCIsXFxcIuWlh+W5u1xcXCIsXFxcIuatpuS+oFxcXCJdLFxcXCJyZXZpZXdfY291bnRcXFwiOjM2MCxcXFwidGl0bGVcXFwiOlxcXCLllJDmnJ3or6HkuovlvZVcXFwiLFxcXCJoYXNfbGluZXdhdGNoXFxcIjp0cnVlLFxcXCJ1Z2NfdGFic1xcXCI6W3tcXFwic291cmNlXFxcIjpcXFwicmV2aWV3c1xcXCIsXFxcInR5cGVcXFwiOlxcXCJyZXZpZXdcXFwiLFxcXCJ0aXRsZVxcXCI6XFxcIuWJp+ivhFxcXCJ9LHtcXFwiY291bnRcXFwiOjI5NzksXFxcInRpdGxlXFxcIjpcXFwi5bCP57uE6K6o6K66XFxcIixcXFwic2VsZWN0ZWRcXFwiOnRydWUsXFxcInVyaVxcXCI6XFxcImRvdWJhbjovL3BhcnRpYWwuZG91YmFuLmNvbS9zdWJqZWN0LzM1MjM1MTUxL2dyb3VwX3RvcGljL19jb250ZW50P2dyb3VwX2lkPTczMTk3NyZzb3J0Ynk9aG90XFxcIixcXFwic291cmNlXFxcIjpcXFwi5bCP57uE6K6o6K66XFxcIixcXFwidHlwZVxcXCI6XFxcImN1c3RvbVxcXCIsXFxcImlkXFxcIjpcXFwiZ3JvdXBcXFwifSx7XFxcImNvdW50XFxcIjoxMDYsXFxcInRpdGxlXFxcIjpcXFwi5Ymn5oOF5YiG5p6QXFxcIixcXFwidXJpXFxcIjpcXFwiZG91YmFuOi8vcGFydGlhbC5kb3ViYW4uY29tL3N1YmplY3QvMzUyMzUxNTEvZ3JvdXBfdG9waWMvX2NvbnRlbnQ/Z3JvdXBfaWQ9NzMxOTc3JnRvcGljX3RhZ19pZD0xMjMyMDAmc29ydGJ5PWhvdFxcXCIsXFxcInNvdXJjZVxcXCI6XFxcIuWJp+aDheWIhuaekFxcXCIsXFxcInR5cGVcXFwiOlxcXCJjdXN0b21cXFwiLFxcXCJpZFxcXCI6XFxcImdyb3VwXzEyMzIwMFxcXCJ9LHtcXFwiY291bnRcXFwiOjQ0LFxcXCJ0aXRsZVxcXCI6XFxcIueJqeaWmS/otYTorq9cXFwiLFxcXCJ1cmlcXFwiOlxcXCJkb3ViYW46Ly9wYXJ0aWFsLmRvdWJhbi5jb20vc3ViamVjdC8zNTIzNTE1MS9ncm91cF90b3BpYy9fY29udGVudD9ncm91cF9pZD03MzE5NzcmdG9waWNfdGFnX2lkPTEyMzI5MCZzb3J0Ynk9aG90XFxcIixcXFwic291cmNlXFxcIjpcXFwi54mp5paZL+i1hOiur1xcXCIsXFxcInR5cGVcXFwiOlxcXCJjdXN0b21cXFwiLFxcXCJpZFxcXCI6XFxcImdyb3VwXzEyMzI5MFxcXCJ9LHtcXFwiY291bnRcXFwiOjU4LFxcXCJ0aXRsZVxcXCI6XFxcIuiDjOaZr+enkeaZrlxcXCIsXFxcInVyaVxcXCI6XFxcImRvdWJhbjovL3BhcnRpYWwuZG91YmFuLmNvbS9zdWJqZWN0LzM1MjM1MTUxL2dyb3VwX3RvcGljL19jb250ZW50P2dyb3VwX2lkPTczMTk3NyZ0b3BpY190YWdfaWQ9MTIzMjAxJnNvcnRieT1ob3RcXFwiLFxcXCJzb3VyY2VcXFwiOlxcXCLog4zmma/np5Hmma5cXFwiLFxcXCJ0eXBlXFxcIjpcXFwiY3VzdG9tXFxcIixcXFwiaWRcXFwiOlxcXCJncm91cF8xMjMyMDFcXFwifSx7XFxcImNvdW50XFxcIjoxNzYsXFxcInRpdGxlXFxcIjpcXFwi5p2C6LCIL+mXsuiBilxcXCIsXFxcInVyaVxcXCI6XFxcImRvdWJhbjovL3BhcnRpYWwuZG91YmFuLmNvbS9zdWJqZWN0LzM1MjM1MTUxL2dyb3VwX3RvcGljL19jb250ZW50P2dyb3VwX2lkPTczMTk3NyZ0b3BpY190YWdfaWQ9MTIzMjA5JnNvcnRieT1ob3RcXFwiLFxcXCJzb3VyY2VcXFwiOlxcXCLmnYLosIgv6Zey6IGKXFxcIixcXFwidHlwZVxcXCI6XFxcImN1c3RvbVxcXCIsXFxcImlkXFxcIjpcXFwiZ3JvdXBfMTIzMjA5XFxcIn0se1xcXCJjb3VudFxcXCI6MTMsXFxcInRpdGxlXFxcIjpcXFwi5Yib5L2c5Lqn5Ye6XFxcIixcXFwidXJpXFxcIjpcXFwiZG91YmFuOi8vcGFydGlhbC5kb3ViYW4uY29tL3N1YmplY3QvMzUyMzUxNTEvZ3JvdXBfdG9waWMvX2NvbnRlbnQ/Z3JvdXBfaWQ9NzMxOTc3JnRvcGljX3RhZ19pZD0xMjMyNjMmc29ydGJ5PW5ld1xcXCIsXFxcInNvdXJjZVxcXCI6XFxcIuWIm+S9nOS6p+WHulxcXCIsXFxcInR5cGVcXFwiOlxcXCJjdXN0b21cXFwiLFxcXCJpZFxcXCI6XFxcImdyb3VwXzEyMzI2M1xcXCJ9XSxcXFwiZm9ydW1fdG9waWNfY291bnRcXFwiOjEsXFxcInRpY2tldF9wcm9tb190ZXh0XFxcIjpcXFwiXFxcIixcXFwid2Vidmlld19pbmZvXFxcIjp7fSxcXFwiaXNfcmVsZWFzZWRcXFwiOnRydWUsXFxcInZlbmRvcnNcXFwiOlt7XFxcImxhYmVsc1xcXCI6W10sXFxcImNsaWNrX3RyYWNraW5nc1xcXCI6W1xcXCJodHRwczovL2Zyb2RvLmRvdWJhbi5jb20vcm9oaXJyaW0vdmlkZW9fdHJhY2tpbmcvY2xpY2s/c3ViamVjdF9pZD0zNTIzNTE1MSZ2aWRlb190eXBlPW1vdmllJnZpZGVvX2lkPTg0MjE5NiZzb3VyY2U9aXFpeWkmdXNlcl9pZD1Ob25lJmRvdWJhbl91ZGlkPU5vbmUmcGxhdGZvcm09QW5kcm9pZCZsb2NhdGlvbj12ZW5kb3Jfc2VjdGlvblxcXCJdLFxcXCJib29rX3R5cGVfY25cXFwiOlxcXCJcXFwiLFxcXCJwYXltZW50X2Rlc2NcXFwiOlxcXCJWSVDlhY3otLnop4LnnItcXFwiLFxcXCJpZFxcXCI6XFxcImlxaXlpXFxcIixcXFwiaW1wcmVzc2lvbl90cmFja2luZ3NcXFwiOltcXFwiaHR0cHM6Ly9mcm9kby5kb3ViYW4uY29tL3JvaGlycmltL3ZpZGVvX3RyYWNraW5nL2ltcHJlc3Npb24/c3ViamVjdF9pZD0zNTIzNTE1MSZ2aWRlb190eXBlPW1vdmllJnZpZGVvX2lkPTg0MjE5NiZzb3VyY2U9aXFpeWkmdXNlcl9pZD1Ob25lJmRvdWJhbl91ZGlkPU5vbmUmcGxhdGZvcm09QW5kcm9pZCZsb2NhdGlvbj12ZW5kb3Jfc2VjdGlvblxcXCJdLFxcXCJhcHBfdXJpXFxcIjpcXFwiaXFpeWk6Ly9za3luZXQuZG91YmFuLmNvbVxcXCIsXFxcInRpdGxlXFxcIjpcXFwi54ix5aWH6Im6XFxcIixcXFwiYXBwX2J1bmRsZV9pZFxcXCI6XFxcImNvbS5xaXlpLnZpZGVvXFxcIixcXFwiY2xpY2tfdHJhY2tpbmdcXFwiOlxcXCJcXFwiLFxcXCJpc19hZFxcXCI6ZmFsc2UsXFxcImltcHJlc3Npb25fdHJhY2tpbmdcXFwiOlxcXCJcXFwiLFxcXCJwcm9tb3RlX2Rlc2NcXFwiOlxcXCJcXFwiLFxcXCJib29rX3R5cGVcXFwiOlxcXCJcXFwiLFxcXCJpY29uXFxcIjpcXFwiaHR0cHM6Ly9pbWc5LmRvdWJhbmlvLmNvbS9mL2Zyb2RvLzYzNGE3N2M0YTc3ZDgwYTJhNGY0OWVkN2FhZjBiYzA3NmZlYzdkMDEvcGljcy92ZW5kb3JzL2lxaXlpLnBuZ1xcXCIsXFxcImdyZXlfaWNvblxcXCI6XFxcImh0dHBzOi8vaW1nMi5kb3ViYW5pby5jb20vZi9mcm9kby80ZTRmZGVhYTM0MzE5ZThhZDQ4NTMzNDg5Yjc4NTdkZmVhNWJkMzFjL3BpY3MvdmVuZG9ycy9pcWl5aV9ncmV5LnBuZ1xcXCIsXFxcInVybFxcXCI6XFxcImh0dHA6Ly93d3cuaXFpeWkuY29tL3ZfbnZ1c292NGFwby5odG1sP3ZmbT1tXzMzMV9kYmR5JmZ2PTQ5MDRkOTQ5ODIxMDQxNDRhMTU0OGRkOTA0MGRmMjQxXFxcIixcXFwiaXNfcGFpZFxcXCI6ZmFsc2UsXFxcInVyaVxcXCI6XFxcImlxaXlpOi8vbW9iaWxlL3BsYXllcj9haWQ9MTIwNTM1NDQ1NzAxMTUwMSZ0dmlkPTI1MTA0NzgyOTI1Njg0MDAmZnR5cGU9Mjcmc3VidHlwZT0zMzNcXFwiLFxcXCJlcGlzb2Rlc19pbmZvXFxcIjpcXFwiMzbpm4blhahcXFwiLFxcXCJwYXltZW50c1xcXCI6W3tcXFwicHJpY2VcXFwiOlxcXCJcXFwiLFxcXCJkZXNjcmlwdGlvblxcXCI6XFxcIlxcXCIsXFxcIm1ldGhvZFxcXCI6XFxcIlZJUOWFjei0ueingueci1xcXCJ9XSxcXFwicHJlX3JlbGVhc2VfZGVzY1xcXCI6XFxcIlxcXCIsXFxcInN1YmplY3RfaWRcXFwiOlxcXCIzNTIzNTE1MVxcXCJ9XSxcXFwiYWN0b3JzXFxcIjpbe1xcXCJuYW1lXFxcIjpcXFwi5p2o5pet5paHXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi5p2o5b+X5YiaXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi6YOc5oCd6ZuvXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi6ZmI5YibXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi5a2Z6Zuq5a6BXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi55+z5oKm5a6J6ZGrXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi5byg5a2Q5YGlXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi5aea5a6J5r+CXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi546L5Yqy5p2+XFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi6IyD5piOXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi5bKz5Li95aicXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi5YiY5pm65omsXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi54mb5a6d5YabXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi572X5ZiJ6ImvXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi5byg6buO5piOXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi54mb5YyX5aOsXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi6ams6LWrXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi5ZGo6aqP6LaFXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi5aWa5pybXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi5ZC05pil5oChXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi6Z+p5om/5769XFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi5aes5pmo54mnXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi5Lu75biM6bi/XFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi5Yav546J5466XFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi55m95bqG55CzXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi5p2O5pif5piKXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi546L5YqbXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi5a2Z5L+h5a6PXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi5byg5oCA5YWsXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi5puy6ZyE5a6HXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi5p2o6IiS5p6rXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi5p6X5rGf5Zu9XFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi5b6Q56aP5p2lXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi5qKB5ZKP5aauXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi5byg5piO5piOXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi6YO96ZKKXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi5ZGo5LqR5rexXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi5L6d54G1XFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi5Lu75a2m5rW3XFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi5a2Z54G/XFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi6ZmI6IqK5qGmXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi5Z+D57Gz5bCUXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi6L6+5p2l5ZOI6YeM5ZG8XFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi5bSU5LiA5YehXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi55SE5bCR5Y2OXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi5LiK5a6Y556zXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi5byg5paH5L+KXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi5b6Q5LyfXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi5pyx57+UXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi5pmB5b+X6LCmXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi5byg5oGS55GeXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi6buE5by85YW0XFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi5p2O5qCLXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi5byg6ZKn6K+RXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi5LiB5b+X5YuHXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi5pyx5rW35YabXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi5ZCV5pil55SfXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi546L6ZOC5riFXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi546L5paMXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi6a2P5a2Q5p2oXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi546L5Lmd6IOcXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi6ZKf5aSr57+UXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi6YOd5piO5aWHXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi5p2o54ybXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi546L54SxXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi6YK16ICB5LqUXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi5byg5piGXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi5byg6Zuo6ZyPXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi546L5Z2kXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi5Za75bqG6L6JXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi6Jab5a6+XFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi5p2c6ZW/5a6JXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi5p2o6ZKnXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi546L5bmzXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi5YiY5rO95a6HXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi6ams5LquXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi6Z+p5biFXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi5rGq6J6NXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi5rKI5YevXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi5YiY56eAXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi5Yav6IyX5oOKXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi55m95pm25pm2XFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi6YOt5Lmd6b6ZXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi5aiE5a6H5YGlXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi5p2o5LqR5qO5XFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi6buE6aOeXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi5byg6L6+5rqQXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi6YeR5pmWXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi5aec5YGlXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi6YOd54eV6aOeXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi6Zm25ZCJ5pawXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi5ZCV6Imz6JOTXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi6YOR6ZSh6b6ZXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi5LmU6aaoXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi5LqV55KQXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi5p2t56iL5a6HXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi5YiY5rOiXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi5p2O5qeQ6b6ZXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi6ZmI5pix6ZOtXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi5LqO6bi/5rSyXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi6ZmG5YmR5rCRXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi6b6Z5b63XFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi6JSh5aSP5p2wXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi5byg5ZiJ56a+XFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi5YiY5bm/5Y6aXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi5bKz5Yas5bOwXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi546L5L6D5LyfXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi5be05Zu+XFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi6IOh5a2Q5YGlXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi5a6L5p2oXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi6a2P6Iez5by6XFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi5b6Q54ix54+JXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi5be06Z+zXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi6auY546J5bqGXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi6K+65pWP6L6+6I6xXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi5bC55rO95by6XFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi6Z+p5qKm5q2mXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi5a2f6JSaXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi6IKW5re75LuBXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi6ZmI6b6ZXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi5rKI6ZGrXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi5ZK45YevXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi5p2o5ruUXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi6IOh5qanXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi5byg6ZGrXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi6YOR5a2Q5YGlXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi5ZOI5bC8XFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi54aK6JGb5qKm55G2XFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi5byg55Ge5YWJXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi5byg5pum5paHXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi5p2o5a2Q552/XFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi5LqO6K+a576kXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi5Lu75rSb5pWPXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi6L+q546bXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi5byg5rW35bOwXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi5ZGo5p2wXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi5b6356aPXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi6LW15pix56ulXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi5pav5Yqb5pu0XFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi5a2Z6bmPXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi6ZmI56eL5p6cXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi6LS+5YW06b6ZXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi6YOR5rKb55CzXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi6ICB6amsXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi6K645Y2g5LyfXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi5L+e5bqGXFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi546L5pif5aO5XFxcIn0se1xcXCJuYW1lXFxcIjpcXFwi6Im+5Yqb5bqTXFxcIn1dLFxcXCJpbnRlcmVzdFxcXCI6bnVsbCxcXFwiZXBpc29kZXNfY291bnRcXFwiOjM2LFxcXCJjb2xvcl9zY2hlbWVcXFwiOntcXFwiaXNfZGFya1xcXCI6dHJ1ZSxcXFwicHJpbWFyeV9jb2xvcl9saWdodFxcXCI6XFxcIjcyNDEzMlxcXCIsXFxcIl9iYXNlX2NvbG9yXFxcIjpbMC4wMzg4ODg4ODg4ODg4ODg4OCwwLjU1NTU1NTU1NTU1NTU1NTYsMC4yMTE3NjQ3MDU4ODIzNTI5NF0sXFxcInNlY29uZGFyeV9jb2xvclxcXCI6XFxcImY5ZjZmNFxcXCIsXFxcIl9hdmdfY29sb3JcXFwiOlswLjA0MTY2NjY2NjY2NjY2NjY4NSwwLjU1LDAuMzEzNzI1NDkwMTk2MDc4NF0sXFxcInByaW1hcnlfY29sb3JfZGFya1xcXCI6XFxcIjRjMmIyMlxcXCJ9LFxcXCJ0eXBlXFxcIjpcXFwidHZcXFwiLFxcXCJudWxsX3JhdGluZ19yZWFzb25cXFwiOlxcXCJcXFwiLFxcXCJsaW5ld2F0Y2hlc1xcXCI6W10sXFxcImluZm9fdXJsXFxcIjpcXFwiaHR0cHM6Ly93d3cuZG91YmFuLmNvbS9kb3ViYW5hcHAvL2g1L21vdmllLzM1MjM1MTUxL2Rlc2NcXFwiLFxcXCJ0YWdzXFxcIjpbXSxcXFwiZHVyYXRpb25zXFxcIjpbXFxcIjQ15YiG6ZKfXFxcIl0sXFxcImNvbW1lbnRfY291bnRcXFwiOjUyOTg0LFxcXCJjb3ZlclxcXCI6e1xcXCJkZXNjcmlwdGlvblxcXCI6XFxcIuW7uuiuruixhueTo+Wwgemdoui/mOaYr+aNouaIkOi/meW8oOato+W8j+a1t+aKpe+8gei/meW8oOa1t+aKpeWbvuayoeacieWkmuS9meeahOaWh+Wtl+S5n+ayoeacieawtOWNsOOAglxcXCIsXFxcImF1dGhvclxcXCI6e1xcXCJsb2NcXFwiOntcXFwiaWRcXFwiOlxcXCIxMTgxNzJcXFwiLFxcXCJuYW1lXFxcIjpcXFwi5p2t5beeXFxcIixcXFwidWlkXFxcIjpcXFwiaGFuZ3pob3VcXFwifSxcXFwia2luZFxcXCI6XFxcInVzZXJcXFwiLFxcXCJuYW1lXFxcIjpcXFwi6auY5aSE5LiN6IOc5a+SXFxcIixcXFwicmVnX3RpbWVcXFwiOlxcXCIyMDE2LTA5LTI1IDA5OjIwOjU0XFxcIixcXFwidXJsXFxcIjpcXFwiaHR0cHM6Ly93d3cuZG91YmFuLmNvbS9wZW9wbGUvMTUxNjAzNzA0L1xcXCIsXFxcInVyaVxcXCI6XFxcImRvdWJhbjovL2RvdWJhbi5jb20vdXNlci8xNTE2MDM3MDRcXFwiLFxcXCJpZFxcXCI6XFxcIjE1MTYwMzcwNFxcXCIsXFxcImF2YXRhcl9zaWRlX2ljb25faWRcXFwiOlxcXCIxNDVcXFwiLFxcXCJhdmF0YXJcXFwiOlxcXCJodHRwczovL2ltZzEuZG91YmFuaW8uY29tL2ljb24vdXAxNTE2MDM3MDQtOC5qcGdcXFwiLFxcXCJhdmF0YXJfc2lkZV9pY29uX3R5cGVcXFwiOjMsXFxcInR5cGVcXFwiOlxcXCJ1c2VyXFxcIixcXFwiYXZhdGFyX3NpZGVfaWNvblxcXCI6XFxcImh0dHBzOi8vaW1nMi5kb3ViYW5pby5jb20vdmlldy9maWxlcy9yYXcvZmlsZS0xNjY2Njc5NzcxLnBuZ1xcXCIsXFxcInVpZFxcXCI6XFxcIjE1MTYwMzcwNFxcXCJ9LFxcXCJ1cmxcXFwiOlxcXCJodHRwczovL21vdmllLmRvdWJhbi5jb20vcGhvdG9zL3Bob3RvLzI4ODM5OTU2NjcvXFxcIixcXFwiaW1hZ2VcXFwiOntcXFwibGFyZ2VcXFwiOntcXFwidXJsXFxcIjpcXFwiaHR0cHM6Ly9pbWcxLmRvdWJhbmlvLmNvbS92aWV3L3Bob3RvL2wvcHVibGljL3AyODgzOTk1NjY3LndlYnBcXFwiLFxcXCJ3aWR0aFxcXCI6OTAyLFxcXCJoZWlnaHRcXFwiOjE2MDAsXFxcInNpemVcXFwiOjB9LFxcXCJyYXdcXFwiOm51bGwsXFxcInNtYWxsXFxcIjp7XFxcInVybFxcXCI6XFxcImh0dHBzOi8vaW1nMS5kb3ViYW5pby5jb20vdmlldy9waG90by9zL3B1YmxpYy9wMjg4Mzk5NTY2Ny53ZWJwXFxcIixcXFwid2lkdGhcXFwiOjMzOCxcXFwiaGVpZ2h0XFxcIjo2MDAsXFxcInNpemVcXFwiOjB9LFxcXCJub3JtYWxcXFwiOntcXFwidXJsXFxcIjpcXFwiaHR0cHM6Ly9pbWcxLmRvdWJhbmlvLmNvbS92aWV3L3Bob3RvL20vcHVibGljL3AyODgzOTk1NjY3LndlYnBcXFwiLFxcXCJ3aWR0aFxcXCI6MzM4LFxcXCJoZWlnaHRcXFwiOjYwMCxcXFwic2l6ZVxcXCI6MH0sXFxcImlzX2FuaW1hdGVkXFxcIjpmYWxzZX0sXFxcInVyaVxcXCI6XFxcImRvdWJhbjovL2RvdWJhbi5jb20vcGhvdG8vMjg4Mzk5NTY2N1xcXCIsXFxcImNyZWF0ZV90aW1lXFxcIjpcXFwiMjAyMi0xMS0xOSAxNDo1MjoxNFxcXCIsXFxcInBvc2l0aW9uXFxcIjo3LFxcXCJvd25lcl91cmlcXFwiOlxcXCJkb3ViYW46Ly9kb3ViYW4uY29tL3R2LzM1MjM1MTUxXFxcIixcXFwidHlwZVxcXCI6XFxcInBob3RvXFxcIixcXFwiaWRcXFwiOlxcXCIyODgzOTk1NjY3XFxcIixcXFwic2hhcmluZ191cmxcXFwiOlxcXCJodHRwczovL3d3dy5kb3ViYW4uY29tL2RvdWJhbmFwcC9kaXNwYXRjaD91cmk9L3Bob3RvLzI4ODM5OTU2NjcvXFxcIn0sXFxcImNvdmVyX3VybFxcXCI6XFxcImh0dHBzOi8vaW1nMS5kb3ViYW5pby5jb20vdmlldy9waG90by9tX3JhdGlvX3Bvc3Rlci9wdWJsaWMvcDI4ODM5OTU2Njcud2VicFxcXCIsXFxcInJlc3RyaWN0aXZlX2ljb25fdXJsXFxcIjpcXFwiXFxcIixcXFwiaGVhZGVyX2JnX2NvbG9yXFxcIjpcXFwiNGMyYjIyXFxcIixcXFwiaXNfZG91YmFuX2ludHJvXFxcIjpmYWxzZSxcXFwidGlja2V0X3ZlbmRvcl9pY29uc1xcXCI6W1xcXCJodHRwczovL2ltZzkuZG91YmFuaW8uY29tL3ZpZXcvZGFsZS1vbmxpbmUvZGFsZV9hZC9wdWJsaWMvMDU4OWE2MmYyZjJkN2MyLmpwZ1xcXCJdLFxcXCJob25vcl9pbmZvc1xcXCI6W3tcXFwia2luZFxcXCI6XFxcInJhbmtcXFwiLFxcXCJ1cmlcXFwiOlxcXCJkb3ViYW46Ly9kb3ViYW4uY29tL3N1YmplY3RfY29sbGVjdGlvbi9FQzc0NDQzRlk/dHlwZT1yYW5rJmNhdGVnb3J5PW1vdmllJnJhbmtfdHlwZT10dl9nZW5yZVxcXCIsXFxcInJhbmtcXFwiOjEsXFxcInRpdGxlXFxcIjpcXFwi6L+R5pyf54Ot6Zeo5aSn6ZmG5Ymn5qacXFxcIn1dLFxcXCJzaGFyaW5nX3VybFxcXCI6XFxcImh0dHBzOi8vbW92aWUuZG91YmFuLmNvbS9zdWJqZWN0LzM1MjM1MTUxL1xcXCIsXFxcInN1YmplY3RfY29sbGVjdGlvbnNcXFwiOltdLFxcXCJ3ZWNoYXRfdGltZWxpbmVfc2hhcmVcXFwiOlxcXCJzY3JlZW5zaG90XFxcIixcXFwiY291bnRyaWVzXFxcIjpbXFxcIuS4reWbveWkp+mZhlxcXCJdLFxcXCJ1cmxcXFwiOlxcXCJodHRwczovL21vdmllLmRvdWJhbi5jb20vc3ViamVjdC8zNTIzNTE1MS9cXFwiLFxcXCJyZWxlYXNlX2RhdGVcXFwiOm51bGwsXFxcIm9yaWdpbmFsX3RpdGxlXFxcIjpcXFwiXFxcIixcXFwidXJpXFxcIjpcXFwiZG91YmFuOi8vZG91YmFuLmNvbS90di8zNTIzNTE1MVxcXCIsXFxcInByZV9wbGF5YWJsZV9kYXRlXFxcIjpudWxsLFxcXCJlcGlzb2Rlc19pbmZvXFxcIjpcXFwiXFxcIixcXFwic3VidHlwZVxcXCI6XFxcInR2XFxcIixcXFwiZGlyZWN0b3JzXFxcIjpbe1xcXCJuYW1lXFxcIjpcXFwi5p+P5p2JXFxcIn1dLFxcXCJpc19zaG93XFxcIjpmYWxzZSxcXFwiaW5fYmxhY2tsaXN0XFxcIjpmYWxzZSxcXFwicHJlX3JlbGVhc2VfZGVzY1xcXCI6XFxcIlxcXCIsXFxcInZpZGVvXFxcIjpudWxsLFxcXCJha2FcXFwiOltcXFwi5ZSQ5pyd6K+h5a6e5b2VXFxcIixcXFwiSG9ycm9yIFN0b3JpZXMgb2YgVGFuZyBEeW5hc3R5XFxcIixcXFwiU3RyYW5nZSBMZWdlbmQgb2YgVGFuZyBEeW5hc3R5XFxcIixcXFwiU3RyYW5nZSBUYWxlcyBvZiBUYW5nIER5bmFzdHlcXFwiXSxcXFwiaXNfcmVzdHJpY3RpdmVcXFwiOmZhbHNlLFxcXCJ0cmFpbGVyXFxcIjp7XFxcInNoYXJpbmdfdXJsXFxcIjpcXFwiaHR0cHM6Ly93d3cuZG91YmFuLmNvbS9kb3ViYW5hcHAvZGlzcGF0Y2g/dXJpPS90di8zNTIzNTE1MS90cmFpbGVyJTNGdHJhaWxlcl9pZCUzRDI3NTc4MCUyNnRyYWlsZXJfdHlwZSUzREFcXFwiLFxcXCJ2aWRlb191cmxcXFwiOlxcXCJodHRwczovL3Z0MS5kb3ViYW5pby5jb20vMjAyMjExMTkxODEzLzQ3NDllOTZhMjg5OWVkZmJlM2EyMzJmODFmYmJhMTE0L3ZpZXcvbW92aWUvTS80MDI3NTA3ODAubXA0XFxcIixcXFwidGl0bGVcXFwiOlxcXCLpooTlkYrniYcgKOS4reaWh+Wtl+W5lSlcXFwiLFxcXCJ1cmlcXFwiOlxcXCJkb3ViYW46Ly9kb3ViYW4uY29tL3R2LzM1MjM1MTUxL3RyYWlsZXI/dHJhaWxlcl9pZD0yNzU3ODAmdHJhaWxlcl90eXBlPUFcXFwiLFxcXCJjb3Zlcl91cmxcXFwiOlxcXCJodHRwczovL2ltZzkuZG91YmFuaW8uY29tL2ltZy90cmFpbGVyL21lZGl1bS8yNjQ3Mzc1MTE0LmpwZz9cXFwiLFxcXCJ0ZXJtX251bVxcXCI6MCxcXFwibl9jb21tZW50c1xcXCI6NDEsXFxcImNyZWF0ZV90aW1lXFxcIjpcXFwiMjAyMS0wNS0xNFxcXCIsXFxcInN1YmplY3RfdGl0bGVcXFwiOlxcXCLllJDmnJ3or6HkuovlvZVcXFwiLFxcXCJmaWxlX3NpemVcXFwiOjg2NjA3NjgsXFxcInJ1bnRpbWVcXFwiOlxcXCIwMDozM1xcXCIsXFxcInR5cGVcXFwiOlxcXCJBXFxcIixcXFwiaWRcXFwiOlxcXCIyNzU3ODBcXFwiLFxcXCJkZXNjXFxcIjpcXFwiXFxcIn0sXFxcInZlbmRvcl9pY29uc1xcXCI6W1xcXCJodHRwczovL2ltZzkuZG91YmFuaW8uY29tL2YvZnJvZG8vNjM0YTc3YzRhNzdkODBhMmE0ZjQ5ZWQ3YWFmMGJjMDc2ZmVjN2QwMS9waWNzL3ZlbmRvcnMvaXFpeWkucG5nXFxcIl19LFxcXCIzNTIzNTE1MVxcXCIse1xcXCJsYWJlbHNcXFwiOltdLFxcXCJjbGlja190cmFja2luZ3NcXFwiOltcXFwiaHR0cHM6Ly9mcm9kby5kb3ViYW4uY29tL3JvaGlycmltL3ZpZGVvX3RyYWNraW5nL2NsaWNrP3N1YmplY3RfaWQ9MzUyMzUxNTEmdmlkZW9fdHlwZT1tb3ZpZSZ2aWRlb19pZD04NDIxOTYmc291cmNlPWlxaXlpJnVzZXJfaWQ9Tm9uZSZkb3ViYW5fdWRpZD1Ob25lJnBsYXRmb3JtPUFuZHJvaWQmbG9jYXRpb249dmVuZG9yX3NlY3Rpb25cXFwiXSxcXFwiYm9va190eXBlX2NuXFxcIjpcXFwiXFxcIixcXFwicGF5bWVudF9kZXNjXFxcIjpcXFwiVklQ5YWN6LS56KeC55yLXFxcIixcXFwiaWRcXFwiOlxcXCJpcWl5aVxcXCIsXFxcImltcHJlc3Npb25fdHJhY2tpbmdzXFxcIjpbXFxcImh0dHBzOi8vZnJvZG8uZG91YmFuLmNvbS9yb2hpcnJpbS92aWRlb190cmFja2luZy9pbXByZXNzaW9uP3N1YmplY3RfaWQ9MzUyMzUxNTEmdmlkZW9fdHlwZT1tb3ZpZSZ2aWRlb19pZD04NDIxOTYmc291cmNlPWlxaXlpJnVzZXJfaWQ9Tm9uZSZkb3ViYW5fdWRpZD1Ob25lJnBsYXRmb3JtPUFuZHJvaWQmbG9jYXRpb249dmVuZG9yX3NlY3Rpb25cXFwiXSxcXFwiYXBwX3VyaVxcXCI6XFxcImlxaXlpOi8vc2t5bmV0LmRvdWJhbi5jb21cXFwiLFxcXCJ0aXRsZVxcXCI6XFxcIueIseWlh+iJulxcXCIsXFxcImFwcF9idW5kbGVfaWRcXFwiOlxcXCJjb20ucWl5aS52aWRlb1xcXCIsXFxcImNsaWNrX3RyYWNraW5nXFxcIjpcXFwiXFxcIixcXFwiaXNfYWRcXFwiOmZhbHNlLFxcXCJpbXByZXNzaW9uX3RyYWNraW5nXFxcIjpcXFwiXFxcIixcXFwicHJvbW90ZV9kZXNjXFxcIjpcXFwiXFxcIixcXFwiYm9va190eXBlXFxcIjpcXFwiXFxcIixcXFwiaWNvblxcXCI6XFxcImh0dHBzOi8vaW1nOS5kb3ViYW5pby5jb20vZi9mcm9kby82MzRhNzdjNGE3N2Q4MGEyYTRmNDllZDdhYWYwYmMwNzZmZWM3ZDAxL3BpY3MvdmVuZG9ycy9pcWl5aS5wbmdcXFwiLFxcXCJncmV5X2ljb25cXFwiOlxcXCJodHRwczovL2ltZzIuZG91YmFuaW8uY29tL2YvZnJvZG8vNGU0ZmRlYWEzNDMxOWU4YWQ0ODUzMzQ4OWI3ODU3ZGZlYTViZDMxYy9waWNzL3ZlbmRvcnMvaXFpeWlfZ3JleS5wbmdcXFwiLFxcXCJ1cmxcXFwiOlxcXCJodHRwOi8vd3d3LmlxaXlpLmNvbS92X252dXNvdjRhcG8uaHRtbD92Zm09bV8zMzFfZGJkeSZmdj00OTA0ZDk0OTgyMTA0MTQ0YTE1NDhkZDkwNDBkZjI0MVxcXCIsXFxcImlzX3BhaWRcXFwiOmZhbHNlLFxcXCJ1cmlcXFwiOlxcXCJpcWl5aTovL21vYmlsZS9wbGF5ZXI/YWlkPTEyMDUzNTQ0NTcwMTE1MDEmdHZpZD0yNTEwNDc4MjkyNTY4NDAwJmZ0eXBlPTI3JnN1YnR5cGU9MzMzXFxcIixcXFwiZXBpc29kZXNfaW5mb1xcXCI6XFxcIjM26ZuG5YWoXFxcIixcXFwicGF5bWVudHNcXFwiOlt7XFxcInByaWNlXFxcIjpcXFwiXFxcIixcXFwiZGVzY3JpcHRpb25cXFwiOlxcXCJcXFwiLFxcXCJtZXRob2RcXFwiOlxcXCJWSVDlhY3otLnop4LnnItcXFwifV0sXFxcInByZV9yZWxlYXNlX2Rlc2NcXFwiOlxcXCJcXFwiLFxcXCJzdWJqZWN0X2lkXFxcIjpcXFwiMzUyMzUxNTFcXFwifSxcXFwiKFxcXFxuKCkgPT4ge1xcXFxuICAgIGV2YWwocmVxdWVzdChnZXRWYXIoXFxcXFxcXCJxZGJfZmlsZVxcXFxcXFwiKSkpO1xcXFxuICAgIGxldCBhbmFseXNpc0NvbmZpZ3MgPSBnZXRDb25maWcoXFxcXFxcXCJhbmFseXNpc0NvbmZpZ3NcXFxcXFxcIik7XFxcXG4gICAgbGV0IGFuYWx5c2lzQ29uZmlnID0gYW5hbHlzaXNDb25maWdzW2FuYWx5c2lzQ29uZmlncy51c2VdLmNvbmZpZztcXFxcbiAgICBsZXQgcmVzdWx0ID0gXFxcXFxcXCJ0b2FzdDovL1xcXFxcXFxcdTg5ZTNcXFxcXFxcXHU2NzkwXFxcXFxcXFx1NTkzMVxcXFxcXFxcdThkMjVcXFxcXFxcIjtcXFxcbiAgICB0cnkge1xcXFxuICAgICAgICBpZiAoYW5hbHlzaXNDb25maWcuc3RhcnRzV2l0aChcXFxcXFxcIihcXFxcXFxcIikpIHtcXFxcbiAgICAgICAgICAgIGV2YWwoXFxcXFxcXCJyZXN1bHQgPSBcXFxcXFxcIiArIGFuYWx5c2lzQ29uZmlnKTtcXFxcbiAgICAgICAgfSBlbHNlIHtcXFxcbiAgICAgICAgICAgIGV2YWwoXFxcXFxcXCJyZXN1bHQgPSBcXFxcXFxcIiArIFxcXFxcXFwiKCgpID0+IHtcXFxcXFxcIiArIGFuYWx5c2lzQ29uZmlnICsgXFxcXFxcXCJ9KSgpXFxcXFxcXCIpO1xcXFxuICAgICAgICB9XFxcXG4gICAgfVxcXFxuICAgIGNhdGNoIChlKSB7XFxcXG4gICAgfVxcXFxuICAgIHJldHVybiByZXN1bHQ7XFxcXG59XFxcXG4pKClcXFwiLHt9KVwiLFwiZ3JvdXBcIjpcIuKRoOaOqOiNkFwiLFwidWFcIjpcIm1vYmlsZVwiLFwicHJlUnVsZVwiOlwibGV0IGZpbGUgPSBcXFwiaGlrZXI6Ly9maWxlcy9ydWxlcy9qb2tlci9xZGIuanNcXFwiO1xcbmxldCBnaXRmaWxlID0gJ2h0dHBzOi8vZ2l0Y29kZS5uZXQvcXFfNDE4NDY3NTYvaGlrZXIvLS9yYXcvbWFzdGVyL3FkYi5qcyc7XFxubGV0IHZlciA9IGdldEl0ZW0oJ25ld3ZlcicsJycpO1xcbmlmICghZmV0Y2goZmlsZSkgfHwgdmVyIDwgTVlfUlVMRS52ZXJzaW9uKSB7XFxuICAgIHdyaXRlRmlsZShmaWxlLCByZXF1ZXN0KGdpdGZpbGUpKTtcXG4gICAgc2V0SXRlbSgnbmV3dmVyJyxTdHJpbmcoTVlfUlVMRS52ZXJzaW9uKSk7XFxufVxcbnB1dFZhcih7XFxuICAgIGtleTogXFxcInFkYl9maWxlXFxcIixcXG4gICAgdmFsdWU6IGZpbGVcXG59KTtcXG50cnkge1xcbiAgICBldmFsKGZldGNoKGZpbGUpKTtcXG4gICAgcHJlKCk7XFxufSBjYXRjaCAoZSkge1xcbiAgICBsZXQgcnVsZSA9IEpTT04ucGFyc2UocmVxdWVzdChcXFwiaGlrZXI6Ly9wYWdlL3VyZ2VuY3lNb2RlXFxcIikpLnJ1bGU7XFxuICAgIGV2YWwocnVsZSlcXG59XCIsXCJwYWdlc1wiOlwiW3tcXFwiY29sX3R5cGVcXFwiOlxcXCJtb3ZpZV8zXFxcIixcXFwibmFtZVxcXCI6XFxcIumFjee9rue8lui+keeVjOmdolxcXCIsXFxcInBhdGhcXFwiOlxcXCJzZXR0aW5nLWVkaXRvclxcXCIsXFxcInJ1bGVcXFwiOlxcXCJqczpcXFxcbmV2YWwocmVxdWVzdChnZXRWYXIoJ3FkYl9maWxlJykpKVxcXFxubGV0IGQgPSBbXTtcXFxcbmxldCBjb25maWdUeXBlID0gZ2V0VmFyKFxcXFxcXFwiaW5wdXRfY29uZmlnX3R5cGVcXFxcXFxcIilcXFxcbmlmIChjb25maWdUeXBlID09PSAn6Kej5p6Q5o+S5Lu26YWN572uJykge1xcXFxuICAgIHNldFBhZ2VUaXRsZShcXFxcXFxcIue8lui+keino+aekOS7o+eggVxcXFxcXFwiKVxcXFxuICAgIGFuYWx5c2lzTW9kZUVkaXRQYWdlKGQpXFxcXG59IGVsc2UgaWYgKGNvbmZpZ1R5cGUgPT09ICflvbHniYfor6bmg4XpobXpnaLphY3nva4nKSB7XFxcXG4gICAgc2V0UGFnZVRpdGxlKFxcXFxcXFwi57yW6L6R5b2x54mH6K+m5oOF6aG16Z2i5Luj56CBXFxcXFxcXCIpXFxcXG4gICAgZGV0YWlsVmlld01vZGVFZGl0UGFnZShkKVxcXFxufSBlbHNlIHtcXFxcbiAgICBzZXRFcnJvcign6ZSZ6K+v55qE6YWN572uJyk7XFxcXG59XFxcXG5zZXRSZXN1bHQoZClcXFwifSx7XFxcImNvbF90eXBlXFxcIjpcXFwibW92aWVfM1xcXCIsXFxcIm5hbWVcXFwiOlxcXCLop6PpmaTooqvlsIFpcFxcXCIsXFxcInBhdGhcXFwiOlxcXCJyZWxlYXNlSVBcXFwiLFxcXCJydWxlXFxcIjpcXFwianM6XFxcXG5sZXQgaWQgPSBnZXRQYXJhbSgnaWQnKTtcXFxcbmxldCBkID0gW107XFxcXG5kLnB1c2goe1xcXFxuICAgIHRpdGxlOiAn5oKo5bey6KKr5bCB56aBSVDlnLDlnYDmiJbop6blj5HkuobkurrmnLrpqozor4HvvIzor7fmjInnhafku6XkuIvmraXpqqTlpITnkIYo5aaC5LiN5aSE55CG5oKo5bCG5Zyo5LiA5q615pe26Ze05YaF5peg5rOV5q2j5bi46I635Y+W5Ymn6ZuG5YiX6KGoKScsXFxcXG4gICAgdXJsOiAnaGlrZXI6Ly9lbXB0eScsXFxcXG4gICAgY29sX3R5cGU6ICd0ZXh0XzEnXFxcXG59KTtcXFxcbmQucHVzaCh7XFxcXG4gICAgdGl0bGU6ICcxLueCueWHu+atpOWkhOWvvOWFpeiHquWKqOiOt+WPlkNvb2tpZeaPkuS7ticsXFxcXG4gICAgdXJsOiAkKClcXFxcbiAgICAgICAgLmxhenlSdWxlKCgpID0+IHtcXFxcbiAgICAgICAgICAgIGxldCBnZXREb3ViYW5Db29raWUgPSBcXFxcXFxcIihmdW5jdGlvbigpe2lmKHdpbmRvd1snbG9jYXRpb24nXVsnaG9zdCddPT0nd3d3LmRvdWJhbi5jb20nKXtmeV9icmlkZ2VfYXBwWyd3cml0ZUZpbGUnXSgnaGlrZXI6Ly9maWxlcy9jYWNoZS9kb3ViYW5jb29raWUudHh0JyxmeV9icmlkZ2VfYXBwWydnZXRDb29raWUnXSgnaHR0cHM6Ly93d3cuZG91YmFuLmNvbS8nKSk7fWlmKHdpbmRvd1snbG9jYXRpb24nXVsnaG9zdCddPT0nbS5kb3ViYW4uY29tJyl7ZnlfYnJpZGdlX2FwcFsnd3JpdGVGaWxlJ10oJ2hpa2VyOi8vZmlsZXMvY2FjaGUvZG91YmFuY29va2llLnR4dCcsZnlfYnJpZGdlX2FwcFsnZ2V0Q29va2llJ10oJ2h0dHBzOi8vbS5kb3ViYW4uY29tLycpKTt9fSgpKTtcXFxcXFxcIlxcXFxuICAgICAgICAgICAgaWYgKCFmaWxlRXhpc3QoJ2hpa2VyOi8vZmlsZXMvY2FjaGUvZ2xvYmFsX2dldERvdWJhbkNvb2tpZS5qcycpKSB7XFxcXG4gICAgICAgICAgICAgICAgd3JpdGVGaWxlKCdoaWtlcjovL2ZpbGVzL2NhY2hlL2dsb2JhbF9nZXREb3ViYW5Db29raWUuanMnLCBnZXREb3ViYW5Db29raWUpO1xcXFxuICAgICAgICAgICAgfTtcXFxcbiAgICAgICAgICAgIHJldHVybiAncnVsZTovLycgKyBiYXNlNjRFbmNvZGUoJ+a1t+mYlOinhueVjO+8jOe9kemhteaPkuS7tu+/pWpzX3VybO+/pWdsb2JhbF9nZXREb3ViYW5Db29raWVAaGlrZXI6Ly9maWxlcy9jYWNoZS9nbG9iYWxfZ2V0RG91YmFuQ29va2llLmpzJyk7XFxcXG4gICAgICAgIH0pLFxcXFxuICAgIGNvbF90eXBlOiAndGV4dF8xJ1xcXFxufSk7XFxcXG5kLnB1c2goe1xcXFxuICAgIHRpdGxlOiAnMi7ngrnlh7vmraTlpITov5vlhaXnvZHpobXov5vooYznmbvlvZXmiJbkurrmnLrpqozor4HvvIzlrozmiJDlkI7ov5Tlm57mraTpobXpnaInLFxcXFxuICAgIHVybDogJ2h0dHBzOi8vbW92aWUuZG91YmFuLmNvbS9zdWJqZWN0LycgKyBpZCArICcvJyxcXFxcbiAgICBjb2xfdHlwZTogJ3RleHRfMSdcXFxcbn0pO1xcXFxuZC5wdXNoKHtcXFxcbiAgICB0aXRsZTogJzMu5a6M5oiQ55m75b2V5oiW5Lq65py66aqM6K+B5ZCO6L+U5Zue5b2x54mH6K+m5oOF6aG16Z2i6YeN5paw6L+b5YWlJyxcXFxcbiAgICB1cmw6ICdoaWtlcjovL2VtcHR5JyxcXFxcbiAgICBjb2xfdHlwZTogJ3RleHRfMSdcXFxcbn0pO1xcXFxuc2V0UmVzdWx0KGQpXFxcIn0se1xcXCJjb2xfdHlwZVxcXCI6XFxcIm1vdmllXzNcXFwiLFxcXCJuYW1lXFxcIjpcXFwi5oqi5pWR6aG16Z2iXFxcIixcXFwicGF0aFxcXCI6XFxcInVyZ2VuY3lNb2RlXFxcIixcXFwicnVsZVxcXCI6XFxcImpzOlxcXFxubGV0IGQgPSBbXTtcXFxcbmQucHVzaCh7XFxcXG4gICAgdGl0bGU6ICflvojmmI7mmL4s5Ye65LqG5LiA5Lqb5bCP6Zeu6aKYLOW7uuiurumHjeeUnycsXFxcXG4gICAgY29sX3R5cGU6ICd0ZXh0X2NlbnRlcl8xJyxcXFxcbiAgICB1cmw6ICdoaWtlcjovL2VtcHR5J1xcXFxufSlcXFxcbmQucHVzaCh7XFxcXG4gICAgdGl0bGU6ICfngrnmiJHmm7TmlrDkvp3otZYnLFxcXFxuICAgIGNvbF90eXBlOiAndGV4dF8xJyxcXFxcbiAgICB1cmw6ICQoJ2hpa2VyOi8vZW1wdHknKS5sYXp5UnVsZSgoKSA9PiB7XFxcXG4gICAgICAgIGxldCBmaWxlID0gXFxcXFxcXCJoaWtlcjovL2ZpbGVzL3J1bGVzL2pva2VyL3FkYi5qc1xcXFxcXFwiO1xcXFxuICAgICAgICBsZXQgZ2l0ZmlsZSA9ICdodHRwczovL2dpdGNvZGUubmV0L3FxXzQxODQ2NzU2L2hpa2VyLy0vcmF3L21hc3Rlci9xZGIuanMnO1xcXFxuICAgICAgICBsZXQgdGV4dCA9IHJlcXVlc3QoZ2l0ZmlsZSk7XFxcXG4gICAgICAgIHdyaXRlRmlsZShmaWxlLCB0ZXh0KTtcXFxcbiAgICAgICAgcmVmcmVzaFBhZ2UoKTtcXFxcbiAgICAgICAgcmV0dXJuICd0b2FzdDovL+S+nei1luaWh+S7tuabtOaWsOaIkOWKnydcXFxcbiAgICB9KVxcXFxufSlcXFxcbmQucHVzaCh7XFxcXG4gICAgdGl0bGU6ICfngrnmiJHmgaLlpI3pu5jorqTorr7nva4nLFxcXFxuICAgIGNvbF90eXBlOiAndGV4dF8xJyxcXFxcbiAgICB1cmw6ICQoXFxcXFxcXCLnoa7lrpropoHmgaLlpI3vvJ9cXFxcXFxcIikuY29uZmlybSgoKSA9PiB7XFxcXG4gICAgICAgIGRlZmF1bHRDb25maWdzID0ge1xcXFxuICAgICAgICAgICAgc3RhckNvbG9yOiBcXFxcXFxcIiNmZmFjMmRcXFxcXFxcIixcXFxcbiAgICAgICAgICAgIGNob29zZUNvbG9yOiBcXFxcXFxcIiNGQTcyOThcXFxcXFxcIixcXFxcbiAgICAgICAgICAgIHF1aWNrU2VhcmNoQ29uZmlnczoge1xcXFxuICAgICAgICAgICAgICAgIG9yZGVyOiBbXVxcXFxuICAgICAgICAgICAgfSxcXFxcbiAgICAgICAgICAgIGRldGFpbHNWaWV3Q29uZmlnczoge1xcXFxuICAgICAgICAgICAgICAgIHVzZTogXFxcXFxcXCLpu5jorqRcXFxcXFxcIixcXFxcbiAgICAgICAgICAgICAgICBcXFxcXFxcIum7mOiupFxcXFxcXFwiOiB7XFxcXG4gICAgICAgICAgICAgICAgICAgIGNvbmZpZzogXFxcXFxcXCJldmFsKGZldGNoKGdldFZhcigncWRiX2ZpbGUnKSkpO2RldGFpbHNWaWV3KHR5cGUsIGlkKTtcXFxcXFxcIlxcXFxuICAgICAgICAgICAgICAgIH1cXFxcbiAgICAgICAgICAgIH0sXFxcXG4gICAgICAgICAgICBhbmFseXNpc0NvbmZpZ3M6IHtcXFxcbiAgICAgICAgICAgICAgICB1c2U6IFxcXFxcXFwi5LiN6Kej5p6QXFxcXFxcXCIsXFxcXG4gICAgICAgICAgICAgICAgXFxcXFxcXCLkuI3op6PmnpBcXFxcXFxcIjoge1xcXFxuICAgICAgICAgICAgICAgICAgICBjb25maWc6ICQudG9TdHJpbmcoKCkgPT4ge1xcXFxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGlucHV0O1xcXFxuICAgICAgICAgICAgICAgICAgICB9KSxcXFxcbiAgICAgICAgICAgICAgICAgICAgc2V0dGluZzogJC50b1N0cmluZygoKSA9PiB7XFxcXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gXFxcXFxcXCJ0b2FzdDovL+ivpeaPkuS7tuaXoOiuvue9rumhtemdolxcXFxcXFwiO1xcXFxuICAgICAgICAgICAgICAgICAgICB9KVxcXFxuICAgICAgICAgICAgICAgIH0sXFxcXG4gICAgICAgICAgICAgICAgXFxcXFxcXCLmlq3mj5JcXFxcXFxcIjoge1xcXFxuICAgICAgICAgICAgICAgICAgICBjb25maWc6ICQudG9TdHJpbmcoKCkgPT4ge1xcXFxuICAgICAgICAgICAgICAgICAgICAgICAgbGV0IGZpbGUgPSBcXFxcXFxcImhpa2VyOi8vZmlsZXMvcnVsZXMvRHVhbk5pYW4vTXlQYXJzZS5qc29uXFxcXFxcXCI7XFxcXG4gICAgICAgICAgICAgICAgICAgICAgICBsZXQgb2xkZmlsZSA9IFxcXFxcXFwiaGlrZXI6Ly9maWxlcy9jYWNoZS9NeVBhcnNlU2V0Lmpzb25cXFxcXFxcIjtcXFxcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChmaWxlRXhpc3QoZmlsZSkpIHtcXFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBldmFsKCdqc29uPScgKyBmZXRjaChmaWxlKSk7XFxcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbGV0IGpzVXJsID0ganNvbi5zZXR0aW5ncy5jajtcXFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBldmFsKGZldGNoKGpzVXJsKSk7XFxcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGF5dG1QYXJzZShpbnB1dCk7XFxcXG4gICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKGZpbGVFeGlzdChvbGRmaWxlKSkge1xcXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxldCBqc1VybCA9IEpTT04ucGFyc2UoZmV0Y2gob2xkZmlsZSkpLmNqO1xcXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV2YWwoZmV0Y2goanNVcmwpKTtcXFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gYXl0bVBhcnNlKGlucHV0KTtcXFxcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XFxcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuICd0b2FzdDovL+ayoeaJvuWIsOaWreaPkumFjee9ruaWh+S7tic7XFxcXG4gICAgICAgICAgICAgICAgICAgICAgICB9XFxcXG4gICAgICAgICAgICAgICAgICAgIH0pLFxcXFxuICAgICAgICAgICAgICAgICAgICBzZXR0aW5nOiAkLnRvU3RyaW5nKCgpID0+IHtcXFxcbiAgICAgICAgICAgICAgICAgICAgICAgIGxldCBmaWxlID0gXFxcXFxcXCJoaWtlcjovL2ZpbGVzL3J1bGVzL0R1YW5OaWFuL015UGFyc2UuanNvblxcXFxcXFwiO1xcXFxuICAgICAgICAgICAgICAgICAgICAgICAgbGV0IG9sZGZpbGUgPSBcXFxcXFxcImhpa2VyOi8vZmlsZXMvY2FjaGUvTXlQYXJzZVNldC5qc29uXFxcXFxcXCI7XFxcXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoZmlsZUV4aXN0KGZpbGUpKSB7XFxcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZXZhbCgnanNvbj0nICsgZmV0Y2goZmlsZSkpO1xcXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxldCBqc1VybCA9IGpzb24uc2V0dGluZ3MuY2o7XFxcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZXZhbChmZXRjaChqc1VybCkpO1xcXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBzZXRVcmw7XFxcXG4gICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKGZpbGVFeGlzdChvbGRmaWxlKSkge1xcXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxldCBqc1VybCA9IEpTT04ucGFyc2UoZmV0Y2gob2xkZmlsZSkpLmNqO1xcXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV2YWwoZmV0Y2goanNVcmwpKTtcXFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gc2V0VXJsO1xcXFxuICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcXFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gXFxcXFxcXCJoaWtlcjovL3BhZ2UvUm91dGU/cnVsZT1NeUZpZWxk4bSw4oG/JnR5cGU96K6+572uXFxcXFxcXCI7XFxcXG4gICAgICAgICAgICAgICAgICAgICAgICB9XFxcXG4gICAgICAgICAgICAgICAgICAgIH0pXFxcXG4gICAgICAgICAgICAgICAgfVxcXFxuICAgICAgICAgICAgfVxcXFxuICAgICAgICB9XFxcXG4gICAgICAgIHdyaXRlRmlsZShnZXRWYXIoJ3FkYl9jb25maWcnKSwgSlNPTi5zdHJpbmdpZnkoZGVmYXVsdENvbmZpZ3MpKTtcXFxcbiAgICAgICAgcmVmcmVzaFBhZ2UoKTtcXFxcbiAgICAgICAgcmV0dXJuIFxcXFxcXFwidG9hc3Q6Ly/lt7LmgaLlpI3pu5jorqTorr7nva5cXFxcXFxcIjtcXFxcbiAgICB9KVxcXFxufSlcXFxcbmQucHVzaCh7XFxcXG4gICAgdGl0bGU6ICfoi6Xph43nlJ/kuI3otbfkvZznlKgs54K55oiR5aSN5Yi26ZSZ6K+v5L+h5oGv5o+Q5Lqk57uZ5byA5Y+R6ICFJyxcXFxcbiAgICBjb2xfdHlwZTogJ3RleHRfMScsXFxcXG4gICAgdXJsOiAnY29weTovLycgKyBlLm1lc3NhZ2VcXFxcbn0pXFxcXG5zZXRSZXN1bHQoZCk7XFxcIn0se1xcXCJjb2xfdHlwZVxcXCI6XFxcIm1vdmllXzNcXFwiLFxcXCJuYW1lXFxcIjpcXFwi6aG65L2s5LiT55So6K+m5oOF6aG1XFxcIixcXFwicGF0aFxcXCI6XFxcIlNkZXRhaWxcXFwiLFxcXCJydWxlXFxcIjpcXFwianM6XFxcXG5wdXRWYXIoJ3FkYl9maWxlJywgJ2hpa2VyOi8vZmlsZXMvcnVsZXMvam9rZXIvcWRiLmpzJyk7XFxcXG5ldmFsKGZldGNoKGdldFZhcihcXFxcXFxcInFkYl9maWxlXFxcXFxcXCIpKSk7XFxcXG5wcmUoKTtcXFxcbmxldCB0eXBlID0gZ2V0UGFyYW0oJ3R5cGUnLCAnJyksXFxcXG4gICAgaWQgPSBnZXRQYXJhbSgnaWQnLCAnJyk7XFxcXG5kZXRhaWxzVmlldyh0eXBlLCBpZCk7XFxcIn1dXCJ9IiwicGljVXJsIjoiaHR0cHM6Ly9pbWcxLmRvdWJhbmlvLmNvbS92aWV3L3Bob3RvL3NfcmF0aW9fcG9zdGVyL3B1YmxpYy9wMjg4Mzk5NTY2Ny53ZWJwQFJlZmVyZXI9aHR0cHM6Ly9pbWcxLmRvdWJhbmlvLmNvbS92aWV3L3Bob3RvL3NfcmF0aW9fcG9zdGVyL3B1YmxpYy9wMjg4Mzk5NTY2Ny53ZWJwIiwidGl0bGUiOiLniLHlpYfoibot5ZSQ5pyd6K+h5LqL5b2VIn0=