<?php

interface Player {
    public function recovery();

    public function getHit(int $hitPoint);

    public function doKick();
    
    public function doPunch();

    public function doMagic();
}

class Player1 implements Player {
    public string $name = "Player1";
	
    public int $power = 100;
	
    public int $recoveryPoint = 10;
	
    private int $kickPower = 20;
	
    private int $punchPower = 10;
	
    private int $magicPower = 30;

    public function __construct(string $name) {
        $this->name = $name;
    }

	public function recovery() {
		$this->power = $this->power + $this->recoveryPoint;
	}

    public function getHit(int $hitPoint) {
        $this->power = $this->power - $hitPoint;
    }

	public function doKick() {
		return $this->kickPower;
	}

	public function doPunch() {
		return $this->punchPower;
	}

	public function doMagic() {
		return $this->magicPower;
	}
}

class Player2 implements Player {
	
    public string $name = "Player2";
    
    public int $power = 100;
	
    public int $recoveryPoint = 10;
	
    private int $kickPower = 20;
	
    private int $punchPower = 10;
	
    private int $magicPower = 30;

    public function __construct(string $name) {
        $this->name = $name;
    }

	public function recovery() {
		$this->power = $this->power + $this->recoveryPoint;
	}

    public function getHit(int $hitPoint) {
        $this->power = $this->power - $hitPoint;
    }

	public function doKick() {
		return $this->kickPower;
	}

	public function doPunch() {
		return $this->punchPower;
	}

	public function doMagic() {
		return $this->magicPower;
	}
}

class Game {

    private Player $player1, $player2;

    private array $action = [
        "recovery",
        "doKick",
        "doPunch",
        "doMagic"
    ];

    public function __construct(Player $player1, Player $player2) {
        $this->player1 = $player1;
        $this->player2 = $player2;
    }

    public function duel() {
        $gamePlay = true;

        $players = ["player1","player2"];
        shuffle($players);
        
        $playerAct = $players[0];
        $playerHit = $players[1];

        echo "Player " . $this->$playerAct->name . " Has Power " . $this->$playerAct->power . " point\n";
        echo "Player " . $this->$playerHit->name . " Has Power " . $this->$playerHit->power . " point\n";
        echo "#########################################################\n";

        while($gamePlay == true) {
            $key = array_rand($this->action);
                $action = $this->action[$key];

                //echo $action."\n";
                if ($action == "recovery") {
                    $this->$playerAct->recovery();
                    echo "GAME ON =>> " . $this->$playerAct->name . " recovery, up to " . $this->$playerAct->recoveryPoint . " point\n";
                } else {
                    $this->$playerHit->getHit($this->$playerAct->$action());
                    echo "GAME ON =>> " . $this->$playerAct->name . " " . $action . " to " . $this->$playerHit->name . ", Damage: -" . $this->$playerAct->$action() . " point\n";
                }

                echo "---------------------------------------------------------\n";
                echo "Player " . $this->$playerAct->name . " Has Power " . $this->$playerAct->power . " point\n";
                echo "Player " . $this->$playerHit->name . " Has Power " . $this->$playerHit->power . " point\n";
                echo "#########################################################\n";
                
                if ($this->$playerHit->power <= 0 || $this->$playerAct->power <= 0) {
                    $gamePlay = false;

                    echo $this->$playerAct->name . " WIN!!!\n";
                    echo $this->$playerHit->name . " HAS DIED!\n";
                    echo "THE END.";
                }

                if ($playerAct == "player2") {
                    $playerAct = "player1";
                    $playerHit = "player2";
                } else { 
                    $playerAct = "player2";
                    $playerHit = "player1";
                }
                sleep(1);
        }
    }
}

$game  = new Game(new Player1("Frans"), new Player2("Jonathan"));
$game->duel();