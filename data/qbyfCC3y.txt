/* package codechef; // don't place package name! */
import java.util.*;
import java.lang.*;
import java.io.*;

/* Name of the class has to be "Main" only if the class is public. */
// NOTE: Do this without sorting the array
public class Main
{
    public static void main (String[] args) throws java.lang.Exception
    {
		Scanner input = new Scanner(System.in);
		int N = input.nextInt();
		
		int[] wages = new int[N];
		
		for (int i = 0; i < N; i++) {
			wages[i] = input.nextInt();
		}
		
		int count = 0;
		while (true) {
			int  min = Integer.MAX_VALUE - 1, minIdx = -1, secondMin = Integer.MAX_VALUE, looserIdx = -1;
			
			// finding min
			for (int i = 0; i < N; i++) {				
				if (wages[i] < min) {
					min = wages[i];
					minIdx = i;
				}
			}
			
			// finding secondMin
			for (int i = 0; i <N; i++) {
				if (wages[i] < secondMin && wages[i] > min) {
					secondMin = wages[i];
					looserIdx = i; // secondMin will be looser
				}
			}
			if (looserIdx == -1) break; // break if can't find the secondMin
			
			// increase all element except secondMin so as 'min' becomes equals to secondMin
			int increase = (secondMin - min);
			for (int j = 0; j < N; j++) {
				if (j != looserIdx)
					wages[j] += increase;
			}
			count += increase;
		}
		
		// Sorting the Array to decrease the time-complexity of finding min and secondMin, Total T.C. = O(n log n)
		// Arrays.sort(wages);
		// int[] A = new int[N - 1];
		// for (int i = 0; i < N - 1; i++) {
		// 	int prev;
		// 	if (i == 0) {
		// 		prev = 0;
		// 	} else {
		// 		prev = A[i - 1];
		// 	}
		// 	A[i] = prev + (wages[i + 1] - wages[i]);
		// 	count += A[i];
		// }
		
		
		System.out.println( count);	
    }
}