#include <stdio.h>
#include <stdlib.h>
#include <string.h>

enum {max_size = 150};

struct reg {
  int value;
  int cycle;
};

int cycleOfInterest(int c) {
  if ((c - 20) % 40 == 0 )
    return 1;
  return 0;
}

int checkRegister(struct reg* r) {
  int res = 0;
  if (cycleOfInterest(r->cycle) == 1) {
    res = r->value * r->cycle;
  }
  return res;
}

int part1(char input[][10], int size) {
  int sum = 0;
  struct reg r;
  r.value = 1;
  r.cycle = 0;
  for (int i = 0; i < size && r.cycle < 240; ++i) {
    if (input[i][0] == 'n') {
      // noop
      ++r.cycle;
      sum += checkRegister(&r);
    } else if (input[i][0] == 'a') {
      ++r.cycle;
      sum += checkRegister(&r);
      if (input[i][5] == '-') {
        int num = atoi(&input[i][6]);
        ++r.cycle;
        sum += checkRegister(&r);
        r.value -= num;
      } else {
        int num = atoi(&input[i][5]);
        ++r.cycle;
        sum += checkRegister(&r);
        r.value += num;
      }
    } else {
      printf("cmd not recognised: %s\n", input[i]);
    }
  }
  return sum;
}

int main() {
  char input[max_size][10];
  int i = 0;
  while (i < 150 && fgets(input[i], 10, stdin)) {
    ++i;
  }
  --i;
  printf("%d\n", part1(input, i));
  //printf("%d\n", part2(elves, i));
}