using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace KeyValueStore
{
    public class FileBackedStore
    {
        private readonly string _filePath;

        public FileBackedStore(string filePath)
        {
            _filePath = filePath;
        }

        public void Set(string key, string value)
        {
            // Read all the lines from the file
            var lines = File.ReadAllLines(_filePath);

            // Find the line with the matching key
            var line = lines.FirstOrDefault(l => l.StartsWith(key));

            // If the key was found, update the value
            if (line != null)
            {
                var index = Array.IndexOf(lines, line);
                lines[index] = $"{key}:{value}";
            }
            // If the key was not found, add a new line with the key and value
            else
            {
                Array.Resize(ref lines, lines.Length + 1);
                lines[lines.Length - 1] = $"{key}:{value}";
            }

            // Write the lines back to the file
            File.WriteAllLines(_filePath, lines);
        }

        public string Get(string key)
        {
            // Read all the lines from the file
            var lines = File.ReadAllLines(_filePath);

            // Find the line with the matching key
            var line = lines.FirstOrDefault(l => l.StartsWith(key));

            // If the key was found, return the value
            if (line != null)
            {
                var parts = line.Split(':');
                return parts[1];
            }
            // If the key was not found, return null
            else
            {
                return null;
            }
        }
    }
}
