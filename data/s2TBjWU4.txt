void solve() {
    int n, i, j, m, x, sum = 0, N, mask;
    cin >> n >> m;
    vector <int> a;
    for (i = 0; i < m; i++) {
        cin >> x;
        sum += 2 * x;
        a.push_back(x);
        a.push_back(x);
    }
    if (sum < n) {
        cout << "-1" << endl;
    }
    else {
        N = (1 << a.size());
        bool flag = false;
        vector <int> best(404), nw;
        for (mask = 1; mask < N; mask++) {
            nw.clear();
            sum = 0;
            for (i = 0; i < a.size(); i++) {
                if (mask & (1 << i)) {
                    sum += a[i];
                    nw.push_back(a[i]);
                }
            }
            if (sum == n) {
                flag = true;
                if (nw.size() < best.size()) {
                    best = nw;
                }
            }
        }
        if (flag) {
            cout << best.size() << endl;
            for (auto it : best) {
                cout << it << " ";
            }
            cout << endl;
        }
        else {
            cout << 0 << endl;
        }
    }
}
