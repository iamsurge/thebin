local OrionLib = loadstring(game:HttpGet(('https://pastebin.com/raw/JW8RLECb')))()
local Window = OrionLib:MakeWindow({Name = "Gaming's Script Hub", HidePremium = false, SaveConfig = false, ConfigFolder = "OrionTest", IntroText = "Refinery Caves"})


  local Tab =
	  Window:MakeTab(
	  {
		  Name = "Farming",
		  Icon = "rbxassetid://4483345998",
		  PremiumOnly = false
	  }
  )

local Section = Tab:AddSection({
	Name = "AutoFarm"
})

 Tab:AddToggle({
    Name = "Wood AutoFarm", -- Fixed By : Mouad#9327
    Default = false,
    Callback = function(Value)
        getgenv().AutoFarmNew = Value
        local ug = game:GetService("Players").LocalPlayer.PlayerGui.UserGui
        local e = game:GetService("ReplicatedStorage").Events
        local lp = game.Players.LocalPlayer
        local chr = lp.Character
        local hrp = chr.HumanoidRootPart
        local counter = game:GetService("Workspace").Map.Sellary.Counter.Counter
        local types = {
            "ArCobble",
            "WoodPlank2",
            "WoodPlank"
        }
        local function rob()
            for i, v in pairs(workspace.Grabable:GetChildren()) do
                if v:FindFirstChild("Part") and v.Part:FindFirstChild("Info") then
                    if table.find(types, v.Part.Info.Value) then
                        hrp.CFrame = CFrame.new(v.Part.Position)
                        task.wait()
                        e.Grab:InvokeServer(v:FindFirstChild("Part"), {})
                        v:FindFirstChild("Part").Position = counter.Position + Vector3.new(math.random(1,5), math.random(1,5), math.random(1,5))
                    end
                end
            end
            wait(1)
            workspace.Map.Sellary.Keeper.IPart.Interact:FireServer()
            wait(.5)
            local btn = ug.Dialog:WaitForChild("Yes")
            btn.Active = true
            btn.Modal = true
            firesignal(btn.MouseButton1Click)
            hrp.CFrame = CFrame.new(-467, 6, 14)
        end
        if AutoFarmNew == true then
            pcall(rob)
        end
        while AutoFarmNew do
            task.wait(5)
            pcall(rob)
        end  
    end
})

Tab:AddToggle(
	  {
		  Name = "Delivery Box Auto-Farm",
		  Default = false,
		  Callback = function(Value)
			  getgenv().BoxAutoFarm = Value
			  local chr = game.Players.LocalPlayer.Character
			  local plr = game.Players.LocalPlayer
			  while BoxAutoFarm do
				  task.wait()
				  chr.HumanoidRootPart.CFrame =
					  game:GetService("Workspace").Map.Buildings.UCS.Other.DeliveryJob.IPart.CFrame
				  task.wait()
				  repeat
					  task.wait(0.1)
					  chr.HumanoidRootPart.CFrame =
						  game:GetService("Workspace").Map.Buildings.UCS.Other.DeliveryJob.IPart.CFrame
					  task.wait()
					  workspace.Map.Buildings.UCS.Other.DeliveryJob.IPart.Interact:FireServer()
				  until game:GetService("Players").LocalPlayer.PlayerGui.UserGui.Dialog:FindFirstChild("Yes") ~= nil or
					  BoxAutoFarm == false
				  for i, v in pairs(
					  getconnections(
						  game:GetService("Players").LocalPlayer.PlayerGui.UserGui.Dialog:WaitForChild("Yes").MouseButton1Click
					  )
				  ) do
					  v:Fire()
				  end
				  task.wait(5.5)
				  for i, v in next, game:GetService("Workspace").Grabable:GetChildren() do
					  if v:IsA("Model") and v.Name == "DeliveryBox" and v.Owner.Value == game.Players.LocalPlayer then
						  if v.Box.BGui.Destination.Text == "Valley:<font color='rgb(255, 165, 0)'> Dealership </font>" then
							  task.wait()
							  chr.HumanoidRootPart.CFrame = v.Box.CFrame
							  task.wait(1.5)
							  v.Box.CFrame =
								  game:GetService("Workspace").Map.Buildings.Delearship.Registers.Register1.Counter.Counter.CFrame
						  else
							  for i, v in next, game:GetService("Workspace").Grabable:GetChildren() do
								  if
									  v:IsA("Model") and v.Name == "DeliveryBox" and
										  v.Owner.Value == game.Players.LocalPlayer
								   then
									  if
										  v.Box.BGui.Destination.Text ==
											  "Plains<font color='rgb(255, 165, 0)'> Cave: Pickaxe Shop </font>"
									   then
										  task.wait()
										  chr.HumanoidRootPart.CFrame = v.Box.CFrame
										  task.wait(1.5)
										  v.Box.CFrame =
											  game:GetService("Workspace").Map.Buildings.PickaxeShop.Registers.Register1.Counter.Counter.CFrame
									  else
										  for i, v in next, game:GetService("Workspace").Grabable:GetChildren() do
											  if
												  v:IsA("Model") and v.Name == "DeliveryBox" and
													  v.Owner.Value == game.Players.LocalPlayer
											   then
												  if
													  v.Box.BGui.Destination.Text ==
														  "Plains:<font color='rgb(255, 165, 0)'> Furniture Store </font>"
												   then
													  task.wait()
													  chr.HumanoidRootPart.CFrame = v.Box.CFrame
													  task.wait(1.5)
													  v.Box.CFrame =
														  game:GetService("Workspace").Map.Buildings.FurnitureShop.Registers.Register1.Counter.Counter.CFrame
												  else
													  for i, v in next, game:GetService("Workspace").Grabable:GetChildren(
  
													  ) do
														  if
															  v:IsA("Model") and v.Name == "DeliveryBox" and
																  v.Owner.Value == game.Players.LocalPlayer
														   then
															  if
																  v.Box.BGui.Destination.Text ==
																	  "Plains:<font color='rgb(255, 165, 0)'> Sellary </font>"
															   then
																  task.wait()
																  chr.HumanoidRootPart.CFrame = v.Box.CFrame
																  task.wait(1.5)
																  v.Box.CFrame =
																	  game:GetService("Workspace").Map.Sellary.Keeper.IPart.CFrame
															  end
														  end
													  end
												  end
											  end
										  end
									  end
								  end
							  end
						  end
					  end
				  end
				  chr.HumanoidRootPart.CFrame =
					  game:GetService("Workspace").Map.Buildings.UCS.Other.DeliveryJob.IPart.CFrame
			  end
		  end
	  }
  )

 local Tab =
	  Window:MakeTab(
	  {
		  Name = "Ore Teleports",
		  Icon = "rbxassetid://4483345998",
		  PremiumOnly = false
	  }
  )
  local Section = Tab:AddSection({
	Name = "Teleport Held Item (Uses Keybinds)"
})
  Tab:AddBind(
	  {
		  Name = "(Keybind) Bring Held Item To Plot",
		  Default = Enum.KeyCode.F,
		  Hold = false,
		  Callback = function()
			  for r, i in next, game:GetService("Workspace").Grabable:GetDescendants() do
				  if i.Name == "Grab" then
					  if i:FindFirstChild("Plr") then
						  if i.Plr.Value == game.Players.LocalPlayer then
							  for t, b in next, game:GetService("Workspace").Plots:GetChildren() do
								  if b.Owner.Value == game.Players.LocalPlayer then
									  i.Parent.CFrame = b.Base.CFrame + Vector3.new(0, 25, 0)
								  end
							  end
						  end
					  end
				  end
			  end
		  end
	  }
  )
  Tab:AddBind(
	  {
		  Name = "(Keybind) Sell Current Held Ore",
		  Default = Enum.KeyCode.G,
		  Hold = false,
		  Callback = function()
			  for r, x in next, game:GetService("Workspace").Grabable:GetDescendants() do
				  if x.Name == "Grab" then
					  if x:FindFirstChild("Plr") then
						  if x.Parent.Parent:FindFirstChild("Configuration") then
							  if x.Parent.Parent.Configuration:FindFirstChild("Data") then
								  if x.Parent.Parent.Configuration.Data:FindFirstChild("Size") then
									  if x.Parent.Parent.Configuration.Data:FindFirstChild("MatInd") then
										  if x.Plr.Value == game.Players.LocalPlayer then
											  x.Parent.CFrame =
												  game:GetService("Workspace").Map.Sellary.Counter.Counter.CFrame +
												  Vector3.new(0, 0, 0)
											  task.wait(0.5)
											  workspace.Map.Sellary.Keeper.IPart.Interact:FireServer()
											  task.wait(1)
											  for i, v in pairs(
												  getconnections(
													  game:GetService("Players").LocalPlayer.PlayerGui.UserGui.Dialog:WaitForChild(
														  "Yes"
													  ).MouseButton1Click
												  )
											  ) do
												  v:Fire()
											  end
										  else
										  end
									  end
								  end
							  end
						  end
					  end
				  end
			  end
		  end
	  }
  )
  Tab:AddBind(
	  {
		  Name = "(Keybind) Bring Held Ore To Compactor",
		  Default = Enum.KeyCode.H,
		  Hold = false,
		  Callback = function()
			  for r, x in next, game:GetService("Workspace").Grabable:GetDescendants() do
				  if x.Name == "Grab" then
					  if x:FindFirstChild("Plr") then
						  if x.Parent.Parent:FindFirstChild("Configuration") then
							  if x.Parent.Parent.Configuration:FindFirstChild("Data") then
								  if x.Parent.Parent.Configuration.Data:FindFirstChild("Size") then
									  if x.Parent.Parent.Configuration.Data:FindFirstChild("MatInd") then
										  if x.Plr.Value == game.Players.LocalPlayer then
											  for a, e in next, game:GetService("Workspace").Plots:GetChildren() do
												  if e.Owner.Value == game.Players.LocalPlayer then
													  if e.Objects:FindFirstChild("Compactor") then
														  x.Parent.CFrame =
															  e.Objects.Compactor.Conveyor.Belt.Part.CFrame +
															  Vector3.new(0, 5, 0)
													  else
														  OrionLib:MakeNotification(
															  {
																  Name = "Error:",
																  Content = "You Dont Own A Compactor",
																  Image = "rbxassetid://0",
																  Time = 10
															  }
														  )
													  end
												  end
											  end
										  end
									  end
								  end
							  end
						  end
					  end
				  end
			  end
 		  end
	  }
  )
  Tab:AddBind(
	  {
		  Name = "(Keybind) Bring Held Ore To Furnace",
		  Default = Enum.KeyCode.K,
		  Hold = false,
		  Callback = function()
			  for r, x in next, game:GetService("Workspace").Grabable:GetDescendants() do
				  if x.Name == "Grab" then
					  if x:FindFirstChild("Plr") then
						  if x.Parent.Parent:FindFirstChild("Configuration") then
							  if x.Parent.Parent.Configuration:FindFirstChild("Data") then
								  if x.Parent.Parent.Configuration.Data:FindFirstChild("Size") then
									  if x.Parent.Parent.Configuration.Data:FindFirstChild("MatInd") then
										  if x.Plr.Value == game.Players.LocalPlayer then
											  for t, b in next, game:GetService("Workspace").Plots:GetChildren() do
												  if b.Owner.Value == game.Players.LocalPlayer then
													  for k, l in next, b.Objects:GetChildren() do
														  if l.Name == "Boxed Atom-8 Furnace" then
															  x.Parent.CFrame =
																  l.Conveyor.Belt.Part.CFrame + Vector3.new(0, 5, 0)
														  else
															  if l.Name == "Advance Furnace" then
																  x.Parent.CFrame =
																	  l.Conveyor.Belt.Part.CFrame + Vector3.new(0, 5, 0)
															  else
																  if string.match(l.Name, " Furnace") then
																	  x.Parent.CFrame =
																		  l.Conveyor.Belt.Part.CFrame +
																		  Vector3.new(0, 5, 0)
																  end
															  end
														  end
													  end
												  end
											  end
										  end
									  end
								  end
							  end
						  end
					  end
				  end
			  end
		  end
	  }
  )
  
  local Section = Tab:AddSection({
	Name = "Ores Teleport"
})
  
  Tab:AddButton(
	  {
		  Name = "Teleport Ores To Plot",
		  Callback = function()
			  --workspace.Map.Sellary.Keeper.IPart.Interact:FireServer()
			  for q, m in next, game:GetService("Workspace").Grabable:GetChildren() do
				  if m:FindFirstChild("Owner") then
					if m:FindFirstChild("Configuration") then  
					if m.Configuration:FindFirstChild("Data") then
						  if m.Configuration.Data:FindFirstChild("MatInd") then
							  if m.Configuration.Data:FindFirstChild("Size") then
								  if m.Owner.Value == game.Players.LocalPlayer then
									  task.wait()
									  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = m.Part.CFrame
									  task.wait(0.2)
									  for a, l in next, game:GetService("Workspace").Plots:GetChildren() do
										  if l.Owner.Value == game.Players.LocalPlayer then
											  m.Part.CFrame = l.Base.CFrame + Vector3.new(0, 25, 0)
										  end
									  end
									  task.wait(0.2)
								  end
							  end
						  end
						  end
					  end
				  end
			  end
			  for t, y in next, game:GetService("Workspace").Plots:GetChildren() do
				  if y.Owner.Value == game.Players.LocalPlayer then
					  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = y.Base.CFrame + Vector3.new(0, 25, 0)
				  end
			  end
		  
		  end
	  }
  )
  Tab:AddButton(
	  {
		  Name = "Sell Ores",
		  Callback = function()
			  --workspace.Map.Sellary.Keeper.IPart.Interact:FireServer()
			  for w, r in next, game:GetService("Workspace").Grabable:GetChildren() do
				  if r:FindFirstChild("Owner") then
					if r:FindFirstChild("Configuration") then
					if r.Configuration:FindFirstChild("Data") then
						  if r.Configuration.Data:FindFirstChild("MatInd") then
							  if r.Configuration.Data:FindFirstChild("Size") then
								  if r.Owner.Value == game.Players.LocalPlayer then
									  task.wait()
									  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = r.Part.CFrame
									  task.wait(0.2)
									  r.Part.CFrame = game:GetService("Workspace").Map.Sellary.Counter.Counter.CFrame
									  task.wait(0.2)
								  end
							  end
						   end
						  end
					  end
				  end
			  end
			  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.Map.Sellary.Keeper.IPart.CFrame
			  task.wait(0.3)
			  workspace.Map.Sellary.Keeper.IPart.Interact:FireServer()
			  wait(1)
			  for i, v in pairs(
				  getconnections(
					  game:GetService("Players").LocalPlayer.PlayerGui.UserGui.Dialog:WaitForChild("Yes").MouseButton1Click
				  )
			  ) do
				  v:Fire()
			  end
		  end
	  }
  )
  Tab:AddButton(
	  {
		  Name = "Bring All Ores To Compactor",
		  Callback = function()
			  --workspace.Map.Sellary.Keeper.IPart.Interact:FireServer()
			  for p, o in next, game:GetService("Workspace").Grabable:GetChildren() do
				  if o:FindFirstChild("Owner") then
					if o:FindFirstChild("Configuration") then  
					if o.Configuration:FindFirstChild("Data") then
						  if o.Configuration.Data:FindFirstChild("MatInd") then
							  if o.Configuration.Data:FindFirstChild("Size") then
								  if o.Owner.Value == game.Players.LocalPlayer then
									  task.wait()
									  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = o.Part.CFrame
									  task.wait(0.2)
									  for a, e in next, game:GetService("Workspace").Plots:GetChildren() do
										  if e.Owner.Value == game.Players.LocalPlayer then
											  if e.Objects:FindFirstChild("Compactor") then
												  o.Part.CFrame =
													  e.Objects.Compactor.Conveyor.Belt.Part.CFrame + Vector3.new(0, 5, 0)
											  else
												  OrionLib:MakeNotification(
													  {
														  Name = "Error:",
														  Content = "You Dont Own A Compactor",
														  Image = "rbxassetid://0",
														  Time = 10
													  }
												  )
											  end
										  end
									  end
									  task.wait(0.2)
								  end
							  end
							  end
						  end
					  end
				  end
			  end
			  for f, k in next, game:GetService("Workspace").Plots:GetChildren() do
				  if k.Owner.Value == game.Players.LocalPlayer then
					  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
						  k.Objects.Compactor.Conveyor.Belt.Part.CFrame + Vector3.new(0, 25, 0)
				  end
			  end
		  end
	  }
  )
  
  Tab:AddButton(
	  {
		  Name = "Bring All Ores To Furnance",
		  Callback = function()
			  --workspace.Map.Sellary.Keeper.IPart.Interact:FireServer()
			  for p, o in next, game:GetService("Workspace").Grabable:GetChildren() do
				  if o:FindFirstChild("Owner") then
					if o:FindFirstChild("Configuration")  then
					if o.Configuration:FindFirstChild("Data") then
						  if o.Configuration.Data:FindFirstChild("MatInd") then
							  if o.Configuration.Data:FindFirstChild("Size") then
								  if o.Owner.Value == game.Players.LocalPlayer then
									  task.wait()
									  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = o.Part.CFrame
									  task.wait(0.2)
									  for t, b in next, game:GetService("Workspace").Plots:GetChildren() do
										  if b.Owner.Value == game.Players.LocalPlayer then
											  for k, l in next, b.Objects:GetChildren() do
												  if l.Name == "Boxed Atom-8 Furnace" then
													  o.Part.CFrame = l.Conveyor.Belt.Part.CFrame + Vector3.new(0, 5, 0)
												  else
													  if l.Name == "Advance Furnace" then
														  o.Part.CFrame =
															  l.Conveyor.Belt.Part.CFrame + Vector3.new(0, 5, 0)
													  else
														  if string.match(l.Name, " Furnace") then
															  o.Part.CFrame =
																  l.Conveyor.Belt.Part.CFrame + Vector3.new(0, 5, 0)
														  end
													  end
												  end
											  end
										  end
									  end
									  task.wait(0.2)
								  end
							  end
						  end
						  end
					  end
				  end
			  end
			  for f, k in next, game:GetService("Workspace").Plots:GetChildren() do
				  if k.Owner.Value == game.Players.LocalPlayer then
					  for k, l in next, k.Objects:GetChildren() do
						  if l.Name == "Boxed Atom-8 Furnace" then
							  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
								  l.Conveyor.Belt.Part.CFrame + Vector3.new(0, 5, 0)
						  else
							  if l.Name == "Advance Furnace" then
								  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
									  l.Conveyor.Belt.Part.CFrame + Vector3.new(0, 5, 0)
							  else
								  if string.match(l.Name, " Furnace") then
									  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
										  l.Conveyor.Belt.Part.CFrame + Vector3.new(0, 5, 0)
								  end
							  end
						  end
					  end
				  end
			  
			  end
		  end
	  }
  )
  
    local Tab =
	  Window:MakeTab(
	  {
		  Name = "Teleports",
		  Icon = "rbxassetid://4483345998",
		  PremiumOnly = false
	  }
  )
 local Section = Tab:AddSection({
	Name = "Teleports"
}) 
  Tab:AddButton(
	  {
		  Name = "Your Plot",
		  Callback = function()
			  for i, v in next, game:GetService("Workspace").Plots:GetChildren() do
				  if v.Owner.Value == game.Players.LocalPlayer then
					  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.Base.CFrame + Vector3.new(0, 25, 0)
				  end
			  end
		  end
	  }
  )
  Tab:AddButton(
	  {
		  Name = "UCS",
		  Callback = function()
			  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
				  CFrame.new(-979.2518310546875, 4.1500020027160645, -625.7988891601562)
		  end
	  }
  )
  Tab:AddButton(
	  {
		  Name = "Land Agency",
		  Callback = function()
			  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
				  CFrame.new(-1007.2401733398438, 4.15000057220459, -700.001220703125)
		  end
	  }
  )
  Tab:AddButton(
	  {
		  Name = "Dealership",
		  Callback = function()
			  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
				  CFrame.new(695.1805419921875, 8.150001525878906, -1013.6504516601562)
		  end
	  }
  )
  Tab:AddButton(
	  {
		  Name = "Woodstore",
		  Callback = function()
			  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
				  CFrame.new(-481.3089294433594, 5.749998569488525, -5.806641101837158)
		  end
	  }
  )
  Tab:AddButton(
	  {
		  Name = "PickaxeShop",
		  Callback = function()
			  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
				  CFrame.new(738.3126220703125, 2.249999761581421, 49.062660217285156)
		  end
	  }
  )
  Tab:AddButton(
	  {
		  Name = "SecretStash",
		  Callback = function()
			  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
				  CFrame.new(-470.6940612792969, 3.7499992847442627, -651.150390625)
		  end
	  }
  )
  Tab:AddButton(
	  {
		  Name = "FurnitureShop",
		  Callback = function()
			  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
				  CFrame.new(-1017.9999389648438, 4.150001525878906, 713.0006103515625)
		  end
	  }
  )
  Tab:AddButton(
	  {
		  Name = "LogicShop",
		  Callback = function()
			  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
				  CFrame.new(-103.56694793701172, 239.9999542236328, 1115.1875)
		  end
	  }
  )
  Tab:AddButton(
	  {
		  Name = "Cave Entrance",
		  Callback = function()
			  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
				  CFrame.new(-2940.08203125, 17.2326717376709, 1080.6683349609375)
		  end
	  }
  )
  Tab:AddButton(
	  {
		  Name = "Mountain Entrance",
		  Callback = function()
			  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-180, 4, 676)
		  end
	  }
  )
  Tab:AddButton(
	  {
		  Name = "Secret Door",
		  Callback = function()
			  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(148, 89, 1051)
		  end
	  }
  )
  Tab:AddButton(
	  {
		  Name = "Inside Secret Door",
		  Callback = function()
			  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(134, 89, 1081)
		  end
	  }
  )
  Tab:AddButton(
	  {
		  Name = "Fiery Caves",
		  Callback = function()
			  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
				  CFrame.new(-2765.495361328125, -754.2094116210938, 2729.330078125)
		  end
	  }
  )
  Tab:AddButton(
	  {
		  Name = "RadiRug",
		  Callback = function()
			  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
				  CFrame.new(-763.7928466796875, -55.5000114440918, 2530.302734375)
		  end
	  }
  )
  Tab:AddButton(
	  {
		  Name = "MeteRug",
		  Callback = function()
			  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
				  CFrame.new(-3475.750244140625, 17.9999942779541, 1040.17822265625)
		  end
	  }
  )
  Tab:AddButton(
	  {
		  Name = "Facility",
		  Callback = function()
			  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
				  CFrame.new(-781.0634155273438, -4.250001430511475, 2750.27001953125)
		  end
	  }
  )
  Tab:AddButton(
	  {
		  Name = "Sellary",
		  Callback = function()
			  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
				  CFrame.new(-421.736083984375, 6.499995708465576, -76.88998413085938)
		  end
	  }
  )
  Tab:AddButton(
	  {
		  Name = "Island",
		  Callback = function()
			  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
				  CFrame.new(-2130.154541015625, -12.915675163269043, -1589.9432373046875)
		  end
	  }
  )
  Tab:AddButton(
	  {
		  Name = "SunSecret",
		  Callback = function()
			  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
				  CFrame.new(1013.1964111328125, 252.96279907226562, 74.48114013671875)
		  end
	  }
  )
  Tab:AddButton(
	  {
		  Name = "CableRailway",
		  Callback = function()
			  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
				  CFrame.new(-588.36376953125, 194.7499542236328, 1048.07763671875)
		  end
	  }
  )
  Tab:AddButton(
	  {
		  Name = "Engraving Bowl",
		  Callback = function()
			  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
				  CFrame.new(490.649658203125, 303.3324890136719, 710.9194946289062)
		  end
	  }
  )
  Tab:AddButton(
	  {
		  Name = "Mountain Chair",
		  Callback = function()
			  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
				  CFrame.new(612.3834838867188, 985.7499389648438, 1519.9991455078125)
		  end
	  }
  )
  local Section = Tab:AddSection({
	Name = "Ore Teleports"
})
  Tab:AddButton(
	  {
		  Name = "Rock",
		  Callback = function()
			  local var = 0
			  for i, v in next, game:GetDescendants() do
				  if v.Name == "RockString" and v:IsA("StringValue") and v.Value == "Rock" then
					  for b, c in next, v.Parent:GetDescendants() do
						  if c.Name == "Hitbox" and c:IsA("Part") then
							  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = c.CFrame
						  --var = var + 1
						  --rconsoleprint(var.." : "..v.Value.."\n \n")
						  end
					  end
				  end
			  end
		  end
	  }
  )
  Tab:AddButton(
	  {
		  Name = "Stone",
		  Callback = function()
			  local var = 0
			  for i, v in next, game:GetDescendants() do
				  if v.Name == "RockString" and v:IsA("StringValue") and v.Value == "Stone" then
					  for b, c in next, v.Parent:GetDescendants() do
						  if c.Name == "Hitbox" and c:IsA("Part") then
							  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = c.CFrame
						  --var = var + 1
						  --rconsoleprint(var.." : "..v.Value.."\n \n")
						  end
					  end
				  end
			  end
		  end
	  }
  )
  Tab:AddButton(
	  {
		  Name = "Sandstone",
		  Callback = function()
			  local var = 0
			  for i, v in next, game:GetDescendants() do
				  if v.Name == "RockString" and v:IsA("StringValue") and v.Value == "Sandstone" then
					  for b, c in next, v.Parent:GetDescendants() do
						  if c.Name == "Hitbox" and c:IsA("Part") then
							  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = c.CFrame
						  --var = var + 1
						  --rconsoleprint(var.." : "..v.Value.."\n \n")
						  end
					  end
				  end
			  end
		  end
	  }
  )
  Tab:AddButton(
	  {
		  Name = "Granite",
		  Callback = function()
			  local var = 0
			  for i, v in next, game:GetDescendants() do
				  if v.Name == "RockString" and v:IsA("StringValue") and v.Value == "Granite" then
					  for b, c in next, v.Parent:GetDescendants() do
						  if c.Name == "Hitbox" and c:IsA("Part") then
							  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = c.CFrame
						  --var = var + 1
						  --rconsoleprint(var.." : "..v.Value.."\n \n")
						  end
					  end
				  end
			  end
		  end
	  }
  )
  Tab:AddButton(
	  {
		  Name = "Marble",
		  Callback = function()
			  local var = 0
			  for i, v in next, game:GetDescendants() do
				  if v.Name == "RockString" and v:IsA("StringValue") and v.Value == "Marble" then
					  for b, c in next, v.Parent:GetDescendants() do
						  if c.Name == "Hitbox" and c:IsA("Part") then
							  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = c.CFrame
						  --var = var + 1
						  --rconsoleprint(var.." : "..v.Value.."\n \n")
						  end
					  end
				  end
			  end
		  end
	  }
  )
  Tab:AddButton(
	  {
		  Name = "Obsidian",
		  Callback = function()
			  local var = 0
			  for i, v in next, game:GetDescendants() do
				  if v.Name == "RockString" and v:IsA("StringValue") and v.Value == "Rock" then
					  for b, c in next, v.Parent:GetDescendants() do
						  if c.Name == "Hitbox" and c:IsA("Part") then
							  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = c.CFrame
						  --var = var + 1
						  --rconsoleprint(var.." : "..v.Value.."\n \n")
						  end
					  end
				  end
			  end
		  end
	  }
  )
  Tab:AddButton(
	  {
		  Name = "Copper",
		  Callback = function()
			  local var = 0
			  for i, v in next, game:GetDescendants() do
				  if v.Name == "RockString" and v:IsA("StringValue") and v.Value == "Copper" then
					  for b, c in next, v.Parent:GetDescendants() do
						  if c.Name == "Hitbox" and c:IsA("Part") then
							  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = c.CFrame
						  --var = var + 1
						  --rconsoleprint(var.." : "..v.Value.."\n \n")
						  end
					  end
				  end
			  end
		  end
	  }
  )
  Tab:AddButton(
	  {
		  Name = "Limestone",
		  Callback = function()
			  local var = 0
			  for i, v in next, game:GetDescendants() do
				  if v.Name == "RockString" and v:IsA("StringValue") and v.Value == "Limestone" then
					  for b, c in next, v.Parent:GetDescendants() do
						  if c.Name == "Hitbox" and c:IsA("Part") then
							  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = c.CFrame
						  --var = var + 1
						  --rconsoleprint(var.." : "..v.Value.."\n \n")
						  end
					  end
				  end
			  end
		  end
	  }
  )
  Tab:AddButton(
	  {
		  Name = "Silver",
		  Callback = function()
			  local var = 0
			  for i, v in next, game:GetDescendants() do
				  if v.Name == "RockString" and v:IsA("StringValue") and v.Value == "Silver" then
					  for b, c in next, v.Parent:GetDescendants() do
						  if c.Name == "Hitbox" and c:IsA("Part") then
							  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = c.CFrame
						  --var = var + 1
						  --rconsoleprint(var.." : "..v.Value.."\n \n")
						  end
					  end
				  end
			  end
		  end
	  }
  )
  Tab:AddButton(
	  {
		  Name = "Iron",
		  Callback = function()
			  local var = 0
			  for i, v in next, game:GetDescendants() do
				  if v.Name == "RockString" and v:IsA("StringValue") and v.Value == "Iron" then
					  for b, c in next, v.Parent:GetDescendants() do
						  if c.Name == "Hitbox" and c:IsA("Part") then
							  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = c.CFrame
						  --var = var + 1
						  --rconsoleprint(var.." : "..v.Value.."\n \n")
						  end
					  end
				  end
			  end
		  end
	  }
  )
  Tab:AddButton(
	  {
		  Name = "Cloudnite",
		  Callback = function()
			  local var = 0
			  for i, v in next, game:GetDescendants() do
				  if v.Name == "RockString" and v:IsA("StringValue") and v.Value == "Cloudnite" then
					  for b, c in next, v.Parent:GetDescendants() do
						  if c.Name == "Hitbox" and c:IsA("Part") then
							  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = c.CFrame
						  --var = var + 1
						  --rconsoleprint(var.." : "..v.Value.."\n \n")
						  end
					  end
				  end
			  end
		  end
	  }
  )
  Tab:AddButton(
	  {
		  Name = "Crystal",
		  Callback = function()
			  local var = 0
			  for i, v in next, game:GetDescendants() do
				  if v.Name == "RockString" and v:IsA("StringValue") and v.Value == "Crystal" then
					  for b, c in next, v.Parent:GetDescendants() do
						  if c.Name == "Hitbox" and c:IsA("Part") then
							  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = c.CFrame
						  --var = var + 1
						  --rconsoleprint(var.." : "..v.Value.."\n \n")
						  end
					  end
				  end
			  end
		  end
	  }
  )
  Tab:AddButton(
	  {
		  Name = "Emerald",
		  Callback = function()
			  local var = 0
			  for i, v in next, game:GetDescendants() do
				  if v.Name == "RockString" and v:IsA("StringValue") and v.Value == "Emerald" then
					  for b, c in next, v.Parent:GetDescendants() do
						  if c.Name == "Hitbox" and c:IsA("Part") then
							  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = c.CFrame
						  --var = var + 1
						  --rconsoleprint(var.." : "..v.Value.."\n \n")
						  end
					  end
				  end
			  end
		  end
	  }
  )
  Tab:AddButton(
	  {
		  Name = "Sunstone",
		  Callback = function()
			  local var = 0
			  for i, v in next, game:GetDescendants() do
				  if v.Name == "RockString" and v:IsA("StringValue") and v.Value == "Sunstone" then
					  for b, c in next, v.Parent:GetDescendants() do
						  if c.Name == "Hitbox" and c:IsA("Part") then
							  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = c.CFrame
						  --var = var + 1
						  --rconsoleprint(var.." : "..v.Value.."\n \n")
						  end
					  end
				  end
			  end
		  end
	  }
  )
  Tab:AddButton(
	  {
		  Name = "Sapphire",
		  Callback = function()
			  local var = 0
			  for i, v in next, game:GetDescendants() do
				  if v.Name == "RockString" and v:IsA("StringValue") and v.Value == "Sapphire" then
					  for b, c in next, v.Parent:GetDescendants() do
						  if c.Name == "Hitbox" and c:IsA("Part") then
							  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = c.CFrame
						  --var = var + 1
						  --rconsoleprint(var.." : "..v.Value.."\n \n")
						  end
					  end
				  end
			  end
		  end
	  }
  )
  Tab:AddButton(
	  {
		  Name = "Amethyst",
		  Callback = function()
			  local var = 0
			  for i, v in next, game:GetDescendants() do
				  if v.Name == "RockString" and v:IsA("StringValue") and v.Value == "Rock" then
					  for b, c in next, v.Parent:GetDescendants() do
						  if c.Name == "Hitbox" and c:IsA("Part") then
							  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = c.CFrame
						  --var = var + 1
						  --rconsoleprint(var.." : "..v.Value.."\n \n")
						  end
					  end
				  end
			  end
		  end
	  }
  )
  Tab:AddButton(
	  {
		  Name = "Gold",
		  Callback = function()
			  local var = 0
			  for i, v in next, game:GetDescendants() do
				  if v.Name == "RockString" and v:IsA("StringValue") and v.Value == "Gold" then
					  for b, c in next, v.Parent:GetDescendants() do
						  if c.Name == "Hitbox" and c:IsA("Part") then
							  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
								  c.CFrame + Vector3.new(0, 15, 0)
						  --var = var + 1
						  --rconsoleprint(var.." : "..v.Value.."\n \n")
						  end
					  end
				  end
			  end
		  end
	  }
  )
  Tab:AddButton(
	  {
		  Name = "Ruby",
		  Callback = function()
			  local var = 0
			  for i, v in next, game:GetDescendants() do
				  if v.Name == "RockString" and v:IsA("StringValue") and v.Value == "Ruby" then
					  for b, c in next, v.Parent:GetDescendants() do
						  if c.Name == "Hitbox" and c:IsA("Part") then
							  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = c.CFrame
						  --var = var + 1
						  --rconsoleprint(var.." : "..v.Value.."\n \n")
						  end
					  end
				  end
			  end
		  end
	  }
  )
  Tab:AddButton(
	  {
		  Name = "OddStone",
		  Callback = function()
			  local var = 0
			  for i, v in next, game:GetDescendants() do
				  if v.Name == "RockString" and v:IsA("StringValue") and v.Value == "OddStone" then
					  for b, c in next, v.Parent:GetDescendants() do
						  if c.Name == "Hitbox" and c:IsA("Part") then
							  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = c.CFrame
						  --var = var + 1
						  --rconsoleprint(var.." : "..v.Value.."\n \n")
						  end
					  end
				  end
			  end
		  end
	  }
  )
  Tab:AddButton(
	  {
		  Name = "Volcanium",
		  Callback = function()
			  local var = 0
			  for i, v in next, game:GetDescendants() do
				  if v.Name == "RockString" and v:IsA("StringValue") and v.Value == "Volcanium" then
					  for b, c in next, v.Parent:GetDescendants() do
						  if c.Name == "Hitbox" and c:IsA("Part") then
							  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = c.CFrame
						  --var = var + 1
						  --rconsoleprint(var.." : "..v.Value.."\n \n")
						  end
					  end
				  end
			  end
		  end
	  }
  )
  Tab:AddButton(
	{
		Name = "Moonstone",
		Callback = function()
			local var = 0
			for i, v in next, game:GetDescendants() do
				if v.Name == "RockString" and v:IsA("StringValue") and v.Value == "Moonstone" then
					for b, c in next, v.Parent:GetDescendants() do
						if c.Name == "Hitbox" and c:IsA("Part") then
							game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = c.CFrame
						--var = var + 1
						--rconsoleprint(var.." : "..v.Value.."\n \n")
						end
					end
				end
			end
		end
	}
)  
  Tab:AddButton(
	{
		Name = "Tolmedit",
		Callback = function()
			local var = 0
			for i, v in next, game:GetDescendants() do
				if v.Name == "RockString" and v:IsA("StringValue") and v.Value == "Tolmedit" then
					for b, c in next, v.Parent:GetDescendants() do
						if c.Name == "Hitbox" and c:IsA("Part") then
							game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = c.CFrame
						--var = var + 1
						--rconsoleprint(var.." : "..v.Value.."\n \n")
						end
					end
				end
			end
		end
	}
) 
Tab:AddButton(
	{
		Name = "Dumortierite",
		Callback = function()
			local var = 0
			for i, v in next, game:GetDescendants() do
				if v.Name == "RockString" and v:IsA("StringValue") and v.Value == "Dumortierite" then
					for b, c in next, v.Parent:GetDescendants() do
						if c.Name == "Hitbox" and c:IsA("Part") then
							game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = c.CFrame
						--var = var + 1
						--rconsoleprint(var.." : "..v.Value.."\n \n")
						end
					end
				end
			end
		end
	}
) 
  local Section = Tab:AddSection({
	Name = "Tree Teleports"
})
  Tab:AddButton(
	  {
		  Name = "Tree",
		  Callback = function()
			  local var = 0
			  for i, v in next, game:GetDescendants() do
				  if v.Name == "RockString" and v:IsA("StringValue") and v.Value == "Tree" then
					  for b, c in next, v.Parent:GetDescendants() do
						  if c.Name == "Hitbox" and c:IsA("Part") then
							  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = c.CFrame
						  --var = var + 1
						  --rconsoleprint(var.." : "..v.Value.."\n \n")
						  end
					  end
				  end
			  end
		  end
	  }
  )
  Tab:AddButton(
	  {
		  Name = "OddTree",
		  Callback = function()
			  local var = 0
			  for i, v in next, game:GetDescendants() do
				  if v.Name == "RockString" and v:IsA("StringValue") and v.Value == "OddTree" then
					  for b, c in next, v.Parent:GetDescendants() do
						  if c.Name == "Hitbox" and c:IsA("Part") then
							  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = c.CFrame
						  --var = var + 1
						  --rconsoleprint(var.." : "..v.Value.."\n \n")
						  end
					  end
				  end
			  end
		  end
	  }
  )

   local Tab =
	  Window:MakeTab(
	  {
		  Name = "Misc",
		  Icon = "rbxassetid://4483345998",
		  PremiumOnly = false
	  }
  )
  
  local Section = Tab:AddSection({
	Name = "Walkspeed/JumpPower"
})
  Tab:AddSlider(
	  {
		  Name = "WalkSpeed",
		  Min = 16,
		  Max = 250,
		  Default = 16,
		  Color = Color3.fromRGB(128, 128, 128),
		  Increment = 1,
		  ValueName = "WalkSpeed",
		  Callback = function(Value)
			  game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = Value
		  end
	  }
  )
  Tab:AddSlider(
	  {
		  Name = "JumpPower",
		  Min = 50,
		  Max = 250,
		  Default = 50,
		  Color = Color3.fromRGB(128, 128, 128),
		  Increment = 1,
		  ValueName = "JumpPower",
		  Callback = function(Value)
			  game.Players.LocalPlayer.Character.Humanoid.JumpPower = Value
		  end
	  }
  )

  local Section = Tab:AddSection({
	Name = "Quality Of Life"
})


  Tab:AddToggle(
	  {
		  Name = "Clear Weather",
		  Default = false,
		  Callback = function(Value)
			  getgenv().ClearWeather = Value
			  while ClearWeather do
				  task.wait()
				  game:GetService("Workspace").Raining["Value"] = false
			  end
		  end
	  }
  )

  Tab:AddToggle(
	  {
		  Name = "Rain Toggle",
		  Default = false,
		  Callback = function(Value)
			  game:GetService("Workspace").Raining["Value"] = Value
		  end
	  }
  )

Tab:AddButton({
	Name = "Full Bright",
	Callback = function()
      		if _G.FullBrightExecuted then

	_G.FullBrightEnabled = false

	_G.NormalLightingSettings = {
		Brightness = game:GetService("Lighting").Brightness,
		ClockTime = game:GetService("Lighting").ClockTime,
		FogEnd = game:GetService("Lighting").FogEnd,
		GlobalShadows = game:GetService("Lighting").GlobalShadows,
		Ambient = game:GetService("Lighting").Ambient
	}

	game:GetService("Lighting"):GetPropertyChangedSignal("Brightness"):Connect(function()
		if game:GetService("Lighting").Brightness ~= 1 and game:GetService("Lighting").Brightness ~= _G.NormalLightingSettings.Brightness then
			_G.NormalLightingSettings.Brightness = game:GetService("Lighting").Brightness
			if not _G.FullBrightEnabled then
				repeat
					wait()
				until _G.FullBrightEnabled
			end
			game:GetService("Lighting").Brightness = 1
		end
	end)

	game:GetService("Lighting"):GetPropertyChangedSignal("ClockTime"):Connect(function()
		if game:GetService("Lighting").ClockTime ~= 12 and game:GetService("Lighting").ClockTime ~= _G.NormalLightingSettings.ClockTime then
			_G.NormalLightingSettings.ClockTime = game:GetService("Lighting").ClockTime
			if not _G.FullBrightEnabled then
				repeat
					wait()
				until _G.FullBrightEnabled
			end
			game:GetService("Lighting").ClockTime = 12
		end
	end)

	game:GetService("Lighting"):GetPropertyChangedSignal("FogEnd"):Connect(function()
		if game:GetService("Lighting").FogEnd ~= 786543 and game:GetService("Lighting").FogEnd ~= _G.NormalLightingSettings.FogEnd then
			_G.NormalLightingSettings.FogEnd = game:GetService("Lighting").FogEnd
			if not _G.FullBrightEnabled then
				repeat
					wait()
				until _G.FullBrightEnabled
			end
			game:GetService("Lighting").FogEnd = 786543
		end
	end)

	game:GetService("Lighting"):GetPropertyChangedSignal("GlobalShadows"):Connect(function()
		if game:GetService("Lighting").GlobalShadows ~= false and game:GetService("Lighting").GlobalShadows ~= _G.NormalLightingSettings.GlobalShadows then
			_G.NormalLightingSettings.GlobalShadows = game:GetService("Lighting").GlobalShadows
			if not _G.FullBrightEnabled then
				repeat
					wait()
				until _G.FullBrightEnabled
			end
			game:GetService("Lighting").GlobalShadows = false
		end
	end)

	game:GetService("Lighting"):GetPropertyChangedSignal("Ambient"):Connect(function()
		if game:GetService("Lighting").Ambient ~= Color3.fromRGB(178, 178, 178) and game:GetService("Lighting").Ambient ~= _G.NormalLightingSettings.Ambient then
			_G.NormalLightingSettings.Ambient = game:GetService("Lighting").Ambient
			if not _G.FullBrightEnabled then
				repeat
					wait()
				until _G.FullBrightEnabled
			end
			game:GetService("Lighting").Ambient = Color3.fromRGB(178, 178, 178)
		end
	end)

	game:GetService("Lighting").Brightness = 1
	game:GetService("Lighting").ClockTime = 12
	game:GetService("Lighting").FogEnd = 786543
	game:GetService("Lighting").GlobalShadows = false
	game:GetService("Lighting").Ambient = Color3.fromRGB(178, 178, 178)

	local LatestValue = true
	spawn(function()
		repeat
			wait()
		until _G.FullBrightEnabled
		while wait() do
			if _G.FullBrightEnabled ~= LatestValue then
				if not _G.FullBrightEnabled then
					game:GetService("Lighting").Brightness = _G.NormalLightingSettings.Brightness
					game:GetService("Lighting").ClockTime = _G.NormalLightingSettings.ClockTime
					game:GetService("Lighting").FogEnd = _G.NormalLightingSettings.FogEnd
					game:GetService("Lighting").GlobalShadows = _G.NormalLightingSettings.GlobalShadows
					game:GetService("Lighting").Ambient = _G.NormalLightingSettings.Ambient
				else
					game:GetService("Lighting").Brightness = 1
					game:GetService("Lighting").ClockTime = 12
					game:GetService("Lighting").FogEnd = 786543
					game:GetService("Lighting").GlobalShadows = false
					game:GetService("Lighting").Ambient = Color3.fromRGB(178, 178, 178)
				end
				LatestValue = not LatestValue
			end
		end
	end)
end

_G.FullBrightExecuted = true
_G.FullBrightEnabled = not _G.FullBrightEnabled
  	end    
})


  Tab:AddButton(
	{
		Name = "Auto Meteor Spawn (FREE)",
		Callback = function()
		  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Grabable["Meteorite Totem"].Ball.CFrame
		  task.wait(0.5)
		  game:GetService("Workspace").Grabable["Meteorite Totem"].Ball.CFrame = CFrame.new(490.649658203125, 303.3324890136719, 710.9194946289062)
		  task.wait(0.3)
		  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Grabable["Meteorite Totem"].Ball.CFrame + Vector3.new(0,10,0)
		end
	}
)

  Tab:AddButton(
	  {
		  Name = "Remove Terrain ex. Water",
		  Callback = function()
			  game:GetService("Workspace").Map:FindFirstChild("Water"):Destroy()
			  workspace:FindFirstChildOfClass("Terrain"):Clear()
		  end
	  }
  )
  Tab:AddButton(
	  {
		  Name = "No Water Blur",
		  Callback = function()
			  --Lighting = game:GetService("Lighting")
			  game.Lighting:FindFirstChild("WaterBlur"):Remove()
		  end
	  }
  )

  Tab:AddButton(
	  {
		  Name = "GodMode",
		  Callback = function()
			  local BlockedRemotes = {
				  "DamageMe"
			  }
  
			  local Events = {
				  Fire = true,
				  Invoke = true,
				  FireServer = true,
				  InvokeServer = true
			  }
  
			  local gameMeta = getrawmetatable(game)
			  local psuedoEnv = {
				  ["__index"] = gameMeta.__index,
				  ["__namecall"] = gameMeta.__namecall
			  }
			  setreadonly(gameMeta, false)
			  gameMeta.__index, gameMeta.__namecall =
				  newcclosure(
				  function(self, index, ...)
					  if Events[index] then
						  for i, v in pairs(BlockedRemotes) do
							  if v == self.Name and not checkcaller() then
								  return nil
							  end
						  end
					  end
					  return psuedoEnv.__index(self, index, ...)
				  end
			  )
			  setreadonly(gameMeta, true)
		  end
	  }
  )

Tab:AddButton({
	Name = "Destroy Gui",
	Callback = function()
      		OrionLib:Destroy()
  	end    
})

local Section = Tab:AddSection({
	Name = "Other Scripts"
})
  Tab:AddButton(
	  {
		  Name = "Infinite Yield",
		  Callback = function()
			  loadstring(game:HttpGet("https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source"))()
		  end
	  }
  )

  Tab:AddButton(
	  {
		  Name = "Ore Autofarm Script",
		  Callback = function()
			  loadstring(game:HttpGet("https://arches-systems.com/loader.lua",true))()
		  end
	  }
  )

OrionLib:Init()