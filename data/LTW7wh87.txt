import 'package:flutter/material.dart';

void main() {
  runApp(
    const MaterialApp(home: Full()),
  );
}

class CardCurso extends StatelessWidget {
  final Function selectSelf;
  final Function unSelectSelf;
  final String depcod;
  final String name;
  final String state;
  final bool selected;
  const CardCurso({
    super.key,
    required this.depcod,
    required this.name,
    required this.state,
    required this.unSelectSelf,
    required this.selectSelf,
    required this.selected,
  });

  static const Map<String, Color> possibleStates = {
    'nao': Colors.black,
    'sim': Colors.green,
    'talvez': Colors.amber,
  };

  @override
  Widget build(BuildContext context) {
    return Card(
      color: Colors.white,
      elevation: 9,
      shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(9)),
      child: InkWell(
        splashColor: Colors.blue.withAlpha(30),
        onTap: selected ? () => unSelectSelf() : () => selectSelf(),
        child: SizedBox(
          height: 90,
          width: 220,
          child: Padding(
            padding: const EdgeInsets.all(8),
            child: Row(
              mainAxisAlignment: MainAxisAlignment.spaceBetween,
              children: [
                Column(
                  // mainAxisAlignment: MainAxisAlignment.spaceAround,
                  children: [
                    Text(depcod),
                    const SizedBox(height: 15),
                    Text(name),
                  ],
                ),
                Column(
                  children: [
                    Container(
                      height: 20,
                      width: 20,
                      color: possibleStates[state],
                    ),
                  ],
                )
              ],
            ),
          ),
        ),
      ),
    );
  }
}

class CursoScroller extends StatefulWidget {
  final List<Map> cardsCursoState;
  const CursoScroller({super.key, required this.cardsCursoState});
  @override
  State<CursoScroller> createState() => _CursoScrollerState();
}

class _CursoScrollerState extends State<CursoScroller> {
  bool isCursoSelected = false;
  late List<Map> cardsCursoState;
  late List<Map> selectedCursoCardsStates;

  void updateCard(int index, String state) {
    setState(() {
      cardsCursoState[index]['state'] = state;
    });
  }

  Function makeUpdateCard(int index) {
    return (String state) => updateCard(index, state);
  }

  void unSelectSelf(int index) {
    setState(() {
      isCursoSelected = false;
      cardsCursoState[index]['selected'] = false;
      selectedCursoCardsStates.clear();
    });
  }

  Function makeUnSelectSelf(int index) {
    return () => unSelectSelf(index);
  }

  void selectSelf(int index) {
    setState(() {
      isCursoSelected = true;
      cardsCursoState[index]['selected'] = true;
      selectedCursoCardsStates.add(cardsCursoState[index]);
    });
  }

  Function makeSelectSelf(int index) {
    return () => selectSelf(index);
  }

  @override
  Widget build(BuildContext context) {
    cardsCursoState = widget.cardsCursoState;
    selectedCursoCardsStates = [];
    return Container(
      width: 220,
      color: Colors.blue,
      child: ListView.builder(
        shrinkWrap: true,
        itemCount: isCursoSelected ? selectedCursoCardsStates.length : cardsCursoState.length,
        itemBuilder: isCursoSelected
            ? (BuildContext context, int index) {
                return CardCurso(
                  depcod: cardsCursoState[index]['depcod'],
                  name: cardsCursoState[index]['name'],
                  state: cardsCursoState[index]['state'],
                  selected: cardsCursoState[index]['selected'],
                  selectSelf: makeSelectSelf(index),
                  unSelectSelf: makeUnSelectSelf(index),
                );
              }
            : (BuildContext context, int index) {
                return CardCurso(
                  depcod: cardsCursoState[index]['depcod'],
                  name: cardsCursoState[index]['name'],
                  state: cardsCursoState[index]['state'],
                  selected: cardsCursoState[index]['selected'],
                  selectSelf: makeSelectSelf(index),
                  unSelectSelf: makeUnSelectSelf(index),
                );
              },
      ),
    );
  }
}

class Full extends StatefulWidget {
  const Full({super.key});
  @override
  State<Full> createState() => FullState();
}

class FullState extends State<Full> {
  @override
  Widget build(BuildContext context) {
    return Row(
      children: [
        CursoScroller(
          cardsCursoState: List.generate(
              15,
              (_) => {
                    'depcod': 'FEN04-02675',
                    'name': 'Eletricidade II',
                    'state': 'sim',
                    'selected': false,
                    'turmas': {
                      '1': {'state': 'sim'},
                      '2': {'state': 'nao'},
                      '3': {'state': 'sim'},
                    }
                  }),
        ),
        Expanded(
          child: Container(
            color: Colors.white,
          ),
        )
      ],
    );
  }
}
