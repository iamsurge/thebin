#include <iostream>
using namespace std;

struct list {
	int Data;
	list* Next;
};

void addElement(list** L, int a) {
	list* temp = new list;
	temp->Data = a;
	temp->Next = NULL;

	list* right = NULL;
	list* left = NULL;

	if ((*L) == NULL) {
		(*L) = temp;
	}
	else {
		right = (*L);
		left = (*L);

		//namirane na poziciya na temp
		while (right != NULL && temp->Data > right->Data) {
			left = right;
			right = right->Next;
		}
		
		//postavyane na temp
		temp->Next = right;
		if (right == (*L)) {
			(*L) = temp;
		}
		else {
			left->Next = temp;
		}
	}
}

int removeElement(list** L, int a) {
	list* right = NULL;
	list* left = NULL;

	if ((*L) != NULL) {

		right = (*L);
		left = (*L);

		//namirane na poziciya na temp
		while (right->Data!=a) {
			left = right;
			right = right->Next;
		}
		left->Next = right->Next;
		delete right;
	}
	return a;
}
int main() {
	int a;
	list* L = NULL;
	list* temp = NULL;

	//purvi element
	temp = new list;
	temp->Next = NULL;
	cout << "add: ";
	cin >> a;
	temp->Data = a;
	L = temp;

	
	cout << "add 6,7,1,3,0\n"; 

	addElement(&L, 6);
	addElement(&L, 7);
	addElement(&L, 1);
	addElement(&L, 3);
	addElement(&L, 0);
	//pechatanena elementi
	temp = L;
	while (temp != NULL) {
		cout << temp->Data << " ";
		temp = temp->Next;
	}
	cout << endl;


	cout << "remove 3,1,7\n"; 
	removeElement(&L, 3);
	removeElement(&L, 1);
	removeElement(&L, 7);
	temp = L;
	while (temp != NULL) {
		cout << temp->Data << " ";
		temp = temp->Next;
	}
	return 0;
}