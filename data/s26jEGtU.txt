const fs = require('fs')

// const input = fs.readFileSync('test.txt').toString().trim()
const input = fs.readFileSync('input.txt').toString().trim()

const isArray = Array.isArray
const compare = ([left, right]) => {
  if (right === undefined) {
    return 1
  }
  if (left === undefined) {
    return -1
  }
  if (typeof left !== typeof right) {
    return compare([isArray(left) ? left : [left], isArray(right) ? right : [right]])
  }

  if (isArray(left) && isArray(right)) {
    for (let i = 0; i < right.length; i++) {
      const diff = compare([left[i], right[i]])
      if (!diff) {
        continue
      }
      return diff
    }

    return left.length - right.length
  }

  return left - right
}

const pairs = input
  .split('\n\n')
  .map((pair) => pair.split('\n'))
  .map(([a, b]) => [JSON.parse(a), JSON.parse(b)])

const sum = pairs
  .map(compare)
  .map((x, index) => x < 0 ? index + 1 : 0)
  .reduce((a, b) => a + b)

console.log(sum)


const sorty = pairs
  .flat()
  .sort((a, b) => compare([a, b]))

const key = [[[2]], [[6]]]
  .map((missing, index) => sorty
    .findIndex((pack) => compare([pack, missing]) > 0) + 1 + index)
  .reduce((a, b) => a * b)
console.log({ res: key })
