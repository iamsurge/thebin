#!/usr/local/bin/gst -q

Interval extend [
    pos     [ ^stop ]      " Dig out end position, even if Interval is empty. "
]

"
| Mainline
"
input := stdin nextLine.

#(4 14) keysAndValuesDo: [ :part :width |
    window := 1 to: width.
    seen := Set new.

    "
    | Basic idea is that we're going to examine on an operating window
    | from the far end, shrinking it as we go until either:
    |   - it shrinks to nothing, meaning no matches and we're done
    |   - we find a pair, in which case we jump the window forward to split them
    "
    [window notEmpty] whileTrue: [
        (seen includes: (input at: window last)) ifTrue: [
            window := window last + 1 to: window last + width.
            seen empty.
        ] ifFalse: [
            seen add: (input at: window last).
            window := window allButLast.
        ]
    ].

    ('Part %1: %2' % {part. window pos + width}) displayNl.
]
