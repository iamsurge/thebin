using UnityEngine;
public class Player_Interact : MonoBehaviour
{
    private bool hasKey, dCool;
    [SerializeField] private GameObject key;
    private GameManager gameManager;
    private DialogManager dialogManager;
    [HideInInspector] public GameObject lookingAt;
    [SerializeField] private GameObject textInteract;
    [SerializeField] private Transform duck, newDuck;
    bool lowerVolume;
    private void Start()
    {
        gameManager = FindObjectOfType<GameManager>();
        dialogManager = FindObjectOfType<DialogManager>();
    }
    private void FixedUpdate()
    {
        if (gameManager.state == 3 && lookingAt != null && lookingAt.name == "doorway_doorWood" && Vector3.Distance(transform.position, lookingAt.transform.position) < 5)
        {
            gameManager.Explosion();
            gameManager.state = 4;
        }
        if (lowerVolume) DDOL.dOL.ass[5].volume -= 0.01f;
    }
    private void Update()
    {
        if (lookingAt != null)
        {
            Interactable i = lookingAt.GetComponent<Interactable>();
            if (Vector3.Distance(transform.position, i.realPoint.transform.position) < i.distance && i.enabled)
            {
                textInteract.SetActive(true);
                if (Input.GetKeyDown(KeyCode.E) || Hinput.anyGamepad.A) Interact(i);
            }
            else textInteract.SetActive(false);
        }
        else textInteract.SetActive(false);
    }
    void Interact(Interactable i)
    {
        if (dCool) return;
        dCool = true;
        Invoke(nameof(dialogCooldown), 0.75f);
        if (Hinput.anyGamepad.isConnected)
        {
            Hinput.anyGamepad.Vibrate();
        }
        bool triggerDialog = true;
        bool disableMovement = false;
        bool destroyInteractable = false;
        switch (lookingAt.name)
        {
            case "doorway_doorWood 1":
                if (gameManager.state != 0) break;
                triggerDialog = false;
                gameManager.state = 1;
                DDOL.dOL.ass[0].Play();
                gameManager.ChangePlayer();
                break;
            case "Sign":
                gameManager.farmer.SetActive(true);
                disableMovement = true;
                lowerVolume = true;
                destroyInteractable = true;
                break;
            case "book 1":
                key.SetActive(true);
                duck.gameObject.SetActive(false);
                newDuck.gameObject.SetActive(true);
                break;
            case "key":
                hasKey = true;
                lookingAt.transform.position = new Vector3(1000, 1000, 1000);
                break;
            case "doorway_doorWood":
                if (gameManager.state == 1)
                {
                    if (!hasKey) break;
                    i.GetComponent<Transform>().localScale = new Vector3(-1, 1, 1);
                    triggerDialog = false;
                    i.text = "I SHOULD SEARCH FOR THE GARDEN";
                    i.textde = "ICH SOLLTE DEN GARTEN SUCHEN";
                    DDOL.dOL.ass[0].Play();
                    gameManager.ChangePlayer();
                    Invoke(nameof(ChangeStateWait), 2);
                    break;
                }
                else if (gameManager.state == 3)
                {
                    triggerDialog = false;
                }
                else if (gameManager.state == 4)
                {
                    gameManager.invisiblecollider.SetActive(false);
                    triggerDialog = false;
                    gameManager.state = 5;
                    DDOL.dOL.ass[0].Play();
                    gameManager.ChangePlayer();
                    break;
                }
                break;
        }
        StopAllCoroutines();
        if (triggerDialog) StartCoroutine(dialogManager.DialogTextEnu(i, disableMovement, destroyInteractable, true));
    }
    void dialogCooldown()
    {
        dCool = false;
    }
    void ChangeStateWait()
    {
        gameManager.state = 2;
    }
}