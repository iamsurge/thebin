const fs = require('fs')

// const input = fs.readFileSync('test.txt').toString().trim()
// const input = `noop
// addx 3
// addx -5
// `
const input = fs.readFileSync('input.txt').toString().trim()
const range = (n) => [...Array(n).keys()]

const history = input.split('\n')
  .reduce((acc, command) => {
    const prevX = acc.at(-1) ?? 1
    return command === 'noop' ?
      acc.concat(prevX) :
      acc.concat(prevX, prevX + command.split(' ').map(Number).at(1))
  }, [])

const steps = range(6).reduce((acc, i) => i ? acc.concat(acc.at(-1) + 40) : acc, [18])
const signal = steps.map(i => history[i] * (i + 2)).reduce((a, b) => a + b, 0)

const abs = Math.abs
const screen = range(6).map(() => range(40).map(() => ' '))
const rendered = screen
  .map((row, x) => row
    .map((pixel, y) => abs(([1].concat(history)[x * 40 + y] ?? 1) - y) < 2 ? 'â–®' : ' '))
  .map(s => s.join(''))
  .join('\n')
console.log(signal)
console.log(rendered)
