//
//  main.swift
//  lab09
//
//  Created by student on 05/12/2022.
//

import Foundation

print("Hello, World!")

struct Complex {
    var realPart: Int;
    var imaginaryPart: Int;
    
    init(realPart: Int, imaginaryPart: Int) {
        self.realPart = realPart
        self.imaginaryPart = imaginaryPart
    }
}

struct rzutOszczepem {
    var id: Int;
    var proba1: Double;
    var proba2: Double;
    var proba3: Double;
    
    init(id: Int, proba1: Double, proba2: Double, proba3: Double) {
        self.id = id
        self.proba1 = proba1
        self.proba2 = proba2
        self.proba3 = proba3
    }
}

func complexOperations() {
    var a: String = "1";
    while (true) {
        print("Wybierz dzialanie: ");
        print("1-dodaj, 2-odejmij, 3-pomnoz, 0-wyjscie");
        a = readLine()!;
        if (a == "0") { break }
        print("Podaj pierwsza lizcbe: ")
        print("czesc rzeczywista = ");
        guard let r: Int = Int(readLine()!) else {
            fatalError("Nie liczba");
        }
        print("czesc urojona = ");
        guard let i: Int = Int(readLine()!) else {
            fatalError("Nie liczba");
        }
        var liczba1 = Complex(realPart: r, imaginaryPart: i);
        print("\(liczba1.realPart) + \(liczba1.imaginaryPart)j");
        
        print("Podaj druga lizcbe: ")
        print("czesc rzeczywista = ");
        guard let r: Int = Int(readLine()!) else {
            fatalError("Nie liczba");
        }
        print("czesc urojona = ");
        guard let i: Int = Int(readLine()!) else {
            fatalError("Nie liczba");
        }
        var liczba2 = Complex(realPart: r, imaginaryPart: i);
        print("\(liczba2.realPart) + \(liczba2.imaginaryPart)j");
        switch (a) {
        case "1":
            liczba1.realPart += liczba2.realPart;
            liczba1.imaginaryPart += liczba2.imaginaryPart;
        case "2":
            liczba1.realPart -= liczba2.realPart;
            liczba1.imaginaryPart -= liczba2.imaginaryPart;
        case "3":
            liczba1.realPart *= liczba2.realPart;
            liczba1.imaginaryPart *= liczba2.imaginaryPart;
        default:
            break;
        }
        print("Wynik: \(liczba1.realPart) + \(liczba1.imaginaryPart)j");
        print("");
    }
}

//complexOperations();

func rzutOszczepemFunc() {
    var zawodnicy: [rzutOszczepem] = [];

    for i in 0...3 {
        print("Podaj wyniki 3 prob kolejno: ");
        guard let p1: Double = Double(readLine()!) else {
            fatalError("Nie liczba");
        }
        guard let p2: Double = Double(readLine()!) else {
            fatalError("Nie liczba");
        }
        guard let p3: Double = Double(readLine()!) else {
            fatalError("Nie liczba");
        }
        zawodnicy.append(rzutOszczepem(id:i, proba1:p1, proba2:p2, proba3:p3));
    }
    zawodnicy.sort(by: {($0.proba1 * $0.proba2 * $0.proba3) / 3.0 < ($1.proba1 * $1.proba2 * $1.proba3) / 3.0});
    print(zawodnicy);
    print("Najlepszy zawodnik: ", zawodnicy[zawodnicy.count - 1]);
    zawodnicy.remove(at: 0);
    print(zawodnicy);
}

func cars() {
    var carsSet: Set<String> = [];
    var nazwa: String;
    for _ in 0...5 {
        print("Podaj nazwe auta: ")
        nazwa = readLine()!;
        carsSet.insert(nazwa.lowercased());
    }
    print(carsSet);
    print("Podaj model auta ktory nalezy usunac: ");
    nazwa = readLine()!;
    if (carsSet.contains(nazwa.lowercased())) {
        carsSet.remove(nazwa.lowercased())
    } else {
        print("Zbior nie zawiera takiego elementu.")
    }
    print(carsSet);
}

func student() {
    var student: [Int:String] = [:];
    var nazwisko: String;
    for _ in 0...4 {
        print("Podaj ID studenta: ");
        guard let id = Int(readLine()!) else {
            fatalError("Nie liczba");
        }
        print("Podaj nazwisko studenta: ");
        nazwisko = readLine()!;
        student[id] = nazwisko;
    }
    print(student);
    print("Podaj nazwisko: ")
    nazwisko = readLine()!;
    for i in student {
        if (i.value == nazwisko) {
            print(i)
        }
    }
    for i in student {
        if (i.value == nazwisko) {
            student.remove(at: student.index(forKey: i.key)!);
            nazwisko = "";
        }
    }
    print(student);
}

//rzutOszczepemFunc()
//cars()
student()
