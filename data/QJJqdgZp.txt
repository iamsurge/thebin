#include <stdio.h>
void printarr(int a[],int l);
int partition (int arr[], int low, int high);
void swap(int &a,int &b);
void swap(int &a,int &b){
    int temp;
    temp=b;
    b=a;
    a=temp;
}
void printarr(int a[],int l){
    for(int i=0;i<l;i++){
        printf("%d ",a[i]);
    }
}
int partition (int arr[], int low, int high) 
{ 
    int pivot = arr[high]; 
    int i = (low - 1);   
    for (int j = low; j <= high - 1; j++) 
    { 
        if (arr[j] < pivot) 
        { 
            i++;
            swap(arr[i], arr[j]); 
        }
    }
    swap(arr[i + 1], arr[high]); 
    return (i + 1); 
} 

void quickSort(int arr[], int low, int high) 
{ 
    if (low < high) 
    { 
        int pi = partition(arr, low, high); 
        quickSort(arr, low, pi - 1); 
        quickSort(arr, pi + 1, high); 
    } 
} 
int main(){
    int n;
    printf("enter size of array:");
    scanf("%d",&n);
    int a[n];
    for(int i=0;i<n;i++){
        printf("enter element ar %d pos.: ",i);
        scanf("%d",&a[i]);
    }
    quickSort(a,0,n);
    printf("\n");
    printarr(a,n);
    printf("\n");
}