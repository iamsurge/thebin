// MathOperation.cpp : This file contains the 'main' function. Program execution begins and ends there.
//   *** this code was developed in a rush check functionality carefully ***
// Microsoft Visual Studio Community 2022 Version 17.4.1
#include <iostream>
#include <string>
using namespace std;
//
class cContainer {
private:
    float fNumberOne;
    float fNumberTwo;
protected:
public:
    cContainer() { DoConstructor(); }
    ~cContainer() {}
    void DoConstructor() {
        fNumberOne = 0;
        fNumberTwo = 0;
    }
    float GetNumberOne() {
        return fNumberOne;
    }
    float GetNumberTwo() {
        return fNumberTwo;
    }
    void SetNumberOne(float fSetNumber) {
        fNumberOne = fSetNumber;
    }
    void SetNumberTwo(float fSetNumber) {
        fNumberTwo = fSetNumber;
    }
};
class cDocument : public cContainer {
private:
protected:
public:
    cDocument() {}
    ~cDocument() {}
    float AddNumbers() {
        return GetNumberOne() + GetNumberTwo();
    }
    float DivideOneByTwo() {
        if (GetNumberTwo() == 0) {
            cout << "Can not divide by zero.  Answer of zero is incorrect.\n";
            return 0;
        }
        else return GetNumberOne()  / GetNumberTwo();        
    }
    float DivideTwoByOne() {
        if (GetNumberOne() == 0) {
            cout << "Can not divide by zero.  Answer of zero is incorrect.\n";
            return 0;
        }
        else return GetNumberTwo() / GetNumberOne();
    }
    float Multiply() {
        return GetNumberOne() * GetNumberTwo();
    }
    float SubtractTwoFromOne() {
        return GetNumberOne() - GetNumberTwo();
    }
    float SubtractOneFromTwo() {
        return GetNumberTwo() - GetNumberOne();
    }
};
class cView : public cDocument {
private:
protected:
public:
    cView() {}
    ~cView() {}
    void Add() {
        cout << GetNumberOne() << " + " << GetNumberTwo() << " is : " << AddNumbers() << "\n\n";
    }
    void DivideOneByTwo() {
        cout << GetNumberOne() << " /  " << GetNumberTwo() << " is : " << cDocument::DivideOneByTwo() << "\n\n";
    }
    void DivideTwoByOne() {
        cout << GetNumberTwo() << " /  " << GetNumberOne() << " is : " << cDocument::DivideTwoByOne() << "\n\n";
    }
    void Show() {
        cout << "Value of Number One : " << GetNumberOne() << " Value of Number Two : " << GetNumberTwo() << "\n\n";
    }
    void SubtractTwoFromOne() {
        cout << GetNumberOne() << " -  " << GetNumberTwo() << " is : " << cDocument::SubtractTwoFromOne() << "\n\n";
    }
    void SubtractOneFromTwo() {
        cout << GetNumberOne() << " -  " << GetNumberTwo() << " is : " << cDocument::SubtractOneFromTwo() << "\n\n";
    }
};
class cMenu : public cView  {
private:
protected:
public:
    cMenu() { DoMenu(); }
    ~cMenu() {}
    void DoMenu() {
        string sCommand="???";
        while (sCommand != "Quit") {
            cout << "Help for command list.  Your command? : ";
            getline(cin, sCommand);
            if (sCommand == "1") Add();
            if (sCommand == "2") SubtractTwoFromOne();
            if (sCommand == "3") Multiply();
            if (sCommand == "4") DivideOneByTwo();
            if (sCommand == "Add") Add();
            if (sCommand == "Div1")  DivideOneByTwo();
            if (sCommand == "Div2")  DivideTwoByOne();
            if (sCommand == "Help") Help();
            if (sCommand == "One") One();            
            if (sCommand == "Show") Show();
            if (sCommand == "Sub1")  SubtractOneFromTwo();
            if (sCommand == "Sub2")  SubtractTwoFromOne();
            if (sCommand == "Two") Two();
        }

    }
    void Help() {
        cout << "1 - ADDITION\n";
        cout << "2 - SUBRTRACTON (number two from one)\n"; // as spelled in assignment
        cout << "3 - MULTIPLICATION\n";
        cout << "4 - DIVISION\n";
        cout << "Add - add the two values.\n";
        cout << "Help - this list.\n";
        cout << "One - input number one.\n";
        cout << "Two - input number two.\n";
        cout << "Show - Show value in one and two.\n";
        cout << "Sub1 - Subtract number 1 from 2.\n";
        cout << "Two - input number two.\n";
    }
    void One() {
        cout << "Value for one? : ";
        int iOne;
        cin >> iOne;
        if (cin.fail()) cout << "Invalid entry\n";
        else SetNumberOne(iOne);
        cin.ignore();
        cin.clear();
    }
    void Two() {
        cout << "Value for two? : ";
        int iTwo;
        cin >> iTwo;
        if (cin.fail()) cout << "Invalid entry\n";
        else SetNumberTwo(iTwo);
        cin.ignore();
        cin.clear();
    }
};
class cApplication {
private:
protected:
public:
    cApplication() { cMenu  myMenu;  }
    ~cApplication() {}
};
int main()
{
    cout << "Kier Reyes - - math operations.\n\n";
    cApplication myApplication;
}

// Run program: Ctrl + F5 or Debug > Start Without Debugging menu
// Debug program: F5 or Debug > Start Debugging menu

// Tips for Getting Started: 
//   1. Use the Solution Explorer window to add/manage files
//   2. Use the Team Explorer window to connect to source control
//   3. Use the Output window to see build output and other messages
//   4. Use the Error List window to view errors
//   5. Go to Project > Add New Item to create new code files, or Project > Add Existing Item to add existing code files to the project
//   6. In the future, to open this project again, go to File > Open > Project and select the .sln file
