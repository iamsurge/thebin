#include <iostream>
#include <string>

using namespace std;

#define MAX_MONITORS 100

struct Monitors {
    string serialNumber;
    string brand;
    string model;
    string color;
    double price;
    double inches;
    double resolution;
    bool hasTVTuner;
    bool isNew;
    string status;
    double sale;
} monitor[MAX_MONITORS];

// Прототипи
void addMonitors(int n);
void printMonitors(int n);

void addMonitors(int n) {
	if (n > MAX_MONITORS) {
		cout << "Максималният брой е " << MAX_MONITORS << endl;
		return;
	}

	if (n < 0) {
		cout << "Моля, въведете число по-голямо от 0!" << endl;
		return;
	}

	for (int i = 0; i < n; i++)
	{
		cout << "Монитор #" << i + 1 << endl;
		cout << "Сериен номер: ";
		cin.ignore();
		getline(cin, monitor[i].serialNumber);
		cout << "Марка: ";
		getline(cin, monitor[i].brand);

		//...
	}

	//printMonitors(n);
}

void printMonitors(int n) {
	for (int i = 0; i < n; i++)
	{
		cout << "Монитор " << i + 1 << endl << endl;
		cout << "Сериен номер: " << monitor[i].serialNumber << endl;
		cout << "Марка: " << monitor[i].brand << endl;
		//...
	}
}

void findLargestDisplay(int n) {
	Monitors temp;
	temp = monitor[0];

	for (int i = 0; i < n; i++)
	{
		if (temp.inches > monitor[i].inches) {
			temp.inches = monitor[i].inches;
			temp.serialNumber = monitor[i].serialNumber;
		}
	}

	cout << "Най-голям екран има монитор със сериен номер " << "[" << temp.serialNumber << "]" << endl << endl;
}

void searchByBrand(int n) {

	cout << "\n========== Търсене по марка ==========" << endl << endl;

	bool flag = false;
	string keyword;

	cout << "Въведете марка: ";
	cin >> keyword;

	for (int i = 0; i < n; i++)
	{
		if (keyword == monitor[i].brand) {		
			cout << "Сериен номер: " << monitor[i].serialNumber;
			flag = true;
		}
	}

	if(!flag) cout << "Няма монитор / монитори от тази марка." << endl << endl;
}

void searchMenu(int n) {
	int userChoice(0);

	do {
		cout << "\n=========== Меню - Търсене на монитори ===========" << endl;
		cout << "1.Най-голям екран" << endl;
		cout << "2.По марка" << endl;
		cout << "3.Изход" << endl;
		cout << "Избор: ";

		cin >> userChoice;
	} while (userChoice < 1 || userChoice > 3);
	switch (userChoice) {
	case 1:
		findLargestDisplay(n);
		break;
	case 2:
		searchByBrand(n);
		break;
	}
}

void monitorsSort(int n) {
	Monitors temp;

	for (int i = 0; i < 10; i++) {
		for (int j = i + 1; j < 10; j++)
		{
			if (monitor[j].price < monitor[i].price) {
				temp = monitor[i];
				monitor[i] = monitor[j];
				monitor[j] = temp;
			}
		}
	}

	cout << "Сортиран масив: " << endl;

	for (int i = 0; i < n; i++)
	{
		cout << "Марка: " << monitor[i].brand << endl;
		cout << "Цена: " << monitor[i].price << endl;
	}
}

void menu() {
	setlocale(LC_ALL, "bg_BG");

	int userChoice, n(0);

	do {
		do {
			cout << "=========== Меню ===========" << endl;
			cout << "1.Добавяне на монитори" << endl;
			cout << "2.Извеждане на мониторите" << endl;
			cout << "3.Търсене на монитори" << endl;
			cout << "0.Изход" << endl;
			cout << "Избор [0-3]: ";
			
			cin >> userChoice;
		} while (userChoice < 0 || userChoice > 3);

		switch (userChoice) {
		case 0:
			exit(0);
			break;
		case 1:
			cout << "=========== Добавяне на монитори ===========" << endl << endl;
			cout << "Колко монитора искате да добавите?" << endl << endl;
			cin >> n;

			addMonitors(n);
			break;
		case 2:
			cout << "=========== Извеждане на мониторите ===========" << endl << endl;

			printMonitors(n);
			break;
		case 3:
			cout << "=========== Търсене ===========" << endl << endl;

			searchMenu(n);
			break;
		}
	} while (userChoice != 3);
}

int main()
{
	menu();
}