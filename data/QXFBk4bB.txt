function SequentialAlphaBeta(node, depth, Max, alpha, beta):
	if node is a leaf node:
		return value of the node
	if Max:
		bestVal = -INFINITY
		for every child node:
			value = minimax(node, depth+1, false, alpha, beta)
			bestVal = max( BestValue, value)
			alpha = max( alpha, bestVal)
 			if beta <= alpha:
 				break
		return bestVal
 else:
 	bestVal = +INFINITY
 	for every child node :
 		value = minimax(node, depth+1, true, alpha, beta)
 		bestVal = min( bestVal, value)
 		beta = min( beta, BestValue)
		if beta <= alpha:
			break
 	return bestVal