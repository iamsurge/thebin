%% Q - New Trajectory
    fprintf('<strong> Subproblem 2 - Optimize Q </strong>');
    display(' ');
    
    % Q1 - New Q - (Phases from NEW A, OLD Q)
    [Q_new, DF_Q1] = optimal_Q2(A_new, P_tr, total_gain_optimized_A, ...
    K, N, B, P_noise, Lt_sec, delta_t, SNR_thr, rate_thr, q_cp, v_max_mine);
    
    % Q2 - New Q - (phases fron NEW A, NEW Q)
    [Theta_Q, total_gain_optimized_Q, SNR_Q, SNR_av_optimized_dB_Q] = ...
	optimize_phase_shifts(N, M, TDMA_new, P_tr, Q_new, aggregators, H, h_b, qb, ...
	lambda, d, rho_1m, P_noise);
    DF_Q2 = find_DF(A_new, P_tr, Q_new, Theta_Q, total_gain_optimized_Q, N, Lt_sec, K, B, ...
    P_noise, delta_t, SNR_thr, rate_thr);
    
    % Stats
    display('******** QoS ********');    
    disp("SNR_av_optimized_dB_Q = " + SNR_av_optimized_dB_Q + " dB");  
    disp("Average DF_Q2 = " + num2str(DF_Q2 / (8*10^6)) + " MB");
    display(' ');
    
    display('**** Outage (SNR < 1) ****');
    bad_SNR = find(SNR_Q <= 1);
    bad_len = length(bad_SNR);
    P_outage = bad_len / N;
    disp("Happened in " + num2str(bad_len) + "/" + num2str(N) + " timeslots")
    disp("P_outage = " + num2str(100 * P_outage) + " %");
    display('(Used new A, new Q, new phases)');
    display(' ');
    
    display('**** Improve ****');
    improve_perc_AQ = (DF_Q2 - initial_DF) / initial_DF;
    disp("Improve_AQ = " + num2str(100*improve_perc_AQ) + "%");
    display(' ');