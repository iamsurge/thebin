def create(self, data: dict) -> Schema:
    data = merge_all_of_schemas(data)

    if 'oneOf' in data.keys():
        data['type'] = DataType.ONE_OF

    try:
        # if data.get('type') is None:
        #     data['type'] = "object"

        schema_type = data['type']
    except KeyError:
        raise ParserError("Schema does not contain 'type' property")

    try:
        data_type = DataType(schema_type)
    except ValueError:
        raise ParserError(f"Invalid schema type '{schema_type}'") from None

    try:
        builder_func = self._builders[data_type]
    except KeyError:
        raise ParserError(
            f"Unsupported schema type: '{schema_type}'") from None

    logger.debug(f"Building schema [type={data_type}]")

    return builder_func(data)