x = 10
 
# Nested if statements to evaluate two conditions which are dependant on one
# another.
if x > 0:
    if x < 20:
        print("x is between 0 and 20")
    else:
        print("x is greater than 0 but not less than 20")
else:
    print("x is greater than zero and MAY be less than 20")

# Single if-statement which evaluates both expressions at once. I'm including
# parentheses to make the expressions being compared more obvious.
if (x > 0) and (x < 20):
    print("x is between 0 and 20")
else:
    print(
        "x may be greater than zero OR it may be less than 20, but only "
        "one of these conditions can be true and neither may also be true"
    )

# Using any() to compare many expressions at once. If any of the contained
# expressions are true any() returns true, otherwise false. Any takes a
# sequence (an iterable like a list, tuple, collection, deque, etc.) as an
# argument.
if any( [x > 0, x < 10, x == 100] ):
    print("x is greater than zero, less than 10, or equal to 100")

# Using all() to compare many expressions at once. If all of the contained
# expressions are true, all() returns true, otherwise false. Like with
# any(), you supply it an iterable.
if all( [x > 0, x < 10, x == 15] ):
    # This is a rather pointless condition but I'm just using it as an example
    print("x is greater than zero, less than 10, and equal to 15")
elif x > 100:
    print("x is greater than 100")
else:
    print("None of the above conditions have evaluated to true")

# Examples of complex nesting
if (x > 0) and (x < 100):
    if (x < 50) and (x % 2 == 0):
        print("x is an even number less than 50 but greater than 0")
    elif (x < 50) and (x % 2 != 0):
        print("x is an odd number less than 50 but greater than 0")
    else:
        print("x is some number greater than 50 but less than 100")
elif x > 0:
    print("x is greater than zero but NOT less than 100")
else:
    print("x must be a negative number because it is less than zero")