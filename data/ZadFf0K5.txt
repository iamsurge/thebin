r = 0.04
h0 = 0.4
h1 = 0.062
m1 = 76.66
m2 = 77.6
g = 9.82
dm = [1.542, 3.13, 3.55, 4.14]
dm1 = [3.13, 3.55, 4.14, 6.68, 7.69]
tdm = [
    [2.383, 2.46, 2.489],
    [2.262, 2.329, 2.342],
    [2.058, 2.093, 2.138],
    [1.443, 1.5, 1.641],
    [1.372, 1.436, 1.551]
]
R = []
for i in tdm:
    R.append(round(i[2] - i[0], 3))
# print(*R)
U_pn = 0.94
# for i in range(len(tdm)):
#    print(round((abs(tdm[i][0]-tdm[i][1])) / R[i],3), round((abs(tdm[i][1]-tdm[i][2])) / R[i],3), i)
m_av = []
for i in tdm:
    sm = sum(i)
    m_av.append(round(sm / 3, 3))
# print(*m_av)
d_dm = []
for i in R:
    d_dm.append(round(i * 1.3, 3))
# print(*d_dm)
teta = 0.001
d_dm_av = []
for i in d_dm:
    d_dm_av.append(round((i ** 2 + teta ** 2) ** 0.5, 3))
# print(*d_dm_av)
dt = [2.44, 2.31, 2.1, 1.5, 1.5]
dt1 = [2.444, 2.311, 2.096, 1.528, 1.453]
S = h0 - h1
a = []
for i in dt1:
    a.append(round(2 * S / (i ** 2), 4))
# print(*a)
eps = []
for i in dt1:
    e = 0.676 / (0.04 * (i ** 2))
    eps.append(round(e, 4))
# print(*eps)
M = []
for i in range(len(dt1)):
    q1 = ((m1 + dm1[i]) * (g - a[i]))
    q2 = m2 * (g + a[i])
    z = r * (q1 - q2)
    M.append(round(z, 4))
# print(*dt1)
# print(*M)
eps_av = sum(eps)/len(eps)
d_eps = []
d_eps_2 = []
for i in eps:
    d_eps.append(round(i-eps_av,4))
    d_eps_2.append(round((i-eps_av)**2,4))
#print(eps_av)
#print(*d_eps)
#print(*d_eps_2)
M_av = sum(M)/len(M)
#print(M_av)
d_M = []
d_M_2 = []
for i in M:
    d_M.append(round(i-M_av,4))
    d_M_2.append(round((i-M_av)**2,4))
#print(*d_M)
#print(*d_M_2)
d_eps_m = []
for i in range(len(d_eps)):
    d_eps_m.append(round(d_eps[i]*d_M[i],4))
#print(*d_eps_m)
#print(eps_av)
#print(M_av)
p = sum(d_eps_m)
q = sum(d_eps_2)
alpha = round(p/q,4)
betta = round(M_av - alpha*eps_av,4)
s_alpha_2 = (1/3)*(sum(d_M_2)/sum(d_eps_2)-alpha**2)
s_alpha = s_alpha_2**0.5
s_betta_2 = s_alpha_2 * ( eps_av**2 + (1/5) * sum(d_eps_2))
s_betta = s_betta_2**0.5
d_alpha = 2.8*s_alpha
d_betta = 2.8*s_betta
print(d_alpha,d_betta)