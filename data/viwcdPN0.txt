<?php

class Character
{
    public $name;
    public $health;
    public $max_health;
    public $attack;
    public $defence;
    public $abilities = array();

    public function __construct($name, $health, $attack, $defence)
    {
        $this->name = $name;
        $this->health = $health;
        $this->max_health = $health;
        $this->attack = $attack;
        $this->defence = $defence;
    }

    public function fight($target)
    {
        // calculate the damage dealt by the attacker
        $damage = max(0, $this->attack - $target->defence);
        // subtract the damage from the defender's health
        $target->health -= $damage;
        // output the attack log
        echo $this->name . " attacks " . $target->name . " and deals " . $damage . " damage\n";
    }

    public function useAbility($ability, $target)
    {
        // check if the ability is on cooldown
        if ($ability->cooldown > 0) {
            echo $this->name . " tries to use " . $ability->name . " but it is on cooldown\n";
            return;
        }

        // apply the ability's effect
        if (isset($ability->damage)) {
            // calculate the damage dealt by the ability
            $damage = $ability->damage;
            // subtract the damage from the target's health
            $target->health -= $damage;
            // output the ability log
            echo $this->name . " uses " . $ability->name . " on " . $target->name . " and deals " . $damage . " damage. Current health: $this->health\n";
        }
        if (isset($ability->heal)) {
            // calculate the heal amount
            $heal = $ability->heal;
            // add the heal to the user's health
            $this->health = min($this->max_health, $this->health + $heal);
            // output the ability log
            echo $this->name . " uses " . $ability->name . " and heals for " . $heal . " health. Current health: $this->health\n";
        }
        if (isset($ability->duration)) {
            // increase the user's defence for the duration of the ability
            $this->defence += 5;
            // output the ability log
            echo $this->name . " uses " . $ability->name . " and increases defence by 5 for " . $ability->duration . " turns. Current health: $this->health\n";
        }

        // put the ability on cooldown
        $ability->cooldown = $ability->cooldown + 1;
    }

}

class Ability
{
    public $name;
    public $damage;
    public $cooldown;
    public $heal;
    public $duration;

    public function __construct($name, $damage = null, $cooldown = null, $heal = null, $duration = null)
    {
        $this->name = $name;
        $this->damage = $damage;
        $this->cooldown = $cooldown;
        $this->heal = $heal;
        $this->duration = $duration;
    }
}

// create the abilities
$repulsorBlast = new Ability('Repulsor Blast', 20, 1);
$unibeam = new Ability('Unibeam', 40, 10);
$defensiveMatrix = new Ability('Defensive Matrix', null, 5, null, 2);
$boltOfBedevilment = new Ability('Bolt of Bedevilment', 15, 1);
$slingRingBlast = new Ability('Sling Ring Blast', 25, 2);
$healingSpell = new Ability('Healing Spell', null, 5, 20);
$energyShield = new Ability('Energy Shield', null, 5, null, 3);
$rocketPunch = new Ability('Rocket Punch', 25, 1);
$stunCannon = new Ability('Stun Cannon', 10, 2, null, 1);
$powerSurge = new Ability('Power Surge', null, 4, null, 3);

$timeStoneWarp = new Ability('Time Stone Warp', null, 5, 40);
$mindStoneBlast = new Ability('Mind Stone Blast', 20, 3, null, 1);
$powerStonePunch = new Ability('Power Stone Punch', 30, 2);
$spaceStoneTeleport = new Ability('Space Stone Teleport', 15, 1);
$soulStoneSoulDrain = new Ability('Soul Stone Soul Drain', 25, 4, 10);

// create the characters
$ironman = new Character('Ironman', 100, 10, 5);
$drStrange = new Character('Dr. Strange', 100, 8, 7);

// add the abilities to the characters
$ironman->abilities = array($repulsorBlast, $unibeam, $defensiveMatrix,$energyShield, $rocketPunch, $stunCannon, $powerSurge);
$drStrange->abilities = array($boltOfBedevilment, $slingRingBlast, $healingSpell, $timeStoneWarp, $mindStoneBlast, $powerStonePunch, $spaceStoneTeleport, $soulStoneSoulDrain);

$counter= 0;
// start the battle
while ($ironman->health > 0 && $drStrange->health > 0) {
    // choose a random ability for each character
    $ironmanAbility = $ironman->abilities[array_rand($ironman->abilities)];
    $drStrangeAbility = $drStrange->abilities[array_rand($drStrange->abilities)];
    echo "-----------\n";
    echo "- ROUND $counter \n";
    echo "-----------\n";
    // use the abilities
    $ironman->useAbility($ironmanAbility, $drStrange);
    $drStrange->useAbility($drStrangeAbility, $ironman);

    // check if either character is defeated
    if ($ironman->health <= 0) {
        echo "\n".$drStrange->name . " wins the battle!\n";
        break;
    } elseif ($drStrange->health <= 0) {
        echo "\n".$ironman->name . " wins the battle!\n";
        break;
    }

    // reduce the cooldown of all abilities
    foreach ($ironman->abilities as $ability) {
        $ability->cooldown = max(0, $ability->cooldown - 1);
    }
    foreach ($drStrange->abilities as $ability) {
        $ability->cooldown = max(0, $ability->cooldown - 1);
    }
    $counter++;
    echo "\n";
}
echo "Number of rounds:". $counter . "\n";

