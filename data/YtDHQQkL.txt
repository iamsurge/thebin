import ecs_core
import guild

# Define the Time Lord entity
class TimeLord(ecs_core.Entity):
    def __init__(self, name, regeneration_count):
        self.name = name
        self.regeneration_count = regeneration_count

# Define the Dalek entity
class Dalek(ecs_core.Entity):
    def __init__(self, name, hostile):
        self.name = name
        self.hostile = hostile

# Define the Doctor worker
class Doctor(guild.Worker):
    def __init__(self):
        super().__init__()

    def update(self):
        # Update the position of each Time Lord based on its velocity
        for time_lord in self.entity_manager.get_entities_by_type(TimeLord):
            time_lord.position += time_lord.velocity

        # Check for collisions between the Time Lords and the Daleks
        for time_lord in self.entity_manager.get_entities_by_type(TimeLord):
            for dalek in self.entity_manager.get_entities_by_type(Dalek):
                # Check if the Time Lord is colliding with the Dalek
                if time_lord.position.x == dalek.position.x and time_lord.position.y == dalek.position.y:
                    # Check if the Dalek is hostile
                    if dalek.hostile:
                        # Regenerate the Time Lord
                        time_lord.regeneration_count += 1
                        time_lord.name = f'Doctor {time_lord.regeneration_count}'

# Create the Doctor worker
doctor = Doctor()

# Add Time Lord and Dalek entities to the Doctor worker
doctor.entity_manager.add_entity(TimeLord(name='The Doctor', regeneration_count=1))
doctor.entity_manager.add_entity(TimeLord(name='The Master', regeneration_count=2))
doctor.entity_manager.add_entity(TimeLord(name='The Rani', regeneration_count=3))
doctor.entity_manager.add_entity(Dalek(name='Dalek 1', hostile=True))
doctor.entity_manager.add_entity(Dalek(name='Dalek 2', hostile=True))
doctor.entity_manager.add_entity(Dalek(name='Dalek 3', hostile=False))
doctor.entity_manager.add_entity(Dalek(name='Dalek 4', hostile=False))

# Start the Doctor worker
doctor.start()

# Update the Doctor worker
while True:
    # Update the Doctor worker
    doctor.update()
