### pip install colorama
from colorama import Fore, Style


def GetInt(Text):
    try:
        return int(input(Text))
    except ValueError as e:
        return -1


def GetString(Text):
    try:
        return str(input(Text))
    except ValueError as e:
        return ''


def GetFormatted(Color, Text):
    return Color + str(Text) + Style.RESET_ALL


def RedText(Text):
    return GetFormatted(Fore.RED, Text)


def GreenText(Text):
    return GetFormatted(Fore.GREEN, Text)


def BlueText(Text):
    return GetFormatted(Fore.BLUE, Text)


def LightBlueText(Text):
    return GetFormatted(Fore.LIGHTBLUE_EX, Text)


def YellowText(Text):
    return GetFormatted(Fore.YELLOW, Text)


def GetColoredTextByRule(Left, Right, Text):
    if Left != -1 and Left > Right:
        return RedText(Text)
    elif Left != -1 and Left <= Right:
        return GreenText(Text)

    return LightBlueText(Text)


def GetMenu():
    return "Всего компаний: " + YellowText(str(Companies.GetSize())) + \
            "\n- 1) Ввести ещё компанию" \
            "\n- 2) Вывести список введённых компаний" \
            "\n- 3) Самые жёсткие рассосники" \
            "\n- 4) Хуесосы кто выработал менее 55%" \
            "\n\n- 0) Выход\n\n> "


class Menu(object):
    COMPANY_INPUT = 1
    COMPANY_PRINT_ALL = 2
    COMPANY_GET_BAD_COMPANY = 3
    COMPANY_GET_COMPANY_PERCENT = 4
    EXIT = 0


class Company(object):
    def __init__(self, Name, FactAmount, AwaitAmount):
        self.Name = Name
        self.FactAmount = FactAmount
        self.AwaitAmount = AwaitAmount

    def GetPercentProduction(self):
        return round((self.FactAmount / self.AwaitAmount) * 100, 2)

    def Print(self, Restriction=-1):
        print('--------------')
        print('- Имя:         ', LightBlueText(self.Name))
        print('- Ожидание:    ', LightBlueText(self.AwaitAmount))
        print('- Реальность:  ', GetColoredTextByRule(self.AwaitAmount, self.FactAmount, self.FactAmount))
        print('\n- Выработка:   ',
              GetColoredTextByRule(Restriction, self.GetPercentProduction(), str(self.GetPercentProduction()) + '%'))
        print('--------------')


class CompanyList(object):
    def __init__(self, Companies=[]):
        self.Companies = Companies

    def GetSize(self):
        return len(self.Companies)

    def AddCompany(self, Company):
        self.Companies.append(Company)

    def GetAllCompaniesWherePercentLessThan(self, Percent):
        return filter(lambda Company: Company.GetPercentProduction() <= Percent, self.Companies)

    def GetMinProductivityCompany(self):
        return min(self.Companies, key=lambda Company: Company.GetPercentProduction())

    def ReorderList(self, Reverse=False):
        self.Companies = sorted(self.Companies, key=lambda Company: Company.GetPercentProduction(), reverse=Reverse)

    def PrintAll(self, Restriction=-1):
        for Company in self.Companies:
            Company.Print(Restriction)


Companies = CompanyList()
Choice = -1

while True:
    Choice = GetInt(GetMenu())

    if Choice == Menu.COMPANY_INPUT:
        Name = GetString("Введите имя блядской компании: ")
        FactAmount = GetInt("Введите фактическую выработку блядской компании: ")
        AwaitAmount = GetInt("А ждёте сколько?: ")

        NewCompany = Company(Name, FactAmount, AwaitAmount)

        Companies.AddCompany(NewCompany)
    elif Choice == Menu.COMPANY_PRINT_ALL:
        Companies.PrintAll()
    elif Choice == Menu.COMPANY_GET_BAD_COMPANY:
        Companies.GetMinProductivityCompany().Print()
    elif Choice == Menu.COMPANY_GET_COMPANY_PERCENT:
        CompanyList(Companies.GetAllCompaniesWherePercentLessThan(55)).PrintAll(55)
    elif Choice == Menu.EXIT:
        break