#include <iostream>
#include <cmath>
#include <vector>
#include <queue>
#include <algorithm>
#include <string>
#include <stack>
#include <set>
#include <map>
#define pii pair <int, int>
#define pb(x) push_back(x)
#include <ctime>
using namespace std;
using ll = long long;
using ld = long double;
using db = double;
void cv(vector <int> &v) {
    for (auto x : v) cout << x << ' ';
    cout << "\n";
}

void cvl(vector <ll> &v) {
    for (auto x : v) cout << x << ' ';
    cout << "\n";
}


void cvv(vector <vector <int> > &v) {
    for (auto x : v) cv(x);
    cout << "\n";
}

void cvb(vector <bool> v) {
    for (bool x : v) cout << x << ' ';
    cout << "\n";
}

void cvs(vector <string>  v) {
    for (auto a : v) {
        cout << a << "\n";
    }
}

void cvp(vector <pii> a) {
    for (auto p : a) {
        cout << p.first << ' ' << p.second << "\n";
    }
    cout << "\n";
}


bool sh = 0;

int n, m;

int dull() {
    int mx = -1;
    vector <vector <int> > a(n, vector <int> (m, -1));
    for (int i = 0; i < n; ++i) {
        for (int j = 0; j < m; ++j) {
            int x = min(i, n - 1 - i), y = min(j, m - 1 - j);
            a[i][j] = min(x, y);
            mx = max(mx, a[i][j]);
        }
    }
    int cnt = 0;
    for (int i = 0; i < n; ++i) {
        for (int j = 0; j < m; ++j) {
            if (a[i][j] == mx) {
                cnt++;
            }
        }
    }

    cvv(a);
    return cnt;
}

int my() {
    if (n < m) {
        swap(n, m);
    }
    if (min(n, m) <= 2) {
        return n * m;
    }
    int dm = m / 2 - 1, k = 2;
    if (m % 2 == 1) {
        dm = m / 2;
        k = 1;
    }
    int ans = (n - 2 * dm) * k;
    return ans;
}

bool random = 1;

int main() {
    /*ios::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);*/
    srand(time(0));
    if (!random) {
            cin >> n >> m;
    }
    if (random) {
        while (1) {
            n = rand() % 100 + 1;
            m = rand() % 100 + 1;
            int me = my();
            int he = dull();
            if (me == he) {
                cout << "OK\n";
            }
            else {
                cout << "WA\n";
                cout << "n m = " << n << ' ' << m << "\n";
                cout << "me he = " << me << ' '<< he << "\n";
                break;
            }
            break;
        }
    }

}
