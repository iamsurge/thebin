#include <iostream>
#include <vector>
#include <set>
#include <cstring>
#include <queue>
#include <cmath>
#include <algorithm>
#include <stack>
using namespace std;
const int maxn = 1e5 + 10;
int n, m;
vector<int> graph[maxn];
bool visited[maxn];
stack<int> st;
void topological_sort(int node) {
    visited[node] = true;
    cout << node + 1 << endl;
    for(int i = 0; i < (int) graph[node].size(); i++) {
        int neighbour = graph[node][i];
        if(!visited[neighbour]) {
            topological_sort(neighbour);
        }
    }
    
    st.push(node);
}
int main() {
    cin >> n >> m;
    for(int i = 0; i < m; i++) {
        int a, b;
        cin >> a>> b;
        a--;
        b--;
        graph[a].push_back(b);
    }
    memset(visited, false, sizeof visited);
    for(int i = 0; i < n; i++) {
        if(!visited[i]) {
            topological_sort(i);
        }
    }
    while(!st.empty()) {
        cout << st.top() + 1 << " ";
        st.pop();
    }
    return 0;
}
