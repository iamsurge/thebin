#include <iostream>
#include <cmath>
#include <vector>
#include <queue>
#include <algorithm>
#include <string>
#include <stack>
#include <set>
#include <map>
#define pii pair <int, int>
#define pb(x) push_back(x)
using namespace std;
using ll = long long;
using ld = long double;
using db = double;
void cv(vector <int> &v) {
    for (auto x : v) cout << x << ' ';
    cout << "\n";
}

void cvl(vector <ll> &v) {
    for (auto x : v) cout << x << ' ';
    cout << "\n";
}


void cvv(vector <vector <int> > &v) {
    for (auto x : v) cv(x);
    cout << "\n";
}

void cvb(vector <bool> v) {
    for (bool x : v) cout << x << ' ';
    cout << "\n";
}

void cvs(vector <string>  v) {
    for (auto a : v) {
        cout << a << "\n";
    }
}

void cvp(vector <pii> a) {
    for (auto p : a) {
        cout << p.first << ' ' << p.second << "\n";
    }
    cout << "\n";
}

bool im(bool a, bool b) {
    return !a || b;
}

bool g(bool f, bool a, bool b, bool c) {
    bool r = im(f, a && f);
    r = im(r, b && f) ;
    r = im(r, c && f);
    return r;
}

bool h(bool f, bool a, bool b, bool c) {
    bool r = (!f || a&&f) && (!(b&&f)) || c && f;
    return r;
}

bool p(bool a, bool b, bool c) {
    return a && !b || c;
}

int main() {
    ios::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
    vector <bool> v = {0, 1};
    for (bool a: v) {
        for (bool b: v) {
            for (bool c: v) {
                for (bool f: v) {
                    if (g(p(a, b, c), a, b, c) != 1) {
                        cout << "WA\n";
                        cout <<  ' ' << a << ' ' << b << ' ' << c << "\n";
                    }
                }
            }
        }
    }
    cout << "OK\n";
}
