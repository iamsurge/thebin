### Сортировка Шелла. Здесь мы берем и сравниваем элементы на расстоянии, начиная с n//2 и уменьшая данное расстояние в два раза. 
def shell_sort(lst):
    move = len(lst) // 2
    while move > 0:
        for i in range(len(lst) - move):
            if lst[i] > lst[i+move]:
                lst[i], lst[i+move] = lst[i+move], lst[i]
        move //= 2
    return lst

lst = [12,34,25,15,67,23,11,86]
print(shell_sort(lst))

### Сортировка Хоара. Здесь мы берем случайный элемент из списка и формируем два списка, ставя вокруг данного элемента. Способ рекурсивный. 
def quick_sort(lst):
    if len(lst) > 1:
        x = matrix[random.randint(0, len(lst)-1)]
        low = [l for l in matrix if l < x]
        eq = [l for l in matrix if l == x]
        high = [l for l in matrix if l > x]
        lst = quick_sort(low) + eq + quick_sort(high)
    return lst
###