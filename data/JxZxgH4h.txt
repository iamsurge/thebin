#include <iostream>
#include <cmath>
#include <vector>
#include <queue>
#include <algorithm>
#include <string>
#include <stack>
#include <set>
#include <map>
#define pii pair <int, int>
#define pb(x) push_back(x)
using namespace std;
using ll = long long;
using ld = long double;
using db = double;
void cv(vector <int> &v) {
    for (auto x : v) cout << x << ' ';
    cout << "\n";
}

void cvl(vector <ll> &v) {
    for (auto x : v) cout << x << ' ';
    cout << "\n";
}


void cvv(vector <vector <int> > &v) {
    for (auto x : v) cv(x);
    cout << "\n";
}

void cvb(vector <bool> v) {
    for (bool x : v) cout << x << ' ';
    cout << "\n";
}

void cvs(vector <string>  v) {
    for (auto a : v) {
        cout << a << "\n";
    }
}

void cvp(vector <pii> a) {
    for (auto p : a) {
        cout << p.first << ' ' << p.second << "\n";
    }
    cout << "\n";
}

double eps = 0.001;

int f(double z) {
    int g = 10, f = 1, r = 0;
    vector <int> a = {5, 2, 4, 7, 1, 8, 3, 0, 9, 6};
    while (g > 1 || f == 1) {
        g = max(1, int(double(g) / z));
        f = 0;
        for (int i = 0; i < 10 - g; ++i) {
            if (a[i] > a[i + g]) {
                swap(a[i], a[i + g]);
                r++;
                f = 1;
            }
        }
    }
    return r;
}

int main() {
    ios::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
    set <int> s;
    for (double z = 1 + eps; z <= 100; z += eps) {
        int r = f(z);
        s.insert(r);
    }
    cout << "s\n";
    for (int i: s) {
        cout << i << " ";
    }
}
