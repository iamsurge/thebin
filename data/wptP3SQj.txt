function Q = benchmark_circular_trajectory(q_cp, q_user, N)
    
    % This function creates a circle with center = (0,0)
    % Starting point = CP, so R = dist([0,0], CP)
    q_center = (q_cp + q_user) / 2;
    x_center = q_center(1);    y_center = q_center(2);
    R = my_distance(q_cp, q_center);
    x_min = x_center - R;
    x_max = x_center + R;
    x_help = linspace(x_max, x_min, (N+1)/2);
    x = [x_help fliplr(x_help(1:end-1))]';
    y = zeros(N, 1);
    for n = 1 : (N+1)/2
        y(n) = y_center + (R^2 - (x(n) - x_center).^2) .^ (1/2);
    end
    for n = (N+3)/2 : N
        y(n) = y_center - (R^2 - (x(n) - x_center).^2) .^ (1/2);
    end
    % Circular Trajectory x, y
    Q = zeros(2, N);              
    for n = 1 : N
        Q(1, n) = x(n);
        Q(2, n) = y(n);
    end

end 