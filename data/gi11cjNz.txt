import java.util.*;

public class _1_webHistory {

    //This commandList is used to extend and upgrade the project with new features as requested in the last Lab task.
    final static ArrayList<String> commandsList = new ArrayList<>(Arrays.asList("Home", "back"));

    public static void main(String[] args) {

        Scanner scanner = new Scanner(System.in);
        String userInput = "";

        Stack<String> webHistoryStack = new Stack<>();

        userInput = scanner.nextLine();
        while (!userInput.equals(commandsList.get(0))) {
            if (isUserInputCommand(userInput)) {
                executeCommand(userInput, webHistoryStack);
            } else {
                processURLrequest(userInput, webHistoryStack);
            } userInput = scanner.nextLine();
        }
    }

    private static void goOnePageBack(Stack<String> webHistoryStack) {
        try {
            webHistoryStack.pop(); // used to remove the current page that is displayed if it exists;
            printURL(webHistoryStack.pop());
        } catch (EmptyStackException e) {
            System.out.println("no previous URLs");
        }
    }

    private static void executeCommand(String userInput, Stack<String> webHistoryStack) {
        switch (userInput) {
            case "back":
                goOnePageBack(webHistoryStack);
                break;
        }
    }

    private static void printURL(String urlToBePrinted) {
        System.out.println(urlToBePrinted);
    }

    private static void processURLrequest(String urlAddress, Stack<String> webHistoryStack) {
        /*
         * TODO
         *   Display the URL by printing it on the console
         *   Check if the previews page/URL stored in the stack is different;
         *       Only if they are != add the urlAddress to the stack;
         * */

        printURL(urlAddress);

        if (webHistoryStack.isEmpty()) {
            webHistoryStack.push(urlAddress);
            return;
        }
        if (!webHistoryStack.peek().equals(urlAddress)) {
            //Update the stack with the current URL;
            webHistoryStack.push(urlAddress);
        }
    }

    private static boolean isUserInputCommand(String userInput) {
        return commandsList.contains(userInput);
    }
}
