#include "1func.h"

#define OCT_BLOCK_BINARY_SIZE 3
#define OCT_FULL_BLOCK 7ll
#define LONG_LONG_BIT_SIZE (8 * sizeof(long long))
#define OCT_MASK_FIRST_DIGIT (OCT_FULL_BLOCK << (LONG_LONG_BIT_SIZE - OCT_BLOCK_BINARY_SIZE))
#define OCT_MOVE_FIRST_DIGIT (LONG_LONG_BIT_SIZE - OCT_BLOCK_BINARY_SIZE)
#define EXTRA_DIGIT_BIT_SIZE (LONG_LONG_BIT_SIZE % OCT_BLOCK_BINARY_SIZE)

void printOct(unsigned long long x) {
    char digit = x >> (LONG_LONG_BIT_SIZE - EXTRA_DIGIT_BIT_SIZE);

    if (digit != 0)
        printf("%d", digit);

    x <<= EXTRA_DIGIT_BIT_SIZE;
    int numberLen = LONG_LONG_BIT_SIZE - EXTRA_DIGIT_BIT_SIZE;

    if (digit == 0)
        while (!(x & OCT_MASK_FIRST_DIGIT) && numberLen != 0) {
            x <<= OCT_BLOCK_BINARY_SIZE;
            numberLen -= OCT_BLOCK_BINARY_SIZE;
        }

    numberLen = numberLen == 0 ? OCT_BLOCK_BINARY_SIZE : numberLen;

    while (numberLen != 0) {
        digit = (x & OCT_MASK_FIRST_DIGIT) >> OCT_MOVE_FIRST_DIGIT;
        x <<= OCT_BLOCK_BINARY_SIZE;
        numberLen -= OCT_BLOCK_BINARY_SIZE;

        printf("%d", digit);
    }

    printf("\n");
}