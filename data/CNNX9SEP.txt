// Header:

// Fill out your copyright notice in the Description page of Project Settings.

#pragma once

#include "CoreMinimal.h"
#include "BasePawn.h"
#include "Tank.generated.h"

/**
 * 
 */
UCLASS()
class TOONTANKS_API ATank : public ABasePawn
{
	GENERATED_BODY()
	
public:
	ATank();

public:
	// Called to bind functionality to input
	virtual void SetupPlayerInputComponent(class UInputComponent* PlayerInputComponent) override;

	void Move(float Value);

private:
	UPROPERTY(VisibleAnywhere, Category="Components")
	class USpringArmComponent *SpringArm;

	UPROPERTY(VisibleAnywhere, Category="Components")
	class UCameraComponent *Camera;
};

//--------------------------------------------------------
//Implementation:

// Fill out your copyright notice in the Description page of Project Settings.

#include "Tank.h"

#include <GameFramework/SpringArmComponent.h>
#include <Camera/CameraComponent.h>

ATank::ATank()
{
  SpringArm = CreateDefaultSubobject<USpringArmComponent>(TEXT("Spring Arm"));
  SpringArm->SetupAttachment(RootComponent);

  Camera = CreateDefaultSubobject<UCameraComponent>(TEXT("Camera"));
  Camera->SetupAttachment(SpringArm);
}

// Called to bind functionality to input
void ABasePawn::SetupPlayerInputComponent(UInputComponent* PlayerInputComponent)
{
	Super::SetupPlayerInputComponent(PlayerInputComponent);

  PlayerInputComponent->BindAxis(TEXT("MoveForward"), this, &ATank::Move);
}

void ATank::Move(float Value)
{
  GEngine->AddOnScreenDebugMessage(0, 1, FColor::White, TEXT("Move"));
}
