$ # chama um nó.

get_viewport_rect().size # acessa o tamanho da tela qual pode ser guardado em uma variável.

position # posição relativa ao eixo do nó pai.

global_position # posição r elativa ao eixo (XY 0,0) independentemente da cena em que se encontra.

global_position = clamp(global.postion.xy, min, max) # Limita as bordas da tela.

queue_free() # deleta o nó e todos seus filhos.

hide() # o mesmo que definir visível para falso.

(PackedScene) # cria um espaço para colocar outra cena.

randozime() # randomiza a semente (ou o estado interno) do rng.

add_child() # adiciona um nó filho.

yield() # espera a função passada a ele acontecer antes de continuar a execução do script.

get_tree # retorna a árvore da cena que contém esse nó.

signal # cria um sinal.

emit_signal() # emite o sinal dado.

# === A maioria dessas propiedades são usadas depois de um ponto, algumas das de cima também. ===

length # retorta o comprimento (magnitude) do vetor.

size # pega o valor do position ao end. valores do canto incial e final.

size() # pega o tamanho do array.

normalized # normaliza o movimento em ângulos.

play # reproduz a animação, use $ antes para chamar o nó da animação.

stop # para de reproduzir a animação atual, use $ antes para chamar o nó da animação.

start() inicia o temporizador.

stop() # para o temporizador.

animation # a animação atual da fonte (AnimatedSprite) dos frames. Chame o nó e depois passe o nome da animação entre aspas.

flip_h flip_v # Se verdadeiro, a textura é espelhada horizontalmente ou verticalmente.

frames # verifica os frames do nó em que foi chamado.

get_animation_names() # verifica o nome das animações do nó em que foi chamado.

randi() # escolhe de forma aleátoria.

ofsset # a distância através do caminho em pixels.

instace() # instância a cena que foi chamada.

rotation # rotaciona o nó.

rand_range(from: float, to: float) # retorna um valor aleatório entre o "de" e "para".

text # o texto para exibir na tela.

create_timer # cria um temporizador dinâmicamente.

disable # se for falso vai desabilitar a colisão.

set_deferred() # atribuí um valor novo para a propriedade.

emitting # se verdadeiro as partículas começam a emitir.

return # sai da função imediatamente e retorna um valor.