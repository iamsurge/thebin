    local fileContents = file.Read("door_data.json", "DATA") or "[]"
    local doorDataTable = util.JSONToTable(fileContents)


    

    -- Function to check the current rank of the door
    function CheckDoor()
      for i, door in pairs(doorDataTable) do -- Loop through each door in the door data table
        local entstring = tostring(ent:EntIndex())
        if entstring == door.doorID then -- If the door matches, get the door rank from the door data table
          if door.requiredRank ~= nil then
          --labelRank:SetText(door.requiredRank)
          print(door.requiredRank)
          end
          if door.Battalion ~= nil then
            --LabelBattalion:SetText(door.Battalion)
            print(door.Battalion)
          end
        end 
      end
    end

    --CheckDoor()
    local VarBattalion = {}

    function dropdownRank:OnSelect()
      local VarrequiredRank = 1
      local inputRank = dropdownRank:GetSelectedID()
      if tonumber(inputRank) then
        VarrequiredRank = math.min(tonumber(inputRank), 9)
      end
      local doorExists = false
      -- Iterate through the doorDataTable
      for i, door in pairs(doorDataTable) do
        -- Check if the doorID already exists in the table
        if door.doorID == tostring(ent:EntIndex()) then
          -- Update the requiredRank of the doorID
          door.requiredRank = VarrequiredRank
          doorExists = true
          break
        end
      end
    
      -- If the doorID does not exist, insert a new entry into the table
      if not doorExists then
        table.insert(doorDataTable, {
          doorID = tostring(ent:EntIndex()),
          requiredRank = VarrequiredRank
        })
      end
      print(VarrequiredRank)
    end

    function dropdownRegiment:OnSelect()

      if dropdownRegiment:GetSelected() ~= "Battalion" && dropdownRegiment:GetSelected() ~= "All" then -- If not default text and not text of All
        VarBattalion = {dropdownRegiment:GetSelected()} -- Set the Variable to the text included in the selection.
      end
      if dropdownRegiment:GetSelected() == "All" then -- if the text of the selection is all
        VarBattalion = {"101st", "212th", "501st", "Clone Guard"} -- set a table with all the ranks inside.
      end

      local doorExists = false
      -- Iterate through the doorDataTable
      for i, door in pairs(doorDataTable) do
        -- Check if the doorID already exists in the table
        if door.doorID == tostring(ent:EntIndex()) then
          -- Update the requiredRank of the doorID
          door.Battalion = VarBattalion
          doorExists = true
          break
        end
      end
    
      -- If the doorID does not exist, insert a new entry into the table
      if not doorExists then
        table.insert(doorDataTable, {
          doorID = tostring(ent:EntIndex()),
          Battalion = VarBattalion
        })
      end
      --LabelBattalion:SetText(VarBattalion)
      PrintTable(VarBattalion)
    end


    function add_button:DoClick()
      local jsonString = util.TableToJSON(doorDataTable, true)
      file.Write("door_data.json", jsonString)

    end

    function remove_button:DoClick()
      local jsonString = util.TableToJSON(doorDataTable, true)
      file.Write("door_data.json", jsonString)
    end
