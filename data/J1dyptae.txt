#include <bits/stdc++.h>
using namespace std;

#define tasks "OLYMPIA"
#define sync_in_out ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#define int long long
#define pii pair<long long, long long>
#define X first 
#define Y second

struct inpt{
    int a, b, t;
};

vector<inpt> st;
int n, c, k, cnt = 0;


bool cmp(inpt u, inpt v){
    return u.t < v.t;
}

signed main(){
    sync_in_out
    if(fopen(tasks".inp", "r")){
        freopen(tasks".inp", "r", stdin);
        freopen(tasks".out", "w", stdout);
    }
    cin >> n >> c >> k;
    st.resize(n+5);
    for(int i = 1; i <= n; i++){
        int x, y; cin >> x >> y;
        if(y != 0){
            st[i].a = x; st[i].b = y; st[i].t = ceil(double(k-x)/(double)y);
        }
        if(y == 0) {
            st[i].a = x; st[i].b = y; st[i].t = 0;
        }
    }
    sort(st.begin() + 1, st.begin() + n + 1, cmp);
    for(int i = 1; i <= n; i++) {
        if(st[i].a >= k){
            cnt++;
            continue;
        }
        if(st[i].b == 0) continue;
        if(c >= st[i].t && c > 0){
            c -= st[i].t;
            cnt++;
            continue;
        }
        
    }
    cout << cnt;
    return 0;
}