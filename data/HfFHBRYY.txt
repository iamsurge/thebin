			if( $related_buffer === false ) {

				if ( $row['related_ids'] ) {
					
					$id_list = array();
					$id_temp = explode(",", $row['related_ids']);
					
					foreach ( $id_temp as $value ) {
						
						$value = intval($value);
						
						if ( $value > 0 ) $id_list[] = $value;
						
					}
					
					$row['related_ids'] = implode( ',', $id_list );
					
					unset($id_list);
					unset($id_temp);
			
					$db->query( "SELECT id, date, short_story, xfields, title, category, alt_name FROM " . PREFIX . "_post WHERE id IN({$row['related_ids']}) AND approve=1 ORDER BY FIND_IN_SET(id, '{$row['related_ids']}') LIMIT " . $config['related_number'] );
					$first_show = false;

				} else {
					
					$first_show = true;
					$related_ids = array();
			
					if( strlen( $row['full_story'] ) < strlen( $row['short_story'] ) ) $body = $row['short_story'];
					else $body = $row['full_story'];
					
					$body = strip_tags( stripslashes( $metatags['title'] . " " . $body ) );

					if( dle_strlen( $body, $config['charset'] ) > 1000 ) {
						$body = dle_substr( $body, 0, 1000, $config['charset'] );
					}
					
					$body = $db->safesql( $body );
					
					$config['related_number'] = intval( $config['related_number'] );
					if( $config['related_number'] < 1 ) $config['related_number'] = 5;
	
					$allowed_cats = array();
	
					foreach ($user_group as $value) {
						if ($value['allow_cats'] != "all" AND !$value['allow_short'] ) $allowed_cats[] = $db->safesql($value['allow_cats']);
					}
					
					$join_category = "";
					
					if (count($allowed_cats)) {

						$allowed_cats = implode(",", $allowed_cats);
						$allowed_cats = explode(",", $allowed_cats);
						$allowed_cats = array_unique($allowed_cats);
						sort($allowed_cats);
	
						if ($config['allow_multi_category']) {
							
							$join_category = "p INNER JOIN (SELECT DISTINCT(" . PREFIX . "_post_extras_cats.news_id) FROM " . PREFIX . "_post_extras_cats WHERE cat_id IN ('" . implode ( ',', $allowed_cats ) . "')) c ON (p.id=c.news_id) ";
							$allowed_cats = "";
						
						} else {
							
							$allowed_cats = "category IN ('" . implode ( "','", $allowed_cats ) . "') AND ";
						
						}

					} else $allowed_cats="";
					
					$not_allowed_cats = array();
	
					foreach ($user_group as $value) {
						if ($value['not_allow_cats'] != "" AND !$value['allow_short'] ) $not_allowed_cats[] = $db->safesql($value['not_allow_cats']);
					}
	
					if (count($not_allowed_cats)) {

						$not_allowed_cats = implode(",", $not_allowed_cats);
						$not_allowed_cats = explode(",", $not_allowed_cats);
						$not_allowed_cats = array_unique($not_allowed_cats);
						sort($not_allowed_cats);
	
						if ($config['allow_multi_category']) {
							
							$not_allowed_cats = "p.id NOT IN ( SELECT DISTINCT(" . PREFIX . "_post_extras_cats.news_id) FROM " . PREFIX . "_post_extras_cats WHERE cat_id IN (" . implode ( ',', $not_allowed_cats ) . ") ) AND ";
							$join_category = "p ";
							
						} else {
							
							$not_allowed_cats = "category NOT IN ('" . implode ( "','", $not_allowed_cats ) . "') AND ";
						
						}

					} else $not_allowed_cats="";

					if ($config['related_only_cats'] AND $row['category'] ) {

						$allowed_cats="";
						$not_allowed_cats = "";
						$allow_sub_cats = true;
						$all_cats = explode(",", $row['category']);
						$get_cats = array();

						foreach ($all_cats as $value) {

							if ( $cat_info[$value]['show_sub'] ) {
				
								if ( $cat_info[$value]['show_sub'] == 1 ) $get_cats[] = get_sub_cats ( $value );
								else { $get_cats[] = $value; }
				
							} else {
				
								if ( $config['show_sub_cats'] ) $get_cats[] = get_sub_cats ( $value );
								else { $get_cats[] = $value; }
				
							}

						}
						
						$get_cats = implode("|", $get_cats);
						$get_cats = explode("|", $get_cats);
						
						if ( count($get_cats) < 2 ) $allow_sub_cats = false;

						$get_cats = implode("|", $get_cats);
						
						if ($config['allow_multi_category']) {
							
							$get_cats = str_replace ( "|", "','", $get_cats );
							$join_category = "p INNER JOIN (SELECT DISTINCT(" . PREFIX . "_post_extras_cats.news_id) FROM " . PREFIX . "_post_extras_cats WHERE cat_id IN ('" . $get_cats . "')) c ON (p.id=c.news_id) ";
							$where_category = "";
				
						} else {
							
							if ( $allow_sub_cats ) {
								
								$get_cats = str_replace ( "|", "','", $get_cats );
								$where_category = "category IN ('" . $get_cats . "') AND ";
							
							} else {
								
								$where_category = "category = '{$get_cats}' AND ";
							
							}
						
						}

					} else $where_category = "";

					$db->query( "SELECT id, date, short_story, xfields, title, category, alt_name, MATCH (title, short_story, full_story, xfields) AGAINST ('{$body}') as score FROM " . PREFIX . "_post {$join_category}WHERE {$where_category}{$allowed_cats}{$not_allowed_cats}MATCH (title, short_story, full_story, xfields) AGAINST ('{$body}') AND id != " . $row['id'] . " AND approve=1" . $where_date . " ORDER BY score DESC LIMIT " . $config['related_number'] );
					
				}

				$tpl2 = new dle_template();
				$tpl2->dir = TEMPLATE_DIR;
				$tpl2->load_template( 'relatednews.tpl' );
								
				while ( $related = $db->get_row() ) {
					
					if ( $first_show ) $related_ids[] =	$related['id'];

					$related['date'] = strtotime( $related['date'] );

					if( ! $related['category'] ) {
						$my_cat = "---";
						$my_cat_link = "---";
					} else {
						
						$my_cat = array ();
						$my_cat_link = array ();
						$rel_cat_list = explode( ',', $related['category'] );
					 
						if( count( $rel_cat_list ) == 1 ) {
							
							if( $cat_info[$rel_cat_list[0]]['id'] ) {
								$my_cat[] = $cat_info[$rel_cat_list[0]]['name'];
								$my_cat_link = get_categories( $rel_cat_list[0], $config['category_separator'] );
							} else {
								$my_cat_link = "---";
							}
				
						} else {
							
							foreach ( $rel_cat_list as $element ) {
								if( $element AND $cat_info[$element]['id'] ) {
									$my_cat[] = $cat_info[$element]['name'];
									if( $config['allow_alt_url'] ) $my_cat_link[] = "<a href=\"" . $config['http_home_url'] . get_url( $element ) . "/\">{$cat_info[$element]['name']}</a>";
									else $my_cat_link[] = "<a href=\"$PHP_SELF?do=cat&category={$cat_info[$element]['alt_name']}\">{$cat_info[$element]['name']}</a>";
								}
							}
							
							if( count( $my_cat_link ) ) {
								$my_cat_link = implode( $config['category_separator'], $my_cat_link );
							} else $my_cat_link = "---";
				
						}
						
						if( count( $my_cat ) ) {
							$my_cat = implode( $config['category_separator'], $my_cat );
						} else $my_cat = "---";
						
					}
					
					if( $config['allow_alt_url'] ) {
						
						if( $config['seo_type'] == 1 OR $config['seo_type'] == 2 ) {
							
							if( $related['category'] and $config['seo_type'] == 2 ) {
								
								$cats_url = get_url( $related['category'] );
								
								if( $cats_url ) $cats_url .= "/";
			
								$rel_full_link = $config['http_home_url'] . $cats_url . $related['id'] . "-" . $related['alt_name'] . ".html";
							
							} else {
								
								$rel_full_link = $config['http_home_url'] . $related['id'] . "-" . $related['alt_name'] . ".html";
							
							}
						
						} else {
							
							$rel_full_link = $config['http_home_url'] . date( 'Y/m/d/', $related['date'] ) . $related['alt_name'] . ".html";
						}
					
					} else {
						
						$rel_full_link = $config['http_home_url'] . "index.php?newsid=" . $related['id'];
					
					}
					
					$related['category'] = intval( $related['category'] );
					
					$related['title'] = strip_tags( stripslashes( $related['title'] ) );

					$tpl2->set( '{title}', str_replace("&amp;amp;", "&amp;", htmlspecialchars( $related['title'], ENT_QUOTES, $config['charset'] ) ) );
					$tpl2->set( '{link}', $rel_full_link );
					$tpl2->set( '{category}', $my_cat );
					$tpl2->set( '{link-category}', $my_cat_link );

					if( date( 'Ymd', $related['date'] ) == date( 'Ymd', $_TIME ) ) {
						
						$tpl2->set( '{date}', $lang['time_heute'] . langdate( ", H:i", $related['date'] ) );
					
					} elseif( date( 'Ymd', $related['date'] ) == date( 'Ymd', ($_TIME - 86400) ) ) {
						
						$tpl2->set( '{date}', $lang['time_gestern'] . langdate( ", H:i", $related['date'] ) );
					
					} else {
						
						$tpl2->set( '{date}', langdate( $config['timestamp_active'], $related['date'] ) );
					
					}
					$news_date = $related['date'];
					$tpl2->copy_template = preg_replace_callback ( "#\{date=(.+?)\}#i", "formdate", $tpl2->copy_template );

					$related['short_story'] = stripslashes( $related['short_story'] );
					
					if (stripos ( $related['short_story'], "[hide" ) !== false ) {
						
						$related['short_story'] = preg_replace_callback ( "#\[hide(.*?)\](.+?)\[/hide\]#is", 
							function ($matches) use ($member_id, $user_group, $lang) {
								
								$matches[1] = str_replace(array("=", " "), "", $matches[1]);
								$matches[2] = $matches[2];
				
								if( $matches[1] ) {
									
									$groups = explode( ',', $matches[1] );
				
									if( in_array( $member_id['user_group'], $groups ) OR $member_id['user_group'] == "1") {
										return $matches[2];
									} else return "<div class=\"quote dlehidden\">" . $lang['news_regus'] . "</div>";
									
								} else {
									
									if( $user_group[$member_id['user_group']]['allow_hide'] ) return $matches[2]; else return "<div class=\"quote dlehidden\">" . $lang['news_regus'] . "</div>";
									
								}
				
						}, $related['short_story'] );
					}
	
					if (stripos ( $tpl2->copy_template, "image-" ) !== false) {
			
						$images = array();
						preg_match_all('/(img|src)=("|\')[^"\'>]+/i', $related['short_story'], $media);
						$data=preg_replace('/(img|src)("|\'|="|=\')(.*)/i',"$3",$media[0]);
			
						foreach($data as $url) {
							$info = pathinfo($url);
							if (isset($info['extension'])) {
								if ($info['filename'] == "spoiler-plus" OR $info['filename'] == "spoiler-minus" OR strpos($info['dirname'], 'engine/data/emoticons') !== false) continue;
								$info['extension'] = strtolower($info['extension']);
								if (($info['extension'] == 'jpg') || ($info['extension'] == 'jpeg') || ($info['extension'] == 'gif') || ($info['extension'] == 'png') || ($info['extension'] == 'bmp') || ($info['extension'] == 'webp') || ($info['extension'] == 'avif')) array_push($images, $url);
							}
						}
			
						if ( count($images) ) {
							$i=0;
							foreach($images as $url) {
								$i++;
								$tpl2->copy_template = str_replace( '{image-'.$i.'}', $url, $tpl2->copy_template );
								$tpl2->copy_template = str_replace( '[image-'.$i.']', "", $tpl2->copy_template );
								$tpl2->copy_template = str_replace( '[/image-'.$i.']', "", $tpl2->copy_template );
								$tpl2->copy_template = preg_replace( "#\[not-image-{$i}\](.+?)\[/not-image-{$i}\]#is", "", $tpl2->copy_template );
							}
			
						}

						$tpl2->copy_template = preg_replace( "#\[image-(.+?)\](.+?)\[/image-(.+?)\]#is", "", $tpl2->copy_template );			
						$tpl2->copy_template = preg_replace( "#\\{image-(.+?)\\}#i", "{THEME}/dleimages/no_image.jpg", $tpl2->copy_template );
						$tpl2->copy_template = preg_replace( "#\[not-image-(.+?)\]#i", "", $tpl2->copy_template );
						$tpl2->copy_template = preg_replace( "#\[/not-image-(.+?)\]#i", "", $tpl2->copy_template );
			
					}

					if ( preg_match( "#\\{text limit=['\"](.+?)['\"]\\}#i", $tpl2->copy_template, $matches ) ) {
						$tpl2->set( $matches[0], clear_content($related['short_story'], $matches[1]) );
					} else $tpl2->set( '{text}', $related['short_story'] );

					if ( preg_match( "#\\{title limit=['\"](.+?)['\"]\\}#i", $tpl2->copy_template, $matches ) ) {
						$tpl2->set( $matches[0], clear_content($related['title'], $matches[1]) );
					}

					if( count($xfields) ) {
						$xfieldsdata = xfieldsdataload( $related['xfields'] );
						
						foreach ( $xfields as $value ) {
							$preg_safe_name = preg_quote( $value[0], "'" );

							if( !isset($xfieldsdata[$value[0]]) ) $xfieldsdata[$value[0]] = '';
							
							$xfieldsdata[$value[0]] = stripslashes( $xfieldsdata[$value[0]] );
							
							if( $value[20] ) {
							  
							  $value[20] = explode( ',', $value[20] );
							  
							  if( $value[20][0] AND !in_array( $member_id['user_group'], $value[20] ) ) {
								$xfieldsdata[$value[0]] = "";
							  }
							  
							}
				
							if ( $value[3] == "yesorno" ) {
								
								if( intval($xfieldsdata[$value[0]]) ) {
									$xfgiven = true;
									$xfieldsdata[$value[0]] = $lang['xfield_xyes'];
								} else {
									$xfgiven = false;
									$xfieldsdata[$value[0]] = $lang['xfield_xno'];
								}
								
							} else {
								if($xfieldsdata[$value[0]] == "") $xfgiven = false; else $xfgiven = true;
							}
							
							if( !$xfgiven ) {
								$tpl2->copy_template = preg_replace( "'\\[xfgiven_{$preg_safe_name}\\](.*?)\\[/xfgiven_{$preg_safe_name}\\]'is", "", $tpl2->copy_template );
								$tpl2->copy_template = str_ireplace( "[xfnotgiven_{$value[0]}]", "", $tpl2->copy_template );
								$tpl2->copy_template = str_ireplace( "[/xfnotgiven_{$value[0]}]", "", $tpl2->copy_template );
							} else {
								$tpl2->copy_template = preg_replace( "'\\[xfnotgiven_{$preg_safe_name}\\](.*?)\\[/xfnotgiven_{$preg_safe_name}\\]'is", "", $tpl2->copy_template );
								$tpl2->copy_template = str_ireplace( "[xfgiven_{$value[0]}]", "", $tpl2->copy_template );
								$tpl2->copy_template = str_ireplace( "[/xfgiven_{$value[0]}]", "", $tpl2->copy_template );
							}
							
							if(strpos( $tpl2->copy_template, "[ifxfvalue {$value[0]}" ) !== false ) {
								$tpl2->copy_template = preg_replace_callback ( "#\\[ifxfvalue(.+?)\\](.+?)\\[/ifxfvalue\\]#is", "check_xfvalue", $tpl2->copy_template );
							}

							if ( $value[6] AND !empty( $xfieldsdata[$value[0]] ) ) {
								$temp_array = explode( ",", $xfieldsdata[$value[0]] );
								$value3 = array();
				
								foreach ($temp_array as $value2) {
				
									$value2 = trim($value2);
									
									if($value2) {
										
										$value4 = str_replace(array("&#039;", "&quot;", "&amp;", "&#123;", "&#91;", "&#58;", "/"), array("'", '"', "&", "{", "[", ":", "&frasl;"), $value2);

										if( $value[3] == "datetime" ) {
										
											$value2 = strtotime( $value4 );
										
											if( !trim($value[24]) ) $value[24] = $config['timestamp_active'];
											
											if( $value[25] ) {
												
												if($value[26]) $value2 = langdate($value[24], $value2);
												else $value2 = langdate($value[24], $value2, false, $customlangdate);
												
											} else $value2 = date( $value[24], $value2 );
			
										}

										if( $config['allow_alt_url'] ) $value3[] = "<a href=\"" . $config['http_home_url'] . "xfsearch/" .$value[0]."/". rawurlencode( $value4 ) . "/\">" . $value2 . "</a>";
										else $value3[] = "<a href=\"$PHP_SELF?do=xfsearch&amp;xfname=".$value[0]."&amp;xf=" . rawurlencode( $value4 ) . "\">" . $value2 . "</a>";
									}

								}
								
								if( empty($value[21]) ) $value[21] = ", ";
								
								$xfieldsdata[$value[0]] = implode($value[21], $value3);
				
								unset($temp_array);
								unset($value2);
								unset($value3);
								unset($value4);
				
							} elseif ( $value[3] == "datetime" AND !empty($xfieldsdata[$value[0]]) ) {
			
								$xfieldsdata[$value[0]] = strtotime( str_replace("&#58;", ":", $xfieldsdata[$value[0]]) );
			
								if( !trim($value[24]) ) $value[24] = $config['timestamp_active'];
			
								if( $value[25] ) {
									
									if($value[26]) $xfieldsdata[$value[0]] = langdate($value[24], $xfieldsdata[$value[0]]);
									else $xfieldsdata[$value[0]] = langdate($value[24], $xfieldsdata[$value[0]], false, $customlangdate);
												
								} else $xfieldsdata[$value[0]] = date( $value[24], $xfieldsdata[$value[0]] );
								
								
							}
							
							if($value[3] == "image" AND isset($xfieldsdata[$value[0]]) AND $xfieldsdata[$value[0]] ) {
								
								$temp_array = explode('|', $xfieldsdata[$value[0]]);
									
								if (count($temp_array) == 1 OR count($temp_array) == 5 ){
										
									$temp_alt = '';
									$temp_value = implode('|', $temp_array );
										
								} else {
										
									$temp_alt = $temp_array[0];
									$temp_alt = str_replace( "&amp;#44;", "&#44;", $temp_alt );
									
									unset($temp_array[0]);
									$temp_value =  implode('|', $temp_array );
										
								}
			
								$path_parts = get_uploaded_image_info($temp_value);
								
								if( $value[12] AND $path_parts->thumb ) {
									
									$tpl2->set( "[xfvalue_thumb_url_{$value[0]}]", $path_parts->thumb);
									$xfieldsdata[$value[0]] = "<a href=\"{$path_parts->url}\" class=\"highslide\" target=\"_blank\"><img class=\"xfieldimage {$value[0]}\" src=\"{$path_parts->thumb}\" alt=\"{$temp_alt}\"></a>";
			
								} else {
									
									$tpl2->set( "[xfvalue_thumb_url_{$value[0]}]", $path_parts->url);
									$xfieldsdata[$value[0]] = "<img class=\"xfieldimage {$value[0]}\" src=\"{$path_parts->url}\" alt=\"{$temp_alt}\">";
			
								}
								
								$tpl2->set( "[xfvalue_image_url_{$value[0]}]", $path_parts->url);
								$tpl2->set( "[xfvalue_image_description_{$value[0]}]", $temp_alt);
			
							}
							
							if($value[3] == "image" AND !$xfieldsdata[$value[0]]) {
			
								$tpl2->set( "[xfvalue_thumb_url_{$value[0]}]", "");
								$tpl2->set( "[xfvalue_image_url_{$value[0]}]", "");
								$tpl2->set( "[xfvalue_image_description_{$value[0]}]", "");
								
							}
							
							if($value[3] == "imagegalery" AND $xfieldsdata[$value[0]] AND stripos ( $tpl2->copy_template, "[xfvalue_{$value[0]}" ) !== false) {
								
								$fieldvalue_arr = explode(',', $xfieldsdata[$value[0]]);
								$gallery_image = array();
								$gallery_single_image = array();
								$xf_image_count = 0;
								
								foreach ($fieldvalue_arr as $temp_value) {
									
									$xf_image_count ++;
									
									$temp_value = trim($temp_value);
							
									if($temp_value == "") continue;
									
									$temp_array = explode('|', $temp_value);
									
									if (count($temp_array) == 1 OR count($temp_array) == 5 ){
											
										$temp_alt = '';
										$temp_value = implode('|', $temp_array );
											
									} else {
											
										$temp_alt = $temp_array[0];
										$temp_alt = str_replace( "&amp;#44;", "&#44;", $temp_alt );
										
										unset($temp_array[0]);
										$temp_value =  implode('|', $temp_array );
											
									}
				
									$path_parts = get_uploaded_image_info($temp_value);
								
									if($value[12] AND $path_parts->thumb) {
										
										$gallery_image[] = "<li><a href=\"{$path_parts->url}\" onclick=\"return hs.expand(this, { slideshowGroup: 'xf_{$row['id']}_{$value[0]}' })\" target=\"_blank\"><img src=\"{$path_parts->thumb}\" alt=\"{$temp_alt}\"></a></li>";
										$gallery_single_image['[xfvalue_'.$value[0].' image="'.$xf_image_count.'"]'] = "<a href=\"{$path_parts->url}\" class=\"highslide\" target=\"_blank\"><img class=\"xfieldimage {$value[0]}\" src=\"{$path_parts->thumb}\" alt=\"{$temp_alt}\"></a>";
										
									} else {
										
										$gallery_image[] = "<li><img src=\"{$path_parts->url}\" alt=\"{$temp_alt}\"></li>";
										$gallery_single_image['[xfvalue_'.$value[0].' image="'.$xf_image_count.'"]'] = "<img class=\"xfieldimage {$value[0]}\" src=\"{$path_parts->url}\" alt=\"{$temp_alt}\">";
										
									}
									
										$gallery_single_image['[xfvalue_'.$value[0].' image-description="'.$xf_image_count.'"]'] = $temp_alt;
										$gallery_single_image['[xfvalue_'.$value[0].' image-thumb-url="'.$xf_image_count.'"]'] = $path_parts->thumb;
										$gallery_single_image['[xfvalue_'.$value[0].' image-url="'.$xf_image_count.'"]'] = $path_parts->url;
								
								}
								
								if(count($gallery_single_image) ) {
									foreach($gallery_single_image as $temp_key => $temp_value) $tpl2->set( $temp_key, $temp_value);
								}
								
								$xfieldsdata[$value[0]] = "<ul class=\"xfieldimagegallery {$value[0]}\">".implode($gallery_image)."</ul>";
								
							}
							
							if ($config['image_lazy'] AND $view_template != "print" ) $xfieldsdata[$value[0]] = preg_replace_callback ( "#<(img|iframe)(.+?)>#i", "enable_lazyload", $xfieldsdata[$value[0]] );

							$tpl2->set( "[xfvalue_{$value[0]}]", $xfieldsdata[$value[0]] );
			
							if ( preg_match( "#\\[xfvalue_{$preg_safe_name} limit=['\"](.+?)['\"]\\]#i", $tpl2->copy_template, $matches ) ) {
								$tpl2->set( $matches[0], clear_content($xfieldsdata[$value[0]], $matches[1]) );
							}

						}
					}

					$tpl2->compile( 'content' );
				
				}

				$related_buffer = $tpl2->result['content'];
				unset($tpl2);
				$db->free();

				if ( $first_show ) {
					if ( count($related_ids) ) {
						$related_ids = implode(",",$related_ids);
						$db->query( "UPDATE " . PREFIX . "_post_extras SET related_ids='{$related_ids}' WHERE news_id='{$row['id']}'" );
					}
				}

				if ( $allow_full_cache ) create_cache( "related", $related_buffer, $row['id'].$config['skin'], true );
			}