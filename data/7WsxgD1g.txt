	.intel_syntax noprefix
	.section	.rodata
.LC3:
	.string	"w"
.LC5:
	.string	"%lf\n"
.LC7:
	.string	"Program execution time: %lf\n"
	.text
	.globl	main
	.type	main, @function
main:
	push	rbp
	mov	rbp, rsp
	sub	rsp, 64
	mov	rbx, rsi
	mov	rax, rbx
	add	rax, 8
	mov	rax, QWORD PTR [rax]
	lea	rsi, .LC3[rip]          # arg2 - "w"
	mov	rdi, rax                # arg1 - argv[1]
	call	fopen@PLT
	mov	rbx, rax
	call	clock@PLT
	mov	r12, rax
	movsd	xmm1, QWORD PTR .LC4[rip]
	movsd	xmm0, QWORD PTR .LC0[rip]
	movapd	xmm2, xmm1                # arg1 - 0.000001
	movapd	xmm1, xmm0                # arg1 - 1
	pxor	xmm0, xmm0                # arg1 - 0
	call	solve
	movq	rax, xmm0
	mov	r13, rax
	call	clock@PLT
	mov	r14, rax
	mov	rdx, r13 # arg3 - res
	mov	rax, rbx
	movq	xmm0, rdx
	lea	rsi, .LC5[rip]          # arg2 - "%lf\n"
	mov	rdi, rax                # arg1 - output
	mov	eax, 1
	call	fprintf@PLT
	mov	rax, r14
	sub	rax, r12
	cvtsi2sd	xmm0, rax
	movsd	xmm1, QWORD PTR .LC6[rip]
	divsd	xmm0, xmm1
	movq	r15, xmm0
	mov	rax, r15
	movq	xmm0, rax                 # arg2 - time_spent
	lea	rdi, .LC7[rip]            # arg1 - "Program execution time: %lf\n"
	mov	eax, 1
	call	printf@PLT
	mov	rax, rbx
	mov	rdi, rax    # arg1 - output
	call	fclose@PLT
	mov	eax, 0
	leave
	ret
	.size	main, .-main
	.section	.rodata
	.align 8
.LC0:
	.long	0
	.long	1072693248
	.align 8
.LC1:
	.long	0
	.long	1073741824
	.align 8
.LC4:
	.long	2696277389
	.long	1051772663
	.align 8
.LC6:
	.long	0
	.long	1093567616
