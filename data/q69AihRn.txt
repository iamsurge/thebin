ListType = {
  WHITELIST = 0,
  BLACKLIST = 1
}

Direction = {
  NORTH = 0,
  EAST = 1,
  SOUTH = 2,
  WEST = 3
}

function Contains(value, list)
  for _, v in list do
    if v == value then
      return true
    end
  end

  return false
end

function ZipCoords(x, y, z)
  local c = {}

  c["x"] = x ; c["y"] = y ; c["z"] = z
  return c
end

function CheckFuel()
  return turtle.getFuelLevel() < 20
end

function FindDistance(startCoords, endCoords)
  local x = math.abs(startCoords["x"] - endCoords["x"])
  local y = math.abs(startCoords["y"] - endCoords["y"])
  local z = math.abs(startCoords["z"] - endCoords["z"])
  return ZipCoords(x, y, z)
end

function MakeList(listType, blocks)
  local l = {}

  l["type"] = listType
  l["list"] = blocks
  return l
end

function CheckList(list, block)
  if list == nil then
    return true
  end

  local typeOfList = list["type"]
  local containsBlock = Contains(block, list["list"])

  if (typeOfList == ListType.WHITELIST and containsBlock) or
    (typeOfList == ListType.BLACKLIST and not containsBlock) then
    return true
  end
end

function FindDirection(coords)
  Move:forward(1)
---@diagnostic disable-next-line: undefined-global
  local x, y, z = gps.locate()
  local endCoords = ZipCoords(x, y, z)

  local distance = FindDistance(coords, endCoords)
  if distance["x"] > 0 then
    return Direction.EAST
  elseif distance["x"] < 0 then
    return Direction.WEST
  elseif distance["z"] > 0 then
    return Direction.NORTH
  elseif distance["z"] < 0 then
    return Direction.SOUTH
  end
end

function CheckInventoryFull()
  for i = 1, 16 do
    turtle.select(i)
    if turtle.getItemCount() == 0 then
      return false
    end
  end

  return true
end
