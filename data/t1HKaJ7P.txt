torchCounter = 0
function testTorch()
  if not torchLayer then return end
  torchCounter= torchCounter + 1
  if torchCounter >= torchDistance then
    torchCounter = 0
    turtle.turnRight()
    turtle.turnRight()
    for slot=1,16,1 do
      data = turtle.getItemDetail(slot)
      if data then
       if data.name == "minecraft:torch" then
         turtle.select(slot)
         turtle.place()
         turtle.select(1)
         break
       end  
      end
    end
    turtle.turnRight()
    turtle.turnRight()
  end
end

------------------------------------------------------


function placeChest()

  local found = false
  for i=1,16,1 do
    local data = turtle.getItemDetail(i)
    if data then
      if data.name == "minecraft:chest" then
        found = true
        turtle.select(i)
        turtle.turnRight()
        turtle.turnRight()
        turtle.dig()
        turtle.place()
      end
    end
  end

  if not found then
    error("Keine Kisten mehr!")
  end

  for i=1,16,1 do
    local data = turtle.getItemDetail(i)
    if data then
      if data.name ~= "minecraft:chest" and data.name ~= "minecraft:torch" then
        turtle.select(i)
        turtle.drop()
      end
    end
  end

  turtle.turnRight()
  turtle.turnRight()
end

------------------------------------------------------

function checkChest()
  local freeSpaces = 0
  for i=1,16,1 do
    local data = turtle.getItemDetail(i)
    if data then
    else
      freeSpaces = freeSpaces + 1
    end
  end

  if freeSpaces < 3  then
    placeChest()
  end
end

------------------------------------------------------

function voidCobble()
  for i=1,16,1 do
    local data = turtle.getItemDetail(i)
    if data then
      if data.name == "minecraft:cobblestone" then
        turtle.select(i)
        turtle.drop()
      end
    end
  end
end

------------------------------------------------------

function digForward(steps)
  for i=1,steps,1 do
    while not turtle.forward() do
      turtle.dig()
    end

    checkChest()
    --testTorch()
  end
end

------------------------------------------------------

function digUp(steps)
  for i=1,steps,1 do
    while not turtle.up() do
      turtle.digUp()
    end
  end
end

------------------------------------------------------

function digDown(steps)
  for i=1,steps,1 do
    while not turtle.down() do
      turtle.digDown()
    end
  end

  voidCobble()

end

------------------------------------------------------

write("Gesamthoehe eingeben: ")
h = tonumber(read())
write("Laenge eingeben: ")
l = tonumber(read())
write("Breite eingeben: ")
b = tonumber(read())
write("Deckenabstand eingeben: ")
hdecke = tonumber(read())
write("Fackelabstand eingeben: ")
torchDistance = tonumber(read())

write("Nach der ersten Linie nach rechts oder nach links drehen? (L/R)")
dirIn = read()
firstDir = 0 -- first turn right
if dirIn == "L" then
  firstDir = 1 -- first turn left
end


------------------------------------------------------

function excavate()
  dir = firstDir -- 0=right turn next, 1=leftturnnext
  torchLayer = false
  for hx = 1,h,1 do
    if math.fmod(hx, hdecke + 1) == hdecke then
      torchLayer = true
    else
      torchLayer = false
    end

    for bx = 1,b,1 do
      digForward(l-1)
      --[[
      write(b .. " " .. bx .. " ")
      if b - bx == 0 then
        write("y")
      else
        write("n")
      end
      write("\n")
      ]]--
      if b - bx == 0 then break end
      if dir == 0 then
        turtle.turnRight()
      else
        turtle.turnLeft()
      end
      digForward(1)
      if dir == 0 then
        turtle.turnRight()
        dir = 1
      else
        turtle.turnLeft()
        dir = 0
      end
    end

    if math.fmod(b,2) == 0 then
      turtle.turnRight()
      turtle.turnRight()
      digDown(1)
      
      if math.fmod(hx, 2) == 1 then
        if firstDir == 0 then
          dir = 1
        else
          dir = 0
        end
      else
        dir = firstDir
      end
    else
      turtle.turnRight()
      turtle.turnRight()
      digDown(1)



      dir = firstDir
    end

    if torchLayer == true then
      digDown(1)
      hx = hx + 1
      torchLayer = false
    end
  end
end

------------------------------------------------------

write("Kisten in Slot 1?")
turtle.select(1)
data = turtle.getItemDetail()
ok = false

if data then
  if data.name == "minecraft:chest" then
    ok = true
  end
end

if ok then
  write("OK!")
  excavate()
else
  write("Keine Kisten gefunden...")
end