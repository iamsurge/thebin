void OneDocumentExcluded() {
    const std::vector<int> ratings1 = { 1, 2, 3 , 4 , 5 };
    const std::vector<int> ratings2 = { -1, -2, 30 , -3, 44 , 5 };
    const std::vector<int> ratings3 = { 12, -20, 80 , 0, 8, 0, 0, 9, 67 };
    std::string stop_words = "белый кот и модный ошейник";
    SearchServer search_server(stop_words);

    search_server.AddDocument(0, "белый кот и модный ошейник", DocumentStatus::ACTUAL, ratings1);
    search_server.AddDocument(1, "пушистый кот пушистый хвост", DocumentStatus::ACTUAL, ratings2);
    search_server.AddDocument(2, "ухоженный пёс выразительные глаза", DocumentStatus::ACTUAL, ratings3);

    const SearchServer const_search_server = search_server;

    const std::string query = "пушистый и ухоженный кот";
    for (const Document& document : const_search_server.FindTopDocuments(query, DocumentStatus::ACTUAL)) {
        std::cout << "{ "
            << "document_id = " << document.id << ", "
            << "relevance = " << document.relevance << ", "
            << "rating = " << document.rating
            << " }" << std::endl;
    }
}
int main() {
    OneDocumentExcluded();
    return 0;
}