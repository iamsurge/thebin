notes = {"fa#","fa","mi","re#","re","do#","do","si","la#","la","sol#","sol"}
function index_note(note)
    for i,v in ipairs(notes) do
        if v == note then
            return i
        end
    end
    return nil
end

function play_note(side, note)
    Redstone.SetAnalogOutput(side, index_note(note))
end

function stop_note(side)
    Redstone.SetOutput(side, false)
end

function read_song(name)
    h = fs.open(name, "r")
	text = h.readAll()
	h.close()
    notes_list = {}
	for single_note in text:gmatch("%w+") do table.insert(notes_list, single_note) end
	return notes_list
end

args = {...}
list_notes = read_song(args[1])
for i,v in ipairs(list_notes) do
    octaves = {}
    for octave in v:gmatch("-") do table.insert(octaves, octave) end
    if octaves[1]=="p" do stop_note("left")
    elseif octaves[1]!="" do play_note("left", octaves[1]) end
    if octaves[2]=="p" do stop_note("back")
    elseif octaves[2]!="" do play_note("back", octaves[2]) end
    if octaves[3]=="p" do stop_note("right")
    elseif octaves[3]!="" do play_note("right", octaves[3]) end
end
stop_note("left")
stop_note("right")
stop_note("back")
    
   
