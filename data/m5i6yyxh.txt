modem = peripheral.wrap("right")
chest = peripheral.wrap("front")
gchan = 42000
lchan = 42001

modem.open(gchan)
function search(item)
    local length = chest
    length = length.list()
    length = #length
    print("search " .. item)
    print(length)
    local active = {}
    local inactive = {}
    local isActive = "false"
    local isInactive = "false"
    for i = 1, length, 1 do
        local citem = chest.getItem(i)
        actS = citem.getMetadata().individual.genome.active.species.displayName
        inaS = citem.getMetadata().individual.genome.inactive.species.displayName
        print(i)
        print(actS)
        print(inaS)
        table.insert(active, actS)
        table.insert(inactive, inaS)
    end
    for i = 1, #active, 1 do
        local dispLength = #active[i]
        item2 = item.sub(1, dispLength)
        if active[i] == item2 then
            isActive = "true"
        end
        item3 = item.sub(#item2, #item)
        if inactive[i] == item[#active[i], #item] then
            isInactive == "true"
        end
    end
    print("is Active: " .. isActive)
    print("is Inactive: " .. isInactive)
end

function get(item)

end

while true do
    event, side, frequency, replyFrequency, message, dist = os.pullEvent("modem_message")
    --print(message)
    pre = string.sub(message, 1, 4)
    post = string.sub(message, 5, #message)
    --print(pre)
    --print(post)
    if pre == "ping" then
        print("recieved ping")
        search(post)
    end
    if pre == "suck" then
        print("sucking")
    end
end

