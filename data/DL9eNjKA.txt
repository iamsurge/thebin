#include <iostream>
#include <cmath>
#include <vector>
#include <queue>
#include <algorithm>
#include <string>
#include <stack>
#include <set>
#include <map>
#define pii pair <int, int>
#define pb(x) push_back(x)
using namespace std;
using ll = long long;
using ld = long double;
using db = double;
void cv(vector <int> &v) {
    for (auto x : v) cout << x << ' ';
    cout << "\n";
}

void cvl(vector <ll> &v) {
    for (auto x : v) cout << x << ' ';
    cout << "\n";
}


void cvv(vector <vector <int> > &v) {
    for (auto x : v) cv(x);
    cout << "\n";
}

void cvb(vector <bool> v) {
    for (bool x : v) cout << x << ' ';
    cout << "\n";
}

void cvs(vector <string>  v) {
    for (auto a : v) {
        cout << a << "\n";
    }
}

void cvp(vector <pii> a) {
    for (auto p : a) {
        cout << p.first << ' ' << p.second << "\n";
    }
    cout << "\n";
}

bool sh = 0;


int main() {
    ios::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
    ll n, m; cin >> n  >> m;
    vector <ll> a(n), cnt(m, 0);
    for (int i = 0; i < n; ++i) {
        cin >> a[i];
        a[i] %= m;
    }
    ll s = 0, ans = 0;
    if (sh) {
        cout << "n m = " << n << ' ' << m << "\n";
        cout << "a\n";
        cvl(a);
        cout << "cnt\n";
        cvl(cnt);
        cout << "\n\n";
    }
    for (int i = 0; i < n; ++i) {
        if (sh) cout << "i = " << i << "\n";
        s += a[i];
        s %= m;
        if (sh) cout << "s = " << s << "\n";
        ans += cnt[s];
        cnt[s]++;
        if (sh) {
            cout << "ans = " << ans << "\n";
            cout << "cnt\n";
            cvl(cnt);
            cout << "\n\n";
        }

    }
    ans += cnt[0];
    cout << ans;
}
