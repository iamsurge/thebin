local rs = game.ReplicatedStorage:WaitForChild("TeamDeathmatchReplicatedStorage")
local config = require(rs:WaitForChild("CONFIGURATION"))
local status = rs:WaitForChild("STATUS")

local statusText = script.Parent:WaitForChild("StatusText")
local teamsFrame = script.Parent:WaitForChild("TeamsFrame")
teamsFrame.Visible = false

local client = game.Players.LocalPlayer


function updateStatus()
	if not client:FindFirstChild("FAILED TO LOAD DATA") then
		statusText.Text = status.Value
	else
		statusText.Text = "Your data did not load successfully. Rejoin to fix this issue."
	end
end

updateStatus()
status:GetPropertyChangedSignal("Value"):Connect(updateStatus)


rs.ChildAdded:Connect(function(child)
	
	if child.Name == "TEAM KILLS" then
		local team1Kills = child:WaitForChild("TEAM 1")
		local team2Kills = child:WaitForChild("TEAM 2")
		
		local plrTeam = client.Team
		teamsFrame.Team1Frame.BackgroundColor3 = plrTeam.TeamColor.Color
		
		if plrTeam == config.Team1 then
			teamsFrame.Team2Frame.BackgroundColor3 = config.Team2.TeamColor.Color
			
			teamsFrame.Team1Frame.Kills.Text = team1Kills.Value
			teamsFrame.Team2Frame.Kills.Text = team2Kills.Value
			
		elseif plrTeam == config.Team2 then
			teamsFrame.Team2Frame.BackgroundColor3 = config.Team1.TeamColor.Color
			
			teamsFrame.Team1Frame.Kills.Text = team2Kills.Value
			teamsFrame.Team2Frame.Kills.Text = team1Kills.Value
		end
		
		team1Kills:GetPropertyChangedSignal("Value"):Connect(function()
			if plrTeam == config.Team1 then
				teamsFrame.Team1Frame.Kills.Text = team1Kills.Value
			else
				teamsFrame.Team2Frame.Kills.Text = team1Kills.Value
			end
		end)
		team2Kills:GetPropertyChangedSignal("Value"):Connect(function()
			if plrTeam == config.Team2 then
				teamsFrame.Team1Frame.Kills.Text = team2Kills.Value
			else
				teamsFrame.Team2Frame.Kills.Text = team2Kills.Value
			end
		end)
		
		teamsFrame.Visible = true	
		
		child.Destroying:Connect(function()
			teamsFrame.Visible = false
		end)
	end
end)