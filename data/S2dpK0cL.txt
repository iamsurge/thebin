--[[
    Made by Celastia for blox cards
    v1.0
    
    Update log
    v1.0:
    - released
]]

--[[
    To do:
    A way to exit anim config
    Animation component config
    Config to script source conversation
    Bug testing and optimization
]]

local history = game:GetService("ChangeHistoryService")
local selected = game:GetService("Selection")
local debris = game:GetService("Debris")

local toolbar = plugin:CreateToolbar("BC anim helper")
local createAnim = toolbar:CreateButton("Create Card Animation", "Rig a card with animation")
createAnim.ClickableWhenViewportHidden = true
local produceAnimModule = toolbar:CreateButton("Create Animation Script", "Turn your current animation configs into a working script")
produceAnimModule.ClickableWhenViewportHidden = true
local debounce = true

local this = script.Parent
local pluginGui = this.PluginGui

local animTarget = nil
local animConfig = {}

local uiobjects = {
	["AnimationComponent"] = {
		["Class"] = "TextButton",
		["Style"] = Enum.ButtonStyle.RobloxRoundDefaultButton,
		["FontFace"] = Enum.Font.SourceSansBold,
		["TextScaled"] = true,
		["TextColor3"] = Color3.new(0, 0, 0),
		["TextStrokeColor3"] = Color3.new(1, 1, 1),
		["TextStrokeTransparency"] = .75,
		["TextTruncate"] = Enum.TextTruncate.AtEnd,
		["Special"] = {
			["constraintFrameSize"] = "self",
		},
	},
}
local functions = {
	constraintFrameSize = function(obj)
		obj.Size = UDim2.new(1, -(pluginGui.AnimSettings.ScrollBarThickness), 0, (pluginGui.AnimSettings.AbsoluteSize.Y / 10 * 1.5))
	end,
}

local function createGuiElement(class)
	local self = uiobjects[tostring(class)]
	local newElement = Instance.new(self.Class)
	for i,v in pairs(self) do
		if i == "Special" then
			for a,b in pairs(v) do
				local info = {}
				if typeof(b) == "table" then
					for c,d in pairs(b) do
						if d == "self" then
							table.insert(info, newElement)
						else
							table.insert(info, d)
						end
					end
				elseif b == "self" then
					info = newElement
				else
					info = b
				end
				functions[a](info)
			end
		elseif i ~= "Class" then
			class[i] = v
		end
	end
	return newElement
end

local function getSelection()
	local sel = selected:Get()
	return sel[1], #sel, sel -- first selected, number of selected, all selected
end

local function warning(msg, rgb, rgb2)
	for i,v in pairs(pluginGui:GetChildren()) do
		if v.Name == "NewWarning" then
			v:Destroy()
		end
	end
	local newWarn = pluginGui.Warning:Clone()
	debris:AddItem(newWarn, 6)
	newWarn.Name = "NewWarning"
	newWarn.Text = tostring(msg)
	if rgb then
		newWarn.TextColor3 = rgb
		if rgb2 then
			newWarn.TextStrokeColor3 = rgb2
		end
	end
	newWarn.Visible = true
end

local function debounce()
	debounce = false
	wait(1)
	debounce = true
end

-- initialization
local widget = plugin:CreateDockWidgetPluginGui("BCAnim", DockWidgetPluginGuiInfo.new(Enum.InitialDockState.Right, true, false, 200, 300))
widget.Title = "Blox Cards Animation Helper"
pluginGui.Parent = widget

-- main
createAnim.Click:Connect(function()
	if not debounce then
		warn("[BCAnim]: Debounce is not ready!")
		return
	end
	local sel, selNum = getSelection()
	if selNum < 1 then
		warning("You must select the card you want to animate!", Color3.fromRGB(248, 0, 0))
		return
	elseif selNum > 1 then
		warning("You can only select one card at a time!", Color3.fromRGB(248, 0, 0))
		return
	end
	if sel.ClassName ~= "ImageLabel" then
		warning("You did not select a valid art to animate!", Color3.fromRGB(248, 0, 0))
		return
	end
	
	-- valid art confirmed
	coroutine.wrap(debounce)
	animTarget, animConfig = sel, {}
	for i,v in pairs(pluginGui.AnimSettings) do
		if v:IsA("TextButton") then
			v:Destroy()
		end
	end
	
	local animParts = {}
	for i,v in pairs(sel:GetChildren()) do
		if v:IsA("ImageLabel") then
			animParts[v.Name] = v
			local newButton = createGuiElement("AnimationComponent")
			newButton.Name = v.Name
			newButton.Parent = pluginGui.AnimSettings
			newButton.MouseButton1Click:Connect(function()
				-- bring up config menu for that component
				
			end)
		end
	end
	pluginGui.AnimSettings.Visible = true
end)

produceAnimModule.Click:Connect(function()
	-- WIP
end)