function sieveOfAtkin(limit) {
  const primes = [];

  // Initialize the sieve array with all elements set to false
  const sieve = new Array(limit + 1).fill(false);

  // Mark the multiples of 3 and 5 as sieved
  for (let i = 1; i * i <= limit; i++) {
    for (let j = 1; j * j <= limit; j++) {
      const n = 4 * i * i + j * j;
      if (n <= limit && (n % 12 === 1 || n % 12 === 5)) {
        sieve[n] = !sieve[n];
      }

      n = 3 * i * i + j * j;
      if (n <= limit && n % 12 === 7) {
        sieve[n] = !sieve[n];
      }

      n = 3 * i * i - j * j;
      if (i > j && n <= limit && n % 12 === 11) {
        sieve[n] = !sieve[n];
      }
    }
  }

  // Mark all primes greater than 3 as sieved
  for (let i = 5; i * i <= limit; i++) {
    if (sieve[i]) {
      for (let j = i * i; j <= limit; j += i * i) {
        sieve[j] = false;
      }
    }
  }

  // Add all of the sieved primes to the list
  if (limit >= 2) primes.push(2);
  if (limit >= 3) primes.push(3);
  for (let i = 5; i <= limit; i++) {
    if (sieve[i]) {
      primes.push(i);
    }
  }

  return primes;
}

console.log(sieveOfAtkin(100));  // [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]
