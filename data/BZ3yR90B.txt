#include <iostream>
using namespace std;

class Bankomat
{
public:
    Bankomat() :Id(0), currentMoney(0) {}
    void setId(int i);
    int getId();
    int getMoneyCount();
    void depositMoney(int i);
    void withdrawMoney(int i);
    friend istream& operator>>(istream&, Bankomat&);
private:
    int Id;
    int currentMoney;
    enum { max = 1000, min = 10 };
};

void Bankomat::withdrawMoney(int i)
{
    if ((i < min) || (i > max)) {
        return;
    }
    if ((currentMoney - i) < 0) {
    }
    currentMoney -= i;
}

void Bankomat::depositMoney(int i) {
    if ((i < min) || (i > max)) {
        return;
    }
    if ((currentMoney + i) > max) {
        return;
    }
    currentMoney = i;
}

void Bankomat::setId(int i)
{
    Id = i;
}

int Bankomat::getId()
{
    return Id;
}

int Bankomat::getMoneyCount()
{
    return currentMoney;
}

ostream& operator << (ostream& os, Bankomat& bank)
{
    return os << bank.getMoneyCount();
}

istream& operator>>(istream& in, Bankomat& bank)
{
    in >> bank.Id;
    return in;
}


int main()
{
    Bankomat bank;
    cout << "Enter id of ATM: ";
    cin >> bank;
    int i = 0;
    cin >> i;
    bank.depositMoney(i);
    cout << bank << endl;
    bank.withdrawMoney(100);
    cout << bank << endl;
    return 0;
}