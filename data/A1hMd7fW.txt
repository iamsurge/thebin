#include <unordered_map>
#include <vector>

class Solution {
public:
	std::vector<int> twoSum(std::vector<int>& nums, int target) {
		std::unordered_map<int, std::vector<int>> map;
		for (int i = 0; i < nums.size(); ++i) {
				map[nums[i]].push_back(i + 1);
		}
		for (int i = 0; i < nums.size(); ++i) {
			if (map[target - nums[i]].size() > 0) {
				if (target - nums[i] == nums[i] && map[nums[i]].size() >= 2) {
					return {map[nums[i]][0]-1, map[nums[i]][1]-1};
				}
                else if(target - nums[i] != nums[i]){
				    return {map[nums[i]][0]-1, map[target - nums[i]][0]-1};
                }
			}
		}
		return {0, 100};
	}
};