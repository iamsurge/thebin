-- This is for CC: Tweaked
local d = 0
local width, depth, height = 0, 0, 0

if (#arg == 3)  then
    width = tonumber(arg[1])
    depth = tonumber(arg[2])
    height = tonumber(arg[3])
else
    print('Size is empty or malformed.  Halting...')
end

function forward()
    while turtle.detect() do
        -- while loop cause gravel
        turtle.dig()
    end
    turtle.forward()
end

function searchInv(name)
    for slot = 1, 16, 1 do
        if (turtle.getItemDetail(slot, false) ~= nil) and (turtle.getItemDetail(slot, false)["name"] == ("minecraft:" + name)) then
            turtle.select(slot)
            return true
        end
        return false
    end
end
            

function refuel()
    if not turtle.getFuelLevel() > 50 then
        if searchInv("coal") then
            turtle.refuel(1)
            return true
        else
            print("Turtle is out of fuel.  Halting...")
            return false
        end
    end
end

function inventory()
    for slot = 1, 16, 1 do
        if turtle.getItemDetail(slot, false) then
            return
        end
    end
    -- If turtle has chests, store items.  Else, drop
    searchInv("chest")
    turtle.turnRight()
    turtle.turnRight()
    turtle.place()
    for slot = 1, 16, 1 do
        if not (turtle.getItemDetail()["name"] == "minecraft:coal" or turtle.getItemDetail()["name"] == "minecraft:chest") then
            turtle.drop()
        end
    end
    turtle.turnRight()
    turtle.turnRight()
end

-- x, y, and z in this function dont represent in world xyz coordinates
-- its just for keeping track of how far along the turtle is
function start()
    for y = 1, height, 1 do
        for z = 1, width, 1 do
            for x = 2, depth, 1 do
            	forward()
            end
            refuel()
            inventory()
            if d == 0 then
                turtle.turnRight()
                forward()
                turtle.turnRight()
                d = 1
            elseif d == 1 then
                turtle.turnLeft()
                foward()
                turtle.turnLeft()
                d = 0
            end
        end
        turtle.turnRight()
        turtle.turnRight()
        turtle.digUp()
        turtle.up()
    end
end
                

if (#args == 3) then start() end