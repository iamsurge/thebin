interface ICommand
{
    public void Execute();
    public void Undo();
}

// конкретная команда
class ConcreteCommand : ICommand
{
    private readonly Receiver _receiver;

    public ConcreteCommand(Receiver receiver) => 
        _receiver = receiver;

    public void Execute() => 
        _receiver.Operation();

    public void Undo()
    { }
}

// получатель команды
class Receiver
{
    public void Operation()
    { }
}

// инициатор команды
class Invoker
{
    private ICommand _command;

    public void SetCommand(ICommand command) => 
        _command = command;

    public void Run() => 
        _command.Execute();

    public void Cancel() => 
        _command.Undo();
}

class Client
{
    void Main()
    {
        Invoker invoker = new Invoker();
        Receiver receiver = new Receiver();
        ConcreteCommand command = new ConcreteCommand(receiver);
        invoker.SetCommand(command);
        invoker.Run();
    }
}