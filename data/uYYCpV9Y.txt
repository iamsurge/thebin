let container = document.getElementById('container');
if (!container) {
  container = document.createElement('div');
  container.id = 'container'; container.style="width:200px;height:100px;background-color:whitesmoke";
  document.body.insertBefore(container, document.body.firstChild);
}

container.addEventListener('dragover', function(event) {
  event.preventDefault();
  container.style.cursor = 'grabbing';
});

container.addEventListener('dragleave', function(event) {
  container.style.cursor = 'default';
});

container.addEventListener('drop', function(event) {
  event.preventDefault();
  container.style.cursor = 'default';
  let files = event.dataTransfer.files;  // this is a FileList object, not an array
  for (let i = 0; i < files.length; i++) {
    let file = files[i];console.log(file);
    let domains = [];
    //let regex = /[a-zA-Z0-9][a-zA-Z0-9-]{1,61}[a-zA-Z0-9](?:\.[a-zA-Z]{2,})+/g;
    let regex = /[a-z0-9_.-]+\.[a-z]+/gim;
    //let regex = /\b[a-z0-9_-]+(\.(com|co|org|or|gov|gv|ac))*\.[a-z]+\b(?=$|\t|,)/gim;  
    file.text().then(text => {
        console.log(text.length);

        
    /* let match; while (match = regex.exec(text)) {
      domains.push(match[0]);
    }*/
    let hostnames =[... new Set(text.match(regex))].sort();
    console.log(hostnames);
    let domains=[... new Set(hostnames.map(v=>v.match(/[a-z0-9_-]+(\.(com|co|org|or|gov|gv|ac))*\.[a-z]+$/i)[0]||false))];
    console.log(domains);
        
});  
      
      
    
    
  }
});
