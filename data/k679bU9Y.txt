import textwrap

alpha = {
    '0': 'zero',
    '1': 'jeden',
    '2': 'dwa',
    '3': 'trzy',
    '4': 'cztery',
    '5': 'pięć',
    '6': 'sześć',
    '7': 'siedem',
    '8': 'osiem',
    '9': 'dziewięć',
}

zeta = {
    '0': 'dziesięć',
    '1': 'jedenaście',
    '2': 'dwanaście',
    '3': 'trzynaście',
    '4': 'czternaście',
    '5': 'piętnaście',
    '6': 'szesnaście',
    '7': 'siedemnaście',
    '8': 'osiemnaście',
    '9': 'dziewiętnaście',
}

beta = {
    '0': '',
    '2': 'dwadzieścia',
    '3': 'trzydzieści',
    '4': 'czterdzieści',
    '5': 'pięćdziesiąt',
    '6': 'sześćdziesiąt',
    '7': 'siedemdziesiąt',
    '8': 'osiemdziesiąt',
    '9': 'dziewięćdziesiąt',
}

omega = {
    '0': '',
    '1': 'sto',
    '2': 'dwieście',
    '3': 'trzysta',
    '4': 'czterysta',
    '5': 'pięćset',
    '6': 'sześćset',
    '7': 'siedemset',
    '8': 'osiemset',
    '9': 'dziewięćset',
}

two_four = ['2', '3', '4']


def slownie(num):
    numbers = str(num)
    numbers = numbers[::-1]
    numbers = textwrap.wrap(numbers, 3)
    num = []
    for n in numbers:
        num.append(n[::-1])
    num.reverse()
    print(num)

    wynik = ''

    i = len(num)
    for tetra in num:
        if i == 3:

            # w wypadku 100 - 999
            if len(tetra) == 3:
                # w wypadku 100, 200, 300 etc.
                if tetra[1] == '0' and tetra[2] == '0':
                    wynik += omega[tetra[0]] + ' milionów '
                # w wypadku 001   <- w teorii niepotrzebne, ponieważ pogram nie przyjmuje argumentów zaczynających się od 0
                elif tetra[2] == '1':
                    wynik += ' milion '
                # w wypadku X10 - X19
                elif tetra[1] == '1':
                    wynik += omega[tetra[0]] + ' ' + zeta[
                        tetra[2]] + ' milionów '
                # w wypadku XX2 - XX4 (oprócz od X10 - X19)
                elif any(x in tetra[2] for x in two_four):
                    wynik += omega[tetra[0]] + ' ' + beta[
                        tetra[1]] + ' ' + alpha[tetra[2]] + ' miliony '
                else:
                    # w każdym innym wypadku
                    if tetra[2] != '0':
                        wynik += omega[tetra[0]] + ' ' + beta[
                            tetra[1]] + ' ' + alpha[tetra[2]] + ' milionów '
                    # w wypadku X20, X30, ... X90
                    else:
                        wynik += omega[tetra[0]] + ' ' + beta[
                            tetra[1]] + ' milionów '

            # w wypadku 10 - 99
            if len(tetra) == 2:
                # w wypadku 10 - 19
                if tetra[0] == '1':
                    wynik += zeta[tetra[1]] + ' milionów '
                # w wypadku X2 - X4 (oprócz od 10 - 19)
                elif any(x in tetra[1] for x in two_four):
                    wynik += beta[tetra[0]] + ' ' + alpha[
                        tetra[1]] + ' miliony '
                # w każdym innym wypadku
                else:
                    wynik += beta[tetra[0]] + ' ' + alpha[
                        tetra[1]] + ' milionów '

            # w wypadku 1 - 9
            if len(tetra) == 1:
                # w wypadku 1
                if tetra[0] == '1':
                    wynik += 'milion '
                # w wypadku 2 - 4
                elif any(x in tetra[0] for x in two_four):
                    wynik += alpha[tetra[0]] + ' miliony '
                # w każdym innym wypadku
                else:
                    wynik += alpha[tetra[0]] + ' milionów '

        if i == 2:
            # w wypadku 100 - 999
            if len(tetra) == 3:
                # w wypadku 100, 200, 300 etc.
                if tetra[1] == '0' and tetra[2] == '0':
                    wynik += omega[tetra[0]] + ' tysięcy '
                # w wypadku 001
                elif tetra[2] == '1':
                    wynik += ' tysiąc '
                # w wypadku X10 - X19
                elif tetra[1] == '1':
                    wynik += omega[tetra[0]] + ' ' + zeta[
                        tetra[2]] + ' tysięcy '
                # w wypadku XX2 - XX4 (oprócz od X10 - X19)
                elif any(x in tetra[2] for x in two_four):
                    wynik += omega[tetra[0]] + ' ' + beta[
                        tetra[1]] + ' ' + alpha[tetra[2]] + ' tysiące '
                else:
                    # w każdym innym wypadku
                    if tetra[2] != '0':
                        wynik += omega[tetra[0]] + ' ' + beta[
                            tetra[1]] + ' ' + alpha[tetra[2]] + ' tysięcy '
                    # w wypadku X20, X30, ... X90
                    else:
                        wynik += omega[tetra[0]] + ' ' + beta[
                            tetra[1]] + ' tysięcy '

            # w wypadku 10 - 99
            if len(tetra) == 2:
                # w wypadku 10 - 19
                if tetra[0] == '1':
                    wynik += zeta[tetra[1]] + ' tysięcy '
                # w wypadku X2 - X4 (oprócz od 10 - 19)
                elif any(x in tetra[1] for x in two_four):
                    wynik += beta[tetra[0]] + ' ' + alpha[
                        tetra[1]] + ' tysiące '
                # w każdym innym wypadku
                else:
                    wynik += beta[tetra[0]] + ' ' + alpha[
                        tetra[1]] + ' tysięcy '

            # w wypadku 1 - 9
            if len(tetra) == 1:
                # w wypadku 1
                if tetra[0] == '1':
                    wynik += 'tysiąc '
                # w wypadku 2 - 4
                elif any(x in tetra[0] for x in two_four):
                    wynik += alpha[tetra[0]] + ' tysiące '
                # w każdym innym wypadku
                else:
                    wynik += alpha[tetra[0]] + ' tysięcy '

        if i == 1:
            # w wypadku 100 - 999
            if len(tetra) == 3:
                # w wypadku 100, 200, 300 etc.
                if tetra[1] == '0' and tetra[2] == '0':
                    wynik += omega[tetra[0]]
                # w wypadku 001
                elif tetra[2] == '1':
                    wynik += ' jeden '
                # w wypadku X10 - X19
                elif tetra[1] == '1':
                    wynik += omega[tetra[0]] + ' ' + zeta[tetra[2]]
                # w wypadku XX2 - XX4 (oprócz od X10 - X19)
                elif any(x in tetra[2] for x in two_four):
                    wynik += omega[tetra[0]] + ' ' + beta[
                        tetra[1]] + ' ' + alpha[tetra[2]]
                else:
                    # w każdym innym wypadku
                    if tetra[2] != '0':
                        wynik += omega[tetra[0]] + ' ' + beta[
                            tetra[1]] + ' ' + alpha[tetra[2]]
                    # w wypadku X20, X30, ... X90
                    else:
                        wynik += omega[tetra[0]] + ' ' + beta[tetra[1]]

            # w wypadku 10 - 99
            if len(tetra) == 2:
                # w wypadku 10 - 19
                if tetra[0] == '1':
                    wynik += zeta[tetra[1]]
                # w wypadku X2 - X4 (oprócz od 10 - 19)
                elif any(x in tetra[1] for x in two_four):
                    wynik += beta[tetra[0]] + ' ' + alpha[tetra[1]]
                # w każdym innym wypadku
                else:
                    wynik += beta[tetra[0]] + ' ' + alpha[tetra[1]]

            # w wypadku 1 - 9
            if len(tetra) == 1:
                # w wypadku 1
                if tetra[0] == '1':
                    wynik += 'jeden '
                # w wypadku 2 - 4
                elif any(x in tetra[0] for x in two_four):
                    wynik += alpha[tetra[0]]
                # w każdym innym wypadku
                else:
                    wynik += alpha[tetra[0]]

        i -= 1

    wynik = ' '.join(wynik.split())
    print(wynik)

    # print(dict[tetra[0]] + ' ' + dict[tetra[1]] + ' ' + dict[tetra[2]])

    # if dict[tetra[1]] and dict[tetra[2]] == '0':
    # print(dict[tetra[0]]) + ' ' + print(koncowki['s'])


# print(dict[int(num[-dl])] + ' tysięcy ' + dict[int(num[-dl + 1:-dl + 4])])

# print(liczba[dl - 3:dl])
# print(liczba[dl - 6:dl - 3])

slownie(5527)
# pięć tysięcy pięćset dwadzieścia siedem

print('\n\n')

slownie(1)

print('\n\n')

slownie(12)

print('\n\n')

slownie(12112)

print('\n\n')

slownie(23454789)

print('\n\n')

slownie(102010405)

print('\n\n')

slownie(102050405)

print('\n\n')

slownie(807319)

print('\n\n')

slownie(5007319)

print('\n\n')

slownie(999001020)

print('\n\n')

slownie(100200300)
# trzy miliony siedem tysięcy trzysta dziewiętnaście

# 12  001  345
# dwanaście milionów
# tysiąc (nie jeden tysiąc)
# trzysta czterdzieści pięć

# tysiąc

# dwa tysiące
# trzy tysiące
# czery tysiące

# pięć tysięcy
# sześć tysięcy
# siedem tysięcy
# osiem tysięcy
# dziewięć tysięcy
# dziesięć - dwadzieścia tysięcy

# Wszystkie liczby kończące się na 2, 3 i 4 mają inne końcówki.

# W wypadku 001 - specjalna końcówka
