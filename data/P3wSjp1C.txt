import java.io.File;
import java.io.FileNotFoundException;
import java.io.PrintWriter;
import java.util.Scanner;


public class Main {

    static PrintWriter pw;

    public static void main(String[] args) throws FileNotFoundException {
        Scanner in = new Scanner(new File("input.txt"));
        pw = new PrintWriter(new File("output.txt"));
        MyQueue queue10 = new MyQueue(100000);
        MyQueue queue9 = new MyQueue(100000);
        MyQueue queue11 = new MyQueue(100000);
        int klass;
        String f;
        int k10 = 0;
        int k11 = 0;
        int k9 = 0;
        while (in.hasNext()) {
            klass = in.nextInt();
            f = in.next();
            if (klass == 9) {
                queue9.push(f);
                k9++;
            } else {
                if (klass == 10) {
                    queue10.push(f);
                    k10++;
                } else {
                    queue11.push(f);
                    k11++;
                }
            }
        }


        for (int i = 0; i < k9; i++) {
            pw.print("9 ");
            pw.println(queue9.pop());
        }
        for (int i = 0; i < k10; i++) {
            pw.print("10 ");
            pw.println(queue10.pop());
        }
        for (int i = 0; i < k11; i++) {
            pw.print("11 ");
            pw.println(queue11.pop());
        }
        in.close();
        pw.close();
    }

    static class MyQueue {
        int maxSize;
        String[] queArray;
        int front;
        int rear;
        int nItems;

        public MyQueue(int sizeQueue) {
            maxSize = sizeQueue;
            queArray = new String[maxSize];
            front = 0;
            rear = -1;
            nItems = 0;
        }

        public void push(String element) {
            if (rear == maxSize - 1) rear = -1;
            queArray[++rear] = element;
            nItems++;
        }

        public String pop() {

            String temp = queArray[front++];
            if (front == maxSize) {
                front = 0;
                rear = -1;
                nItems = 1;
            }
            nItems--;
            return temp;

        }


    }

}