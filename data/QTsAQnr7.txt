-- title:   HOP ISLAND
-- author:  minidavid
-- desc:    This game is a game where you jump two steps
-- site:    wip
-- license: Personal game license thingy
-- version: 0.1
-- script:  lua

--chess kind of game?
--a game where some enemies can fire
--projectiles on site
--projectiles move with every move

--so characters:
--Jane
--why is she on the island?
--why does she move like a chess piece
--what is her goal?
--what are the themes?
--what is her history?

--Jane has come to steal from the
--enemies
--she looks like a good character on paper
--but she's come to steal things from
--the enemies
--What does she steal so the enemies
--want it so bad from her?
--are the enemies invinsible to some of Jane's traps
--why is Jane moving in hops?
--do enemies have a social structure?
--like a king, a rook, a queen, a knight and more?


--enemies:
--why do the enemies look like that?
--why do they want to kill Jane?
--do they know Jane?
--what are their histories?
--who made them belong there?

--8.Add some kind of intro scene
--7.fix face when you scale up screen
--6.Add enemy variants
--5.Make better screen warp
--4.Add sliding on floors
--3.Add keys
-----------------2.Think of story
--1.screen wrapping for enemy and player


-------------
function BOOT()
 --Player data
 Player = {
		costume = 305,
		x = 16,
		y = 12
	}
	keepMoving = false
	movet = 0
	move = {}
 
 slidet = 0 --timer for sliding on glass

 --map data
	xMap = 210
	yMap = 119
	
	--it is used to identify a certain
	--color on the map to spawn an object
	colorUsed = {
		[0]=9,--red
		[1]=4--brown
	}
	
	--lightmap data
	lightMap = {
	 startX =  11*8,
		endX   =  12*8-1,
		startY =  4,
		endY   =  83
	}

	--water reflection data
 drk = {[0]=
 0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15}
 
 	 lvlTimer = 0
   
   windSpeed = 0

   animatePlayerSpeed = 0

   staticWindSpeed = 15

 ----rain
 rain = {}


  for iRain = 0,2 do

			rain[iRain] = {
	 		 x = math.random(0,240),
	  		y = math.random(0,136),
	  		color = math.random(2,3)
   }
    
  end

  --fire
  fire = {}
    

   for iFire = 0,2 do
      
    fire[iFire]={
       x = 2,
       y = math.random(-5,5),
       size = math.random(2,3),
       speed = math.random(1,3)/(2*100)
      }
      
    end
 
 
    level = 0

end


function EnemiesClass()
		--class
		Enemies = {
			costume = 0,
			x = 0,
			y = 0
		}
		
		
		--enemies class methods
  -----------------------------
		function Enemies:Draw()
		 spr(self.costume+time()/10%60//20,self.x*8,self.y*8,0)
		end
  -------------------
  
  function Enemies:ScreenWrap()
     if self.x < 0 then
      self.x = 29
     end
     if self.x > 29 then
     	self.x = 0
     end
     if self.y < 0 then
      self.y = 16
     end
     if self.y > 16 then
      self.y = 0
     end
  end
  
		----------------------
		function Enemies:Move()
					--go up
					if (btnp(0,8,8) or keyp(23,8,8)) 
					and mget(self.x+xMap,self.y-1+yMap)~=109
					and mget(self.x+xMap,self.y-1+yMap)~=21
					and mget(self.x+xMap,self.y-1+yMap)~=6
					then
					 		self.y = self.y - 1
					   sfx(17,song1[songArrNumPosition],200,1,2)
					end
					
					--go down
					if (btnp(1,7,7) or keyp(19,7,7)) 
				 and	mget(self.x+xMap,self.y+1+yMap)~=109
				 and	mget(self.x+xMap,self.y+1+yMap)~=92
				 and	mget(self.x+xMap,self.y+1+yMap)~=137
				 and	mget(self.x+xMap,self.y+1+yMap)~=138
				 and	mget(self.x+xMap,self.y+1+yMap)~=91
				 and	mget(self.x+xMap,self.y+1+yMap)~=21
				 and	mget(self.x+xMap,self.y+1+yMap)~=6
 				 then
					 		self.y = self.y + 1
					   sfx(17,song1[songArrNumPosition],200,2,2)
					end
					
					--go left
					if (btnp(2,8,8) or keyp(1,8,8)) 
				 and mget(self.x+xMap-1,self.y+yMap)~=109
				 and mget(self.x+xMap-1,self.y+yMap)~=21
				 and mget(self.x+xMap-1,self.y+yMap)~=6
					then
					 		self.x = self.x - 1
					   sfx(17,song1[songArrNumPosition],200,3,2)
					end
					
					--go right
					if (btnp(3,8,8) or keyp(4,8,8))
				 and mget(self.x+xMap+1,self.y+yMap)~=109
				 and mget(self.x+xMap+1,self.y+yMap)~=21
				 and mget(self.x+xMap+1,self.y+yMap)~=6
					then
					 		self.x = self.x + 1
					   sfx(17,song1[songArrNumPosition],200,0,2)
					end
		end

		-----------------------------------
		function Enemies:CollideWithPlayer()
			
			if (math.sqrt((Player.x-self.x)^2+
					(Player.y-self.y)^2)<=1)
					then
									Player.y = 10
									Player.x = 19
									self.x = 16
									self.y = 10
									movet = 0
									move[#move]=nil
					end


		end
  -------------------
		




  --make table t and connect to
  --metatable, methods and more
  ----------------------
		function Enemies:new(t)
				t = t or {}
				setmetatable(t,self)
				self.__index=self
				return t
		end
		
		
	
		----constructor
  -----------------------
		darkDude = Enemies:new({
				costume = 433,
				x = 17,
				y = 10
		})
		butterfly = Enemies:new({
				costume = 347,
				x = 10,
				y = 10
		})
		
end

EnemiesClass()


 songArrNumPosition = 1

function CreateSongs()
 --this function stores sound effect music
	 
	print(songArrNumPosition,0,100,12)
	
 song1 = {
   'A-4','C-4','D-5','C-4','D-5','E-2','C-5','E-4'
 }
 
 songArrNumPosition = songArrNumPosition - 1


 if songArrNumPosition<0 then
   songArrNumPosition = 8
 end

end

---------------------------
function ScreenTransition()
		
		--this draws waves
			for x=0,240,2 do
			  for y=0,135,2 do

			   if math.sqrt((x-120)^2+(y-80)^2)<=(120-lvlTimer) then
			 	  
			    cl=math.sin(x/30+lvlTimer)+math.sin(y/120)+math.cos(x/50+y/3)/2
			  	 pix(x+lvlTimer,y,cl*10+x//0.8)
						end
					end
			end


end


function GrassAlightLighting()


 --tile 35 is burning grass
 --it uses a particle system
 for i = 0,240,4 do
   for j = 0,135,4 do

     --if you spot brown on the screen 
   
     --lighting effect around the sprite
     if pix(i,j)==colorUsed[1] then

							for iAmbientColor = i-14,i+14 do
							 for jAmbientColor = j-14,j+14,5 do
						
								 if math.sqrt((i-iAmbientColor)^2+(jAmbientColor-j)^2)>=15+math.sin(time()/3000)*2 then

           pix(iAmbientColor,jAmbientColor,2-pix(iAmbientColor,jAmbientColor))
									end
								end
							end
       --draw fire
							for iA = 0,#fire do

         circb(fire[iA].x+i,fire[iA].y+j,fire[iA].size-1,8+pix(i,j))
         circb(fire[iA].x+i,fire[iA].y+j,fire[iA].size-1,10-pix(i,j))
         circ(fire[iA].x+i,fire[iA].y+j,fire[iA].size-2,8+pix(i,j))

       end
       
       --update fire
       for iA = 0,#fire do


         fire[iA].y = fire[iA].y-fire[iA].speed
         fire[iA].size = fire[iA].size-1/100

         if fire[iA].size<=0 then
         		fire[iA].y = math.random(-8,-1)
											fire[iA].x = 2
											fire[iA].size = math.random(0,5)   
          end
        end
        
     	end--check red pixel
    end--i
   
 end--j
end

--------------

function TIC()

--timer for each level
lvlTimer = lvlTimer + 1
-----------------------

	poke(0x13FFC,1)

	 if level == 0 then
		
	   animatePlayerSpeed = time()/30 
	   windSpeed = time()/60
	 end

    StartMusic()
    DrawMap()
    PushBoxesPlayer()
    
				--DarkDudeFunctions()
				--butterflyFunctions()
				DrawPlayer()
				MovePlayer()
				RestartPlayer()
    GrassAlightLighting()

    DrawLights()

				DrawWater()
    --RotateMap()
    --DrawFog()
    --DrawNight()
    --ScaleScreenUp()

    DrawRain()
    --ScreenTransition()
  for i = 0,0,1 do
    pix(i,10,12)
  end
   PlayerBurnedChangeColor()
   CreateSongs()
   map(210,17,30,17,0,0,13)
   map(180,119,30,17,0,0,13)
end

-------------------
function DrawRain()

 --draw rain
 for i = 0,#rain do
   line(rain[i].x,rain[i].y,rain[i].x,rain[i].y+3,0)
 end


 --move rain
 for i = 0,#rain do 
   rain[i].y = rain[i].y+1

   if rain[i].y>185 then

     rain[i].y = 0
     rain[i].x = math.random(0,130)
   end
 end

 
end

--------------------
function StartMusic()
	if mget(Player.x+xMap,Player.y+yMap)==69 then
	 music(0)
	end

	if mget(Player.x+xMap,Player.y+yMap)==65 then
	 music()
	end

end

--------------------
function DrawPlayer()
 
 --SHADOW--
 elli(8*Player.x+1,8*Player.y+5,2,1,8)

 --PLAYER--
 spr(Player.costume+animatePlayerSpeed%30//10,8*Player.x,8*Player.y-2,12)

end

--------------------
function PlayerBurnedChangeColor()

 for i = 8*Player.x+1,8*Player.x+7 do
  	for j = 8*Player.y,8*Player.y+8 do

     
     if mget(Player.x+xMap,Player.y+yMap)==35 then
       pix(i,j,pix(i,j)*0.3+9)
     
     end 
    end
  end

end
--------------------
function PushBoxesPlayer()
	
	--if you are standing by a box,
	--you push box right


--if right next to wall
	if mget(Player.x+1+xMap,Player.y+yMap)==21
			and mget(Player.x+2+xMap,Player.y+yMap)==18
			and mget(Player.x+2+xMap,Player.y+yMap)~=21
		 and (mget(Player.x+3+xMap,Player.y+yMap)==18
			or mget(Player.x+3+xMap,Player.y+yMap)==6
			or mget(Player.x+3+xMap,Player.y+yMap)==109)
			then

		  	mset(Player.x+xMap+3,Player.y+yMap,21)
		  	mset(Player.x+xMap+1,Player.y+yMap,18)
					
	end
	
	
--if right above
	if mget(Player.x+xMap,Player.y-1+yMap)==21
			and mget(Player.x+xMap,Player.y-2+yMap)==18
			and mget(Player.x+xMap,Player.y-3+yMap)==18
			and (mget(Player.x+xMap,Player.y-3+yMap)==18
			or mget(Player.x+xMap,Player.y-3+yMap)==6
			or mget(Player.x+xMap,Player.y-3+yMap)==109
			)
			then

			  	mset(Player.x+xMap,Player.y-3+yMap,21)
			  	mset(Player.x+xMap,Player.y-1+yMap,18)

	end
	
--if right below
	if mget(Player.x+xMap,Player.y+1+yMap)==21
			and mget(Player.x+xMap,Player.y+2+yMap)==18
			and (mget(Player.x+xMap,Player.y+3+yMap)==18
			or mget(Player.x+xMap,Player.y+3+yMap)==6
			or mget(Player.x+xMap,Player.y+3+yMap)==109
			)
			then

			  	mset(Player.x+xMap,Player.y+3+yMap,21)
			  	mset(Player.x+xMap,Player.y+1+yMap,18)

	end
	


	--if you are standing by a box,
	--you push box left
print(Player.x)
	if mget(Player.x-1+xMap,Player.y+yMap)==21
			and mget(Player.x-2+xMap,Player.y+yMap)==18
			and mget(Player.x-3+xMap,Player.y+yMap)~=21
			and (mget(Player.x-3+xMap,Player.y+yMap)==18
			or mget(Player.x-3+xMap,Player.y+yMap)~=6
			or mget(Player.x-3+xMap,Player.y+yMap)~=109
			)
			then


		  		mset(Player.x+xMap-3,Player.y+yMap,21)
		  		mset(Player.x+xMap-1,Player.y+yMap,18)
	end
	
end
----------

function PlayerCollideNotMovableAreas()

 return 
 mget(Player.x+xMap,Player.y+yMap)==118
 or mget(Player.x+xMap,Player.y+yMap)==6
 or mget(Player.x+xMap,Player.y+yMap)==21
 or mget(Player.x+xMap,Player.y+yMap)==135
 or mget(Player.x+xMap,Player.y+yMap)==136 
 or mget(Player.x+xMap,Player.y+yMap)==137 
 or mget(Player.x+xMap,Player.y+yMap)==138
 or mget(Player.x+xMap,Player.y+yMap)==82
 or mget(Player.x+xMap,Player.y+yMap)==83
 or mget(Player.x+xMap,Player.y+yMap)==84
 or mget(Player.x+xMap,Player.y+yMap)==92
 or mget(Player.x+xMap,Player.y+yMap)==93
 or mget(Player.x+xMap,Player.y+yMap)==94
 or mget(Player.x+xMap,Player.y+yMap)==74
 or mget(Player.x+xMap,Player.y+yMap)==75 
 or mget(Player.x+xMap,Player.y+yMap)==21
 or mget(Player.x+xMap,Player.y+yMap)==152
 or mget(Player.x+xMap,Player.y+yMap)==109
 or mget(Player.x+xMap,Player.y+yMap)==21
 
end

function collideUp()
	
	return mget(Player.x+xMap,Player.y-2+yMap)~=109
		and mget(Player.x+xMap,Player.y-2+yMap)~=21
		and mget(Player.x+xMap,Player.y-1+yMap)~=21
		and mget(Player.x+xMap,Player.y-2+yMap)~=6
		and mget(Player.x+xMap,Player.y-2+yMap)~=16
		and mget(Player.x+xMap,Player.y-1+yMap)~=16
		and mget(Player.x+xMap,Player.y-1+yMap)~=206

end

function collideDown()
		
		return mget(Player.x+xMap,Player.y+2+yMap)~=109
		and mget(Player.x+xMap,Player.y+2+yMap)~=21
		and mget(Player.x+xMap,Player.y+1+yMap)~=21
		and mget(Player.x+xMap,Player.y+2+yMap)~=6
		and mget(Player.x+xMap,Player.y+2+yMap)~=16
		and mget(Player.x+xMap,Player.y+1+yMap)~=16
		and mget(Player.x+xMap,Player.y+1+yMap)~=206

end

function collideLeft()
 
 return mget(Player.x-2+xMap,Player.y+yMap)~=109
		and mget(Player.x-2+xMap,Player.y+yMap)~=21
		and mget(Player.x-1+xMap,Player.y+yMap)~=21
		and mget(Player.x-2+xMap,Player.y+yMap)~=6
		and mget(Player.x-2+xMap,Player.y+yMap)~=16
		and mget(Player.x-1+xMap,Player.y+yMap)~=16
		and mget(Player.x-1+xMap,Player.y+yMap)~=206

end

function collideRight()
 return mget(Player.x+2+xMap,Player.y+yMap)~=109
		and mget(Player.x+2+xMap,Player.y+yMap)~=21
		and mget(Player.x+1+xMap,Player.y+yMap)~=21
		and mget(Player.x+2+xMap,Player.y+yMap)~=6
		and mget(Player.x+2+xMap,Player.y+yMap)~=0
		and mget(Player.x+2+xMap,Player.y+yMap)~=16
		and mget(Player.x+1+xMap,Player.y+yMap)~=16
		and mget(Player.x+1+xMap,Player.y+yMap)~=206

end
------------------
function FailActivity()
 
 return mget(Player.x+xMap,Player.y+yMap)==109
 and movet == 0

end
-------------
function RestartPlayer()

 --if FailActivity() then
  --Player.x = 15
  --Player.y = 10
 --end
 CollidePlayer()

end

function CollidePlayer()

 if PlayerCollideNotMovableAreas()
 and movet == 0
 then
 
	  if move[#move]=="up" then
	   keepMoving = true
	   move[#move] = "down"
			end

			if move[#move]=="down" then
	   keepMoving = true
	   move[#move] = "up"
			end
			
		 if move[#move]=="left" then
	   keepMoving = true
	   move[#move] = "right"
			end
			
			if move[#move]=="right" then
	   keepMoving = true
	   move[#move] = "left"
			end			
  
 end
end


---------------------
function MovePlayer()
		BufferMovementPlayer()	
		ScreenWrappingPlayer() 


		if mget(Player.x+xMap,Player.y+yMap)==206 then
		 xMap = 0
			yMap = 0
		end
		
	
 if mget(Player.x+xMap,Player.y+yMap)==74
 then 

  if move[#move]=="down"
  and collideDown()
   then
  movet = 9.2
  
	elseif move[#move]=="up"
	and collideUp()
	then
				movet = 7
				
 elseif move[#move]=="left"
 and collideLeft()
 then
  movet = 6
  
 elseif move[#move]=="right"
 and collideRight()
 then
  movet = 9.2
  end
 end
 
--breakable glass
 if mget(Player.x+xMap,Player.y+yMap)==78 then
		 if move[#move]=="down"
			and collideDown()
		  then
		  movet = 4.2
				
			elseif move[#move]=="up"
			and collideUp()
			then
				movet = 7
		 
			elseif move[#move]=="left"
			and collideLeft()
		  then
		  movet = 6
			
		 elseif move[#move]=="right"
			and collideRight()
			 then
				movet = 9.2
			end
 end
 
  if move[#move]=="down" 
  and mget(Player.x+xMap,Player.y-1+yMap)==78
  then
   mset(Player.x+xMap,Player.y-1+yMap,109)
  end
  if move[#move]=="up"
  and mget(Player.x+xMap,Player.y+1+yMap)==78
  then
   mset(Player.x+xMap,Player.y+1+yMap,109)
  end
  if move[#move]=="left"
  and mget(Player.x+1+xMap,Player.y+yMap)==78
  then
   mset(Player.x+xMap+1,Player.y+yMap,109)
  end
  if move[#move]=="right"
  and mget(Player.x-1+xMap,Player.y+yMap)==78
  then
   mset(Player.x+xMap-1,Player.y+yMap,109)
  end  

	--up
	
	if (btnp(0,4,4) or keyp(23,4,4)) and not keepMoving 
		and movet >=  0
		then
   table.insert(move,"up")
   keepMoving = true
 
 --down
 elseif (btnp(1,4,4) or keyp(19,4,4)) and not keepMoving 
		and movet == 0
 then
   table.insert(move,"down")
   keepMoving = true
  
  --left
 elseif (btnp(2,4,4) or keyp(1,4,4)) 
 and not KeepMoving
		and movet == 0
		 then
   table.insert(move,"left") 
   keepMoving = true
 
 --right
 elseif (btnp(3,4,4) or keyp(4,4,4))
 	and not KeepMoving
		and movet == 0
		 	then
   table.insert(move,"right")
   keepMoving = true
 end
 
end

-----------------------
function ScreenWrappingPlayer()
 if Player.y<0 then
  Player.y = 16
  movet = 0
 end

 if Player.y>16 then
  Player.y = 0
  movet = 0
 end

 if Player.x<2 then
  Player.x = 26
  movet = 0
 end

 if Player.x>27 then
  Player.x = 2
  movet = 0
 end
 
 print(Player.x,100,80,0)
 print(Player.y,100,88,0)
end

------------------------
function BufferMovementPlayer()

	if keepMoving 
	and mget(Player.x+xMap,Player.y+yMap)~=74
	and mget(Player.x+xMap,Player.y+yMap)~=78
	then
	
	  --movet = movet+2 but with tweening
	  movet = movet+(15-movet)*0.1
	end
	
	if movet > 10 then
	 keepMoving = false
		movet = 0
		sfx(10,song1[songArrNumPosition],100,0,2)
	end
	
	if slidet> 20 then
	 keepMoving = false
	end


--down	
	if move[#move]=="down" then
	 	if movet>0 and movet<=10 then
			  Player.y = Player.y + 0.2
			end
	end
--up
	if move[#move]=="up" then
	 	if movet>0 and movet<=10 then
			  Player.y = Player.y - 0.2
			end
	end
--left
	if move[#move]=="left" then
	 	if movet>0 and movet<=10 then
			  Player.x = Player.x - 0.2
			end
	end
--right
	if move[#move]=="right" then
	 	if movet>0 and movet<=10 then
			  Player.x = Player.x + 0.2
			end
	end
end
------------
function DarkDudeFunctions()
   darkDude:Draw()
   darkDude:Move()
   
   darkDude:CollideWithPlayer() 
			darkDude:ScreenWrap()
end

function butterflyFunctions()
   butterfly:Draw()
   butterfly:Move()

   butterfly:CollideWithPlayer() 
			butterfly:ScreenWrap()
end
------------------
function DrawMap()

 	--draw map
 	map(xMap,yMap,30,17)
end

-------------------
function ScaleScreenUp()
	if mget(Player.x+xMap,Player.y+yMap)==6 then
	 print("1",10,10,0)
	end

	
		for i = 0,240 do
    for j = 0,150 do
      
      pix(i,j,pix((i/1.3-81+150),(j/2+70)))
    end
			end

end

--------------------
function DrawWater()

  --draw Water

  for i = 0,240 do
    for j = 0,130 do

					if pix(i,j)==7 then
       local y01 = 70-(j-60-90+math.sin(windSpeed-i))

       local oc = pix(i,y01)
       pix(i,j,drk[oc])

    	end
    end
  end
end

---------------------
function DrawLights()

 --draw a collumn of light showing the 
 --campfire

 for i = lightMap.startX,lightMap.endX+1 do
   for j = lightMap.startY,lightMap.endY do

	   	pix(i+math.sin(i),j,1+pix(i,j))	
   end
	end
end

--------------------
function RotateMap()
	
 for i = 0,240 do
   for j = 0,136 do

     pix(i,j,pix(i/1.1+j/4,j))
   end
	end

end

------------------
function DrawFog()

  for i = 0,240 do
    for j = 0,136 do

        pix(i,j,pix(i,j)*.1+13)
    end
  end
end

--------------------
function DrawNight()

  for i = 0,240 do
    for j = 0,136 do

       pix(i,j,pix(i,j)*.1-1)

    end 
  end
end

----------------------
	function scanline(row)
	--skygradient
		wavelimit = 1

		--	 screen wave
			if row>wavelimit then
					poke(0x3ff9,math.sin((time()/1000+row/200))*2)
			else
					poke(0x3ff9,1)
			end
end