package com.mojadiapp.pro.presentation.dashboard.fragment.payment.viewModel

import androidx.lifecycle.LiveData
import androidx.lifecycle.MutableLiveData
import androidx.lifecycle.ViewModel
import androidx.lifecycle.viewModelScope
import com.mojadiapp.pro.core.network.NetworkResult
import com.mojadiapp.pro.data.remote.dto.payment_course.BuyCourseDto
import com.mojadiapp.pro.data.remote.dto.payment_course.CartDto
import com.mojadiapp.pro.data.remote.dto.payment_course.DeleteCourseDto
import com.mojadiapp.pro.data.remote.response.ResponseApi
import com.mojadiapp.pro.domain.repository.NetworkRepository
import dagger.hilt.android.lifecycle.HiltViewModel
import kotlinx.coroutines.flow.launchIn
import kotlinx.coroutines.flow.onEach
import kotlinx.coroutines.launch
import javax.inject.Inject

@HiltViewModel
class CartItemViewModel @Inject constructor(
    private val networkRepository: NetworkRepository
) : ViewModel(){
    //get item cart
    private val _cartItem : MutableLiveData<NetworkResult<ResponseApi<List<CartDto>>>> = MutableLiveData()
    val responseItemCart : LiveData<NetworkResult<ResponseApi<List<CartDto>>>> = _cartItem

    // delete cart item
    private val _deleteCartItem : MutableLiveData<NetworkResult<ResponseApi<DeleteCourseDto>>> = MutableLiveData()
    val responseDeleteCartItem : LiveData<NetworkResult<ResponseApi<DeleteCourseDto>>> = _deleteCartItem

    // buy course
    private val _buyCourse : MutableLiveData<NetworkResult<ResponseApi<BuyCourseDto>>> = MutableLiveData()
    val responseBuyCourse : LiveData<NetworkResult<ResponseApi<BuyCourseDto>>> = _buyCourse

    fun fetchAllCartItem() = viewModelScope.launch {
        networkRepository.getAllItemCart().onEach {
            _cartItem.value = it
        }.launchIn(viewModelScope)
    }

    fun deleteCartItem(idCart:Int) = viewModelScope.launch {
        networkRepository.destroyItemCart(idCart).collect{
            _deleteCartItem.value = it
        }
        networkRepository.getAllItemCart().onEach {
            _cartItem.value = it
        }.launchIn(viewModelScope)
    }


}