def isPowerOf2(n):
    if n == 0:
        return False
    while n != 1:
        if n % 2 != 0:
            return False
        n //= 2
    return True

def maxPowerOf2UpToN(n):
    result = 1
    while 2*result <= n:
        result *= 2
    return result

def getSumOfPowersOf2(n):
    if n <= 0:
        return f'{n} is not positive.'
    powerOf2 = maxPowerOf2UpToN(n)
    if powerOf2 == n:
        return f'{n} is a power of 2.'
    sumSoFar = 0
    result = ''
    while sumSoFar < n:
        if sumSoFar + powerOf2 <= n:
            sumSoFar += powerOf2
            result += f'{powerOf2} + '
        powerOf2 //= 2
    result = result[:-3]
    return result

def egyptianMultiplication(x, y):
    # x, y = 6, 4
    print()
    result = '''Let\'s use Egyptian Multiplication to compute\n'''
    result += f'{x}*{y} ' + 'only using addition:\n'
    result += '\n'
    if isPowerOf2(x) == False:
        result += 'Step 1: Express 'f'{x}' + ' as a sum of powers of 2:\n'
        result += '\n'
        s = getSumOfPowersOf2(x)
        s = s[::-1]
        result += f'{x}' + ' = ' + s + '\n'
        result += '\n'
    else:
        result += 'Step 1: Note that ' + f'{x}'+ ' is a power of 2\n\n'
    
    counter = 0
    if isPowerOf2(x) == False:
        result += 'Step 2: Express '+f'{x}*{y}'+' as a sum of powers of 2 times'
        result += f' {y}' + ':\n'
        result += '\n'
        r = f'{x}*{y} = '
        # s = s[::-1]
        # print(s)
        for num in s.split(' + '):
            counter += int(num) * y
            r += num + '*' + str(y) + ' + '
        result += r[:-3] + '\n'
        result += '\n'
    else:
        counter = x * y
        result += 'Step 2: (skip this step for powers of 2)\n\n'

    result += 'Step 3: Use addition to find the required powers of 2 times '
    result +=  f'{y}' + ':\n'
    result += '\n'
    total = 0
    num = 1
    r = ''
    # print(num)
    # print(total)
    while 2*total <= counter:
        total = num * y
        r += str(num) + '*' + f'{y}' + ' = '
        if num == 1:
            r += str(total) + '\n'
        else:
            r += str(num // 2) + '*' + f'{y}' + ' + '+str(num // 2)+'*'+f'{y}'
            r += ' = ' + str(total // 2) + ' + ' + str(total // 2) + ' = '
            r += str(total) + '\n'
        num *=2
    result += r
    # print(r)
    result += '\n'
    # print(result)
    
    if isPowerOf2(x) == False:
        result += 'Step 4: Add these to get our answer:\n'
        result += '\n'
        total = 0
        r = ''
        for num in s.split(' + '):
            r += str(num) + '*' + f'{y}' + ' + '
        r = r[:-3]
        r += ' = '
        counter = 0
        for num in s.split(' + '):
            total = int(num) * y
            r += str(total) + ' + '
            counter += total
        r = r[:-3]
        r += ' = '
        r += str(counter)
        result += r
        result += '\n'
        result += '\n'
    # print(r)
    # print(result)
    
    result += 'So: '+f'{x}*{y}' +' = '+str(counter) + ', only using addition!\n'
    print(result)
    return result
