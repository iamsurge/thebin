Uses Crt;

{объявляем типы данных: тип актеры это запись с полями}
type
  Actors = Record
    ID_A: word;
    Name_A: string[18];
    Fam_A: string[18];
    DofB: string[8];
    Roles: byte; {1 - главная, 2 - второстепенная, 3 - массовка}
    Gender: boolean;
  end;
  
  Films = Record
    ID_F: word;
    ID_A: word;
    Name_F: string[20];
    Duration: string[6];
    Date: string[8];
  end;

{объявляем переменную логического файла типа actors.
объявляем буферную переменную чтобы изменять записи и сохранять/загрузить их из файла}
var
  FV1: file of Actors;
  ActorsBP: Actors;
  
  FV2: file of Films;
  FilmsBP: Films;

{объявляем константу имени файла}
const
  ActorsName = 'Actors.uwu';
  FilmsName = 'Films.uwu';

{связываем логический с физ}
procedure Open;
begin
  Assign(FV1, ActorsName);
  Assign(FV2, FilmsName);
  
  {если файл не существует (тру) то создаем новый. если существует открываем}
  if not FileExists(ActorsName) then ReWrite(FV1)
  else ReSet(FV1);
  
  if not FileExists(FilmsName) then ReWrite(FV2)
  else ReSet(FV2);
end;

 {закрыть поток к файлу}
procedure Close;
begin
  Close(FV1);
  Close(FV2);
end;

procedure Add;
begin
  
end;

procedure List;
begin
end;

procedure Menu;
var
  input: string;
begin
  Write('Введите "help" для списка команд. Введите команду: ');
  while input<>'01' do
  begin
    ReadLn(input); {readln ждет энтер, после чего читает введенную строку в консоли и помещает в переменную}
    case input of
      'help':
        WriteLn('01 - выйти' + NewLine + '02 - добавить данные в таблицу'
                    + NewLine + '03 - вывести таблицу Актеров');
      '02': Add;
      '03': List;
    end;
  end;
  
end;
{тело главной программы}
begin
  Open;
  Menu;
  Close;
end.