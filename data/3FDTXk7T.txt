#include <iostream>

using namespace std;

struct Node {
	char word[40];
	
	Node* Next;
}; typedef Node* PNode;


PNode CreateNode(char NewWord[])
{
	PNode NewNode = new Node;
	strcpy(NewNode->word, NewWord);
	NewNode->Next = NULL;
	return NewNode;
}

void AddFirst(PNode& Head, PNode NewNode)
{
	NewNode->Next = Head;
	Head = NewNode;
	
}

void AddAfter(PNode p, PNode NewNode)
{
	NewNode->Next = p->Next;
	p->Next = NewNode;
	
}

void AddLast(PNode& Head, PNode NewNode)
{
	PNode q = Head;
	if (Head == NULL) {
		AddFirst(Head, NewNode);
		return;
	}
	while (q->Next) q = q->Next;
	AddAfter(q, NewNode);
}

void AddBefore(PNode& Head, PNode p, PNode NewNode)
{
	PNode q = Head;
	if (Head == p) {
		AddFirst(Head, NewNode);
		return;
	}
	while (q && q->Next != p) q = q->Next;
	if (q) AddAfter(q, NewNode);
}

PNode Find(PNode Head, char NewWord[])
{
	PNode q = Head;
	while (q && strcmp(q->word, NewWord))
		q = q->Next;
	return q;
}

int main()
{
	PNode Head = NULL;

}