import csv
phone_keyboard = {
    'A': '2', 'B': '2', 'C': '2',
    'D': '3', 'E': '3', 'F': '3',
    'G': '4', 'H': '4', 'I': '4',
    'J': '5', 'K': '5', 'L': '5',
    'M': '6', 'N': '6', 'O': '6',
    'P': '7', 'Q': '7', 'R': '7', 'S': '7',
    'T': '8', 'U': '8', 'V': '8',
    'W': '9', 'X': '9', 'Y': '9', 'Z': '9'
}

file = open('noahs-customers.csv')
customers_read = csv.reader(file)
customers_Date = list(customers_read)

for row in customers_Date:
    if len(row) >= 2: # verifico che la riga abbia almeno 2 elementi
        full_name = row[1] # il nome completo del cliente è contenuto nella seconda colonna del file CSV
        phone = row[5]
        name_parts = full_name.rsplit(" ", 2) # suddivido la stringa a partire dall'ultimo spazio, dividendo in 2 parti
        if len(name_parts) >= 2: # verifico che la lista abbia almeno 2 elementi
            surname = name_parts[1] # il cognome è la penultima parte del nome
            name = name_parts[0] # il nome è la prima parte del nome
            #print("Nome:", name, "Cognome:", surname) # stampo nome e cognome
            if len(surname) == 10:
                phone_number = "" # inizializzo una stringa vuota per il numero di telefono
                counter = 0 # inizializzo un contatore
                for letter in surname: # per ogni lettera del cognome
                    phone_number += phone_keyboard[letter.upper()] # aggiungo il numero corrispondente al numero di telefono
                    counter += 1 # incremento il contatore
                    if counter == 3: # se il contatore raggiunge 3
                        phone_number += "-" # aggiungo il separatore "-" al numero di telefono
                    elif counter == 6: # se il contatore raggiunge 6
                        phone_number += "-" # aggiungo il separatore "-" al numero di telefono
                
                if phone_number == row[5]: # se il numero di telefono calcolato è uguale al
                    print(surname + ' ' + phone_number + ' ' + row[5])