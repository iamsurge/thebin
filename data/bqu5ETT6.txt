class Solution {
    public  boolean Checkanagram(String s,String t)
        {
            HashMap<Character,Integer>check_anagram=new HashMap<>();
            for (int i=0;i<s.length();i++)
            {
                char c=s.charAt(i);
                check_anagram.put(c,check_anagram.getOrDefault(c,0)+1);
            }
             for (int i=0;i<t.length();i++)
            {
                char c=t.charAt(i);
                check_anagram.put(c,check_anagram.getOrDefault(c,0)-1);
            }
            for(Integer value:check_anagram.values())
            {
                if(value!=0)
                return false;
            }
           return true;
        }
    public List<List<String>> groupAnagrams(String[] strs) {   
        List<List<String>> mylist = new ArrayList<>();
        ArrayList<String>ml=new ArrayList<>();
        HashMap<String,Integer>mymap=new HashMap<>();
         for (int i=0;i<strs.length;i++)
              mymap.put(strs[i],0);
              String s1,s2; 
        for (int i=0;i<strs.length;i++)
        {      
                s1=strs[i];
               if(mymap.get(strs[i])==0)
               {        
                   mymap.put(strs[i],1);             
                   ml.add(s1);
               }               
            for(int j=i+1;j<strs.length;j++)
            {
                  s2=strs[j];       
                if(mymap.get(strs[j])==0)
                {          
               if(Checkanagram(s1,s2))
               {               
                   mymap.put(strs[j],1);             
                   ml.add(s2);                      
               }
            }
                         }
                if(!ml.isEmpty())
                {
                     ArrayList<String> mo=new ArrayList(ml);
                        mylist.add(mo);                 
                      ml.clear();
                }            
        }
        return mylist;       
    }
}