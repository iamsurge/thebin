#define _CRT_SECURE_NO_WARNINGS

#include <iostream>
#include <vector>
#include <string>
#include <algorithm>
#include <cmath>
#include <stack>
#include <iomanip>
#include <fstream>
#include <string>
#include <set>
#include <deque>
#include <queue>
#include <map>
#include <bitset>
#include <random>
#include <list>
#include <unordered_map>
#include <unordered_set>
#include <cassert>

using namespace std;

typedef long long ll;
typedef unsigned long long ull;
typedef long double ld;
typedef string str;
//typedef __int128 ultraint;
//#define sqrt sqrtl
#define F first
#define S second
#define all(vc666) vc666.begin(), vc666.end()

const ll INF = (ll) 1e9 + 7;
const ll MOD = (ll) 998244353;
ld EPS = 1e-6;
ld PI = 3.1415926535897932384;
mt19937_64 gen(time(0));

vector<vector<ll>> multiplie(vector<vector<ll>>& a, vector<vector<ll>>& b, ll md) {
    int p, q, r;
    p = a.size();
    q = b.size();
    r = b.back().size();
    vector<vector<ll>> res(p, vector<ll>(r));
    for (int i = 0; i < p; i++) {
        for (int j = 0; j < r; j++) {
            for (int x = 0; x < q; x++) {
                res[i][j] += (a[i][x] * b[x][j]) % md;
                res[i][j] %= md;
            }
        }
    }
    return res;
}

vector<vector<ll>> bin_pow_matrix(vector<vector<ll>>& a, ll m, ll p) {
    vector<vector<ll>> res(a.size(), vector<ll>(a.back().size()));
    if (m == 0) {
        for (int i = 0; i < res.size(); i++) {
            res[i][i] = 1;
        }
        return res;
    } else {
        vector<vector<ll>> sup = bin_pow_matrix(a, m / 2, p);
        res = multiplie(sup, sup, p);
        if (m % 2 == 1) {
            res = multiplie(res, a, p);
        }
        return res;
    }
}

signed main() {
#ifdef _DEBUG
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
#endif
    ios_base::sync_with_stdio(0);
    cin.tie(NULL);
    cout.tie(NULL);
    int t = 1;
    //cin >> t;
    while (t--) {
        int n, i, j, x;
        ll m, p;
        cin >> n >> m >> p;
        vector<vector<ll>> a(n, vector<ll>(n));
        for (i = 0; i < n; i++) {
            for (j = 0; j < n; j++) {
                cin >> a[i][j];
            }
        }
        a = bin_pow_matrix(a, m, p);
        for (i = 0; i < n; i++) {
            for (j = 0; j < n; j++) {
                cout << a[i][j] << " ";
            }
            cout << endl;
        }
    }
}
//Deisgned by skimono