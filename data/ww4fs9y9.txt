def print_options(commands):
    print(*list(commands.keys()), sep="\n")



def read_command():
    line = input("Command: ")
    pos = line.find(" ")
    if pos == -1:
        return line, []
    cmd = line[:pos]
    args = line[pos:]  # "_1,s1,10" \\\ _ == space
    args = args.split(",")
    args = [s.strip() for s in args]
    return cmd, args


def create_student(id, name, grade):
    student = {"id": id, "nume": name, "nota": grade}
    return student


def get_id(student):
    return student["id"]


def get_name(student):
    return student["nume"]


def get_grade(student):
    return student["nota"]


def set_id(student, id):
    student["id"] = id


def set_name(student, name):
    student["nume"] = name


def set_grade(student, grade):
    student["nota"] = grade


def add_student(students, id, name, grade):
    student = create_student(id, name, grade)
    # todo: verificam daca id-ul se repeta
    students.append(student)


def ui_add_student(students, id, name, grade):
    # todo: validam si tranformam datele de intrare
    add_student(students, id, name, grade)


def ui_delete_student(students, id):
    pass


def print_all(students):
    print(students)


def run_menu():
    commands = {"add": ui_add_student,
                "delete": ui_delete_student,
                "print_all": print_all
                }
    students = []
    while True:
        print_options(commands)
        cmd, args = read_command()
        try:
            commands[cmd](students, *args)
        except KeyError as ke:
            print("This option is not yet input", ke)


if __name__ == '__main__':
    run_menu()
