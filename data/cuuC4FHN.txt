if (!window.ST0RE) {\r\n    (function () {\r\n        function getStore(modules) {\r\n        let foundCount = 0;\r\n\t\tlet neededObjects = [\r\n                { id: 'ST0RE', conditions: (module) => (module.default && module.default.Chat && module.default.Msg) ? module.default : null },\r\n                { id: 'MediaCollection', conditions: (module) => (module.default && module.default.prototype && module.default.prototype.processAttachments) ? module.default : null },\r\n                { id: 'MediaProcess', conditions: (module) => (module.BLOB) ? module : null },\r\n                { id: 'Wap', conditions: (module) => (module.createGroup) ? module : null },\r\n                { id: 'ServiceWorker', conditions: (module) => (module.default && module.default.killServiceWorker) ? module : null },\r\n                { id: 'State', conditions: (module) => (module.STATE && module.STREAM) ? module : null },\r\n                { id: 'WapDelete', conditions: (module) => (module.sendConversationDelete && module.sendConversationDelete.length == 2) ? module : null },\r\n                { id: 'Conn', conditions: (module) => (module.default && module.default.ref && module.default.refTTL) ? module.default : null },\r\n                { id: 'WapQuery', conditions: (module) => module.default && module.default.contactFindQuery && module.default.queryExist ? module.default : null },\r\n                { id: 'CryptoLib', conditions: (module) => (module.decryptE2EMedia) ? module : null },\r\n                { id: 'OpenChat', conditions: (module) => (module.default && module.default.prototype && module.default.prototype.openChat) ? module.default : null },\r\n                { id: 'UserConstructor', conditions: (module) => (module.default && module.default.prototype && module.default.prototype.isServer && module.default.prototype.isUser) ? module.default : null },\r\n                { id: 'SendTextMsgToChat', conditions: (module) => (module.sendTextMsgToChat) ? module.sendTextMsgToChat : null },\r\n                { id: 'SendSeen', conditions: (module) => (module.sendSeen) ? module.sendSeen : null },\r\n                { id: 'sendDelete', conditions: (module) => (module.sendDelete) ? module.sendDelete : null }\r\n            ];\r\n        for (let idx in modules) {\r\n            if ((typeof modules[idx] === 'object') && (modules[idx] !== null)) {\r\n                neededObjects.forEach((needObj) => {\r\n                    if (!needObj.conditions || needObj.foundedModule)\r\n                        return;\r\n                    let neededModule = needObj.conditions(modules[idx]);\r\n                    if (neededModule !== null) {\r\n                        foundCount++;\r\n                        needObj.foundedModule = neededModule;\r\n                    }\r\n                });\r\n\r\n                if (foundCount == neededObjects.length) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        let neededStore = neededObjects.find((needObj) => needObj.id === 'ST0RE');\r\n        window.ST0RE = neededStore.foundedModule ? neededStore.foundedModule : {};\r\n        neededObjects.splice(neededObjects.indexOf(neededStore), 1);\r\n        neededObjects.forEach((needObj) => {\r\n            if (needObj.foundedModule) {\r\n                window.ST0RE[needObj.id] = needObj.foundedModule;\r\n            }\r\n        });\r\n\t\t\r\n\t\twindow.ST0RE.Chat.modelClass.prototype.sendMessage = function (e) {\r\n\t\t\twindow.ST0RE.SendTextMsgToChat(this, ...arguments);\r\n\t\t}\t\t\r\n\t\t\r\n        return window.ST0RE;\r\n    }\r\n\r\n        if (typeof webpackJsonp === 'function') {\r\n            webpackJsonp([], {'parasite': (x, y, z) => getStore(z)}, ['parasite']);\r\n        } else {\r\n            let tag = new Date().getTime();\r\n\t\t\twebpackChunkwhatsapp_web_client.push([\r\n\t\t\t\t['parasite' + tag],\r\n\t\t\t\t{\r\n\r\n\t\t\t\t},\r\n\t\t\t\tfunction (o, e, t) {\r\n\t\t\t\t\tlet modules = [];\r\n\t\t\t\t\tfor (let idx in o.m) {\r\n\t\t\t\t\t\tlet module = o(idx);\r\n\t\t\t\t\t\tmodules.push(module);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tgetStore(modules);\r\n\t\t\t\t}\r\n\t\t\t]);\r\n        }\r\n\r\n    })();\r\n}