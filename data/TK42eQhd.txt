#include <iostream>

using namespace std;

class Wymierna
{
    friend Wymierna iloczyn(Wymierna A, Wymierna B);
    int licznik;
    int mianownik;
public:
    Wymierna();     // konstruktor domyślny (bezargumentowy) - tworzy liczbę wymierną 0
    Wymierna(int l);    // konstruktor jednoargumentowy - tworzy liczbę całkowitą o podanej wartości
    Wymierna(int l, int m);
    double wartosc();
    void wypisz();
    void ustaw_licznik(int l);
    void ustaw_mianownik(int m);
    int pobierz_licznik();
    int pobierz_mianownik();
};

int nwd(int a, int b)
{
    if(a * b == 0)
        return 0;
    if(a < 0) a = -a;
    if(b < 0) b = -b;
    while(a != b)
    {
        if(a > b)
            a -= b;
        if(b > a)
            b -= a;
    }
    return a;
}

Wymierna iloczyn(Wymierna A, Wymierna B)
{
    int licznik = A.licznik * B.licznik;
    int mianownik = A.mianownik * B.mianownik;
    Wymierna wynik(licznik, mianownik);
    return wynik;
}

Wymierna::Wymierna() : licznik(0), mianownik(1) {}
Wymierna::Wymierna(int l) : licznik(l), mianownik(1) {}

Wymierna::Wymierna(int l, int m)
{
    int dzielnik = nwd(l, m);

    if(m < 0)
    {
        l = -l;
        m = -m;
    }

    licznik = l / dzielnik;
    mianownik = m / dzielnik;
}

double Wymierna::wartosc()
{
    return 1.0 * licznik / mianownik;
}

void Wymierna::wypisz()
{
    if(mianownik == 1)
        cout << licznik << endl;
    else
        cout << licznik << '/' << mianownik << endl;
}

void Wymierna::ustaw_licznik(int l)
{
    licznik = l;
}

void Wymierna::ustaw_mianownik(int m)
{
    mianownik = m;
}

int Wymierna::pobierz_licznik()
{
    return licznik;
}

int Wymierna::pobierz_mianownik()
{
    return mianownik;
}

int main()
{
    Wymierna A(3, 2);
    Wymierna B(4, 3);
    Wymierna C = iloczyn(A, B);
    C.wypisz();
    Wymierna D(7, -3);
    D.wypisz();
    Wymierna E = iloczyn(C, D);
    E.wypisz();
    return 0;
}