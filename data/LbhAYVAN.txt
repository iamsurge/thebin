    public List<List<Integer>> levelOrder(TreeNode root) {
        final List<List<Integer>> levels = new ArrayList<>();
        // sanity check
        if (root == null) return levels;

        final Deque<TreeNode> queue = new ArrayDeque<>();
        queue.add(root);

        while (!queue.isEmpty()) {
            final int levelSize = queue.size();
            List<Integer> level = new ArrayList<>();

            for (int i = 0; i < levelSize; i++) {
                TreeNode cur = queue.removeFirst();
                level.add(cur.val);

                if (cur.left != null) {
                    queue.addLast(cur.left);
                }
                if (cur.right != null) {
                    queue.addLast(cur.right);    
                }
            }
            levels.add(level);
        }

        return levels;
    }