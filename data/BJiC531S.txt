/*
	Task	: _example
	Author	: Phumipat C. [MAGCARI]
	Language: C++
	Created	: 14 November 2022 [21:37]
*/
#include<bits/stdc++.h>
using namespace std;
struct A{
	int currentNode,sumDistance,usedTicket;
	bool operator < (const A&o) const{
		return sumDistance > o.sumDistance;
	}
};
priority_queue<A > heap;
struct B{
	int nextNode,edgeWeight;
};
vector<B > g[100010];
int dis[100010][2];
int main(){
	cin.tie(0)->sync_with_stdio(0);
	cin.exceptions(cin.failbit);
	int n,m,s,t,sum = 0;
	cin >> n >> m >> s >> t;
	for(int i=1;i<=m;i++){
		int u,v,w;
		cin >> u >> v >> w;
		sum+=w;
		g[u].push_back({v,w});
		g[v].push_back({u,w});
	}
	for(int i=0;i<n;i++)
		dis[i][0] = dis[i][1] = 1e9;
	dis[s][0] = 0;
	heap.push({s,0,0});
	while(!heap.empty()){
		A now = heap.top();
		heap.pop();
		if(now.currentNode == t && now.usedTicket == 1){
			cout << sum-now.sumDistance << '\n';
			break;
		}
		for(auto x:g[now.currentNode]){
			//normal
			if(dis[x.nextNode][now.usedTicket] > now.sumDistance + x.edgeWeight){
				dis[x.nextNode][now.usedTicket] = now.sumDistance + x.edgeWeight;
				heap.push({x.nextNode,now.sumDistance + x.edgeWeight, now.usedTicket});
			}

			//special
			if(now.usedTicket == 0 && dis[x.nextNode][now.usedTicket+1] > now.sumDistance){
				dis[x.nextNode][now.usedTicket+1] > now.sumDistance;
				heap.push({x.nextNode,now.sumDistance,now.usedTicket+1});
			}
		}
	}
	return 0;
}