        private void buttonPppInterfaceViewDataGridView_Click(object sender, EventArgs e)
        {
            using (ITikConnection connection = ConnectionFactory.CreateConnection(TikConnectionType.Api))
            {
                connection.Open(comboBoxConnectIp.Text, Convert.ToInt32(textBoxPort.Text), textBoxUsername.Text, textBoxPassword.Text);

                var existingPppActiveRead = connection.LoadList<PppActive>();
                foreach (PppActive existingPppActiveReads in existingPppActiveRead)
                {
                    dataGridViewPppInterfaceView.Refresh();
                    //+ Auto Size Fit
                    dataGridViewPppInterfaceView.AutoResizeColumns();
                    dataGridViewPppInterfaceView.AutoSizeColumnsMode = DataGridViewAutoSizeColumnsMode.AllCells;
                    //+ odd even color 
                    foreach (DataGridViewRow row in dataGridViewPppInterfaceView.Rows)
                        if (row.Index % 4 == 0)
                        {
                            row.DefaultCellStyle.BackColor = Color.FromArgb(202, 224, 58);
                        }
                        else if (row.Index % 4 == 1)
                        {
                            row.DefaultCellStyle.BackColor = Color.FromArgb(71, 181, 71);
                        }
                        else if (row.Index % 4 == 2)
                        {
                            row.DefaultCellStyle.BackColor = Color.FromArgb(79, 146, 201);
                        }
                        else if (row.Index % 4 == 3)
                        {
                            row.DefaultCellStyle.BackColor = Color.LightSeaGreen;
                        }
                        else
                        {
                            row.DefaultCellStyle.BackColor = Color.Peru;
                        }
                    // 
                    dataGridViewPppInterfaceView.Columns.Add("ColumnSn", "SN");
                    dataGridViewPppInterfaceView.Columns.Add("ColumnId", "ID");
                    dataGridViewPppInterfaceView.Columns.Add("ColumnName", "Name");
                    dataGridViewPppInterfaceView.Columns.Add("ColumnService", "Service");
                    dataGridViewPppInterfaceView.Columns.Add("ColumnCallerId", "CallerId");
                    dataGridViewPppInterfaceView.Columns.Add("ColumnSessionId", "SessionId");
                    dataGridViewPppInterfaceView.Columns.Add("ColumnAddress", "Address");
                    dataGridViewPppInterfaceView.Columns.Add("ColumnUptime", "Uptime");
                    dataGridViewPppInterfaceView.Columns.Add("ColumnEncoding", "Encoding");
                    dataGridViewPppInterfaceView.Columns.Add("ColumnBytes", "Bytes");
                    dataGridViewPppInterfaceView.Columns.Add("ColumnComment", "Comment");
                    dataGridViewPppInterfaceView.ColumnCount = 11;
                    dataGridViewPppInterfaceView.Rows.Add(existingPppActiveReads.Id.ToString(),
                                                                 existingPppActiveReads.Id,
                                                                 existingPppActiveReads.Name,
                                                                 existingPppActiveReads.Service,
                                                                 existingPppActiveReads.CallerId,
                                                                 existingPppActiveReads.SessionId,
                                                                 existingPppActiveReads.Address,
                                                                 existingPppActiveReads.Uptime,
                                                                 existingPppActiveReads.Encoding,
                                                                 existingPppActiveReads.Bytes);

                    int i = 1;
                    foreach (DataGridViewRow row in dataGridViewPppInterfaceView.Rows)
                    {
                        row.Cells["ColumnSn"].Value = i;
                        i++;
                    }

                }

                buttonIpFirewallAddressListsView.Enabled = false;
            }
            buttonIpFirewallAddressListsViewRefresh.Enabled = true;
        }