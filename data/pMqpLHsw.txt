#include <iostream>
#include <vector>

using namespace std;

class Automat
{
protected:
    vector<Automat> atm;
    int milk;
    int coffee;

public:
    Automat(int milk = 5000, int coffee = 1500)
    {
        this->milk = milk;
        this->coffee = coffee;
    }

    
    void SetCoffee()
    {
        if (this->coffee == 0)
        {
            cout << "Add coffee: ";
            cin >> coffee;
            this->coffee = +coffee;
        }
    }
    void SetMilk()
    {
        if (this->milk == 0)
        {
            cout << "Add milk: ";
            cin >> milk;
            this->milk =+ milk;
        }
    }
    
    
    int GetWoter() { return this->milk; }
    int GetCoffee() { return this->coffee; }

    void Show()
    {
        cout << "Automat is full: \n";
        cout << "milk: \t" << milk << '\n';
        cout << "Cofe: \t" << coffee << '\n';
    }
};

class Coffee :public Automat
{
    int coffeeMilk;
    int coffeeCoffee;
public:
    Coffee()
    {
        coffeeMilk = 100;
        coffeeCoffee = 15;
    }
    void CookingCoffee()
    {

        this->milk = -coffeeMilk;
        this->coffee = -coffeeCoffee;
    }

};

class Admin
{
    Automat* tmp;
public:
    void Add()
    {
        tmp = new Automat;
        tmp->SetMilk();
        tmp->SetCoffee();
    }
};

class Client :public Coffee
{

public:
    void DrinkCofe()
    {
        Coffee* drink = new Coffee;
        drink->CookingCoffee();
    }
};


int main()
{
    Client Vova;
    cout << "coffee";
    Vova.DrinkCofe();
    system("pause");
    return 0;
}