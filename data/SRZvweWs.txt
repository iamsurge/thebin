	

java.lang.ClassCastException: class java.lang.Integer cannot be cast to class tech.livecom.streams.stream.service.StreamViewersCountService$Counters (java.lang.Integer is in module java.base of loader 'bootstrap'; tech.livecom.streams.stream.service.StreamViewersCountService$Counters is in unnamed module of loader org.springframework.boot.loader.LaunchedURLClassLoader @6bc7c054)
	at tech.livecom.streams.stream.service.StreamViewersCountService.totalViewersCount(StreamViewersCountService.kt:176)
	at tech.livecom.streams.stream.service.StreamViewersCountService.getViewersCount(StreamViewersCountService.kt:100)
	at tech.livecom.streams.stream.service.StreamViewersCountService$getViewersCounts$1.invoke(StreamViewersCountService.kt:92)
	at tech.livecom.streams.stream.service.StreamViewersCountService$getViewersCounts$1.invoke(StreamViewersCountService.kt:87)
	at tech.livecom.streams.stream.service.StreamViewersCountService.getViewersCounts$lambda$1(StreamViewersCountService.kt:87)
	at java.base/java.util.concurrent.ConcurrentHashMap.computeIfAbsent(ConcurrentHashMap.java:1708)
	at tech.livecom.streams.stream.service.StreamViewersCountService.getViewersCounts(StreamViewersCountService.kt:87)
	at tech.livecom.streams.stream.service.StreamService.getStreamEvents(StreamService.kt:683)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:699)
	at tech.livecom.streams.stream.service.StreamService$$SpringCGLIB$$0.getStreamEvents(<generated>)
	at tech.livecom.streams.grpc.external.impl.LcStreamsServiceImpl.getStreamEvents(LcStreamsServiceImpl.kt:195)
	at tech.livecom.mobile.grpc.lc.LcStreamsGrpcKt$LcStreamsCoroutineImplBase$bindService$4.invoke(LcStreamsServicesGrpcKt.kt:245)
	at tech.livecom.mobile.grpc.lc.LcStreamsGrpcKt$LcStreamsCoroutineImplBase$bindService$4.invoke(LcStreamsServicesGrpcKt.kt:245)
	at io.grpc.kotlin.ServerCalls$serverStreamingServerMethodDefinition$2$1$1.emit(ServerCalls.kt:144)
	at kotlinx.coroutines.flow.internal.SafeCollectorKt$emitFun$1.invoke(SafeCollector.kt:15)
	at kotlinx.coroutines.flow.internal.SafeCollectorKt$emitFun$1.invoke(SafeCollector.kt:15)
	at kotlinx.coroutines.flow.internal.SafeCollector.emit(SafeCollector.kt:87)
	at kotlinx.coroutines.flow.internal.SafeCollector.emit(SafeCollector.kt:66)
	at io.grpc.kotlin.HelpersKt$singleOrStatusFlow$1$1.emit(Helpers.kt:65)
	at kotlinx.coroutines.flow.internal.SafeCollectorKt$emitFun$1.invoke(SafeCollector.kt:15)
	at kotlinx.coroutines.flow.internal.SafeCollectorKt$emitFun$1.invoke(SafeCollector.kt:15)
	at kotlinx.coroutines.flow.internal.SafeCollector.emit(SafeCollector.kt:87)
	at kotlinx.coroutines.flow.internal.SafeCollector.emit(SafeCollector.kt:66)
	at io.grpc.kotlin.ServerCalls$serverCallListener$requests$1.invokeSuspend(ServerCalls.kt:228)
	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:106)
	at kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:570)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:750)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:677)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:664)