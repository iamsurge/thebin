#include <iostream>
#include <limits>

using namespace std;


int main()
{
    setlocale(LC_ALL, "RU");

    bool log_true = 0;

    cout << "\tТИП ДАННЫХ:\t\tMIN ЗНАЧЕНИЕ:\t\tMAX ЗНАЧЕНИЕ:\n\n";

    cout << "\tint\t\t\t" << numeric_limits<int>::min() << "\t\t" << numeric_limits<int>::max() << endl;
    cout << "\tfloat\t\t\t" << numeric_limits<float>::min() << "\t\t" << numeric_limits<float>::max() << endl;
    cout << "\tdouble\t\t\t" << numeric_limits<double>::min() << "\t\t" << numeric_limits<double>::max() << endl;
    cout << "\tlong long\t\t" << numeric_limits<long long>::min() << "\t" << numeric_limits<long long>::max() << endl;
    cout << "\tchar\t\t\t" << static_cast<int>(numeric_limits<char>::min()) << "\t\t\t" << static_cast<int>(numeric_limits<char>::max()) << endl;
    cout << "\tuchar\t\t\t" << static_cast<int>(numeric_limits<unsigned char>::min()) << "\t\t\t" << static_cast<int>(numeric_limits<unsigned char>::max()) << endl;
    cout << "\tbool\t\t\t" << numeric_limits<bool>::min() << "\t\t\t" << numeric_limits<bool>::max() << endl;
    cout << "\tlong\t\t\t" << numeric_limits<long>::min() << "\t\t" << numeric_limits<long>::max() << endl;
    cout << "\tshort\t\t\t" << numeric_limits<short>::min() << "\t\t\t" << numeric_limits<short>::max() << endl;

    // int 8-64
    cout << "\tint8_t\t\t\t" << static_cast<int>(numeric_limits<int8_t>::min()) << "\t\t\t" << static_cast<int>(numeric_limits<int8_t>::max()) << endl;
    cout << "\tint16_t\t\t\t" << numeric_limits<int16_t>::min() << "\t\t\t" << numeric_limits<int16_t>::max() << endl;
    cout << "\tint32_t\t\t\t" << numeric_limits<int32_t>::min() << "\t\t" << numeric_limits<int32_t>::max() << endl;
    cout << "\tint64_t\t\t\t" << numeric_limits<int64_t>::min() << "\t" << numeric_limits<int64_t>::max() << endl;
    // uint 8-64
    cout << "\tuint8_t\t\t\t" << static_cast<int>(numeric_limits<uint8_t>::min()) << "\t\t\t" << static_cast<int>(numeric_limits<uint8_t>::max()) << endl;
    cout << "\tuint16_t\t\t" << numeric_limits<uint16_t>::min() << "\t\t\t" << numeric_limits<uint16_t>::max() << endl;
    cout << "\tuint32_t\t\t" << numeric_limits<uint32_t>::min() << "\t\t\t" << numeric_limits<uint32_t>::max() << endl;
    cout << "\tuint64_t\t\t" << numeric_limits<uint64_t>::min() << "\t\t\t" << numeric_limits<uint64_t>::max() << endl;

    // int_fast 8-64
    cout << "\tint_fast8_t\t\t" << static_cast<int>(numeric_limits<int_fast8_t>::min()) << "\t\t\t" << static_cast<int>(numeric_limits<int_fast8_t>::max()) << endl;
    cout << "\tint_fast16_t\t\t" << numeric_limits<int_fast16_t>::min() << "\t\t" << numeric_limits<int_fast16_t>::max() << endl;
    cout << "\tint_fast32_t\t\t" << numeric_limits<int_fast32_t>::min() << "\t\t" << numeric_limits<int_fast32_t>::max() << endl;
    cout << "\tint_fast64_t\t\t" << numeric_limits<int_fast64_t>::min() << "\t" << numeric_limits<int_fast64_t>::max() << endl;
    // uint_fast 8-64
    cout << "\tuint_fast8_t\t\t" << static_cast<int>(numeric_limits<uint_fast8_t>::min()) << "\t\t\t" << static_cast<int>(numeric_limits<uint_fast8_t>::max()) << endl;
    cout << "\tuint_fast16_t\t\t" << numeric_limits<uint_fast16_t>::min() << "\t\t\t" << numeric_limits<uint_fast16_t>::max() << endl;
    cout << "\tuint_fast32_t\t\t" << numeric_limits<uint_fast32_t>::min() << "\t\t\t" << numeric_limits<uint_fast32_t>::max() << endl;
    cout << "\tuint_fast64_t\t\t" << numeric_limits<uint_fast64_t>::min() << "\t\t\t" << numeric_limits<uint_fast64_t>::max() << endl;

    // int_least 8-64
    cout << "\tint_least8_t\t\t" << static_cast<int>(numeric_limits<int_least8_t>::min()) << "\t\t\t" << static_cast<int>(numeric_limits<int_least8_t>::max()) << endl;
    cout << "\tint_least16_t\t\t" << numeric_limits<int_least16_t>::min() << "\t\t\t" << numeric_limits<int_least16_t>::max() << endl;
    cout << "\tint_least32_t\t\t" << numeric_limits<int_least32_t>::min() << "\t\t" << numeric_limits<int_least32_t>::max() << endl;
    cout << "\tint_least64_t\t\t" << numeric_limits<int_least64_t>::min() << "\t" << numeric_limits<int_least64_t>::max() << endl;
    // uint_least 8-64
    cout << "\tuint_least8_t\t\t" << static_cast<int>(numeric_limits<uint_least8_t>::min()) << "\t\t\t" << static_cast<int>(numeric_limits<uint_least8_t>::max()) << endl;
    cout << "\tuint_least16_t\t\t" << numeric_limits<uint_least16_t>::min() << "\t\t\t" << numeric_limits<uint_least16_t>::max() << endl;
    cout << "\tuint_least32_t\t\t" << numeric_limits<uint_least32_t>::min() << "\t\t\t" << numeric_limits<uint_least32_t>::max() << endl;
    cout << "\tuint_least64_t\t\t" << numeric_limits<uint_least64_t>::min() << "\t\t\t" << numeric_limits<uint_least64_t>::max() << endl;
    

    return 0;
}
