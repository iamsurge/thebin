#include <bits/stdc++.h>
using namespace std;
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
#define T     \
  ll rrr;     \
  cin >> rrr; \
  for (ll w1 = 0; w1 < rrr; w1++)
#define cin(vec, a) for (ll i = 0; i < a && cin >> vec[i]; i++)
#define cout(vec, a) for (ll i = 0; i < a && cout << vec[i] << " "; i++)
#define MOD 1000000007
#define PI 3.14159265
#define ceil(a, b) ((a / b) + (a % b ? 1 : 0))
#define all(v) v.begin(), v.end()
#define rall(v) v.rbegin(), v.rend()
#include <iostream>
#define INF 1e9
#define mod 1000000007
#include <string>
#define el '\n'
#define sp ' '
#define loop(n) for (int i = 0; i < n; i++)
typedef long long ll;
#define ordered_set tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update>
#define multi_ordered_set tree<ll, null_type, greater_equal<ll>, rb_tree_tag, tree_order_statistics_node_update>

void sasa()
{
  ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);
#ifndef ONLINE_JUDGE
  freopen("input.txt", "r", stdin), freopen("output.txt", "w", stdout);
#endif
}

struct s
{
  bool operator()(pair<ll,ll> a,pair<ll,ll> b)
  {
    if(a.first == b.first)
      return a.second < b.second;
    return a.first < b.first;
  }
};
void solve()
{
    ll n,m;
    cin >> n >> m ;
    vector<pair<ll,ll>> a(n),b(m);
    for(int i = 0 ; i < n ; i++)
    {
      int l,k;
      cin >> l >> k;
      a[i] = {k,l};
    }
    for(int i = 0 ; i < m ; i++)
    {
      int l,k;
      cin >> l >> k;
      b[i] = {k,l};
    }
    sort(all(a),s());
    sort(all(b),s());
    int i=0,j=0;
    int res1=0,res2=0;
    while(i < n && j < m)
    {
        if(a[i].first == b[j].first && a[i].second == b[j].second)
        {
            i++;
            j++;
            res1++;
            res2++;
        }
        else if (a[i].first == b[j].first)
        {
            i++;
            j++;
            res1++;
        }
        else if (a[i].first < b[j].first)
        {
            i++;
        }
        else
        {
            j++;
        }
        
    }
    cout << res1 << " " << res2 << el;
}

int main()
{
  sasa();

  ll t = 1, i = 1;
  // cin >> t;
  while (t--)
  {
    //  cout << "Case #" << i << ": ";
    solve();
    i++;
    if (!t)
      break;
    cout << "\n";
  }

  return 0;
}