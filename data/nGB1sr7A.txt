class MyCrookHUD : BaseStatusBar
{
	HUDFont mHUDFont;
	HUDFont mIndexFont;
	HUDFont mAmountFont;
	InventoryBarState DiParms;
	
	OverRide Void Init()
	{
		Super.Init();
		SetSize(32, 320, 200);

		Font FNT = "HUDFONT_DOOM";
		mHUDFont = HUDFont.Create(FNT, FNT.GetCharWidth("0"), Mono_CellLeft, 1, 1);
		FNT = "INDEXFONT_DOOM";
		mIndexFont = HUDFont.Create(FNT, FNT.GetCharWidth("0"), Mono_CellLeft);
		mAmountFont = HUDFont.Create("INDEXFONT");
		DiParms = InventoryBarState.Create();
	}

	OverRide Void Draw(Int State, Double TicFrac)
	{
		Super.Draw(State, TicFrac);

		If(state == HUD_StatusBar)
		{
			BeginStatusBar();
			DrawMainBar(TicFrac);
		}
		Else If(state == HUD_Fullscreen)
		{
			BeginHUD();
			DrawFullScreenStuff();
		}
	}

	Protected Void DrawMainBar (double TicFrac)
	{
		DrawImage("STBAR", (0, 168), DI_Item_OffSets);
		DrawImage("STTPRCNT", (90, 171), DI_Item_OffSets);
		DrawImage("STTPRCNT", (221, 171), DI_Item_OffSets);
		
		Inventory a1 = GetCurrentAmmo();
		If(a1 != Null) DrawString(mHUDFont, FormatNumber(a1.Amount, 3), (44, 171), DI_Text_Align_Right|DI_NoShadow);
		DrawString(mHUDFont, FormatNumber(cPlayer.health, 3), (90, 171), DI_Text_Align_Right|DI_NoShadow);
		DrawString(mHUDFont, FormatNumber(GetArmorAmount(), 3), (221, 171), DI_Text_Align_Right|DI_NoShadow);

		DrawBarKeys();
		DrawBarAmmo();
		
		If(DeathMatch || TeamPlay)
		{
			DrawString(mHUDFont, FormatNumber(cPlayer.FragCount, 3), (138, 171), DI_Text_Align_Right);
		}
		Else
		{
			DrawBarWeapons();
		}
		
		If(Multiplayer)
		{
			DrawImage("STFBANY", (143, 168), DI_Item_OffSets|DI_Translatable);
		}
		
		If(cPlayer.Mo.InvSel != Null && !Level.NoInventoryBar)
		{
			DrawInventoryIcon(cPlayer.Mo.InvSel, (160, 198), DI_DimDepleted);
			If(cPlayer.Mo.InvSel.Amount > 1)
			{
				DrawString(mAmountFont, FormatNumber(cPlayer.Mo.InvSel.Amount), (175, 198-mIndexFont.mFont.GetHeight()), DI_Text_Align_Right, Font.CR_Gold);
			}
		}
		Else
		{
			DrawTexture(GetMugShot(5), (143, 168), DI_Item_OffSets);
		}
		If(isInventoryBarVisible())
		{
			DrawInventoryBar(DiParms, (48, 169), 7, DI_Item_Left_Top);
		}
		
	}
	
	Protected Virtual Void DrawBarKeys()
	{
		Bool Locks[6];
		String Image;
		for(Int i = 0; i < 6; i++) Locks[i] = cPlayer.Mo.CheckKeys(i + 1, False, True);
		If(Locks[1] && Locks[4]) Image = "STKEYS6";
		Else If(Locks[1]) Image = "STKEYS0";
		Else If(Locks[4]) Image = "STKEYS3";
		DrawImage(Image, (239, 171), DI_Item_OffSets);
		If(Locks[2] && Locks[5]) Image = "STKEYS7";
		Else If(Locks[2]) Image = "STKEYS1";
		Else If(Locks[5]) Image = "STKEYS4";
		Else Image = "";
		DrawImage(Image, (239, 181), DI_Item_OffSets);
		If(Locks[0] && Locks[3]) Image = "STKEYS8";
		Else If(Locks[0]) Image = "STKEYS2";
		Else If(Locks[3]) Image = "STKEYS5";
		Else Image = "";
		DrawImage(Image, (239, 191), DI_Item_OffSets);
	}
	
	Protected Virtual Void DrawBarAmmo()
	{
		Int Amt1, MaxAmt;
		[Amt1, MaxAmt] = GetAmount("Clip");
		DrawString(mIndexFont, FormatNumber(Amt1, 3), (288, 173), DI_Text_Align_Right);
		DrawString(mIndexFont, FormatNumber(MaxAmt, 3), (314, 173), DI_Text_Align_Right);
		
		[Amt1, MaxAmt] = GetAmount("Shell");
		DrawString(mIndexFont, FormatNumber(Amt1, 3), (288, 179), DI_Text_Align_Right);
		DrawString(mIndexFont, FormatNumber(MaxAmt, 3), (314, 179), DI_Text_Align_Right);
		
		[Amt1, MaxAmt] = GetAmount("RocketAmmo");
		DrawString(mIndexFont, FormatNumber(Amt1, 3), (288, 185), DI_Text_Align_Right);
		DrawString(mIndexFont, FormatNumber(MaxAmt, 3), (314, 185), DI_Text_Align_Right);
		
		[Amt1, MaxAmt] = GetAmount("Cell");
		DrawString(mIndexFont, FormatNumber(Amt1, 3), (288, 191), DI_Text_Align_Right);
		DrawString(mIndexFont, FormatNumber(MaxAmt, 3), (314, 191), DI_Text_Align_Right);
	}
	
	Protected Virtual Void DrawBarWeapons()
	{
		DrawImage("STARMS", (104, 168), DI_Item_OffSets);
		DrawImage(cPlayer.HasWeaponsInSlot(2)? "STYSNUM2" : "STGNUM2", (111, 172), DI_Item_OffSets);
		DrawImage(cPlayer.HasWeaponsInSlot(3)? "STYSNUM3" : "STGNUM3", (123, 172), DI_Item_OffSets);
		DrawImage(cPlayer.HasWeaponsInSlot(4)? "STYSNUM4" : "STGNUM4", (135, 172), DI_Item_OffSets);
		DrawImage(cPlayer.HasWeaponsInSlot(5)? "STYSNUM5" : "STGNUM5", (111, 182), DI_Item_OffSets);
		DrawImage(cPlayer.HasWeaponsInSlot(6)? "STYSNUM6" : "STGNUM6", (123, 182), DI_Item_OffSets);
		DrawImage(cPlayer.HasWeaponsInSlot(7)? "STYSNUM7" : "STGNUM7", (135, 182), DI_Item_OffSets);
	}
	
	Protected Void DrawFullScreenStuff()
	{
		Vector2 IconBox = (40, 20);	
		Let Berserk = cPlayer.Mo.FindInventory("PowerStrength");
		
		DrawImage(Berserk? "PSTRA0" : "MEDIA0", (20, -2));
		DrawString(mHUDFont, FormatNumber(cPlayer.Health, 3), (40, -20)); //Было (44, -20)
		
		Let Armor = cPlayer.Mo.FindInventory("BasicArmor");
		
		If(Armor != Null && Armor.Amount > 0)
		{
			DrawInventoryIcon(Armor, (20, -22));
			DrawString(mHUDFont, FormatNumber(Armor.Amount, 3), (40, -40)); //Было (44, -40)
		}
		
		Inventory AmmoType1, AmmoType2;
		[AmmoType1, AmmoType2] = GetCurrentAmmo();
		Int InvY = -20;
		
		If(AmmoType1 != Null)
		{
			DrawInventoryIcon(AmmoType1, (-14, -4));
			DrawString(mHUDFont, FormatNumber(AmmoType1.Amount, 3), (-4, -20), DI_Text_Align_Right);
			InvY -= 20;
		}
		
		If(AmmoType2 != Null && AmmoType2 != AmmoType1)
		{
			DrawInventoryIcon(AmmoType2, (17.25, InvY - 3.5), DI_Screen_Right_Bottom|DI_Item_Right_Bottom);
			DrawString(mHUDFont, FormatNumber(AmmoType2.Amount, 3), (-4, invY), DI_Text_Align_Right);
			InvY -= 20;
		}
		
		If(!isInventoryBarVisible() && !Level.NoInventoryBar && cPlayer.Mo.InvSel != Null)
		{
			If(AmmoType1 != Null && AmmoType2 != Null)
			{
				DrawInventoryIcon(cPlayer.Mo.InvSel, (-14, invY - 28), DI_DimDepleted);
				DrawString(mHUDFont, FormatNumber(cPlayer.Mo.InvSel.Amount, 3), (-30, invY - 43), DI_Text_Align_Right);
			}
			Else
			If(AmmoType1 == Null && AmmoType2 == Null)
			{
				DrawInventoryIcon(cPlayer.Mo.InvSel, (-14, invY + 16), DI_DimDepleted);
				DrawString(mHUDFont, FormatNumber(cPlayer.Mo.InvSel.Amount, 3), (-30, invY + 1), DI_Text_Align_Right);
			}
		}
		
		If(DeathMatch)
		{
			DrawString(mHUDFont, FormatNumber(cPlayer.FragCount, 3), (-3, 1), DI_Text_Align_Right, Font.CR_Gold);
		}
		Else
		{
			DrawFullscreenKeys();
		}
		
		If(isInventoryBarVisible())
		{
			DrawInventoryBar(DiParms, (0, 0), 7, DI_Screen_Center_Bottom, HX_Shadow);
		}
	}
	
	Protected Virtual Void DrawFullscreenKeys()
	{
		Vector2 KeyPos = (-10, 2);
		Int RowC = 0;
		double RowW = 0;
		for(let i = cPlayer.Mo.Inv; i != Null; i = i.Inv)
		{
			If(i is "Key" && i.Icon.IsValid())
			{
				DrawTexture(i.Icon, KeyPos, DI_Screen_Right_Top|DI_Item_Left_Top);
				Vector2 Size = TexMan.GetScaledSize(i.Icon);
				KeyPos.Y += Size.Y + 2;
				RowW = max(RowW, Size.X);
				If(++RowC == 3)
				{
					KeyPos.Y = 2;
					KeyPos.X -= RowW + 2;
					RowW = 0;
					RowC = 0;
				}
			}
		}
	}
}