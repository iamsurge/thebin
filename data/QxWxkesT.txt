#include <iostream>
#include <cmath>
#include <vector>
#include <queue>
#include <algorithm>
#include <string>
#include <stack>
#include <set>
#include <map>
#define pii pair <int, int>
#define pb(x) push_back(x)
using namespace std;
using ll = long long;
using ld = long double;
using db = double;
void cv(vector <int> &v) {
    for (auto x : v) cout << x << ' ';
    cout << "\n";
}

void cvl(vector <ll> &v) {
    for (auto x : v) cout << x << ' ';
    cout << "\n";
}


void cvv(vector <vector <int> > &v) {
    for (auto x : v) cv(x);
    cout << "\n";
}

void cvb(vector <bool> v) {
    for (bool x : v) cout << x << ' ';
    cout << "\n";
}

void cvs(vector <string>  v) {
    for (auto a : v) {
        cout << a << "\n";
    }
}

void cvp(vector <pii> a) {
    for (auto p : a) {
        cout << p.first << ' ' << p.second << "\n";
    }
    cout << "\n";
}



int main() {
    ios::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
    vector <string> r;
    int k, n, m;
    cin >> k >> n >> m;
    vector <vector <string> > als(k, vector <string> (16));
    for (int go = 0; go < k; ++go) {
        for (int i = 0; i < 16; ++i) {
            string s; cin >> s;
            als[go][i] = s;
        }
    }
    /*cout << "\n";
    for (auto v: als) {
        cvs(v);
        cout << "\n";
    }*/
    vector <vector <int> > scr(n, vector <int> (m));
    for (int i = 0; i < n; ++i) {
        for (int j = 0; j < m; ++j) {
            cin >> scr[i][j];
            scr[i][j]--;
        }
    }
    vector <string> res(n * 16, "");
    int id=-1;
    for (int i = 0; i < n; ++i) {
            for (int p = 0; p < 16; ++p) {
                id++;
                for (int j = 0; j < m; ++j) {
                    res[id] += als[ scr[i][j] ][p];
                }

            }
    }
    cvs(res);
}
