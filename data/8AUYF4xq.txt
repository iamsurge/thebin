menu.c

#include <stdio.h>
#include "read.h"
#include "index_first_negative.h"
#include "index_last_negative.h"
#include "multi_between_negative.h"
#include "multi_before_and_after_negative.h"

int main()
{
    int array[20], len = 0, mode;
    read(array,&len,&mode);

    int id_first,id_last;
    int mul1,mul2;

    switch(mode)
    {
        case 0:
        {
            index_first_negative(array,len,&id_first);
            printf("%d \n", id_first);
            break;
        }
        case 1: 
        {
            index_last_negative(array,len,&id_last);
            printf("%d \n", id_last);
            break;
        }
        case 2:
        {
            multi_between_negative(array, len, &mul1);
            printf("%d \n", mul1);
            break;
        }
        case 3:
        {
            multi_before_and_after_negative(array, len, &mul2);
            printf("%d \n", mul2);
            break;  
        }
        default:
        {
            printf("Данные некорректны \n");
        }

    }

   

    return 0;
}



index_first_negative.c

void index_first_negative(int *array, int len, int *ans)
{
    for(int i = 0; i < len; i++)
    {
        if(array[i]<0) {
            *ans = i;
            return;
        }
    }
    return;
}


index_first_negative.h

#include <stdio.h>

void index_first_negative(int *array, int len, int *ans);


index_last_negative.c

void index_last_negative(int *array, int len, int *ans)
{
    for(int i = 0; i < len; i++)
    {
        if(array[i]<0) {
            *ans = i;
        }
    }
    return;
}


index_last_negative.h

#include <stdio.h>

void index_last_negative(int *array, int len, int *ans);


Makefile

CFLAGS= -c -std=c99

all: menu clean

menu: menu.o read.o index_first_negative.o index_last_negative.o multi_between_negative.o multi_before_and_after_negative.o
	gcc -std=c99 menu.o read.o index_first_negative.o index_last_negative.o multi_between_negative.o multi_before_and_after_negative.o -o menu 

menu.o: menu.c
	gcc $(CFLAGS) menu.c

read.o: read.c
	gcc $(CFLAGS) read.c

index_first_negative.o: index_first_negative.c
	gcc $(CFLAGS) index_first_negative.c

index_last_negative.o: index_last_negative.c
	gcc $(CFLAGS) index_last_negative.c

multi_between_negative.o: multi_between_negative.c
	gcc $(CFLAGS) multi_between_negative.c

multi_before_and_after_negative.o: multi_before_and_after_negative.c
	gcc $(CFLAGS) multi_before_and_after_negative.c

clean:
	rm -rf *.o


multi_before_and_after_negative.c

#include "index_first_negative.h"
#include "index_last_negative.h"

void multi_before_and_after_negative(int *array, int len, int *ans)
{
    int id_first,id_last;
    index_first_negative(array,len,&id_first);
    index_last_negative(array,len,&id_last);
    *ans = 1;
    for(int i = 0; i < id_first; i++)
    {
        (*ans)*=array[i];
    }
    for(int i = id_last; i < len; i++)
    {
        (*ans)*=array[i];
    }
}

multi_before_and_after_negative.h

#include <stdio.h>

void multi_before_and_after_negative(int *array, int len, int *ans);

multi_between_negative.c

#include "index_first_negative.h"
#include "index_last_negative.h"

void multi_between_negative(int *array, int len, int *ans)
{
    int id_first,id_last;
    index_first_negative(array,len,&id_first);
    index_last_negative(array,len,&id_last);
    *ans = 1;
    for(int i = id_first; i < id_last; i++)
    {
        (*ans)*=array[i];
    } 
}


multi_between_negative.h

#include <stdio.h>

void multi_between_negative(int *array, int len, int *ans);


read.c

void read(int *array, int *len, int *mode)
{
    char splitter;
    scanf("%d",mode);
    for(int i = 0; i < 22; i++)
    {
        scanf("%d%c", &array[i], &splitter);
        (*len)++;
        if(splitter=='\n') break;
    }
    return;
}


read.h

#include <stdio.h>

void read(int *array, int *len, int *mode);