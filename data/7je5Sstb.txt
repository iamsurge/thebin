public enum HousePortal
{
    ARCEUUS_LIBRARY(new WorldPoint(1634, 3836, 0), "Arceuus Library Portal", "Arceuus Library"),
    DRAYNOR_MANOR(new WorldPoint(3109, 3352, 0), "Draynor Manor Portal", "Draynor Manor"),
    BATTLEFRONT(new WorldPoint(1350, 3740, 0), "Battlefront Portal", "Battlefront"),
    VARROCK(new WorldPoint(3212, 3424, 0), "Varrock Portal", "Varrock"),
    MIND_ALTAR(new WorldPoint(2978, 3508, 0), "Mind Altar Portal", "Mind Altar"),
    LUMBRIDGE(new WorldPoint(3225, 3219, 0), "Lumbridge Portal", "Lumbridge"),
    FALADOR(new WorldPoint(2966, 3379, 0), "Falador Portal", "Falador"),
    SALVE_GRAVEYARD(new WorldPoint(3431, 3460, 0), "Salve Graveyard Portal", "Salve Graveyard"),
    CAMELOT(new WorldPoint(2757, 3479, 0), "Camelot Portal", "Camelot"),
    FENKENSTRAINS_CASTLE(new WorldPoint(3546, 3528, 0), "Fenkenstrain' Castle Portal", "Fenken' Castle"),
    EAST_ARDOUGNE(new WorldPoint(2661, 3300, 0), "Ardougne Portal", "Ardougne"),
    WATCHTOWER(new WorldPoint(2931, 4717, 2), "Yanille Watchtower Portal", "Watchtower"),
    SENNTISTEN(new WorldPoint(3321, 3335, 0), "Senntisten Portal", "Senntisten"),
    WEST_ARDOUGNE(new WorldPoint(2502, 3291, 0), "West Ardougne Portal", "West Ardougne"),
    MARIM(new WorldPoint(2796, 2791, 0), "Marim Portal", "Marim"),
    HARMONY_ISLAND(new WorldPoint(3799, 2867, 0), "Harmony Island Portal", "Harmony Island"),
    KHARYRLL(new WorldPoint(3493, 3474, 0), "Kharyrll Portal", "Kharyrll"),
    LUNAR_ISLE(new WorldPoint(2113, 3917, 0), "Lunar Isle Portal", "Lunar Isle"),
    KOUREND(new WorldPoint(1643, 3673, 0), "Kourend Portal", "Kourend Castle"),
    CEMETERY(new WorldPoint(2978, 3763, 0), "Cemetery Portal", "Cementry"),
    WATERBIRTH_ISLAND(new WorldPoint(2548, 3758, 0), "Waterbirth Island Portal", "Waterbirth Island"),
    BARROWS(new WorldPoint(3563, 3313, 0), "Barrows Portal", "Barrows"),
    CARRALLANGAR(new WorldPoint(3157, 3667, 0), "Carrallangar Portal", "Carrallangar"),
    FISHING_GUILD(new WorldPoint(2610, 3389, 0), "Fishing Guild Portal", "Fishing Guild"),
    CATHERBY(new WorldPoint(2802, 3449, 0), "Catherby Portal", "Catherby"),
    ANNAKARL(new WorldPoint(3288, 3888, 0), "Annakarl Portal", "Annakarl"),
    APE_ATOLL_DUNGEON(new WorldPoint(2769, 9100, 0), "Ape Atoll Dungeon Portal", "Ape Atoll Dungeon"),
    GHORROCK(new WorldPoint(2977, 3872, 0), "Ghorrock Portal", "Ghorrock"),
    TROLL_STRONGHOLD(new WorldPoint(2844, 3693, 0), "Troll Stronghold Portal", "Troll Stronghold"),
    WEISS(new WorldPoint(2846, 3940, 0), "Weiss Portal", "Weiss"),
    ;

    private final WorldPoint destination;
	private final String portalName;
	private final String nexusTarget;
}	

public static List<Teleport> getNexusTeleports()
	{
		List<Teleport> result = new ArrayList<>();
		int[] varbitArray = {
			6672, 6673, 6674, 6675, 6676, 6677, 6678, 6679, 6680,
			6681, 6682, 6683, 6684, 6685, 6686, 6568, 6569, 6582,
			10092, 10093, 10094, 10095, 10096, 10097, 10098,
			10099, 10100, 10101, 10102, 10103
		};

		for (int varbit : varbitArray)
		{
			int id = Vars.getBit(varbit);
			switch (id)
			{
				case 0:
				{
					break;
				}
				case 1:
				{
					result.add(pohNexusTeleport(HousePortal.VARROCK));
					break;
				}
				case 2:
				{
					result.add(pohNexusTeleport(HousePortal.LUMBRIDGE));
					break;
				}
				case 3:
				{
					result.add(pohNexusTeleport(HousePortal.FALADOR));
					break;
				}
				case 4:
				{
					result.add(pohNexusTeleport(HousePortal.CAMELOT));
					break;
				}
				case 5:
				{
					result.add(pohNexusTeleport(HousePortal.EAST_ARDOUGNE));
					break;
				}
				case 6:
				{
					result.add(pohNexusTeleport(HousePortal.WATCHTOWER));
					break;
				}
				case 7:
				{
					result.add(pohNexusTeleport(HousePortal.SENNTISTEN));
					break;
				}
				case 8:
				{
					result.add(pohNexusTeleport(HousePortal.MARIM));
					break;
				}
				case 9:
				{
					result.add(pohNexusTeleport(HousePortal.KHARYRLL));
					break;
				}
				case 10:
				{
					result.add(pohNexusTeleport(HousePortal.LUNAR_ISLE));
					break;
				}
				case 11:
				{
					result.add(pohNexusTeleport(HousePortal.KOUREND));
					break;
				}
				case 12:
				{
					result.add(pohNexusTeleport(HousePortal.WATERBIRTH_ISLAND));
					break;
				}
				case 13:
				{
					result.add(pohNexusTeleport(HousePortal.FISHING_GUILD));
					break;
				}
				case 14:
				{
					result.add(pohNexusTeleport(HousePortal.ANNAKARL)); //wilderness
					break;
				}
				case 15:
				{
					result.add(pohNexusTeleport(HousePortal.TROLL_STRONGHOLD));
					break;
				}
				case 16:
				{
					result.add(pohNexusTeleport(HousePortal.CATHERBY));
					break;
				}
				case 17:
				{
					result.add(pohNexusTeleport(HousePortal.GHORROCK)); //wilderness
					break;
				}
				case 18:
				{
					result.add(pohNexusTeleport(HousePortal.CARRALLANGAR)); //wilderness
					break;
				}
				case 19:
				{
					result.add(pohNexusTeleport(HousePortal.WEISS));
					break;
				}
				case 20:
				{
					result.add(pohNexusTeleport(HousePortal.ARCEUUS_LIBRARY));
					break;
				}
				case 21:
				{
					result.add(pohNexusTeleport(HousePortal.DRAYNOR_MANOR));
					break;
				}
				case 22:
				{
					result.add(pohNexusTeleport(HousePortal.BATTLEFRONT));
					break;
				}
				case 23:
				{
					result.add(pohNexusTeleport(HousePortal.MIND_ALTAR));
					break;
				}
				case 24:
				{
					result.add(pohNexusTeleport(HousePortal.SALVE_GRAVEYARD));
					break;
				}
				case 25:
				{
					result.add(pohNexusTeleport(HousePortal.FENKENSTRAINS_CASTLE));
					break;
				}
				case 26:
				{
					result.add(pohNexusTeleport(HousePortal.WEST_ARDOUGNE));
					break;
				}
				case 27:
				{
					result.add(pohNexusTeleport(HousePortal.HARMONY_ISLAND));
					break;
				}
				case 28:
				{
					result.add(pohNexusTeleport(HousePortal.CEMETERY)); //wilderness
					break;
				}
				case 29:
				{
					result.add(pohNexusTeleport(HousePortal.BARROWS));
					break;
				}
				case 30:
				{
					result.add(pohNexusTeleport(HousePortal.APE_ATOLL_DUNGEON));
					break;
				}
			}
		}

		return result;
	}

	public static Teleport pohNexusTeleport(HousePortal housePortal)
	{
		WorldPoint destination = housePortal.getDestination();
		return new Teleport(destination, 10, () ->
		{
			if (!Players.getLocal().isIdle() || Static.getClient().getGameState() == GameState.LOADING)
			{
				return;
			}

			TileObject nexusPortal = TileObjects.getNearest("Portal Nexus");
			if (nexusPortal == null)
			{
				enterHouse();
				return;
			}

			Widget teleportInterface = Widgets.get(17, 12);
			if (teleportInterface == null || teleportInterface.isHidden())
			{
				nexusPortal.interact("Teleport Menu");
				return;
			}

			Widget[] teleportChildren = teleportInterface.getDynamicChildren();
			if (teleportChildren == null || teleportChildren.length == 0)
			{
				//no teleports in the portal
				return;
			}

			Optional<Widget> optionalTeleportWidget = Arrays.stream(teleportChildren).
				filter(Objects::nonNull).
				filter(widget -> widget.getText() != null).
				filter(widget -> widget.getText().contains(housePortal.getNexusTarget())).
				findFirst();

			if (optionalTeleportWidget.isEmpty())
			{
				//the teleport is not in the list
				return;
			}

			Widget teleportWidget = optionalTeleportWidget.get();
			String teleportChar = teleportWidget.getText().substring(12, 13);
			Keyboard.type(teleportChar);
		});
	}