#include <bits/stdc++.h>

using namespace std;

#define sz(x) (int)x.size()
#define all(x) x.begin(), x.end()

const int MOD = 1000000007;
const char nl = '\n';

void setIO(string name = "")
{
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    if (name.size())
    {
        (void)!freopen((name + ".in").c_str(), "r", stdin);
        (void)!freopen((name + ".out").c_str(), "w", stdout);
    }
}

int bfs(vector<int> adj[], vector<int> &cnt, int node)
{
    if (cnt[node] > 0)
        return cnt[node];
    for (auto const &v : adj[node])
        cnt[node] += bfs(adj, cnt, v);
    if (sz(adj[node]) == 0)
        cnt[node]++;
    return cnt[node];
}

int main()
{
    setIO();

    int n, m;
    cin >> n >> m;
    vector<int> adj[n];
    int u, v;
    vector<bool> v1(n, true);
    for (int i = 0; i < m; i++)
    {
        cin >> u >> v;
        adj[--u].push_back(--v);
        v1[v] = true;
        // hola
    }
    vector<int> cnt(n, 0);
    int ans = 0;
    for (int i = 0; i < n; i++)
    {
        if (v1[i])
            ans += bfs(adj, cnt, i);
    }
    cout << ans << nl;

    return 0;
}

/***Author: Vishwajeet Prasad***/