const bedrock = require('bedrock-protocol')
const { v4: uuidv4 } = require('uuid')

//npm install uuid

const server = 'aetherpe.net'

const client = bedrock.createClient({
    version: '1.19.30',
    host: server,
    skipPing: false,
    viewDistance: 5,
    autoInitPlayer: true,
    port: 19132,
    offline: false
})

var ignore_packets = [
    'move_entity_delta',
    'level_event',
    'network_stack_latency',
    'animate',
    'set_entity_data',
    'set_time',
    'set_score',
    'play_sound',
    'player_auth_input',
    'emote_list',
    'level_chunk',
    'update_attributes',
    'move_entity',
    'add_painting',
    'add_entity',
    'update_block',
    'remove_entity',
    'set_entity_motion',
    'player_list',
    'level_sound_event',
    'move_player',
    'mob_equipment',
    //'add_player',
    'inventory_transaction'
]

client.on('packet', (packet) => {
    if (ignore_packets.includes(packet.data.name))
        return
    console.log(packet)
})

client.once('spawn', (packet) => {
    console.log('Client got spawn packet.')
    client.write('command_request',  {
        command: '/warp',
        origin: {
            type: 'player',
            uuid: uuidv4(),
            request_id: '',
            player_entity_id: undefined
        },
        interval: false
    })
})

client.on('modal_form_request', (packet) => {
    client.write('modal_form_response', {
        form_id: 0,
        has_response_data: true,
        data: '4\n',
        has_cancel_reason: false,
        cancel_reason: undefined
    })
    client.write('modal_form_response', {
        form_id: 0,
        has_response_data: false,
        data: undefined,
        has_cancel_reason: true,
        cancel_reason: 'closed'
    })
    //process.exit()
})