private void DestroyMultipleUi(BasePlayer player, params string[] uisToDestroy)
        {
            if (uisToDestroy.Length == 0)
                return;
            var destroyer = CuiHelper.GetGuid();
            var res = new JArray
            {
                new JObject
                {
                    ["name"] = destroyer,
                }
            };
            foreach (var ui in uisToDestroy)
            {
                res.Add(new JObject
                {
                    ["parent"] = destroyer,
                    ["destroyUi"] = ui
                });
            } 
            LogToFile("multiple", res.ToString().Replace("\\n", "\n"), this);
            CuiHelper.AddUi(player, res.ToString().Replace("\\n", "\n"));
            CuiHelper.DestroyUi(player, destroyer);
        }

        private void SendCuiWithDestroy(BasePlayer player, CuiElementContainer container, params string[] uisToDestroy)
        {
            if (uisToDestroy.Length == 0)
            {
                CuiHelper.AddUi(player, container);
                return;
            }

            var destroyer = CuiHelper.GetGuid();
            var res = new JArray
            {
                new JObject
                {
                    ["name"] = destroyer,
                }
            };
            foreach (var ui in uisToDestroy)
            {
                res.Add(new JObject
                {
                    ["parent"] = destroyer,
                    ["destroyUi"] = ui
                });
            }
            res.Merge(JArray.Parse(container.ToString()));
            LogToFile("test", res.ToString().Replace("\\n", "\n"), this);
            CuiHelper.AddUi(player, res.ToString().Replace("\\n", "\n"));
            CuiHelper.DestroyUi(player, destroyer);
        }