#include "pt4.h"
#include <iomanip>
#include <fstream>
#include <string>
using namespace std;

int CountLines(ifstream& input) {
    int count = 0;

    while (true) {
        string a;
        getline(input, a);

        if (input.eof() || a.empty())
            break;

        count++;
    }

    return count;
}

int Max(int a, int b) {
    return a > b ? a : b;
}

// a Иванов   Абобов
// b Иванова  Иванов
bool CompareStrings(string a, string b, bool valueOnEqualCase) {
    int length = Max(a.length(), b.length());
    
    for (int i = 0; i < length; i++) {
        if (i >= a.length())
            return false;

        if (i >= b.length())
            return true;

        char charA = a[i];
        char charB = b[i];

        if (charA == charB)
            continue;

        return charA < charB;
    }

    return valueOnEqualCase;
}

void QuickSort(string peoples[], int ratings[], int left, int right) {
    int i = left;
    int j = right;
    string x = peoples[(i + j) / 2];

    do {
        while (CompareStrings(peoples[i], x, false)) 
            i++;
        while (!CompareStrings(peoples[j], x, true))
            j--;

        if (i <= j) {
            string people = peoples[i]; 
            peoples[i] = peoples[j];
            peoples[j] = people;

            int rating = ratings[i];
            ratings[i] = ratings[j];
            ratings[j] = rating;

            i++; 
            j--;
        }
    } while (i < j);

    if (left < j) 
        QuickSort(peoples, ratings, left, j);

    if (i < right) 
        QuickSort(peoples, ratings, i, right);
}

void Solve()
{
    Task("Five11");

    string inputFile;
    string outputFile;
    pt >> inputFile >> outputFile;

    ifstream input;
    input.open(inputFile);
    int count = CountLines(input);
    input.close();

    string* peoples = new string[count];
    int* ratings = new int[count];

    // read data
    input.open(inputFile);
    for (int i = 0; i < count; i++) {
        string line;
        getline(input, line);

        int spaceCharIndex = line.find_first_of(' ');
        peoples[i] = line.substr(0, spaceCharIndex);
        ratings[i] = stoi(line.substr(spaceCharIndex + 1, line.length() - 1));
    }
    input.close();

    // sort data
    QuickSort(peoples, ratings, 0, count - 1);

    // write data
    ofstream output(outputFile);
    for (int i = 0; i < count; i++) {
        string people = peoples[i];
        int rating = ratings[i];

        output << setw(15) << left << people;
        output << setw(3) << right << to_string(rating);
        output << endl;
    }
    output.close();
}
