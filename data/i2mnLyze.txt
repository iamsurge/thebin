海阔视界规则分享，当前分享的是：二级页面详情￥page_detail￥渗透@@{"data":"{\"associatedModelsMapForJoinTable\":{},\"associatedModelsMapWithFK\":{},\"associatedModelsMapWithoutFK\":{},\"fieldsToSetToDefault\":[],\"id\":0,\"last_chapter_rule\":\"\",\"listToClearAssociatedFK\":[],\"listToClearSelfFK\":[],\"pageList\":[{\"col_type\":\"movie_3\",\"name\":\"二级页面信息nav\",\"path\":\"xnxi\",\"rule\":\"//二级页面基本信息\\nvar arts = parseDomForArray(html, 'body&&.player_info');\\nvar tabs = [];\\nfor (var i in arts) {\\n    tabs.push(parseDomForHtml(arts[i], 'h2&&Text').replace(' ',''))\\n}\\nvar conts = parseDomForArray(html, 'body&&.play_li');\\nvar lists = [];\\nfor (var i in conts) {\\n    lists.push(parseDomForArray(conts[i], 'body&&a'))\\n}\\nvar title = parseDomForHtml(html, '.detail-objs&&img&&alt');\\nvar 导演 = parseDomForHtml(html, '.info-items&&Text').replace(/\\\\//g,' ');\\nvar 主演 = parseDomForHtml(html, '.info-items,1&&Text').replace(/\\\\//g,' ');\\nvar 更新 = parseDomForHtml(html, '.info-items,2&&Text');\\nvar 状态 = parseDomForHtml(html, '.info-items,3Text');\\nvar 图片 = parseDom(html, '.detail-objs&&img&&src');\\nvar 简介 = parseDomForHtml(html, '.vod_content&&Text').replace(/简介：/,'').replace('详情','').replace('展开全部','');\"}],\"saved\":false,\"title\":\"轻合集.逐风者\",\"version\":0,\"url\":\"https://www.kanjuck.com/show/4532.html#immersiveTheme#\",\"col_type\":\"movie_1\",\"find_rule\":\"js:\\nvar d = [];\\nvar html = getResCode();\\n\\n//断插\\nvar lazy1 = `@lazyRule=.js:var jsurl = unescape(JSON.parse(request(input).match(/r player_.*?=(.*?)</)[1]).url);if(jsurl.match(/youku|mgtv|ixigua|qq.com|qiyi|migu|bili|sohu|pptv|letv|le/)){var input=jsurl;eval(\\\"var config =\\\" + fetch(\\\"hiker://files/cache/MyParseSet.json\\\"));eval(fetch(config.cj));aytmParse(jsurl)}else{jsurl}`;\\n\\n//通免\\nvar lazy2=$(\\\"\\\").lazyRule(() => {\\n    var player = JSON.parse(request(input).match(/r player_.*?=(.*?)</)[1]);\\n    var jsurl = player.url;\\n    if (player.encrypt == '1') {\\n        var jsurl = unescape(jsurl);\\n    } else if (player.encrypt == '2') {\\n        var jsurl = unescape(base64Decode(jsurl));\\n    } else {\\n        jsurl\\n    };\\n    var from = player.from;\\n    if (jsurl.search(/m3u8|mp4/) > -1) {\\n        var video = jsurl\\n    } else {\\n        var play = input;\\n        showLoading(\\\"LSP不要着急，要有点耐心。\\\");\\n        var video = 'x5Rule://' + play + '@' + $.toString(() => {\\n            var urls = _getUrls()\\n            for (var i in urls) {\\n                if (!urls[i].includes(\\\"v=\\\") && !urls[i].includes(\\\"url=\\\") && urls[i].match(/\\\\.mp4|\\\\.m3u8/)) {\\n                    //fy_bridge_app.log(urls[i])\\n                    return urls[i];\\n                } else if (urls[i].match(/\\\\.flv/)) {\\n                    //fy_bridge_app.log(urls[i])\\n                    return urls[i] + ';{Referer@https://www.bilibili.com/&&User-Agent@Mozilla/5.0}';\\n                }\\n            }\\n        })\\n    }\\n    return video\\n}); \\neval(JSON.parse(request('hiker://page/xnxi')).rule)\\nvar Color = \\\"#f13b66a\\\";\\nvar Color1 = \\\"#098AC1\\\";\\nfunction getHead(title) {\\n    return '‘‘’’<strong><font color=\\\"' + Color + '\\\">' + title + '</front></strong>';\\n}\\n\\nlet line_model = 8;\\nlet line_type_model = 'blank_block';\\nd.push({\\n\\t   title: 导演 + '\\\\n' + 主演,\\n    desc: 更新 + '\\\\n' + 状态,\\n    pic_url: 图片,\\n    url: \\\"hiker://page/Route?rule=MyFieldᴰⁿ&type=设置#noHistory#\\\",   \\n    col_type: 'movie_1_vertical_pic_blur',\\n    extra:{gradient: true}\\n});\\n\\nd.push({\\n   title: '‘‘’’<small><font color=\\\"#ff148e8e\\\">简介：' + 简介.substr(0, 50) + '...</font><small><font color=\\\"red\\\">详情</font></small></small>',\\n    url: 'hiker://empty#' +'\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t'+ 简介 + `@rule=js:var res = {}; var d = [];d.push({title:'影片简介：'+MY_URL.split('hiker://empty#')[1],col_type: 'long_text'});res.data = d; setHomeResult(res);`,\\n    col_type: 'text_1'\\n});\\n\\n\\nd.push({\\n    title: '香情',\\n    url: 'hiker://search?s=' + title + '&rule=香情影视',\\n    pic_url: \\\"https://android-artworks.25pp.com/fs08/2021/09/18/11/110_c6a1f70c163d781483c9b2651cf92db9_con_130x130.png\\\",\\n    col_type: 'icon_small_4'\\n});\\n\\nd.push({\\n    title: 'APP',\\n    url: 'hiker://search?s=' + title + '&rule=app影视.dp',\\n    pic_url: \\\"https://android-artworks.25pp.com/fs08/2021/03/23/8/110_0b65fb0f0a90060a0996c4e7414937f2_con_130x130.png\\\",\\n    col_type: 'icon_small_4'\\n});\\nd.push({\\n    title: '搜索',\\n    url: 'hiker://search?s=' + title + '&group=①免嗅',\\n    pic_url: \\\"https://android-artworks.25pp.com/fs08/2021/09/23/6/110_c6bf3e6cd4fa4ee1cddec2b2ac2fed1c_con_130x130.png\\\",\\n    col_type: 'icon_small_4'\\n})\\nd.push({\\n    title: '豆瓣',\\n    url: 'hiker://search?s=' + title + '&rule=青豆',\\n    pic_url: \\\"https://img3.doubanio.com/f/frodo/144e6fb7d96701944e7dbb1a9bad51bdb1debe29/pics/app/logo.png\\\",\\n    col_type: 'icon_small_4'\\n})\\n\\nfor (let i = 0; i < line_model; i++) {\\n    d.push({\\n        col_type: line_type_model\\n    })\\n}\\n\\nlet sel_title = ['断插','嗅探','网页'].map((it) => {\\n    let test_mode = getItem('dn.test_mode','断插');\\n    return it===test_mode?'👉'+it:it;\\n});\\nd.push({\\n    title:'‘‘’’<strong><font color= \\\"#098AC1\\\">' + getItem('dn.test_mode','断插')+ '</front></strong>',\\n    col_type:'scroll_button',\\n    url:$(sel_title,3).select(()=>{\\n        input = input.replace(/👉/g,'');\\n        setItem('dn.test_mode',input);    \\n       refreshPage(true);\\n        return 'toast://已切换模式为:'+input\\n    })\\n});\\nif(getItem('dn.test_mode','断插认')==='断插'){\\n    var lazy=lazy1\\n}else if(getItem('dn.test_mode','断插')==='嗅探'){\\n    var lazy=lazy2\\n}else{\\n    var lazy=\\\"\\\"\\n};\\n\\nfunction setTabs(tabs, taburl) {\\n    for (var i in tabs) {\\n        var tabname = tabs[i];\\n        d.push({\\n            title: getMyVar(taburl, '0') == i ? getHead(tabname) : tabname,\\n            col_type: 'scroll_button',\\n            url: $(\\\"#noLoading#\\\").lazyRule((tabname, taburl, i) => {\\n                putMyVar('当前线路名', tabname);\\n                putMyVar(taburl, i);\\n                refreshPage();\\n                return 'hiker://empty'\\n            }, tabname, taburl, i)\\n        })\\n    }\\n}\\n\\nfunction setLists(lists, index) {\\n\\tvar list = lists[index];\\n\\t// log('选集有：'+list.length+' · 线路有：'+tabs.length)\\n\\t// 将反序归正\\n\\ttry{\\n\\t\\tif (pdfh(list[0], \\\"a&&Text\\\").match(/(\\\\d+)/)[0]>pdfh(list.slice(-1)[0], \\\"a&&Text\\\").match(/(\\\\d+)/)[0]) list.reverse()\\n\\t} catch (e) {}\\n\\tif (tabs.length > 0 || list.length > 2) {\\n\\t\\tvar icon_s = 'http://82.156.222.77/weisyr/icon/';\\n\\t\\tif (getMyVar('选集排序') == 1) {\\n\\t\\t\\tvar avatar = icon_s + '正序.svg'\\n\\t\\t} else {\\n\\t\\t\\tvar avatar = icon_s + '反序.svg'\\n\\t\\t}\\n\\nd.push({\\n\\t\\t\\tcol_type: 'line_blank'\\n\\t\\t});\\n\\n\\t\\td.push({\\n\\t\\t\\ttitle:'<font color=\\\"#778899\\\">当前线路</font></small>'+getMyVar('当前线路名', tabs[0]) + \\\"<small><font color='grey'>\\\" + '\\\\t\\\\t共 ' + list.length + ' 条' +\\n\\t\\t\\t\\t\\\"</font></small>\\\",\\n\\t\\t\\turl: `@lazyRule=.js:if(getMyVar('选集排序')==1){putMyVar('选集排序', 0);}else{putMyVar('选集排序', 1)};refreshPage();'hiker://empty'`,\\n\\t\\t\\tcol_type: 'avatar',\\n\\t\\t\\timg: avatar\\n\\t\\t})\\nd.push({\\n\\t\\t\\tcol_type: 'line'\\n\\t\\t});\\n\\t}\\n\\n\\tfor (let i = 0; i < 5; i++) {\\n\\t\\td.push({\\n\\t\\t\\tcol_type: \\\"blank_block\\\"\\n\\t\\t})\\n\\t}\\n\\n\\tfunction playLists() {\\n\\t\\tvar jm = parseDomForHtml(list[j], 'a&&Text').replace(/第|集|话|期|-/g, '').replace(/预告/g, '📢');\\n\\t\\tif (list.length < 5) {\\n\\t\\t\\tvar col = 'text_2'\\n\\t\\t} else {\\n\\t\\t\\tvar col = jm.length > 5 ? 'text_3' : 'text_5'\\n\\t\\t}\\n\\t\\td.push({\\n\\t\\t\\ttitle: jm,\\n\\t\\t\\turl: parseDom(list[j], 'a&&href') + lazy,extra: {id:parseDom(list[j],'a&&href'),blockRules: ['.m4a', '.mp3','.mp4','.m3u8','.flv','.avi','.3gp','.mpeg','.wmv','.mov','.rmvb','.gif','.jpg','.jpeg','.png','.ico','.svg']},\\n\\t\\t\\tcol_type: col\\n\\t\\t});\\n\\t}\\n\\t// 开始选集分区\\n\\taddListener('onClose', $.toString(() => {\\n\\t\\tclearMyVar('当前线路名');\\n\\t\\tclearMyVar('分集起');\\n\\t\\tclearMyVar('分集终');\\n\\t}))\\n\\t//选集＞则启用选集分区（list替换成你的选集数组）\\n\\tvar 选集数组 = list; //改\\n\\tif (选集数组.length > 110) {\\n\\t\\t//设置每区选集数目\\n\\t\\tvar page_number = 100;\\nlet 底部换页='关闭';\\n\\t\\tvar star = getMyVar('分集起', '1');\\n\\t\\tvar end = getMyVar('分集终', JSON.stringify(page_number));\\n\\t\\tvar total = Math.ceil(选集数组.length / page_number);\\n\\t\\tvar catalogue = []\\n\\t\\tfor (let i = 0; i < total; i++) {\\n\\t\\t\\tcatalogue += i * page_number + ',';\\n\\t\\t\\tcatalogue = catalogue.split(',');\\n\\t\\t}\\n\\t\\tfor (let i = 0; i < 8; i++) {\\n\\t\\t\\td.push({\\n\\t\\t\\t\\tcol_type: \\\"blank_block\\\"\\n\\t\\t\\t})\\n\\t\\t}\\n\\t\\tfor (var i = 0; i < catalogue.length - 1; i++) {\\n\\t\\t\\tvar total1 = parseInt(catalogue[i]) + 1;\\n\\t\\t\\tvar total2 = parseInt(catalogue[i + 1]);\\n\\t\\t\\tif (i == (catalogue.length - 2)) var total2 = 选集数组.length;\\n\\t\\t\\td.push({\\n\\t\\t\\t\\ttitle: star == total1 ? '‘‘' + total1 + '-' + total2 + '’’' : total1 + '-' + total2,\\n\\t\\t\\t\\turl: $(\\\"#noLoading#\\\").lazyRule((total1, total2) => {\\n\\t\\t\\t\\t\\tputMyVar('分集起', total1);\\n\\t\\t\\t\\t\\tputMyVar('分集终', total2);\\n\\t\\t\\t\\t\\trefreshPage(false);\\n\\t\\t\\t\\t\\treturn 'hiker://empty'\\n\\t\\t\\t\\t}, total1, total2),\\n\\t\\t\\t\\tcol_type: 'scroll_button'\\n\\t\\t\\t});\\n\\t\\t}\\n\\t\\tif (getMyVar('选集排序') == 1) {\\n\\t\\t\\tfor (var j = end - 1; j >= star - 1; j--) {\\n\\t\\t\\t\\t// 打印选集列表\\n\\t\\t\\t\\tplayLists() //改\\n\\t\\t\\t}\\n\\t\\t} else {\\n\\t\\t\\tfor (var j = star - 1; j < end; j++) {\\n\\t\\t\\t\\t// 打印选集列表\\n\\t\\t\\t\\tplayLists() //改\\n\\t\\t\\t}\\n\\t\\t}\\n\\t//底部页码\\nd.push({\\n\\t\\t\\t\\tcol_type: \\\"line\\\"\\n\\t\\t\\t})\\nvar yema=Math.ceil(end/page_number);\\nd.push({\\n\\ttitle: \\\"““”” <small><small><font color='grey'>\\\" + yema +' / '+ total+\\\"</font> </small></small>\\\",\\n\\tcol_type: \\\"text_center_1\\\",\\n\\textra: {\\n\\t\\tlineVisible: false\\n\\t}\\n})\\nif(底部换页=='开启'){\\nd.push({\\n\\t\\t\\t\\ttitle: '首页',\\n\\t\\t\\t\\turl: $(\\\"#noLoading#\\\").lazyRule(( page_number) => {\\nputMyVar('分集起', '1');\\nputMyVar('分集终', page_number);\\n\\t\\t\\t\\t\\trefreshPage(false);\\n\\t\\t\\t\\t\\treturn 'hiker://empty'\\n\\t\\t\\t\\t}, page_number),\\n\\t\\t\\t\\tcol_type: 'text_4'\\n\\t\\t\\t});\\nd.push({\\n\\t\\t\\t\\ttitle: '上一页',\\n\\t\\t\\t\\turl: $(\\\"#noLoading#\\\").lazyRule((star,end, page_number,total,选集数组) => {\\n\\t\\t\\t\\tvar s= parseInt(star)-page_number;\\nvar e= parseInt(end)-page_number;\\nif(end=选集数组.length) var e= s+page_number-1;\\nif(s<1){ \\nvar s=1;\\nvar e=page_number;\\n}\\nif(s>0){\\nputMyVar('分集起', s);\\nputMyVar('分集终', e);\\nlog(s+'-'+e)\\n\\t\\t\\t\\t\\trefreshPage(false);\\n}\\n\\t\\t\\t\\t\\treturn 'hiker://empty'\\n\\t\\t\\t\\t}, star, end,page_number,total,选集数组),\\n\\t\\t\\t\\tcol_type: 'text_4'\\n\\t\\t\\t});\\n\\t\\td.push({\\n\\t\\t\\t\\ttitle: '下一页',\\n\\t\\t\\t\\turl: $(\\\"#noLoading#\\\").lazyRule((star,end, page_number,total,选集数组) => {\\n\\t\\t\\t\\tvar s= parseInt(star)+page_number;\\nvar e= parseInt(end) +page_number;\\nlog(s+'-'+e)\\nif(e>选集数组.length){ \\nvar s=(total-1)*page_number+1;\\nvar e=选集数组.length;\\n}\\nputMyVar('分集起', s);\\nputMyVar('分集终', e);\\n\\t\\t\\t\\t\\trefreshPage(false);\\n\\t\\t\\t\\t\\treturn 'hiker://empty'\\n\\t\\t\\t\\t}, star, end,page_number,total,选集数组),\\n\\t\\t\\t\\tcol_type: 'text_4'\\n\\t\\t\\t});\\nd.push({\\n\\t\\t\\t\\ttitle: '尾页',\\n\\t\\t\\t\\turl: $(\\\"#noLoading#\\\").lazyRule(( page_number,total,选集数组) => {\\nvar s=(total-1)*page_number+1;\\nputMyVar('分集起', s);\\nputMyVar('分集终', 选集数组.length);\\n\\t\\t\\t\\t\\trefreshPage(false);\\n\\t\\t\\t\\t\\treturn 'hiker://empty'\\n\\t\\t\\t\\t}, page_number,total,选集数组),\\n\\t\\t\\t\\tcol_type: 'text_4'\\n\\t\\t\\t});\\n}\\n\\t} \\n\\n\\t// 结束选集分区\\n\\telse {\\n\\t\\tif (getMyVar('选集排序') == 1) {\\n\\t\\t\\tfor (var j = list.length - 1; j >= 0; j--) {\\n\\t\\t\\t\\tplayLists() \\n\\t\\t\\t}\\n\\t\\t} else {\\n\\t\\t\\tfor (var j = 0; j < list.length; j++) {\\n\\t\\t\\t\\tplayLists() \\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\nd.push({\\n    title: '““””<small><font color=#871f78>以上数据来源于网络，如您喜欢，请支持官方</font></small>',\\n    desc: '““””<small><font color=#f20c00>此规则仅限学习交流使用，请于导入后24小时内删除，任何组织或个人不得以任何方式方法传播此规则的整体或部分！</font></small>',\\n    url: MY_URL,\\n    col_type: 'text_center_1'\\n});\\n\\t\\n\\td.push({\\n\\t\\ttitle: '\\\\n',\\n\\t\\turl: 'hiker://empty',\\n\\t\\tcol_type: 'rich_text'\\n\\t});\\n}\\nsetTabs(tabs, MY_URL);\\nsetLists(lists, getMyVar(MY_URL, '0'));\\nsetResult(d);\",\"group\":\"轻合集.逐风者\",\"ua\":\"auto\",\"preRule\":\"\",\"pages\":\"[{\\\"col_type\\\":\\\"movie_3\\\",\\\"name\\\":\\\"二级页面信息nav\\\",\\\"path\\\":\\\"xnxi\\\",\\\"rule\\\":\\\"//二级页面基本信息\\\\nvar arts = parseDomForArray(html, 'body&&.player_info');\\\\nvar tabs = [];\\\\nfor (var i in arts) {\\\\n    tabs.push(parseDomForHtml(arts[i], 'h2&&Text').replace(' ',''))\\\\n}\\\\nvar conts = parseDomForArray(html, 'body&&.play_li');\\\\nvar lists = [];\\\\nfor (var i in conts) {\\\\n    lists.push(parseDomForArray(conts[i], 'body&&a'))\\\\n}\\\\nvar title = parseDomForHtml(html, '.detail-objs&&img&&alt');\\\\nvar 导演 = parseDomForHtml(html, '.info-items&&Text').replace(/\\\\\\\\//g,' ');\\\\nvar 主演 = parseDomForHtml(html, '.info-items,1&&Text').replace(/\\\\\\\\//g,' ');\\\\nvar 更新 = parseDomForHtml(html, '.info-items,2&&Text');\\\\nvar 状态 = parseDomForHtml(html, '.info-items,3Text');\\\\nvar 图片 = parseDom(html, '.detail-objs&&img&&src');\\\\nvar 简介 = parseDomForHtml(html, '.vod_content&&Text').replace(/简介：/,'').replace('详情','').replace('展开全部','');\\\"}]\"}","picUrl":"https://image.iapijy.com/cover/6a67ad49461a5940715c8257a5902b79.jpg","title":"渗透"}