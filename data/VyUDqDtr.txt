'''
Welcome to the source code of little snake.
Author:Divyansh Chourey
'''

#Importing some important modules
from os import read
from typing import get_origin
import pygame
import random
import os
from tkinter import *
import tkinter.messagebox as tmsg
from PIL import Image, ImageTk

#Initiazing the modules
pygame.init()
pygame.mixer.init()

#Game Constants
screen_width=900
screen_height=600
white=(255,255,255)
red=(255, 0, 0)
black=(0, 0, 0)

#Display
gameWindow=pygame.display.set_mode((screen_width, screen_height))
pygame.display.set_caption("Little Snakes")
pygame.display.update()
bg_img=pygame.image.load("back.jpg")
bg_img=pygame.transform.scale(bg_img, (screen_width, screen_height)).convert_alpha()
clock=pygame.time.Clock()
font=pygame.font.SysFont(None, 50)

def text_screen(text, color, x, y):
    #This fuction displays the text on the pygame screen
    screen_text=font.render(text, True, color)
    gameWindow.blit(screen_text, [x,y])

def plot_snake(gameWindow, color, snk_list, snake_size):
    #This function plota the snake body
    for x, y in snk_list:
        pygame.draw.rect(gameWindow, color, [x, y, snake_size, snake_size])

def welcome():
    #This function Welcomes the user. It mainly uses the tkinter module to do so
    global root
    root=Tk()
    root.title("Welcome")
    root.geometry("300x400")
    font='lucida 13'
    back_color='#99ffd6'
    root.config(bg=back_color)

    def btn():
        #Function to exit the welcome window and quit thw game
        root.destroy()
        pygame.mixer.music.load('back.mp3')
        pygame.mixer.music.play()
        gameloop()
    
    def about():
        tmsg.showinfo("About" ,"This is the simple snakes game created by Divyansh chourey")
    
    def htp():
        htp='''
HOW TO START?
You can start the game by simply clicking on the 'START' button.

HOW TO PLAY?
As you start the game there is a black snake which is fond of eating the red apple.
You can cntrol the snake by the arrow keys on the keybord (snake goes in the direction of the respective key is pressed).
Your aim is to control the snake and make it eat the red apple as much as possible.
As the snake eats the apple it grows in size and also the points increases.

GAME OVER?
When you collide with the walls of the play ground, the game gets over.
Also when the snake by chance bites itself then, also the game gets over.
        '''
        tmsg.showinfo('How to play?', htp)
    
    def rate():
        root=Tk()
        root.geometry('300x200')
        root.title('Rating')
        back_color='#99ffd6'
        root.config(bg=back_color)
        #Label(root, text='ENTER YOUR NAME', font='lucida 20 bold underline italic', bg=back_color).pack(pady=10)
        Label(root, text='RATING', font='lucida 20 bold underline italic', bg=back_color).pack(pady=10)

        def feedback():
            #This function takes the user rating and store it in file
            with open ('feedback.txt', 'w') as f:
                f.write(f'The feedback of the user is {slider.get()} out of {slider_max}')
            tmsg.showinfo("Thanks", 'Thanks for your feedback')
            root.destroy()

        slider_max=10
        slider_min=0
        slider=Scale(root, from_=slider_min, to=slider_max, orient=HORIZONTAL, tickinterval=1, background=back_color, length=300, bd=5)
        slider.pack()

        Button(root, text='Submit', command=feedback, font=font, padx=10, borderwidth=5,bg="#ffdd99", activebackground='#ffad99').pack(pady=10)

        root.mainloop()

    def exit_game():
        que=tmsg.askyesno("Thanks", "Thanks for playing \n Are you sure you want to exit?")
        if que==True:
            exit()
        else:
            pass

    #Desinging the Welcome window
    Label(root, text="Welcome to Snakes.", font='lucida 20 bold', bg=back_color).pack()
    image1 = Image.open("snk_img.png")
    test = ImageTk.PhotoImage(image1)
    label1 = Label(image=test, bg=back_color)
    label1.image = test
    label1.pack()

    Button(root, text='START', command=btn, font='lucida 15 bold', padx=60, pady=10, borderwidth=5,bg="#ffdd99", activebackground='#ffad99').pack(pady=5)
    Button(root, text='About', command=about, font=font, padx=32, borderwidth=5,bg="#ffdd99", activebackground='#ffad99').pack(pady=5)
    Button(root, text='How to play?', command=htp, font=font, padx=5, borderwidth=5,bg="#ffdd99", activebackground='#ffad99').pack(pady=5)
    Button(root, text='Rate', command=rate, font=font, padx=33, borderwidth=5,bg="#ffdd99", activebackground='#ffad99').pack(pady=5)
    Button(root, text="Exit", command=exit_game, font=font, padx=38, borderwidth=5,bg="#ffdd99", activebackground='#ffad99').pack(pady=5)

    root.mainloop()

def over():
    #This function handels when the game gets over
    root=Tk()
    root.title("Game Over")
    root.geometry('300x300')
    back_color='#99ffd6'
    root.config(bg=back_color)

    def again():
        root.destroy()
        pygame.mixer.music.load('back.mp3')
        pygame.mixer.music.play()
        gameloop()
        
    image1 = Image.open("lose.png")
    test = ImageTk.PhotoImage(image1)
    label1 = Label(image=test, bg=back_color)
    label1.image = test
    label1.pack()

    Label(root, text="GAME OVER!", font='lucida 30 bold', padx=60, pady=10,bg=back_color).pack()
    Button(root, text='Try again', command=again, font='lucida 12 bold', padx=50, pady=10, borderwidth=5, bg="#ffdd99", activebackground='#ffad99').pack(pady=10)
    Button(root, text='Exit', command=quit, font='lucida 12', padx=30, borderwidth=5, bg="#ffdd99", activebackground='#ffad99').pack()

    root.mainloop()

def gameloop():
    '''Here comes the main funtion. It mainly consits of the game loop and also handels events'''
    #Some parameters
    exit_game=False
    game_over=False
    snake_x=50
    snake_y=50
    snake_size=30
    velocity_x=0
    velocity_y=0
    init_velocity=5
    food_x=random.randint(20, screen_width/2)
    food_y=random.randint(20, screen_height/2)
    score=0
    fps=60
    
    snk_length=1
    snk_list=[]

    #This peice of code deals with highscore
    if (not(os.path.exists("highscore.txt"))):
        with open("highscore.txt", 'w') as f:
            f.write("0")
    with open ("D:\python files\snake game\highscore.txt", 'r') as f:
        highscore=f.read()

    while not exit_game:

        if game_over:
            with open ("highscore.txt", 'w') as f:
                f.write(str(highscore))
            over()

            for event in pygame.event.get():
                if event.type==pygame.QUIT:
                    exit_game=True
                if event.type == pygame.KEYDOWN:
                    if event.key==pygame.K_RETURN:
                        pygame.mixer.music.load('back.mp3')
                        pygame.mixer.music.play()
                        gameloop()
                    if event.key==pygame.K_ESCAPE:
                        exit_game=True

        else:
            for event in pygame.event.get():
                if event.type==pygame.QUIT:
                    exit_game=True
                    

                if event.type==pygame.KEYDOWN:
                    if event.key==pygame.K_RIGHT:
                        velocity_x=init_velocity
                        velocity_y=0

                    if event.key==pygame.K_LEFT:
                        velocity_x=-init_velocity
                        velocity_y=0
                    
                    if event.key==pygame.K_UP:
                        velocity_y=-init_velocity
                        velocity_x=0
                    
                    if event.key==pygame.K_DOWN:
                        velocity_y=init_velocity
                        velocity_x=0
                    
                    if event.key==pygame.K_q:
                        score+=10

                    if event.key==pygame.K_1:
                        init_velocity-=1
                    
                    if event.key==pygame.K_2:
                        init_velocity+=1

            snake_x+=velocity_x
            snake_y+=velocity_y

            if abs(snake_x-food_x)<snake_size and abs(snake_y-food_y)<snake_size:
                score+=10
                food_x=random.randint(20, screen_width-60)
                food_y=random.randint(20, screen_height-60)
                snk_length+=5
                if score>int(highscore):
                    highscore=score

            gameWindow.fill(white)
            gameWindow.blit(bg_img, (0, 0))
            text_screen("Score: " + str(score) + "    Highscore: " + str(highscore), red, 10, 10)
            
            head=[]
            head.append(snake_x)
            head.append(snake_y)
            snk_list.append(head)

            if len(snk_list)>snk_length:
                del snk_list[0]
            
            if head in snk_list[:-1]:
                game_over=True
                pygame.mixer.music.load('gameover.mp3')
                pygame.mixer.music.play()

            if snake_x<0 or snake_x>screen_width or snake_y<0 or snake_y>screen_height:
                game_over=True
                pygame.mixer.music.load('gameover.mp3')
                pygame.mixer.music.play()

            pygame.draw.rect(gameWindow, red, [food_x, food_y, snake_size, snake_size])
            plot_snake(gameWindow, black, snk_list, snake_size)
        pygame.display.update()
        clock.tick(fps)

    pygame.quit()
    quit()
welcome()