Дадена е низа од N природни броеви и еден број K. Нека броевите се означени од a0 до aN−1. Да ја дефинираме сумата од апсолутни разлики како abs(a1−a0)+abs(a2−a1)+…+abs(aN−1−aN−2). Да се изберат точно K броеви од низата, така што кога ќе се спојат во една низа, сумата од апсолутни разлики е максимална. Да се испечати оваа сума.
 
Влез: Во првата линија ви се дадени два броеви N (1≤N≤100) и K (1≤K≤100, K≤N). Во втората линија ви се дадени N позитивни природни броеви, секој од броевите е помал од 1,000.
 
Излез: Да се испечати бараната максималната сума од апсолутни разлики.
 
Забелешка: Броевите се земаат во оној редослед во кој што се дадени во првата низа. Не смее да се менува редоследот на броевите во новодобиената низа.
 
Име на класата (Java): SumOfAbsoluteDifferences.
 
Делумно решение: Задачата се смета за делумно решена доколку се поминати 5 тест примери.
 
Sample input
10 3
1 9 2 3 6 1 3 2 1 3
Sample output
16
 
Sample input
14 12
11 10 8 6 9 12 12 12 10 10 7 9 10 12
Sample output
21
 
 
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.StringTokenizer;
 
public class SumOfAbsoluteDifferences {
    
    static int solve(int numbers[], int N, int K) {
        int[][] m = new int[N][K];
        int res = 0;
        
        for(int i = 1; i < N; i++) {
            for(int j = 1; j < K; j++) {
                for(int k = 0; k < i; k++) {
                    int abs = Math.abs(numbers[i] - numbers[k]);
                    if(m[i][j] < m[k][j-1] + abs)
                        m[i][j] = m[k][j-1] + abs;     
                }
                if(m[i][j] > res) res = m[i][j];
            }
        }
        
        return res;
    }
    
    public static void main(String[] args) throws Exception {
        int i,j,k;
        
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st = new StringTokenizer(br.readLine());
        int N = Integer.parseInt(st.nextToken());
        int K = Integer.parseInt(st.nextToken());
        
        int numbers[] = new int[N];
        
        st = new StringTokenizer(br.readLine());
        for (i=0;i<N;i++) {
            numbers[i] = Integer.parseInt(st.nextToken());
        }
        
        int res = solve(numbers, N, K);
        System.out.println(res);
        
        br.close();
    }
}