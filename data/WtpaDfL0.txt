#include<iostream>
#include<fstream>
#include<algorithm>
#define N 10005
using namespace std;
ifstream fin("ktlon.in");
ofstream fout("ktlon.out");
int c, F[N], R[N];
int n,k,Fmax, Rmax;

void Cerinta1()
{
    int sol=0;
   fin>>n>>k;
   for(int i=1;i<=k;i++)
   {
       Fmax=Rmax=0;
       for(int j=1;j<=n ;++j)
       {
           fin>>F[j];
           if(F[j]>Fmax)Fmax=F[j];
       }
       for(int j=1;j<=n ;++j)
       {
           fin>>R[j];
           if(R[j]>Rmax)Rmax=R[j];
       }
       if(Rmax>Fmax)sol++;
   }
   fout<<sol;
}

int sF, sR;
void Cerinta2()
{
    fin>>n>>k;
    for(int i=1;i<=k;i++)
    {
        for(int j=1;j<=n;j++)fin>>F[j];
        for(int j=1;j<=n;j++)fin>>R[j];
        sort(F+1,F+n+1, greater<int>());
        sort(R+1,R+n+1, greater<int>());

        int Fm=0, Rm=0;
        int im=1, ir=1, ok=0;

        while(im<=n &&F[im]>R[1])
        {
            Fm+=F[im];
            Rm+=R[im];
            im++; ok=1;
        }
        if(ok)sF+=Fm-Rm;
        else
        {
            while(ir<=n &&R[ir]>F[1])
            {
                Fm+=F[ir];
                Rm+=R[ir];
                ir++; ok=1;
            }
            sR+=Rm-Fm;
        }
    }
    ///fout<<sF<<" "<<sR<<"\n";
    if(sF>sR) fout<<sF;
    else if(sF==sR) fout<<0;
    else fout<<sR;

}
int main()
{
  fin>>c;
  if(c==1) Cerinta1();
  else Cerinta2();
  return 0;
}

