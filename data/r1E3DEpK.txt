#include <bits/stdc++.h>
using namespace std;

int a, n, sol[21];
bool gasit_sol = false;

void afisare(int ep) {
    gasit_sol = true;
    for(int i = 1; i <= ep; ++ i)
        cout << sol[i] << " ";
    cout << "\n";
}

/* Se citesc 3 numere: a, n,k si n numere pozitive distincte. Sa se scrie toate submultimile cu k elemente
din sirul dat astfel incat suma lor sa fie egala cu a. Daca nu exista o astfel de descompunere sa se afiseze mesajul: "Nu exista"*/
int multime[21], nr_elem;

int indice(int val) {
    for(int i = 0; i < n; ++ i)
        if(multime[i] == val)
            return i;
}

bool e_sol_3(int k) {
    int sum = 0;
    if(k != nr_elem)
        return false;
    for(int i = 1; i <= nr_elem; ++ i) {
        sum += sol[i];
    }
    return sum == a;
}

bool ok_3(int k) {
    if(k == 1)
        return true;
    if(indice(sol[k-1]) >= indice(sol[k]))
        return false;
    return true;
}

void backt_3(int k) {
    for(int i = 0; i < n; ++ i) {
        sol[k] = multime[i];
        //afisare(nr_elem);
        if(ok_3(k)) {
            if(e_sol_3(k))
                afisare(nr_elem);
            else backt_3(k+1);
        }
    }
}

void solve_3() {
    cin >> a >> n >> nr_elem;

    for(int i = 0; i < n; ++ i){
        cin >> multime[i];
    }

    backt_3(1);

    if(!gasit_sol)
        cout << "Nu exista";
}

int main() {

    solve_3();

    return 0;
}
