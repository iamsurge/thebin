DECODE_SOURCE = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ*+!\",-.'("
ENCODED = "vujgvmCfb tj ufscfu ouib z/vhm jdjuFyqm jt fscfuu uibo jdju/jnqm fTjnqm tj scfuuf ibou fy/dpnqm yDpnqmf " \
          "jt cfuufs boui dbufe/dpnqmj uGmb tj fuufsc ouib oftufe/ bstfTq jt uufscf uibo otf/ef uzSfbebcjmj " \
          "vout/dp djbmTqf dbtft (ubsfo djbmtqf hifopv up csfbl ifu t/svmf ipvhiBmu zqsbdujdbmju fbutc uz/qvsj " \
          "Fsspst tipvme wfsof qbtt foumz/tjm omfttV mjdjumzfyq odfe/tjmf Jo fui dfgb pg hvjuz-bncj gvtfsf fui " \
          "ubujpoufnq up ftt/hv Uifsf vmetip fc pof.. boe sbcmzqsfgf zpom pof pvt..pcwj xbz pu pe ju/ Bmuipvhi " \
          "uibu bzx bzn puo cf wjpvtpc bu jstug ttvomf sfzpv( i/Evud xOp tj scfuuf ibou /ofwfs uipvhiBm fsofw jt " \
          "fopgu cfuufs boui iu++sjh x/op gJ ifu nfoubujpojnqmf tj eibs pu mbjo-fyq tju( b bec /jefb Jg fui " \
          "foubujpojnqmfn jt fbtz up bjo-fyqm ju znb cf b hppe jefb/ bnftqbdftO bsf pof ipoljoh sfbuh efbj .. " \
          "fu(tm pe psfn gp tf\"uip"


def get_index(target: str, shift: int) -> int:
    index = DECODE_SOURCE.index(target) + shift
    if len(DECODE_SOURCE) < index + 1:
        index = len(DECODE_SOURCE) - index
    return index


def ceasar_decoder(message: str, shift: int) -> str:
    return ''.join([
        char if char not in DECODE_SOURCE else DECODE_SOURCE[get_index(target=char, shift=shift)]
        for char in message
    ])


def shift_string(target: str, shift: int):
    return target[shift % len(target):] + target[:shift % len(target)] \
        if shift != 0 else target


def shift_decoder(target: str, shift: int):
    shifted = ''
    for word in target.split(' '):
        shifted += shift_string(word, shift)
        if "/" in word:
            shift -= 1
        shifted += ' '
    return shifted


ceaser_decoded = ceasar_decoder(message=ENCODED, shift=-1)
shift_decoded = shift_decoder(target=ceaser_decoded, shift=-3)
decoded_result = shift_decoded.replace('/ ', '\n')

print(decoded_result)
