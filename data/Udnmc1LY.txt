    [TestClass]
    public class VersionTests
    {
        [TestMethod]
        public void CurrentVersionIsOlderThanVersion_Returns_True()
        {
            var updateDetails = new ApplicationVersionDetails()
            {
                Major = 1,
                Minor = 2,
                Patch = 3,
                Revision = 0
            };

            var version = new Version(1, 5, 0, 0);

            Assert.IsTrue(updateDetails < version);
        }

        [TestMethod]
        public void CurrentVersionIsOlderThanVersion_CurrentVersionIsNull_Returns_True()
        {
            ApplicationVersionDetails updateDetails = null;

            var version = new Version(1, 5, 0, 0);

            Assert.IsFalse(updateDetails < version);
        }

        [TestMethod]
        public void CurrentVersionIsTheSameAsVersion_Returns_True()
        {
            var updateDetails = new ApplicationVersionDetails()
            {
                Major = 1,
                Minor = 2,
                Patch = 3,
                Revision = 0
            };

            var version = new Version(1, 2, 3, 0);

            Assert.AreEqual(updateDetails, version);
        }

        [TestMethod]
        public void CurrentVersionIsTheSameAsVersion_CurrentVersionIsNull_Returns_True()
        {
            ApplicationVersionDetails updateDetails = null;

            var version = new Version(1, 2, 3, 0);

            Assert.AreNotEqual(updateDetails, version);
        }

        [TestMethod]
        public void CurrentVersionIsNewerThanVersion_Returns_True()
        {
            var updateDetails = new ApplicationVersionDetails()
            {
                Name = "Client Pack",
                Major = 1,
                Minor = 2,
                Patch = 3,
                Revision = 0
            };

            var version = new Version(1, 0, 0, 0);

            Assert.IsTrue(updateDetails > version);
        }

        [TestMethod]
        public void CurrentVersionIsNewerThanVersion_CurrentVersionIsNull_Returns_True()
        {
            ApplicationVersionDetails updateDetails = null;

            var version = new Version(1, 0, 0, 0);

            Assert.IsFalse(updateDetails > version);
        }

        [TestMethod]
        public void VersionIsOlderThanCurrentVersion_Returns_True()
        {
            var updateDetails = new ApplicationVersionDetails()
            {
                Major = 1,
                Minor = 2,
                Patch = 3,
                Revision = 0
            };

            var version = new Version(1, 0, 0, 0);

            Assert.IsTrue(version < updateDetails);
        }

        [TestMethod]
        public void VersionIsOlderThanCurrentVersion_VersionIsNull_Returns_True()
        {
            var updateDetails = new ApplicationVersionDetails()
            {
                Major = 1,
                Minor = 2,
                Patch = 3,
                Revision = 0
            };

            Version version = null;

            Assert.IsFalse(version < updateDetails);
        }

        [TestMethod]
        public void VersionIsTheSameAsCurrentVersion_Returns_True()
        {
            var updateDetails = new ApplicationVersionDetails()
            {
                Major = 1,
                Minor = 2,
                Patch = 3,
                Revision = 0
            };

            var version = new Version(1, 2, 3, 0);

            Assert.AreEqual(version, updateDetails);
        }

        [TestMethod]
        public void VersionIsTheSameAsCurrentVersion_VersionIsNull_Returns_True()
        {
            var updateDetails = new ApplicationVersionDetails()
            {
                Major = 1,
                Minor = 2,
                Patch = 3,
                Revision = 0
            };

            Version version = null;

            Assert.AreNotEqual(version, updateDetails);
        }

        [TestMethod]
        public void VersionIsNewerThanCurrentVersion_Returns_True()
        {
            var updateDetails = new ApplicationVersionDetails()
            {
                Name = "Client Pack",
                Major = 1,
                Minor = 2,
                Patch = 3,
                Revision = 0
            };

            var version = new Version(1, 5, 0, 0);

            Assert.IsTrue(version > updateDetails);
        }

        [TestMethod]
        public void VersionIsNewerThanCurrentVersion_VersionIsNull_Returns_True()
        {
            var updateDetails = new ApplicationVersionDetails()
            {
                Name = "Client Pack",
                Major = 1,
                Minor = 2,
                Patch = 3,
                Revision = 0
            };

            Version version = null;

            Assert.IsFalse(version > updateDetails);
        }
    }