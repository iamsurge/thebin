#include <iostream>
#include <string>
#include <conio.h>
#include <fstream>
using namespace std;

class Client {
public: 
	static int count;
	int number;
	string name;

	Client() {
		count++;
		number = count;
	}
};


class RequestCar {
	float fullprice;
	float price;
	float distance;
	string buns;
public:
	void install();
	void edit();
	void view();
	void deleteobj();

	float GetFullprice() {
		return fullprice;
	}

	RequestCar() {
		fullprice = price = distance = 0;
		buns = "";
	};
    
};

void RequestCar::deleteobj() {
	fullprice = price = distance = 0;
	buns = "";
}

void RequestCar::view() {
	cout << "Номер машины: " << buns;
	cout << "\nДлинна маршрута: " << distance;
	cout << "\nЦена за км: " << price;
	cout << "\nПолная стоимость = " << fullprice;
}

void RequestCar::install()
{
	system("cls");
	cout << "Введите номер машины: ";
	cin >> buns;
	cout << "\nДлинну маршрута: ";
	cin >> distance;
	cout << "\nЦена за км:";
	cin >> price;
	fullprice = price * distance;
	cout << "\nПолная стоимость = " << fullprice;
	_getch();
}

//void RequestCar::install(string tmpbuns,float tmpdistance, float tmpprice) {}

void RequestCar::edit() {
	system("cls");
	int n;
	bool flag = 1;
	while (flag) {
		cout << "Выберите какое поле хотите отредактировать:" << endl;
		cout << "1.Номер машины. ";
		cout << "2.Длинну маршрута. ";
		cout << "3.Цену за км.";
		cout << "4.Выход";
		cin >> n;
		switch (n) {
		case 1:
			cout << "Предыдущий номер: " << buns << endl;
			cout << "Новая номер: ";
			cin >> buns;
			break;
		case 2:
			cout << "Предыдущая длинна маршрута: " << distance << endl;
			cout << "Новая длинна маршрута: ";
			cin >> distance;
			break;
		case 3:
			cout << "Предыдущая цена за км:" << price << endl;
			cout << "Новая Цена за км: ";
			cin >> price;
			fullprice = price * distance;
			break;
		case 4:
			flag = 0;
			break;
		}
	}
}


int main()
{
	setlocale(LC_ALL, "rus");
	
	RequestCar c[10];
	
	string fname = "", tmp = "";
	char buff[25];
	ifstream fin;
	string tmpbuns;
	float tmpdistance, tmpprice;
	

	int n,k, i = 0;

	while (1) {
		system("cls");
		cout << "Введите что вы хотетие сделать:" << endl;
		cout << "1. Ручной ввод" << endl;
		cout << "2. Редактирование" << endl;
		cout << "3. Загрузка из файла" << endl;
		cout << "4. Сохранение в файл" << endl;
		cout << "5. Показать все заказы" << endl;
		cout << "6. Удаление заказа" << endl;
		cout << "7. Выход" << endl;
		cin >> n;

		switch (n)
		{

		case 1:
			c[i].install();
			break;

		case 2:
			for (int j = 0; j < 10; j++)
			{
			if (c[j].GetFullprice() != 0) {
				cout << endl << j << ".Заказ \n";
				c[j].view();
				}
			}
			cout << "\nВыберите номер заказа, который хотите отредактировать: ";
			cin >> k;
			c[k].edit();
			break;

		case 3:
			/*cout << "Введите полное имя файла: ";
			cin >> fname;

			if (!fin.is_open()) {
				cout << "Файл не может быть открыт";
				break;
			}
			else {
				while (!fin.eof()) {
					for (int h = 0; h < 3; h++)
					{
						getline(fin, tmp);
					}
					//c[i].install(tmpbuns, tmpdistance, tmpprice);
				}
			}*/

			break;
		case 4:

			break;

		case 5:
			for (int j = 0; j < 10; j++)
			{
				if (c[j].GetFullprice() != 0) {
					cout << endl << j << ".Заказ \n";
					c[j].view();
				}
			}
			_getch();
			break;

		case 6:
			for (int j = 0; j < 10; j++)
			{
				if (c[j].GetFullprice() != 0) {
					cout << endl << j  << ".Заказ \n";
					c[j].view();
				}
			}
			cout << endl << "Введите номер заказа который хотите удалить: ";
			cin >> k;
			for (; k < 9; k++)
				if (c[k + 1].GetFullprice() != 0) 
					c[k] = c[k + 1];
				else
					c[k].deleteobj();
			break;

		case 7:
			return 0;
			break;
		default:
			break;
		}
		i++;
	}



}
