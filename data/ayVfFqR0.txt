#include <iostream>

using namespace std;

const int N = 8;

int main()
{
    // zdefiniowanie tablicy
    int tablica[N];

    // wczytanie pierwszej liczby do tablicy:
    cout << "Podaj liczby mieszczace sie w tablicy:\n";
    cin >> tablica[0];

    // zdefiniowanie zmiennych przechowujacych wartosci oraz pozycje liczb najwiekszych i najmniejszych
    int najmniejsza = tablica[0], najwieksza = tablica[0], najmniejsza_poz = 0, najwieksza_poz = 0;

    // wypelnianie tablicy
    for(int i = 1; i < N; ++i)
    {
        cin >> tablica[i];
        if(tablica[i] > najwieksza)
        {
            najwieksza = tablica[i];
            najwieksza_poz = i;
        }
        else if(tablica[i] < najmniejsza)
        {
            najmniejsza = tablica[i];
            najmniejsza_poz = i;
        }
    }

    // zamiana miejscami liczby najwiekszej i najmniejszej:
    swap(tablica[najmniejsza_poz], tablica[najwieksza_poz]);

    // wypisywanie tablicy:
    for(int i = 0; i < N; ++i)
        cout << tablica[i] << '\t';
    cout << endl;

    // sortowanie tablicy
    for(int i = 0; i < N - 1; ++i)
        for(int j = 0; j < N - i - 1; ++j)
            if(tablica[j] > tablica[j + 1])
                swap(tablica[j], tablica[j + 1]);

    // wypisywanie tablicy:
    for(int i = 0; i < N; ++i)
        cout << tablica[i] << '\t';
    cout << endl;

    // tworzenie nowej tablicy o rozmiarze N + 1
    int W = N + 1;
    int nowa[W];

    // wprowadzenie wartosci x
    cout << "Podaj wartosc liczby x: ";
    cin >> nowa[0];

    // do nowej tablicy kopiujemy zawartość dotychczasowej tablicy
    for(int i = 1; i < W; ++i)
        nowa[i] = tablica[i - 1];

    // sortujemy nowa tablice
    for(int i = 0; i < W - 1; ++i)
        for(int j = 0; j < W - i - 1; ++j)
            if(nowa[j] > nowa[j + 1])
                swap(nowa[j], nowa[j + 1]);

    // wypisanie ostatecznej wersji tablicy
    for(int i = 0; i < W; ++i)
        cout << nowa[i] << '\t';
    cout << endl;

    return 0;
}