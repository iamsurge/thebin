 @Override
     public String getTableName() {
          return this.getClass().getSimpleName();
     }
     @Override
     public ArrayList<String> getColumnNames() {
         ArrayList<String> columnNames = new ArrayList();
         for(Field f : this.getClass().getDeclaredFields()){
              columnNames.add(f.getName());
         }
         return columnNames;
     }
     @Override
     public ArrayList<Object> getColumnValues() {
          ArrayList<Object> columnValues = new ArrayList<>();
          ArrayList<String> columnNames = getColumnNames();
          for(String columnName : columnNames){
               try {
                    Field field = this.getClass().getDeclaredField(columnName);
                    field.setAccessible(true);
                    Object value = field.get(this);
                    columnValues.add(value);
               } catch (Exception ex) {
                    Logger.getLogger(Exercise.class.getName()).log(Level.SEVERE, null, ex);
               } 
               
          }
          return columnValues;
     }