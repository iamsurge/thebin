#include <iostream>
#include <vector>
using namespace std;
const int maxn = 105;
int idx[maxn];
int size[maxn];
int find_root(int x) {
    while(x != idx[x]) {
        idx[x] = idx[idx[x]];
        x = idx[x];
    }
    return x;
}
bool check(int a, int b) {
    if(find_root(a) == find_root(b)) {
        return true;
    }
    return false;
}
void unite_two_elements(int a, int b) {
    int root_a = find_root(a);
    int root_b = find_root(b);
    if(root_a != root_b) {
        if(size[root_a] < size[root_b]) {
            idx[root_a] = idx[root_b];
            size[root_b] += size[root_a];
        }
        else {
            idx[root_b] = idx[root_a];
            size[root_a] += size[root_b];
        }
    }
}
int main() {
    for(int i = 0; i < maxn; i++) {
        idx[i] = i;
        size[i] = 1;
    }
    
    while(true){
        string s;
        int a, b;
        cin >> s >> a >> b;
        
        if(s == "unite") {
            unite_two_elements(a, b);
        }
        if(s == "check") {
            if(check(a, b)) {
                cout << "YES" << endl;
            }
            else {
                cout << "NO" << endl;
            }
        }
        if(s == "size") {
            cout << size[find_root(a)] << endl;
        }
    }
    return 0;
}
