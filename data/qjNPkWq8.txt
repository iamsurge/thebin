#include <iostream>
#include <vector>
#include <algorithm>
#include <cmath>
#include <set>

// https://acmp.ru/asp/do/index.asp?main=task&id_course=2&id_section=20&id_topic=45&id_problem=599

using namespace std;

typedef long long ll;

const int SIZE = 200001;
const int INF = 1000000001;
int a[SIZE];
ll t[SIZE * 4];
ll c[SIZE * 4];

void push(int v) {
	c[v * 2 + 1] += c[v];
	c[v * 2 + 2] += c[v];
	c[v] = 0;
}

void update(int v, int l, int r, int m) {
	t[v] = max(t[v * 2 + 1] + c[v * 2 + 1], t[v * 2 + 2] + c[v * 2 + 2]);
}

ll ask(int v, int l, int r, int askl, int askr) {
	if (r <= askl || l >= askr) {
		return -INF;
	}

	if (askl <= l && r <= askr) {
		return t[v] + c[v];
	}
	push(v);
	int m = (l + r) / 2;
	int t1 = ask(v * 2 + 1, l, m, askl, askr);
	int t2 = ask(v * 2 + 2, m, r, askl, askr);
	update(v, l, r, m);

	return max(t1, t2);
}

void change(int v, int l, int r, int askl, int askr, ll val) {
	if (l >= askr || r <= askl) {
		return;
	}

	if (askl <= l && askr >= r) {
		c[v] += val;
		return;
	}
	push(v);
	int m = (l + r) / 2;
	change(v * 2 + 1, l, m, askl, askr, val);
	change(v * 2 + 2, m, r, askl, askr, val);
	update(v, l, r, m);
}

int main()
{
	ios_base::sync_with_stdio(0);
	cin.tie(0);
	cout.tie(0);

	int n, k, m;
	cin >> n >> k >> m;

	for (int i = 0; i < m; i++) {
		int l, r;
		cin >> l >> r;
		int res = ask(0, 0, n, l, r);
		if (res < k) {
			change(0, 0, n, l, r, 1);
			cout << 1;
		}
		else { 
			cout << 0;
		}
		cout << '\n';
	}
}