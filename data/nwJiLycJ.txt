-- Function works as a client-replicated bullet caster.

local function Cast(Info)
	local TouchConn 

	local StartPosPart = Info.StartPosPart
	local EndPosPart = Info.EndPosPart
	local Speed = Info.Speed
	local Color = Info.Color
	local Audio = Info.Audio
	local Bullet = Info.Bullet
	local BulletInpact = Bullet.BulletInpact
	local LerpValue = Bullet.Lerp
	
	local LWidth,RWidth,Length = math.random(.1,3),math.random(.1,3),math.random(.6,2.5)
	
	local Bullet = Bullet
	Bullet.Size = Vector3.new(Bullet.Size.X,Bullet.Size.Y,Length)
	Bullet.Position = StartPosPart.Position
	Bullet.CFrame = CFrame.new(StartPosPart.Position,EndPosPart.Position)
	
	local BulletTrace = Bullet:FindFirstChildOfClass('Beam')
	BulletTrace.Width0 = LWidth
	BulletTrace.Width1 = RWidth
	
	local Light = Bullet:FindFirstChildOfClass('PointLight')
	Light.Brightness = 1
	Light.Color = Bullet.Color
	Light.Enabled = true
	Light.Range = 2
	Light.Shadows = false
	Light.Parent = Bullet
		
	local v = LerpValue
	local info = TweenInfo.new(Speed,Enum.EasingStyle.Linear)
	v.Value = 0
	
	local BulletInpactWeld = BulletInpact:FindFirstChildOfClass('WeldConstraint')
	local BulletInpactEffects = BulletInpact.Attachment:GetChildren()
			
	TweenService:Create(v,info,{Value = 1}):Play()

	--[[game.Debris:AddItem(Bullet,Speed)
	game.Debris:AddItem(v,Speed)]]
	
	if Audio then
		HandlerUtil:PlayAudioOnPart(Audio,StartPosPart)
	end
	
	TouchConn = Bullet.Touched:Connect(function(hit)
		if not hit.Parent then return end
		local function ToggleEffect(v,e)
			for _,effect in pairs(e) do
				effect.Enabled = v
			end
		end
		
		if hit.Parent == EndPosPart.Parent then
			BulletInpact.CFrame = CFrame.new(Bullet.Position,StartPosPart.Position)
			BulletInpactWeld.Part0 = BulletInpact
			BulletInpactWeld.Part1 = hit
			TouchConn:Disconnect()
			
			ToggleEffect(true,BulletInpactEffects)
			game.Debris:AddItem(BulletInpact,.1)
		end
	end)
	
	--task.desynchronize()
	while task.wait() and v.Value < 1 do
		local cf = CFrame.new(StartPosPart.Position):Lerp(CFrame.new(EndPosPart.Position),v.Value)
		Bullet.CFrame = CFrame.new(cf.Position,EndPosPart.Position)
	end
	--task.synchronize()
end