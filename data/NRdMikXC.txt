#include<bits/stdc++.h>
using namespace std;

#define total 256
#define mod INT_MAX

void Rabinkarp(string text, string pattern){
    int n= text.size();
    int m= pattern.size();

    int val= 1;
    for(int i=0; i<m-1; ++i){
        val= (val*total)%mod;
    }
    int text_hash=0;
    int pattern_hash=0;

    for(int i=0; i<m; ++i){
        text_hash= (text_hash*total+ text[i])%mod;
        pattern_hash= (pattern_hash*total + pattern[i])%mod;
    }
    for(int i=0; i<=n-m; ++i){
        if(text_hash == pattern_hash){
            int j;
            for(j=0; j<m; ++j){
                if(pattern[j]!=text[i+j])
                    break;
            }
            if(j==m){
                cout<<"Pattern found with shift: "<<i<<endl;
            }
        }
        if(i<n-m){
            text_hash= ((text_hash- text[i]*val)*total + text[i+m]) % mod;
            if(text_hash < 0)
                text_hash+= mod;
        }
    }
}
int main(){
    string text, pattern;
    cout<<"Enter the text: ";
    cin>>text;
    cout<<"Enter the pattern: ";
    cin>>pattern;

    
    Rabinkarp(text, pattern);
    
    return 0;
}