local N

getgenv().Upgrade = false;
getgenv().Rebirth = false;
getgenv().OpenEgg = false;
getgenv().SpinWheel = false;
getgenv().EquipBest = false;

function Upgrade()
    spawn(function ()
        while getgenv().Upgrade == true do
local args = {[1] = {[1] = "Damage Multiplier"}} game:GetService("ReplicatedStorage").Framework.Modules.Shared.Internal.Modules:FindFirstChild("2 | Network").Remotes.s_controller_upgrade:InvokeServer(unpack(args)) wait(0.1)
local args = {[1] = {[1] = "Health Multiplier"}} game:GetService("ReplicatedStorage").Framework.Modules.Shared.Internal.Modules:FindFirstChild("2 | Network").Remotes.s_controller_upgrade:InvokeServer(unpack(args)) wait(0.1)
local args = {[1] = {[1] = "Walk Speed"}} game:GetService("ReplicatedStorage").Framework.Modules.Shared.Internal.Modules:FindFirstChild("2 | Network").Remotes.s_controller_upgrade:InvokeServer(unpack(args)) wait(0.1)
local args = {[1] = {[1] = "Jump Power"}} game:GetService("ReplicatedStorage").Framework.Modules.Shared.Internal.Modules:FindFirstChild("2 | Network").Remotes.s_controller_upgrade:InvokeServer(unpack(args)) wait(0.1)
local args = {[1] = {[1] = "Inventory Space"}} game:GetService("ReplicatedStorage").Framework.Modules.Shared.Internal.Modules:FindFirstChild("2 | Network").Remotes.s_controller_upgrade:InvokeServer(unpack(args)) wait(0.1)
local args = {[1] = {[1] = "Pet Space"}} game:GetService("ReplicatedStorage").Framework.Modules.Shared.Internal.Modules:FindFirstChild("2 | Network").Remotes.s_controller_upgrade:InvokeServer(unpack(args)) wait(0.1)

        end
    end)
end
function Rebirth()
    spawn(function ()
        while getgenv().Rebirth == true do
local args = {[1] = {}} game:GetService("ReplicatedStorage").Framework.Modules.Shared.Internal.Modules:FindFirstChild("2 | Network").Remotes.s_controller_rebirth:InvokeServer(unpack(args)) wait(0.1)
        end
    end)
end
function Egg(N)
    spawn(function ()
        while getgenv().OpenEgg == true do
local args = {[1] = {[1] = N}} game:GetService("ReplicatedStorage").Framework.Modules.Shared.Internal.Modules:FindFirstChild("2 | Network").Remotes.s_controller_buyegg:InvokeServer(unpack(args)) wait(0.1)
        end
    end)
end
function Wheel()
    spawn(function ()
        while getgenv().SpinWheel == true do
local args = {[1] = {}} game:GetService("ReplicatedStorage").Framework.Modules.Shared.Internal.Modules:FindFirstChild("2 | Network").Remotes.s_controller_spinwheel:InvokeServer(unpack(args)) wait(0.1)
        end
    end)
end
function Best()
    spawn(function ()
        while getgenv().EquipBest == true do
local args = {[1] = {}} game:GetService("ReplicatedStorage").Framework.Modules.Shared.Internal.Modules:FindFirstChild("2 | Network").Remotes.s_pets_bestpets:FireServer(unpack(args)) wait(0.1)
        end
    end)
end

local library = loadstring(game:HttpGet(('https://raw.githubusercontent.com/bloodball/-back-ups-for-libs/main/wall%20v3')))()

local w = library:CreateWindow("Strong Ninja Simulator")

local b = w:CreateFolder("Autofarm")

b:Toggle("Upgrade",function(val)
getgenv().Upgrade = val
Upgrade()
end)

b:Toggle("Wheel",function(val)
getgenv().SpinWheel = val
Wheel()
end)

b:Toggle("Rebirth",function(val)
getgenv().Rebirth = val
Rebirth()
end)

b:Toggle("Best Pet",function(val)
getgenv().EquipBest = val
Best()
end)

b:Toggle("Egg",function(val)
getgenv().OpenEgg = val
Egg(N)
end)

b:Dropdown("Select Egg",{"Beach Egg","Forest Egg","Dominus Egg","Dragon Egg","Alien Egg","Arctic Egg","Zombie Egg","Hell Egg","Heaven Egg"},true,function(val)
N = val
end)

local b = w:CreateFolder("Credits")
 
b:Label("Made by X_LuaF#0705",{
    TextSize = 21;
    TextColor = Color3.fromRGB(255,255,255);
    BgColor = Color3.fromRGB(69,69,69);
})
 
b:Button("Copy Discord Invite",function()
    setclipboard("https://discord.gg/8tRb8MQcW5")
end)
 
b:DestroyGui()
 
 
local b = w:CreateFolder("LocalPlayer")
 
local S
local J
local H
local G
 
b:Box("Speed","number",function(val)
S = val
end)
b:Box("Jump","number",function(val)
J = val
end)
b:Box("Hip Height","number",function(val)
H = val
end)
b:Box("Gravity","number",function(val)
G = val
end)
 
b:Toggle("Speed",function(bool)
getgenv().Speed = bool
Speed(S)
end)
b:Toggle("Jump",function(bool)
getgenv().Jump = bool
Jump(J)
end)
b:Toggle("Hip Height",function(bool)
getgenv().Hip = bool
Hip(H)
end)
b:Toggle("Gravity",function(bool)
getgenv().Grav = bool
Grav(G)
end)
 
b:Slider("FOV (Default is 70)",{min = 0;max = 120;precise = true;},function(val)
    game.workspace.CurrentCamera.FieldOfView = val
end)
 
b:Button("Full LocalPlayer",function()
    loadstring(game:HttpGet("https://pastebin.com/raw/GphZf9Xe"))()
end)
 
 
function TPTo(PCFrame)
    local plr = game.Players.LocalPlayer;
           if plr.Character then
            plr.Character.HumanoidRootPart.CFrame = PCFrame
        end
    end
 
getgenv().Speed = false;
getgenv().Jump = false;
getgenv().Hip = false;
getgenv().Chat = false;
getgenv().Grav = false;
 
function Chat(Mes, Freq)
    spawn(function ()
        while getgenv().Chat == true do
local args = {[1] = Mes,[2] = "All"} game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(unpack(args))
wait(Freq)
        end
    end)
end
 
function Speed(Nume)
    spawn(function ()
        if getgenv().Speed == true then
            while getgenv().Speed == true do
                game:GetService("Players").LocalPlayer.Character.Humanoid.WalkSpeed = Nume
                wait()
            end
        elseif getgenv().Speed == false then
            game:GetService("Players").LocalPlayer.Character.Humanoid.WalkSpeed = 16
        end
    end)
end
function Jump(Nume)
    spawn(function ()
        if getgenv().Jump == true then
            while getgenv().Jump == true do
                game:GetService("Players").LocalPlayer.Character.Humanoid.JumpPower = Nume
                wait()
        end
    elseif getgenv().Jump == false then
            game:GetService("Players").LocalPlayer.Character.Humanoid.JumpPower = 50
        end
    end)
end
function Hip(Nume)
    spawn(function ()
        if getgenv().Hip == true then
            while getgenv().Hip == true do
            game:GetService("Players").LocalPlayer.Character.Humanoid.HipHeight = Nume
            wait()
        end
    elseif getgenv().Hip == false then
            game:GetService("Players").LocalPlayer.Character.Humanoid.HipHeight = 0.1
        end
    end)
end
function Grav(Nume)
    spawn(function ()
        if getgenv().Grav == true then
            while getgenv().Grav == true do
                game:GetService("Workspace").Gravity = Nume
            wait()
        end
    elseif getgenv().Grav == false then
        game:GetService("Workspace").Gravity = 196.2
        end
    end)
end