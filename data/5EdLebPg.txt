import os # Useful to change foreground colours and clear terminal

# Useful for automatic testing
import sys
import time
import random 
import string
from typing import List

# "Declaration"
# DECLARE Numbers: ARRAY[1:100] OF INTEGER
# DECLARE ListSize, Index, Number, Total, PositiveNumberCount, NegativeNumberCount, Timer: INTEGER
# DECLARE Average: REAL
# DECLARE EndChoice: CHAR
# DECLARE AutomaticMode: BOOL

# ----------------------------------------------------------------------------------------------------------------------------------

# Changeable Settings
AutomaticMode = True # Set to False if you want to enter 100 numbers manually (I would not reccomend it as it's time consuming)
ListSize = 100 # Setting a size for the list to ease testing (should be set to 100 when testing is done)
Timer = 10 # Timer for automatic mode to begin (set Timer to -1 or less to start without a Timer)
Delay = 0.01 # Delay for program to input values by itself

# ----------------------------------------------------------------------------------------------------------------------------------

# Procedure to clear terminal based on OS
def Clear():
    if os.name == "posix":
        os.system("clear")
    elif os.name == "nt":
        os.system("cls")

# Procedure to terminate program if there are any errors
def TerminateProgram():
    for RemainingTime in range(Timer, -1, -1):
        sys.stdout.write("\r")
        if RemainingTime == 10:
            sys.stdout.write("   The program will terminate itself in \033[1;32m{:s}\033[1;31m seconds.".format(str(RemainingTime)))
        elif RemainingTime < 10:
            sys.stdout.write("   The program will terminate itself in \033[1;32m{:s}\033[1;31m seconds.".format(str(0) + str(RemainingTime)))
        elif RemainingTime == 1:
            sys.stdout.write("   The program will terminate itself in \033[1;32m{:s}\033[1;31m second.".format(str(0) + str(RemainingTime)))
        sys.stdout.flush()
        time.sleep(1)
    exit()

# Setting a title for Windows command prompt users
if os.name == "nt":
    os.system("title Python Lists - Made by Ocean")

Numbers = []

# Error Checking important variables
try:
    ListSize = int(ListSize)
except ValueError:
    print("\n")
    print("\033[1;31m   Variable \"ListSize\" is not an integer value. Please try again.")
    TerminateProgram()

if ListSize <= 0:
    print("\n")
    print("\033[1;31m   Variable \"ListSize\" cannot be lesser than or equal to 0. Please try again.")
    TerminateProgram()

if not isinstance(AutomaticMode, bool):
    print("\n")
    print("\033[1;31m   Variable \"AutomaticMode\" must be of type boolean. Please try again.")
    TerminateProgram()

# "Initializing" the list (pseudocode style)
for Index in range(ListSize):
    Numbers.append(None)

# Loop to ease testing and for bulk use
while True: 
    # Nice opening
    Clear()
    print("")
    print("\033[1;36m  __________          __  .__                    \033[1;34m.____    .__          __            ")
    print("\033[1;36m  \______   \___.__._/  |_|  |__   ____   ____   \033[1;34m|    |   |__| _______/  |_  ______  ")
    print("\033[1;36m   |     ___<   |  |\   __\  |  \ /  _ \ /    \  \033[1;34m|    |   |  |/  ___/\   __\/  ___/  ")
    print("\033[1;36m   |    |    \___  | |  | |   Y  (  <_> )   |  \ \033[1;34m|    |___|  |\___ \  |  |  \___ \   ")
    print("\033[1;36m   |____|    / ____| |__| |___|  /\____/|___|  / \033[1;34m|_______ \__/____  > |__| /____  >  ")
    print("\033[1;36m             \/                \/            \/  \033[1;34m        \/       \/            \/   ")
    print("")
    print("  \033[1;36m---------------------------------- \033[0;37mMade by Ocean \033[1;34m----------------------------------")
    print("")

    # Checking and activating Automatic Mode if AutomaticMode is True
    if AutomaticMode:
        print("\033[0;37m   Automatic Mode is \033[1;32menabled\033[0;37m.")
        if ListSize == 1:
            print("   The program will automatically enter 1 value by itself.")
        else:
            print("   The program will automatically enter " + str(ListSize) + " values by itself.")
        print("   To disable this and enter values manually, change the AutomaticMode variable to False.\n")

        #Countdown for user to read instructions
        for RemainingTime in range(Timer, -1, -1):
            sys.stdout.write("\r")
            if RemainingTime == 10:
                sys.stdout.write("   The program will enter values by itself in \033[1;32m{:s}\033[0;37m seconds.".format(str(RemainingTime)))
            elif RemainingTime < 10:
                sys.stdout.write("   The program will enter values by itself in \033[1;32m{:s}\033[0;37m seconds.".format(str(0) + str(RemainingTime)))
            elif RemainingTime == 1:
                sys.stdout.write("   The program will enter values by itself in \033[1;32m{:s}\033[0;37m second.".format(str(0) + str(RemainingTime)))
            sys.stdout.flush()
            time.sleep(1)
        print("\n")
    else:
        print("\033[0;37m   Automatic Mode is \033[1;31mdisabled\033[0;37m.")
        if ListSize == 1:
            print("   You will have to enter 1 value manually.")
        else:
            print("   You will have to enter " + str(ListSize) + " values manually.")
        print("   To disable this and let the program enter values by itself, change the AutomaticMode variable to True.")
        print("")

    # Entering the data
    Index = 0
    while Index < ListSize:
        # Checking if value entered is an integer or not
        try:
            if not AutomaticMode:
                Number = input("\033[1;32m   Enter Number " + str(Index + 1) + ": ")
            else:
                if random.randint(0, 1) == 0:
                    Number = random.randint(int("-" + str(ListSize)), ListSize)
                else:
                    Number = random.choice(string.ascii_letters)
                print("\033[1;32m   Enter Number " + str(Index + 1) + ": " + str(Number))
                time.sleep(Delay)

            Numbers[Index] = int(Number)   

        except ValueError:
            print("\033[1;31m   \"" + str(Number) + "\" is not an integer. Please try again.")
            Index = Index - 1

        Index = Index + 1

    # Displaying list
    print("\n")
    for Index in range(ListSize):
        if Index < 9:
            print("   Numbers[" + "00" + str(Index + 1) + "]: " + str(Numbers[Index]))
        if 9 <= Index < 99:
            print("   Numbers[" + "0" + str(Index + 1) + "]: " + str(Numbers[Index]))
        if Index >= 99:
            print("   Numbers[" + str(Index + 1) + "]: " + str(Numbers[Index]))

    # Calculating and displaying the total
    Total = 0
    for Index in range(ListSize):
        Total = Total + Numbers[Index]
    print("\n   Total: " + str(Total))

    # Calculating and displaying the average
    Average = Total / ListSize
    print("   Average: " + str(Average))

    #Counting the positive and negative numbers
    PositiveNumberCount = 0
    NegativeNumberCount = 0
    for Index in range(1, ListSize):
        if Numbers[Index] > 0:
            PositiveNumberCount = PositiveNumberCount + 1
        elif Numbers[Index] < 0:
            NegativeNumberCount = NegativeNumberCount + 1

    # Fixing english and displaying the counts
    if PositiveNumberCount == 1:
        print("\n   There is 1 Positive Number in the list")
    else:
        print("\n   There are " + str(PositiveNumberCount) + " Positive Numbers in the list")

    if NegativeNumberCount == 1:
        print("   There is 1 Negative Number in the list\m\n")
    else:
        print("   There are " + str(NegativeNumberCount) + " Negative Numbers in the list\n")

    # EndChoice to re enter data or exit
    if not AutomaticMode:
        EndChoice = input("   Enter anything (except \"E\") to re enter values or enter \"E\" to exit: ")

    else:
        if random.randint(0, 1) == 0:
            EndChoice = "E"
        else:
            EndChoice = random.choice(string.ascii_letters)
            while EndChoice == "E":
                EndChoice = random.choice(string.ascii_letters)

        print("   Enter anything (except \"E\") to re enter values or enter \"E\" to exit: " + EndChoice)

        for RemainingTime in range(Timer, -1, -1):
            sys.stdout.write("\r")
            if RemainingTime == 10:
                sys.stdout.write("   The program will resume with it's choice in \033[0;37m{:s}\033[1;32m seconds.".format(str(RemainingTime)))
            elif RemainingTime < 10:
                sys.stdout.write("   The program will resume with it's choice in \033[0;37m{:s}\033[1;32m seconds.".format(str(0) + str(RemainingTime)))
            elif RemainingTime == 1:
                sys.stdout.write("   The program will resume with it's choice in \033[0;37m{:s}\033[1;32m second.".format(str(0) + str(RemainingTime)))
            sys.stdout.flush()
            time.sleep(1)

    if EndChoice.upper() == "E":
        exit()
    else:
        Clear()