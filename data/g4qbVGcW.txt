"#include <bits/stdc++.h>\r\nusing namespace std;\r\nint main(){\r\n\tlong long n;\r\n\tcin >> n;\r\n\tpair<long long, long long> p[n];\r\n\t\r\n\tfor(int i = 0; i < n; i++){\r\n\t\tlong long a, b;\r\n\t\tcin >> a >> b;\r\n\t\tp[i] = {a,b};\r\n\t}\r\n\tsort(p, p + n);\r\n\t/*for(int i = 0; i < n; i++){\r\n\t\tcout << p[i].first << \" \" << p[i].second << endl;\r\n\t}*/\r\n\tlong long pozicija = 0;\r\n\tfor(int i = 0; i < n; i++){\r\n\t\tif(p[i].first < 0 && p[i + 1].first > 0)\r\n\t\t\tpozicija = i;\r\n\t}\r\n\tlong long neg = pozicija, poz = pozicija + 1;\r\n\tlong long MOD = 1e9 + 7;\r\n\tlong long sum = 0;\r\n\tlong long trpoz = 0;\r\n\tlong long smer = 6;\r\n\twhile(neg >=0 && poz <= n - 1){\r\n\t\tif(smer == 6){\r\n\t\t\tif(p[neg].second == p[poz].second){\r\n\t\t\t\tsum += abs(trpoz - p[poz].first);\r\n\t\t\t\tsum += abs(p[poz].second + p[neg].second - 1) * (abs(p[poz].first - p[neg].first));\r\n\t\t\t\tsmer = 6;\r\n\t\t\t\ttrpoz = p[neg].first;\r\n\t\t\t\tneg--;\r\n\t\t\t\tpoz++;\r\n\t\t\t}\r\n\t\t\telse if(p[neg].second > p[poz].second){\r\n\t\t\t\tp[neg].second -= (p[poz].second - 1);\r\n\t\t\t\tsum += ((p[poz].second - 1) * 2 * abs(p[poz].first - p[neg].first));\r\n\t\t\t\tsum += abs(p[poz].first - trpoz);\r\n\t\t\t\ttrpoz = p[poz].first;\r\n\t\t\t\tsmer = 4;\r\n\t\t\t\tpoz++;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tp[poz].second -= p[neg].second;\r\n\t\t\t\tsum += ((2 * p[neg].second - 1) * abs(p[poz].first - p[neg].first));\r\n\t\t\t\tsum += abs(p[poz].first - trpoz);\r\n\t\t\t\ttrpoz = p[neg].first;\r\n\t\t\t\tsmer = 6;\r\n\t\t\t\tneg--;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if(smer == 4){\r\n\t\t\tif(p[neg].second == p[poz].second){\r\n\t\t\t\tsum += abs(trpoz - p[neg].first);\r\n\t\t\t\tsum += abs(p[poz].second + p[neg].second - 1) * (abs(p[poz].first - p[neg].first));\r\n\t\t\t\tsmer = 4;\r\n\t\t\t\ttrpoz = p[poz].first;\r\n\t\t\t\tneg--;\r\n\t\t\t\tpoz++;\r\n\t\t\t}\r\n\t\t\telse if(p[neg].second > p[poz].second){\r\n\t\t\t\tp[neg].second -= (p[poz].second);\r\n\t\t\t\tsum += ((2 * p[poz].second - 1) * abs(p[poz].first - p[neg].first));\r\n\t\t\t\tsum += abs(p[neg].first - trpoz);\r\n\t\t\t\ttrpoz = p[poz].first;\r\n\t\t\t\tsmer = 4;\r\n\t\t\t\tpoz++;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tp[poz].second -= (p[neg].second - 1);\r\n\t\t\t\tsum += ((p[neg].second - 1) * 2 * abs(p[poz].first - p[neg].first));\r\n\t\t\t\tsum += abs(p[neg].first - trpoz);\r\n\t\t\t\ttrpoz = p[neg].first;\r\n\t\t\t\tsmer = 6;\r\n\t\t\t\tneg--;\r\n\t\t\t}\r\n\t\t}\r\n\t\tsum %= MOD;\r\n\t\t//cout << sum << endl << endl;\r\n\t}\r\n\tif(neg == -1 && poz <= n - 1)\r\n\t\tsum += abs(p[0].first - p[poz].first);\r\n\tif(poz > n - 1 && neg >= 0)\r\n\t\tsum += abs(p[n - 1].first - p[neg].first);\r\n\tsum %= MOD;\r\n\tcout << sum;\r\n\treturn 0;\r\n}"