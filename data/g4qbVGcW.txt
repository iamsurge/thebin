#include <bits/stdc++.h>
using namespace std;
int main(){
	long long n;
	cin >> n;
	pair<long long, long long> p[n];
	
	for(int i = 0; i < n; i++){
		long long a, b;
		cin >> a >> b;
		p[i] = {a,b};
	}
	sort(p, p + n);
	/*for(int i = 0; i < n; i++){
		cout << p[i].first << " " << p[i].second << endl;
	}*/
	long long pozicija = 0;
	for(int i = 0; i < n; i++){
		if(p[i].first < 0 && p[i + 1].first > 0)
			pozicija = i;
	}
	long long neg = pozicija, poz = pozicija + 1;
	long long MOD = 1e9 + 7;
	long long sum = 0;
	long long trpoz = 0;
	long long smer = 6;
	while(neg >=0 && poz <= n - 1){
		if(smer == 6){
			if(p[neg].second == p[poz].second){
				sum += abs(trpoz - p[poz].first);
				sum += abs(p[poz].second + p[neg].second - 1) * (abs(p[poz].first - p[neg].first));
				smer = 6;
				trpoz = p[neg].first;
				neg--;
				poz++;
			}
			else if(p[neg].second > p[poz].second){
				p[neg].second -= (p[poz].second - 1);
				sum += ((p[poz].second - 1) * 2 * abs(p[poz].first - p[neg].first));
				sum += abs(p[poz].first - trpoz);
				trpoz = p[poz].first;
				smer = 4;
				poz++;
			}
			else{
				p[poz].second -= p[neg].second;
				sum += ((2 * p[neg].second - 1) * abs(p[poz].first - p[neg].first));
				sum += abs(p[poz].first - trpoz);
				trpoz = p[neg].first;
				smer = 6;
				neg--;
			}
		}
		else if(smer == 4){
			if(p[neg].second == p[poz].second){
				sum += abs(trpoz - p[neg].first);
				sum += abs(p[poz].second + p[neg].second - 1) * (abs(p[poz].first - p[neg].first));
				smer = 4;
				trpoz = p[poz].first;
				neg--;
				poz++;
			}
			else if(p[neg].second > p[poz].second){
				p[neg].second -= (p[poz].second);
				sum += ((2 * p[poz].second - 1) * abs(p[poz].first - p[neg].first));
				sum += abs(p[neg].first - trpoz);
				trpoz = p[poz].first;
				smer = 4;
				poz++;
			}
			else{
				p[poz].second -= (p[neg].second - 1);
				sum += ((p[neg].second - 1) * 2 * abs(p[poz].first - p[neg].first));
				sum += abs(p[neg].first - trpoz);
				trpoz = p[neg].first;
				smer = 6;
				neg--;
			}
		}
		sum %= MOD;
		//cout << sum << endl << endl;
	}
	if(neg == -1 && poz <= n - 1)
		sum += abs(p[0].first - p[poz].first);
	if(poz > n - 1 && neg >= 0)
		sum += abs(p[n - 1].first - p[neg].first);
	sum %= MOD;
	cout << sum;
	return 0;
}