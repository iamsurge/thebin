require "sanify"

Move = {}
function Move:location(currentLocation, targetLocation, blocks, action)
  local direction = FindDirection(currentLocation)

  Move:up(5, true, blocks, action)

  if direction == Direction.NORTH then
    Move:forward(targetLocation["z"] - currentLocation["z"], true, blocks, action)
    Move:left(targetLocation["x"] - currentLocation["x"])
  elseif direction == Direction.EAST then
    Move:left(targetLocation["z"] - currentLocation["z"])
    Move:forward(targetLocation["x"] - currentLocation["x"], true, blocks, action)
  elseif direction == Direction.SOUTH then
    Move:left(targetLocation["x"] - currentLocation["x"])
    Move:forward(currentLocation["z"] - targetLocation["z"], true, blocks, action)
  elseif direction == Direction.WEST then
    Move:forward(currentLocation["x"] - targetLocation["x"], true, blocks, action)
    Move:left(currentLocation["z"] - targetLocation["z"])
  end

  Move:up((targetLocation["y"] - currentLocation["y"]) - 1, true, blocks, action)
end

function Move:forward(amount, safe, blocks, action)
  if amount < 0 then
    Move:uturn()
    amount = -amount
  end
  while amount >= 1 do
    if safe then
      while not turtle.forward() do
        local block = turtle.inspect()
        if CheckList(blocks, block) then
          turtle.dig()
        end
      end
    else
      turtle.forward()
    end
    if action ~= nil then
      action()
    end
    amount = amount - 1
  end
end

function Move:up(amount, safe, blocks, action)
  if amount < 0 then
    Move:down(amount, safe)
    return
  end
  while amount >= 1 do
    if safe then
      while not turtle.up() do
        local block = turtle.inspectUp()
        if CheckList(blocks, block) then
          turtle.digUp()
        end
      end
    else
      turtle.up()
    end
    if action ~= nil then
      action()
    end

    amount = amount - 1
  end
end

function Move:down(amount, safe, blocks, action)
  if amount < 0 then
    Move:up(amount, safe)
    return
  end
  while amount >= 1 do
    if safe then
      while not turtle.down() do
        local block = turtle.inspectDown()
        if CheckList(blocks, block) then
          turtle.digDown()
        end
      end
    else
      turtle.down()
    end
    if action ~= nil then
      action()
    end

    amount = amount - 1
  end
end

function Move:uturn()
  Move:turnLeft(2)
end

function Move:turnLeft(amount)
  if amount < 0 then
    Move:turnRight(amount)
    return
  end
  while amount >= 1 do
    turtle.turnLeft()
    amount = amount - 1
  end
end

function Move:left(amount)
  if amount < 0 then
    Move:right(amount)
    return
  end
  turtle.turnLeft()
  
  Move:forward(amount)
end

function Move:turnRight(amount)
  if amount < 0 then
    Move:turnLeft(amount)
    return
  end
  while amount >= 1 do
    turtle.turnRight()
    amount = amount - 1
  end
end

function Move:right(amount)
  if amount < 0 then
    Move:left(amount)
    return
  end

  Move:forward(amount)
end

return Move
