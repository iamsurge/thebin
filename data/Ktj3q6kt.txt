#include <iostream>
#include <vector>
#include <algorithm>
#include <cmath>
#include <set>
#include <queue>

using namespace std;

typedef long long ll;

const int INF = 30000;

struct Edge {
	int from, to, c;
};

int n, m;
vector<int> d;
vector<Edge> g;

int main()
{
	ios_base::sync_with_stdio(0);
	cin.tie(0);
	cout.tie(0);

	cin >> n >> m;
	d.resize(n, INF);
	for (int i = 0; i < m; i++) {
		Edge e;
		int f, t, c;
		cin >> f >> t >> c;
		--f, --t;
		e.from = f;
		e.to = t;
		e.c = c;
		g.push_back(e);
	}
	
	d[0] = 0;
	for (int i = 0; i < n; i++) {
		for (auto e : g) {
			if(d[e.from] != INF)
			d[e.to] = min(d[e.to], d[e.from] + e.c);
		}
	}

	for (int i = 0; i < n; i++) {
		cout << d[i] << ' ';
	}
}