#include <auroraapp/auroraapp.h>
#include "camerastream.h"
#include "fileopener.h"
#include "ycbcrframemetatypeconnector.h"
#include <QtQuick>
#include <QMetaType>
extern "C"
{
#include "libavcodec/avcodec.h"
#include "libavformat/avformat.h"
#include "libswscale/swscale.h"
#include "libavutil/avutil.h"
}
int main(int argc, char *argv[])
{
    av_log_set_level(AV_LOG_DEBUG);
    av_log(NULL, AV_LOG_DEBUG,"Hello ffmpeg!\n");
    av_log(NULL, AV_LOG_DEBUG,"ffmpeg version = %s\n", av_version_info());
    QScopedPointer<QGuiApplication> application(Aurora::Application::application(argc, argv));
    application->setOrganizationName(QStringLiteral("ru.auroraos"));
    application->setApplicationName(QStringLiteral("CameraStream"));
    qmlRegisterType<CameraStream>("ru.auroraos.CameraStream", 1, 0, "CameraStream");
    qmlRegisterType<FileOpener>("ru.auroraos.FileOpener", 1, 0, "FileOpener");
    qRegisterMetaType<std::shared_ptr<Aurora::StreamCamera::YCbCrFrame>>();
    qRegisterMetaType<std::shared_ptr<const Aurora::StreamCamera::YCbCrFrame>>();
    QScopedPointer<QQuickView> view(Aurora::Application::createView());
    view->setSource(Aurora::Application::pathTo(QStringLiteral("qml/CameraStream.qml")));
    view->show();

    return application->exec();
}
