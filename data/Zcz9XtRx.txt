-- Ask the user for the side to open the rednet connection on
print("Open rednet on what side?")
local rednetSide = read()

-- Ask the user for the side to set the redstone signal on
print("Redstone signal on what side?")
local redstoneSide = read()

-- Ask the user for the rednet protocol to use
print("Use what protocol?")
local rednetProtocol = read()

-- Ask the user for the message prefix to use
print("What message prefix?")
local messagePrefix = read()

-- Open a rednet connection on the specified side
rednet.open(rednetSide)

while true do
  -- Wait for a message to be received
  senderID, message, protocol = rednet.receive(rednetProtocol)

  -- Check if the message is the "on" message
  if message == messagePrefix.."-on" then
    -- Turn on the redstone signal
    redstone.setOutput(redstoneSide, true)

	-- Print relevant information
    print("Redstone output updated:")
    print("  Sender ID: "..senderID)
    print("  Sender label: "..rednet.getName(senderID))
    print("  New redstone status: ON")
  elseif message == messagePrefix.."-off" then
    -- Turn off the redstone signal
    redstone.setOutput(redstoneSide, false)

	-- Print relevant information
    print("Redstone output updated:")
    print("  Sender ID: "..senderID)
    print("  Sender label: "..rednet.getName(senderID))
    print("  New redstone status: OFF")
  end
end