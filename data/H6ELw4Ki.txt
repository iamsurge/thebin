//use std::io;

fn test() -> i32 {println!("son qui"); 100}

fn main() {
   
  let anni=22;

  if anni>=180 || test()==100
    {println!("Vedo che sei maggiorenne");}
  else 
    {println!("Sei minorenne");}

    let numero=1;

    match numero{
    1|2|3=>println!("Uno, due o tre"),
    // 2=>println!("Due"),
    // 3=>println!("Tre"),
    _=>println!("Diverso da uno, due o tre"),    
  }

  let gusto="fragola";

  fn nulla() {}

  match gusto {
    "limone" => println!("puah!"),
    "fragola"  => println!("accettabile ..."),
    "zabaione" => println!("ORA ci siamo :) "),
    _ => nulla()
  }

  let colore = "yellow";

  let (r, g, b) = match colore {
    "red" => {
       let _x= 100; 
       println!("step intermedio");
       (255, 0, 0)
    },
    "yellow" => (255, 255, 0),
    _ => (0,0,0)
  };

  println!("Traduzione in RGB: {}, {}, {}", r, g, b);

  enum MetodiPagamento
  {
    Contante(String),
    Assegno(String)
  }

  let metodo1 = {MetodiPagamento::Contante("Dollari".to_string())};
  let _metodo2 = {MetodiPagamento::Assegno("Circolare".to_string())};

  match metodo1 {
    MetodiPagamento::Contante(y) => println!("Transazione in {}!", y),
    MetodiPagamento::Assegno(y) => println!("Assegno di tipo {}!", y),
    _ => ()
  }
    
}