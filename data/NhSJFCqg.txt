const int maxn = 1000 + 100;
int dp[maxn][maxn];

class Solution {
public:
    int numDistinct(string s, string t) {
        int len1 = s.length();
        int len2 = t.length();
        for (int i = 0; i <= len1; ++i) {
            for(int j = 0; j <= len2; ++j) {
                dp[i][j] = 0;
                if (j == 0) {
                    dp[i][0] = 1;
                }
            }
        }
        for (int i = 1; i <= len1; ++i) {
            int top = min(i, len2);
            for (int j = 1; j <= top; ++j) {
                dp[i][j] = dp[i - 1][j];
                if (s[i - 1] == t[j - 1]) {
                    dp[i][j] += dp[i - 1][j - 1];
                }
            }
        }
        return dp[len1][len2];
    }
};