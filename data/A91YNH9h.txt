/*
	Task	: _example
	Author	: Phumipat C. [MAGCARI]
	Language: C++
	Created	: 12 November 2022 [11:50]
*/
#include<bits/stdc++.h>
using namespace std;
struct A{
	int v,w;
};
vector<A > g[100010];
struct B{
	int v,d,k;
	bool operator < (const A&o) const{
		return d > o.d;
	}
};
priority_queue<B > heap;
int dis[100010][2];
int main(){
	int n,m,s,t,u,v,w,sumW = 0;
	scanf("%d %d %d %d",&n,&m,&s,&t);
	for(int i=1;i<=m;i++){
		scanf("%d %d %d",&u,&v,&w);
		g[u].push_back({v,w});
		g[v].push_back({u,w});
		sumW+=w;
	}
	for(int i=0;i<n;i++)
		dis[i][0] = dis[i][1] = 1e9;
	dis[s][1] = 0;
	heap.push({s,0,1});
	while(!heap.empty()){
		auto now = heap.top();
		heap.pop();
		if(now.v == t && now.k == 0){
			printf("%d\n",sumW-now.d);
			break;
		}
		for(auto x:g[now.v]){
			//special
			if(now.k && dis[x.v][0] > now.d){
				dis[x.v][0] = now.d;
				heap.push({x.v,now.d,0});
			}
			//normal
			if(dis[x.v][now.k] > now.d + x.w){
				dis[x.v][now.k] = now.d + x.w;
				heap.push({x.v,dis[x.v][now.k],now.k});
			}
		}
	}
	return 0;
}