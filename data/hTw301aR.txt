from string import ascii_letters
import re


class Registration:

    def __init__(self, login, password):
        self.login = login
        self.password = password

    @staticmethod
    def is_include_digit(password):
        for i in password:
            if 48 <= ord(i) <= 57:
                return True
        else:
            return False

    @staticmethod
    def is_include_all_register(password):
        count_upper = 0
        count_lower = 0
        for i in password:
            if count_lower != 1 and count_upper != 1:
                if 65 <= ord(i) <= 90:
                    count_upper += 1
                elif 97 <= ord(i) <= 122:
                    count_lower += 1
            else:
                return True
        else:
            return False

    @staticmethod
    def is_include_only_latin(password):
        for i in password:
            if i not in 'QqWwEeRrTtYyUuIiOoPpAaSDsdFGHJKLZXCVBNMfghjklzxcvbnm1234567890':
                return False
        else:
            return True

    @staticmethod
    def check_password_dictionary(password):
        __forbidden = ['123456', 'password', '123456789', '12345', '12345678', 'qwerty', '1234567', '111111',
                     '1234567890',
                     '123123', 'abc123', '1234', 'password1', 'iloveyou', '1q2w3e4r', '000000', 'qwerty123', 'zaq12wsx',
                     'dragon', 'sunshine', 'princess', 'letmein', '654321', 'QwerTy123', 'KissasSAd1f', 'monkey',
                     '27653',
                     '1qaz2wsx', '123321', 'qwertyuiop', 'superman', 'asdfghjkl']
        return False if password in __forbidden else True

    @staticmethod
    def __check_login(login):
        if '@' in login:
            if '.' in login[login.find('@')::]:
                return True
            else:
                raise ValueError("Логин должен содержать один символ '.'")
        else:
            raise ValueError("Логин должен содержать один символ '@'")

    @staticmethod
    def __check_password(password):
        if isinstance(password, str):
            if 5 <= len(password) <= 11:
                if Registration.is_include_digit(password):
                    if Registration.is_include_all_register(password):
                        if Registration.is_include_only_latin(password):
                            if Registration.check_password_dictionary(password):
                                return True
                            else:
                                raise ValueError('Ваш пароль содержится в списке самых легких')
                        else:
                            raise ValueError('Пароль должен содержать только латинский алфавит')
                    else:
                        raise ValueError('Пароль должен содержать хотя бы один символ верхнего и нижнего регистра')
                else:
                    raise ValueError('Пароль должен содержать хотя бы одну цифру')
            else:
                raise ValueError('Длина пароля должна быть длиннее 4 и меньше 12 символов')
        else:
            raise TypeError('Пароль должен быть строкой')

    @property
    def login(self):
        return self.name

    @login.setter
    def login(self, login: str):
        if self.__check_login(login):
            self.name = login

    @property
    def password(self):
        return self.passw

    @password.setter
    def password(self, password):
        if self.__check_password(password):
            self.passw = password