/*
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀       ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀           ⢀⣠⡯⠀⠀⠀⢠⡐⠀⠀⠀⠀⠀
⠀⠀⠀⢀⣤⠔⠂⠀⠀⠀⢤⣤⣤⣤⣄⣀⣀⣀⣀⡀⠀⢀⣀⣀⣀⡀⠀⠀⠀⢀⢀⣀⣠⣤⣴⣶⣾⠉⠉⠙⣶⠂⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀   ⠀⣰⣿⡟⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠰⣿⣷⣾⣿⣷⣴⣶⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠏⠉⠛⢿⣿⣿⣿⣿⣿⣿⣿⠿⠿⣿⣶⣿⣿⣿⣿⣤⣂⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣠⣤⣤⣤⣴⣦⣾⣿⣿⣿⣶⣦⣴⣶⣶⠀
⠀⠀⠀⣿⣿⣿⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣧⣤⣶⣶⣿⣿⣿⣿⣿⣿⣿⣯⣤⣤⣿⡿⠿⠿⠿⠛⠛⠛⠛⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣽⣿⣿⡟⢻⣿⣿⣿⡟⣿⣿⣿⣿⠉⠉⠁⠀
⠀⠀⠀⣹⣟⣿⣦⠈⠻⠋⢉⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣾⣿⣿⣿⣠⣾⣿⣿⣏⣤⣾⣿⣿⣿⡆⠀
⠀⠀⢀⣿⣿⣿⣿⣦⠀⠘⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⠟⢿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡧⠀
⠀⠀⢸⣿⣿⣿⣿⣿⡀⢀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣦⡈⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢻⡿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⠛⡄⠀
⠀⠀⠈⠿⠿⠁⣿⣿⣿⠎⠻⣯⠉⠉⠉⠈⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⢹⣿⢻⠉⠉⠁⠈⠻⢦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⠁⠉⠙⠛⠛⢿⣿⠟⠋⠁⠀⠀⠀⠈⠀
⠀⠀⠀⠀⠀⠀⢹⣿⡟⠀⠀⠈⠳⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢿⠞⠀⠀⠀⠀⠀⠀⠙⠳⠤⠤⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀    ⠀⠀⠀⠁⠀⠀⠀⠀⠀⠸⣿⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⠀
⠀⠀⠀⠀⠀⠀⢈⡟⠇⠀⠀⠀⠀⠈⠁⠤⠤⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣶⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀     ⠀⠀⠀⢹⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠙⠀⠈⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⠂⠀⠀⠀⠀  ⠀⠀⠀⠀⠀⠀⠀⠀                             ⠀⠀⡘⡀⠀
                                         ⠀⠀⠀⠀⠀⠀                         ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
*/
#include <iostream>
#include <string>
#include <sstream>
#include <cmath>
#include <memory.h>
#include <algorithm>
#include <stack>
#include <deque>
#include <iomanip>
#include <stdio.h>
#include <queue>
#include <map>
#include <set>
#include <unordered_map>
#include <unordered_set>
#include <random>
#include <ctime>
#include <cstdlib>
#include <cassert>
#include <iterator>
#include <chrono>
#include <array>
#include <bitset>
#define int long long
#define itn long long
#define fro for
#define intt __int128
#define pii pair <int, int>
#define debug(x) cerr << (#x) << " " << (x) << endl
#define pb push_back
#define all(vc) vc.begin(), vc.end()
#define fir first
#define sec second
#define endl "\n"
#define un unsigned
#define INF 1000000010
#define double long double
using namespace std;

const int N = 1000005, R = 1 << 20, ABC = 26, logn = 19;
const int BUBEN = 1001;

mt19937 rnd(chrono::steady_clock::now().time_since_epoch().count());

bool check(vector<int>&logs, vector<vector<int>>&sp_min, vector<vector<int>> &sp_max, itn i, int m) {
    int lvl = logs[m - i + 1];
    int mn = min(sp_min[lvl][i], sp_min[lvl][m - (1 << lvl) + 1]);
    int mx = max(sp_max[lvl][i], sp_max[lvl][m - (1 << lvl) + 1]);

    if (mn < mx)
        return 1;
    else
        return 0;
}

bool check1(vector<int>& logs, vector<vector<int>>& sp_min, vector<vector<int>>& sp_max, itn i, int m) {
    int lvl = logs[m - i + 1];
    int mn = min(sp_min[lvl][i], sp_min[lvl][m - (1 << lvl) + 1]);
    int mx = max(sp_max[lvl][i], sp_max[lvl][m - (1 << lvl) + 1]);

    if (mn <= mx)
        return 1;
    else
        return 0;
}

bool rv(vector<int>& logs, vector<vector<int>>& sp_min, vector<vector<int>>& sp_max, itn i, int m) {
    int lvl = logs[m - i + 1];
    int mn = min(sp_min[lvl][i], sp_min[lvl][m - (1 << lvl) + 1]);
    int mx = max(sp_max[lvl][i], sp_max[lvl][m - (1 << lvl) + 1]);

    if (mn == mx)
        return 1;
    else
        return 0;
}

signed main() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
    srand(time(0));
    cout.precision(17);

    int n;
    cin >> n;

    vector<int> a(n), b(n);

    for (int& i : a)
        cin >> i;
    for (int& i : b)
        cin >> i;

    vector<int> logs(n + 1);
    logs[1] = 0;
    for (int i = 2; i <= n; i++) {
        logs[i] = logs[i / 2] + 1;
    }

    vector<vector<int>> sp_min(logs[n] + 1, vector<int>(n));
    vector<vector<int>> sp_max(logs[n] + 1, vector<int>(n));

    for (int i = 0; i < n; i++) {
        sp_min[0][i] = b[i];
        sp_max[0][i] = a[i];
    }

    for (int i = 1; (1LL << i) <= n; i++) {
        for (int j = 0; j + (1LL << i) - 1 < n; j++) {
            sp_min[i][j] = min(sp_min[i - 1][j], sp_min[i - 1][j + (1LL << (i - 1))]);
            sp_max[i][j] = max(sp_max[i - 1][j], sp_max[i - 1][j + (1LL << (i - 1))]);
        }
    }

    int ans = 0;

    for (int i = 0; i < n; i++) {
        int l = i, r = n;

        while (r - l > 1) {
            int m = (r + l) / 2;
            if (check(logs, sp_min, sp_max, i, m))
                r = m;
            else
                l = m;
        }

        int ll = i, rr = n;
        while (rr - ll > 1) {
            int m = (rr + ll) / 2;
            if (check1(logs, sp_min, sp_max, i, m))
                rr = m;
            else
                ll = m;
        }

        ans += (l - ll) + rv(logs, sp_min, sp_max, i, ll);
    }

    cout << ans;
    return 0;
}
