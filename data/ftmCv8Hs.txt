using System;
using UnityEngine;

namespace Items
{
    [Serializable]
    public struct ItemSlot
    {
        public ItemID ID => id;
        [SerializeField] private ItemID id;
        
        public int Count => count;
        [SerializeField] private int count;

        public int Capacity => capacity;
        [SerializeField] private int capacity;

        public static readonly ItemSlot Empty = new(ItemID.Empty, default, default);
        public ItemSlot Full => new(ItemID.Empty, capacity, capacity);
        
        public ItemSlot(ItemID id, int count, int capacity)
        {
            this.id = id;
            this.count = count;
            this.capacity = capacity;
        }

        public bool IsEmpty() => id == ItemID.Empty;
        public bool IsFull() => count == capacity || IsOverFilled();
        public bool IsOverFilled() => count > capacity;

        public static ItemSlot operator + (ItemSlot a, ItemSlot b) => new(a.id, a.count + b.count, a.capacity);
        public static ItemSlot operator - (ItemSlot a, ItemSlot b) => new(a.id, a.count - b.count, a.capacity);
    }
}