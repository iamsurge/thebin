
package com.arsenicclient.utils.io;

import com.google.gson.Gson;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;

import java.util.ArrayList;

public class JsonUtils {

    public static String jsonObjectToString(JsonObject in) {
        return in.getAsString();
    }

    public static JsonObject stringToJsonObject(String in) {
        return new Gson().fromJson(in, JsonObject.class);
    }

    public static ArrayList<String> jsonObjectToStringArrayList(JsonObject in) {
        ArrayList<String> res = new ArrayList<>();

        for (JsonElement jsonElm : in.getAsJsonArray()) {
            System.out.println(jsonElm);
            res.add(jsonElm.toString());
        }

        return res;
    }

    public static String formatJsonObjectToString(JsonObject jsonObject) {
        if (jsonObject.isJsonNull() || jsonObject.equals(new JsonObject())) return "{ }";

        String gson_obj = new Gson().toJson(jsonObject);
        StringBuilder sb = new StringBuilder();
        int indent = 0;
        for (int i = 0; i < gson_obj.length(); i++) {
            char c = gson_obj.charAt(i);
            if (c == '{') {
                sb.append(c);
                if (gson_obj.charAt(i + 1) == '}')
                    sb.append(" ");
                else {
                    sb.append("\n");
                    indent++;
                    for (int j=0; j < indent; j++)
                        sb.append("\t");
                }
            } else if (c == '}') {
                if (gson_obj.charAt(i - 1) != '{') {
                    sb.append("\n");
                    indent--;
                    for (int j=0; j < indent; j++)
                        sb.append("\t");
                }
                sb.append(c);
            } else if (c == ',') {
                sb.append(c);
                sb.append("\n");
                for (int j=0; j < indent; j++)
                    sb.append("\t");
            } else if (c == ':') {
                sb.append(c);
                sb.append(" ");
            } else {
                sb.append(c);
            }
        }
        return sb.toString();
    }

    public static String formatJsonString(String jsonString) {
        return formatJsonObjectToString(stringToJsonObject(jsonString));
    }

}
