#include <stdio.h>
#include <string.h>
#include <time.h>

struct Kendaraan{
    char plat_nomor[50];
    time_t waktu_masuk;
    time_t waktu_keluar;
};

int save_data(struct Kendaraan data) {
    FILE *fp = fopen("parkir_motor.txt", "a");

    if(fp == NULL) {
        printf("Gagal membuka file.\n");

        return 1;
    }
    
    fprintf(fp, "%s,%ld,%ld\n", 
                data.plat_nomor, 
                data.waktu_masuk,
                data.waktu_keluar);
    fclose(fp);

    printf("Data kendaraan berhasil disimpan.\n");

    return 0;
}

void search_data() {
    
}

int main(){ 
    int pilihan;

    while(1) {
        printf("Menu Sistem Parkir:\n");
        printf("1. Parkir motor\n");
        printf("2. Parkir mobil\n");
        printf("3. Exit\n");
        printf("4. Pencarian data\n");
        printf("5. Pengurutan data\n");
        printf("Masukkan pilihan Anda: ");
        scanf("%d", &pilihan);

        switch (pilihan) {
            case 1:
            {
                struct Kendaraan data;

                printf("Anda memilih parkir motor.\n");
                printf("Masukkan plat nomor: ");
                scanf("%s", data.plat_nomor);

                // Validasi plat nomor
                int len = strlen(data.plat_nomor);

                if(len < 1 || len > 50){
                    printf("Plat nomor tidak valid.\n");

                    break;
                }

                data.waktu_masuk = time(NULL);
                data.waktu_keluar = 0;

                save_data(data);

                break;
            }
            case 2:
            {
                struct Kendaraan data;

                printf("Anda memilih parkir mobil.\n");
                printf("Masukkan plat nomor: ");
                scanf("%s", data.plat_nomor);

                // Validasi plat nomor
                int len = strlen(data.plat_nomor);

                if(len < 1 || len > 50) {
                    printf("Plat nomor tidak valid.\n");

                    break;
                }

                data.waktu_masuk = time(NULL);
                data.waktu_keluar = 0;

                save_data(data);

                break;
            }

            case 3: return 0;
            case 4:
            {
                int pilihan_kendaraan;

                printf("Anda memilih pencarian data.\n");
                 // Pilih jenis kendaraan
                printf("1. Motor\n");
                printf("2. Mobil\n");
                printf("Masukkan pilihan Anda: ");
                scanf("%d", &pilihan_kendaraan);
                // Baca file sesuai dengan jenis kendaraan

                FILE *fp;

                if(pilihan_kendaraan == 1) {
                    fp = fopen("parkir_motor.txt", "r");
                } else if(pilihan_kendaraan == 2) {
                    fp = fopen("parkir_mobil.txt", "r");
                } else {
                    printf("Pilihan tidak valid.\n");

                    break;
                }

                if(fp == NULL) {
                    printf("Gagal membuka file.\n");

                    break;
                }
                    // Cari plat nomor
                char plat_nomor[50];
                
                printf("Masukkan plat nomor: ");
                scanf("%s", plat_nomor);
                
                struct Kendaraan kendaraan;
                int found = 0;
                
                while(fscanf(fp, "%s,%ld,%ld\n", kendaraan.plat_nomor, &kendaraan.waktu_masuk, &kendaraan.waktu_keluar) == 3) {
                    if(strcmp(kendaraan.plat_nomor, plat_nomor) == 0) {
                        found = 1;

                        break;
                    }
                }

                fclose(fp);
                
                if (found) {
                    printf("Data kendaraan ditemukan:\n");
                    printf("Plat nomor: %s\n", kendaraan.plat_nomor);
                    printf("Waktu masuk: %s", ctime(&kendaraan.waktu_masuk));

                    if(kendaraan.waktu_keluar > 0) {
                        printf("Waktu keluar: %s", ctime(&kendaraan.waktu_keluar));
                    }
                } else {
                    printf("Data kendaraan tidak ditemukan.\n");
                }
                
                break;
            }
            case 5:
            {
                int pilihan_kendaraan;
                printf("Anda memilih pengurutan data.\n");
                // Pilih jenis kendaraan
                printf("1. Motor\n");
                printf("2. Mobil\n");
                printf("Masukkan pilihan Anda: ");
                scanf("%d", &pilihan_kendaraan);
                // Baca file sesuai dengan jenis kendaraan

                char *filename;

                if(pilihan_kendaraan == 1) {
                    filename = "parkir_motor.txt";
                } else if(pilihan_kendaraan == 2) {
                    filename = "parkir_mobil.txt";
                } else {
                    printf("Pilihan tidak valid.\n");
                    break;
                }
                
                FILE *fp = fopen(filename, "r");
                
                if(fp == NULL) {
                    printf("Gagal membuka file.\n");
                    break;
                }
// Baca semua data kendaraan dari file ke dalam array of struct Kendaraan
                struct Kendaraan data[100];
                int n = 0;

                while(fscanf(fp, "%s,%ld,%ld\n", data[n].plat_nomor, &data[n].waktu_masuk, &data[n].waktu_keluar) == 3) {
                    n++;
                }

                fclose(fp);

    // Lakukan pengurutan data kendaraan menggunakan bubble sort
                for(int i = 0; i < n - 1; i++) {
                    for(int j = 0; j < n - i - 1; j++) {
                        if (data[j].waktu_masuk > data[j + 1].waktu_masuk){
                            struct Kendaraan temp = data[j];
                            data[j] = data[j + 1];
                            data[j + 1] = temp;
                        }
                    }
                }
    // Cetak data kendaraan yang sudah terurut
                printf("Data kendaraan terurut:\n");
                
                for(int i = 0; i < n; i++) {
                    printf("Plat nomor: %s\n", data[i].plat_nomor);
                    printf("Waktumasuk: %s", ctime(&data[i].waktu_masuk));

                    if(data[i].waktu_keluar > 0)  {
                        printf("Waktu keluar: %s", ctime(&data[i].waktu_keluar));
                    }
                }
                
                break;
            }
            
            // if(strcmp(kendaraan[j].plat_nomor, kendaraan[j + 1].plat_nomor) > 0) {
            //     struct Kendaraan temp = kendaraan[j];
            //     kendaraan[j] = kendaraan[j + 1];
            //     kendaraan[j + 1] = temp;
            // }
        }
    }
}