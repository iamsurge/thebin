#include <iostream>
#include <chrono>
using namespace std::chrono;
using namespace std;


void Row(int n, int m)
{
    int tab[n][m];
    for (int i = 0; i < n; ++i)
    {
        for (int j = 0; j < m; ++j)
        {
            tab[i][j] = 1;
        }
    }
}

void Column(int n, int m)
{
    int tab[n][m];
    for (int i = 0; i < n; ++i)
    {
        for (int j = 0; j < m; ++j)
        {
            tab[j][i] = 1;
        }
    }
}

int main()
{
    auto startRow = high_resolution_clock::now();
    Row(500,500);
    auto stopRow = high_resolution_clock::now();
    
    auto durationRow = duration_cast<microseconds>(stopRow - startRow);
 
    cout << "Time taken by Row: "
         << durationRow.count() << " microseconds" << endl;
    
    auto startColumn = high_resolution_clock::now();
    Column(500,500);
    auto stopColumn = high_resolution_clock::now();
    
    auto durationColumn = duration_cast<microseconds>(stopColumn - startColumn);
 
    cout << "Time taken by Column: "
         << durationColumn.count() << " microseconds" << endl;

    return 0;
}
