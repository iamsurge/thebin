function Move()
    for i=1,movesX do
        step()

        turnLeft()
        ForwardDig(movesZ - 1)
    
        turnRight()
    
        step()
    
        turnRight()
    
        ForwardDig(movesZ - 1)
    
        turnLeft()
    end
end

function step()
    ForwardDig(1) 

    local itemCount = turtle.getItemCount(1);

    print(stepsX .. "X, " .. stepsZ .. "Z, " .. stepsY .. "Y")
    rednet.send(4,stepsX .. "X, " .. stepsZ .. "Z, " .. stepsY .. "Y")


    if turtle.getItemCount(1) > 1 then
        turtle.select(1)
        turtle.refuel(turtle.getItemCount(1) - 1)
    end

    currentFuel = turtle.getFuelLevel()
    print(currentFuel)
end

function ForwardDig(Count)
    for i=1,Count do
        while turtle.forward() ~= true do
            turtle.dig()
        end

        turtle.digUp()
        turtle.digDown()

        if rot == 0 then
            stepsX = stepsX + 1    
        elseif rot == 1 then
            stepsZ = stepsZ - 1 
        elseif rot == 2 then
            stepsX = stepsX - 1 
        elseif rot == 3 then
            stepsZ = stepsZ + 1 
        end

        if stepsX + stepsZ + stepsY >= currentFuel then
            returnHome()
            error("Home")
        end
    end
end

function returnHome()
    print("Return home")
    rednet.send(4,"Return home")

    for i=1,rot do
        turnLeft()
    end

    for i=1,stepsY do
        turtle.up()
    end

    turnRight()

    for i=1,stepsZ do
        turtle.forward()
    end

    stepsZ = 0

    turnRight()

    for i=1,stepsX do
        turtle.forward()
    end

    stepsX = 0

    for i=1,rot do
        turnLeft()
    end

    for i=2,16 do
        turtle.select(i)
        turtle.dropUp()
    end

    turtle.select(1)
end

function turnLeft()
    turtle.turnLeft()
    rot = rot - 1
    if rot == -1 then
        rot = 3
    end
end

function turnRight()
    turtle.turnRight()
    rot = rot + 1
    if rot == 4 then
        rot = 0
    end
end


movesX = 16 / 2
movesZ = 16
movesY = 120 / 3 + 1

Itemstotal = movesX * 2 * movesZ * 3 * movesY

turtle.select(1)
turtle.refuel(turtle.getItemCount(1) - 1)

stepsX = 0
stepsZ = 0
stepsY = 0

rot = 0

currentFuel = turtle.getFuelLevel()

modem = peripheral.wrap("left")

rednet.open("left")

rednet.send(4,"Starting Operation")

if turtle.getFuelLevel() == 0 then
    print("No fuel")
    return
end

for i=1,movesY do
    Move()
    returnHome()

    rednet.send(4,movesX * 2 * movesZ * 3 * stepsY / Itemstotal * 100)

    for i=1,stepsY do
        turtle.down()
    end

    turtle.digDown()
    turtle.down()
    turtle.digDown()
    turtle.down()
    turtle.digDown()
    turtle.down()
    stepsY = stepsY + 3
end

returnHome()