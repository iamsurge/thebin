--thanks to chatgpt
-- Function to perform 2D convolution
local full = {
    {{0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}};
    {{0, 0, 0}, {1, 1, 1}, {1, 1, 1}, {1, 1, 1}, {0, 0, 0}};
    {{0, 0, 0}, {1, 1, 1}, {0, 0, 0}, {1, 1, 1}, {0, 0, 0}};
    {{0, 0, 0}, {1, 1, 1}, {1, 1, 1}, {1, 1, 1}, {0, 0, 0}};
    {{0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}};
}
local theconv = {}
function conv2d(input, kernel)
  local output = {}

  -- Get the dimensions of the input and kernel
  local input_rows = #input
  local input_cols = #input[1]
  local kernel_rows = #kernel
  local kernel_cols = #kernel[1]

  -- Perform the convolution
  for i = 1, input_rows - kernel_rows + 1 do
    output[i] = {}
    for j = 1, input_cols - kernel_cols + 1 do
      local sum = 0
      for m = 1, kernel_rows do
        for n = 1, kernel_cols do
          sum = sum + input[i + m - 1][j + n - 1] * kernel[m][n]
        end
      end
      output[i][j] = sum
    end
  end

  return output
end
--https://www.youtube.com/shorts/CE6kda7qDWc