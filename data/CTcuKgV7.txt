// Print out messages and store the user input in a variable

using ConsoleApp1;

var dateHandler = new DateHandler();

Console.WriteLine("Let's find out what day of the week you were born on!");

var birthDate = dateHandler.GetDate();

int month = birthDate.Month;
int day = birthDate.Day;
int year = birthDate.Year;

// Account for January (month 13) and February (month 14)
if (birthDate.Month < 3)
{
    month += 12;
    year -= 1;
}

int yearOfCentury = year % 100;
int zeroBasedCentury = year / 100;
int dayOfWeek = day + 13 * (month + 1) / 5 + yearOfCentury + yearOfCentury / 4
                         + zeroBasedCentury / 4 + 5 * zeroBasedCentury;
dayOfWeek = dayOfWeek % 7;

switch (dayOfWeek)
{
    case 0:
        Console.WriteLine("You were born on a Saturday.");
        Console.Read();
        break;

    case 1:
        Console.WriteLine("You were born on a Sunday.");
        Console.Read();
        break;

    case 2:
        Console.WriteLine("You were born on a Monday.");
        Console.Read();
        break;

    case 3:
        Console.WriteLine("You were born on a Tuesday.");
        Console.Read();
        break;

    case 4:
        Console.WriteLine("You were born on a Wednesday.");
        Console.Read();
        break;

    case 5:
        Console.WriteLine("You were born on a Thursday.");
        Console.Read();
        break;

    case 6:
        Console.WriteLine("You were born on a Friday.");
        Console.Read();
        break;
}

Console.Read();

namespace ConsoleApp1
{
    public class DateHandler
    {
        public DateTime GetDate()
        {
            Console.WriteLine("Enter date on the form yyyy-mm-dd");
            var dateInput = Console.ReadLine();

            if (string.IsNullOrEmpty(dateInput))
            {
                Console.WriteLine("Date is empty");
                GetDate();
            }

            var dateResult = DateTime.TryParse(dateInput, out var date);

            if (!dateResult)
            {
                Console.WriteLine($"{dateInput} is not a valid date");
                GetDate();
            }

            if (date > DateTime.Today)
            {
                Console.WriteLine("Date is after today");
                GetDate();
            }

            return date;
        }
    }
}