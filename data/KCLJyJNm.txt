#include <iostream>

using namespace std;

struct TImgHTML {
  string src="";
  string alt="";
  string id="";
  string name="";
};

string imgHTML2(TImgHTML dati)
{
  return "<img id='" + dati.id + "' src='"+ dati.src +"' ...>";
}


string imgHTML(string src, string alt, string id, string name)
{
  return "<img id='" + id + "' src='"+src+"' ...>";
}



struct TDolce {
  string nome="";
  string origine="";
  int anno=0;
};

struct TStatistiche {
  int minimo;
  int massimo;
  double media;
};

int minimo(int v[], int quanti)
{
  //...
  return -8;
}

int massimo(int v[], int quanti)
{
  //...
  return 45;
}

double media(int v[], int quanti)
{
  //...
  return 14;
}

TStatistiche Statistiche(int v[], int quanti)
{
  TStatistiche risultati;
  risultati.minimo = minimo(v, quanti);
  risultati.massimo = massimo(v, quanti);
  risultati.media = media(v, quanti);

  return risultati;

}
int main()
{
    const int MAX=6;
    int v[MAX] {45, -8, 12, 6, 18, 11};

    TStatistiche stat = Statistiche(v, MAX);
    cout << stat.minimo << " " << stat.media << endl;

//
//    //string dolci_array[MAX*2] {"Torrone", "CR", "Panettone", "MI", "Pandoro", "VR"};
//    string dolci_array[MAX] {"Torrone", "Panettone", "Pandoro"};
//    string luoghi_origine_array[MAX] {"CR", , "MI", "VR"};

  //primo scenario d'uso per le struct
  //- per inviare molti dati a una funzione usando una sola variabile
  //- per farci restituire anche molti valore da una funzione

  //TDolce un_dolce {"Torrone", "CR", 1400};

  TDolce un_dolce;
  un_dolce.nome = "Torrone";
  un_dolce.origine = "CR";
  un_dolce.anno = 1400;

  //ERRORI TIPICI
  //TDolce.anno = 1400; //NO!! TDolce non e' la variabile ma il tipo (int = 4 ???)
  //anno=1400; //anno come variabile esterna non esiste

  //cout << un_dolce << endl; //NO << non sa come 'stampare' un TDolce
  //cin >> un_dolce; //NO

  TDolce un_altro_dolce = un_dolce; //OK

  TImgHTML una_img;
  una_img.id ="imgID";
  una_img.name="imgName";

  cout << imgHTML2(una_img) << endl;
    return 0;
}
