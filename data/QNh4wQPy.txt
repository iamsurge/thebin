11-28-2022 Computer Programming Online Class.
Notes, Example Codes, and External Useful Links.

C Variables
	int - stores integer (whole numbers), without decimals
	float - stores floating point numbers, with decimals
	char - stores single characters (1 letter and 1 numerical value)
	
Basic data types
	int - whole numbers
	float - decimals (7)
	double - decimals (15)
	char - single letter
	
Basic format specifiers
	%d or %i (int)
	%f (float)
	%lf (double)
	%c (char)

Arithmetic operators
	+ Addition - Adds two together two values
	- Subtraction - Subtracts one value from another
	* Multiplication - Multiplies two values
	/ Division - Divides one value by another
	% Modulus - Returns the divison remainder
	++ Increment - Increases the value of a variable by 1
	-- Decrement - Decrease the value of a variable 1

Assignment Operators
	=  : Assigns values from right to side operands to left side operand
	+= : Add AND assignment operator. It adds the right operand to the left operand and assign the result to the left operand.
	-= : Subtract AND assignment operator. It subtracts the right operand from the left operand and assigns the result to the left operand.
	*= : Multiply AND assignment operator. It multiplies the right operand with the left operand and assigns the result to the left operand.
	/= : Divide AND assignment operator. It divides the left operand with the right operand and assigns the result to the left operand.
	%= : Modulus AND assignment operator. It takes modulus using two operands and assigns the result to the left operand.
	&= : Bitwise AND assignment operato
	>>== : Right shift AND assignment operator.
	<<== : Left shift AND assignment operator.
	^= : Bitwise exclusive OR and assignment operator.
	|= : Bitwise inclusive OR and assignment operator.

Comparison Operators
	== : Equal together
	!= : Not equal
	>  : Greater than
	<  : Less than
	>= : Greater than equal together
	<= : Less than or euqal to

Logical Operators
	&& Logical And - Returns true if both statements are true
	|| Logical or - Returns true if one of the the statements is true
	! Logical not - Revers the result, returns if the result is true.


Useful External Links:
https://www.tutorialspoint.com/cprogramming/c_assignment_operators.htm


Example codes:
Task: Check if a number inputted is odd or even (real numbers only)

#include <stdio.h>
#include <conio.h>

//Here we declare the integer variable.
int main()
{
//Only a single variable is needed.
    int a;
//We output the text prompting the user to input a number.
    printf("Enter a number");
//Use scanf to detect int and store into a
    scanf("%d", &a);
//Use if statement to determine the division reminder eg.10/2=5 remainder=0.
//Even numbers will not have a remainder when divided by two. 
//The modulus gets the division remainder not the quotient however we specify here the divisor "2" and use == to determine if the remainder is equal to 0 if yes proceed printing the number is even.
    if(a % 2 == 0)
	{
        printf("%d is even.", a);
	}
//Here, if the condition is not met in the if statement the code proceeds to else, we don't need another if, state that if the condition in the if statement is false it will use the else instead which says that the inputted number is odd because the remainder is not 0.
    else
	{
        printf("%d is odd.", a);
	}	
	getch(); //Will require the user to input any character to proceed with the code which exits the program
    return 0; //Exits the program without any errors.
}

Task: Check if two values are greater than, less than, or equal.

#include <stdio.h>
#include <conio.h>

int main () //Declare int.
{
    int a, b; //Two variables needed to compare.
    printf("Enter two numbers\n"); //Print
    scanf("%d %d", &a, &b); //Scans the digits entered by user
    if (a == b) //Conditional statement if a = b prooceds to print else proceeds to else if.
    {
        printf("%d is equal to %d", a,b);
    }
    else if (a > b) //Checks if a>b if yes print that a>b otherwise proceed to the last else.
    {
        printf("%d is greater than %d", a, b);
    }
    else //If neither condition is met the code will proceed her stating that a<b
    {
        printf("%d is less than %d", a, b);
    }
    getch(); //Requires any char.
    return 0; //Exits the program without error.
}

Paste the code into any web or software compiler to test it.
// - Comments.

I recommend Microsoft Visual Studio Code, but you have to install C compilers.
Strawberry Perl (Includes mys64 MinGW GCC)
Or standalone Mys64 Mingw gcc