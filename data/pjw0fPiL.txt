substitutions:
  board: esp32dev
  device_name: d1-r32
  device_id: mqtt-bridge
  friendly_name: D1-Tester

esphome:
  name: ${device_name}

esp32:
  board: ${board}
  framework:
    type: arduino

wifi:
  ssid: !secret MyFi_SSID
  password: !secret MyFi_Pass
  ap:
    ssid: "${device_name}-hotspot"
    password: !secret ESP_FallBack_Pass

ota:
  password: !secret HA_ESP_OTApass
logger:
captive_portal:
api:

mqtt:
  id: mqtt_client
  broker: 10.0.2.75
  port: 36669
  username: hisenseservice
  password: multimqttservice
  birth_message:
    topic: myavailability/topic
    payload: online
  will_message:
    topic: myavailability/topic
    payload: offline
  
number:
  - platform: template
    name: Volume Set
    id: volume_set
    optimistic: true
    entity_category: config
    unit_of_measurement: 'percent'
    min_value: 0
    max_value: 100
    step: 1
    on_value:
      - mqtt.publish:
          topic: "/remoteapp/tv/platform_service/ac:67:3a:5d:79:25$normal/actions/changevolume"
          payload: !lambda |-
            return to_string(id(volume_set).state);

text_sensor:
  - platform: mqtt_subscribe
    name: "hisense info"
    id: hisense_info
    topic: /remoteapp/mobile/broadcast/ui_service/state
    on_raw_value:
      then:
        - lambda: |-
            ESP_LOGD("main", "input and chanel information %s", x.c_str());
  - platform: template
    name: "app selected text sensor"
    id: app_selected_txt
button:
  - platform: template
    name: Channel up
    id: chup
    icon: "mdi:chevron-up"
    on_press:
      if:
        condition:
          mqtt.connected:
        then:
          - mqtt.publish:
              topic: /remoteapp/tv/remote_service/f8:7d:6e:17:33:01$normal/actions/sendkey
              payload: "KEY_CHANNELUP"
  - platform: template
    name: Channel down
    id: chdown
    icon: "mdi:chevron-down"
    on_press:
      then:
        - mqtt.publish:
            topic: /remoteapp/tv/remote_service/f8:7d:6e:17:33:01$normal/actions/sendkey
            payload: "KEY_CHANNELDOWN"
  - platform: template
    name: Navigation up
    id: navup
    icon: "mdi:arrow-up"
    on_press:
      then:
        - mqtt.publish:
            topic: /remoteapp/tv/remote_service/f8:7d:6e:17:33:01$normal/actions/sendkey
            payload: "KEY_UP"            
  - platform: template
    name: Navigation down
    id: navdown
    icon: "mdi:arrow-down"
    on_press:
      then:
        - mqtt.publish:
            topic: /remoteapp/tv/remote_service/f8:7d:6e:17:33:01$normal/actions/sendkey
            payload: "KEY_DOWN"
  - platform: template
    name: Navigation right
    id: navright
    icon: "mdi:arrow-right"
    on_press:
      then:
        - mqtt.publish:
            topic: /remoteapp/tv/remote_service/f8:7d:6e:17:33:01$normal/actions/sendkey
            payload: "KEY_RIGHT"
  - platform: template
    name: Navigation left
    id: navleft
    icon: "mdi:arrow-left"
    on_press:
      then:
        - mqtt.publish:
            topic: /remoteapp/tv/remote_service/f8:7d:6e:17:33:01$normal/actions/sendkey
            payload: "KEY_LEFT"
  - platform: template
    name: Select/ OK
    id: ok
    icon: "mdi:ok-circle"
    on_press:
      then:
        - mqtt.publish:
            topic: /remoteapp/tv/remote_service/f8:7d:6e:17:33:01$normal/actions/sendkey
            payload: "KEY_OK"
  - platform: template
    name: Menu
    id: menu
    icon: "mdi:cog"
    on_press:
      then:
        - mqtt.publish:
            topic: /remoteapp/tv/remote_service/f8:7d:6e:17:33:01$normal/actions/sendkey
            payload: "KEY_MENU"
  - platform: template
    name: Return
    id: returns
    icon: "mdi:reply"
    on_press:
      then:
        - mqtt.publish:
            topic: /remoteapp/tv/remote_service/f8:7d:6e:17:33:01$normal/actions/sendkey
            payload: "KEY_RETURNS"
  - platform: template
    name: Home
    id: home
    icon: "mdi:home"
    on_press:
      then:
        - mqtt.publish:
            topic: /remoteapp/tv/remote_service/f8:7d:6e:17:33:01$normal/actions/sendkey
            payload: "KEY_HOME"
  - platform: template
    name: Exit
    id: exitkey
    icon: "mdi:7-remove-sign"
    on_press:
      then:
        - mqtt.publish:
            topic: /remoteapp/tv/remote_service/f8:7d:6e:17:33:01$normal/actions/sendkey
            payload: "KEY_EXIT"
  - platform: template
    name: Power
    id: power
    icon: "mdi:remove-sign"
    on_press:
      then:
        - mqtt.publish:
            topic: /remoteapp/tv/remote_service/f8:7d:6e:17:33:01$normal/actions/sendkey
            payload: "KEY_POWER"
#KEY_RED, KEY_GREEN, KEY_YELLOW, KEY_BLUE, KEY_0-9, KEY_CHANNELDOT (./-), KEY_EPG, KEY_SUBTITLE, KEY_TXT, KEY_LANGUAGE, KEY_PLAY, KEY_FORWARDS, KEY_BACKS

  - platform: template
    name: You Tube
    id: youtube
    icon: "mdi:youtube"
    on_press:
      then:
        - mqtt.publish:
            topic: /remoteapp/tv/ui_service/f8:7d:6e:17:33:01$normal/actions/launchapp
            payload: '{"appIcon":"","appId":"","has_detail_page":0,"isLocalApp":1,"name":"YouTube","storeType":0,"type":0,"url":"youtube","urlType":37}'

  - platform: template
    name: Volume Up 20
    id: volup20
    on_press:
      then:
        - mqtt.publish:
            topic: /remoteapp/tv/platform_service/ac:67:3a:5d:79:25$normal/actions/changevolume
            payload: "20"

  - platform: template
    name: Volume Up 10
    id: volup10
    on_press:
      then:
        - mqtt.publish:
            topic: /remoteapp/tv/platform_service/ac:67:3a:5d:79:25$normal/actions/changevolume
            payload: "10"

select:
  - platform: template
    name: Apps
    id: app_select
    options:
     - "YouTube"
     - "Netflix"
     - "iView"
    optimistic: true
    on_value:
      then:
        - logger.log:
            format: "Chosen Option: %s (index %d)"
            args: ["x.c_str()", "i"]