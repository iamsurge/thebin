import network
import socket
import time
import struct

from machine import Pin

NTP_DELTA = 2208988800
host = "pool.ntp.org"

led = Pin("LED", Pin.OUT)
relay = Pin(16, Pin.OUT)

times = [
    [7,00],
    [9,30],
    [9,45],
    [11,30],
    [12,00],
    [14,00],
    [14,15],
    [15,30],
    [15,45],
    [16,30],
    [17,30],
    [15,51]
]

times_ct = len(times)

ssid = 'VST-WIFI'
password = 'Steelers2011'
buzzer_duration = 0

def get_dst_time():
    year = time.localtime()[0]
    
    HHMarch = time.mktime((year,3,(14-(int(5*year/4+1))%7),1,0,0,0,0,0))  ## Time of March to move to DST
    HHNov = time.mktime((year,10,(7-(int(5*year/4+1))%7),1,0,0,0,0,0)) ## Time to revert back
    
    now = time.time()
    
    if now < HHMarch:  #  If we are befire the first sunday in March
        dst = time.localtime(now-18000) #EST: UTC -5H
        
    elif now < HHNov:  # If we are before the last sunday in October
        dst = time.localtime(now-14400) # DST: UST -4H
        
    else:  # If we are after the last sunday in October
        dst = time.localtime(now-18000) # EST: UTC - 5H
        
    return(dst)
        
def set_time():
    NTP_QUERY = bytearray(48)
    NTP_QUERY[0] = 0x1B
    addr = socket.getaddrinfo(host, 123)[0][-1]
    s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
    try:
        s.settimeout(1)
        res = s.sendto(NTP_QUERY, addr)
        msg = s.recv(48)
    finally:
        s.close()
    val = struct.unpack("!I", msg[40:44])[0]
    t = val - NTP_DELTA    
    tm = time.gmtime(t)
    machine.RTC().datetime((tm[0], tm[1], tm[2], tm[6] + 1, tm[3], tm[4], tm[5], 0))

def start_buzzer(): 
    relay.on()
  
    
def stop_buzzer():
    relay.off()
    
    
wlan = network.WLAN(network.STA_IF)
wlan.active(True)
wlan.connect(ssid, password)

max_wait = 10
while max_wait > 0:
    if wlan.status() < 0 or wlan.status() >= 3:
        break
    max_wait -= 1
    print('waiting for connection...')
    time.sleep(1)

if wlan.status() != 3:
    raise RuntimeError('network connection failed')
else:
    print('connected')
    status = wlan.ifconfig()
    print( 'ip = ' + status[0] )

led.on()
relay.on()

set_time()
print(time.localtime())
led.off()
relay.off()
 
 
while True:
     
    dst = get_dst_time()
     
    year = time.localtime()[0]

    print('Time: ', dst)
    
    for t in times:
        h = t[0]
        m = t[1]
        if dst[3] == h and dst[4] == m and dst[5] == 0:
            start_buzzer()
            buzzer_duration = 3
        
        
    if dst[3] == 15 and dst[4] == 36 and dst[5] == 0:
        start_buzzer()
        buzzer_duration = 3
    
    
    
    
    
    if buzzer_duration > 0:
        start_buzzer()
        buzzer_duration -= 1
    else:
        stop_buzzer()
 
    time.sleep(1)
     
     
    
    
    