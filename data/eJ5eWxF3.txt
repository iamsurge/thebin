const approximateUlp = function (value) {
  return Math.pow(2, Math.ceil(Math.log2(Math.abs(value))) - 52);
}

const getSignificantFractionDigits = function (value) {
  return Math.trunc(Math.abs(Math.log10(approximateUlp(value))));
}

const defaultMinSignificantFractionDigits = 4;

const roundDecimal = function (
  value,
  minSignificantFractionDigits = defaultMinSignificantFractionDigits
) {
  const significantFractionDigits = getSignificantFractionDigits(value);

  if (significantFractionDigits < minSignificantFractionDigits) {
    return value;
  }

  const raised =
    value < 0
      ? -Math.pow(10, significantFractionDigits)
      : Math.pow(10, significantFractionDigits);

  return Math.round(value * raised) / raised;
}

console.log(roundDecimal(0.1 + 0.2)); // 0.3
console.log(roundDecimal(Math.PI)); // 3.141592653589793
