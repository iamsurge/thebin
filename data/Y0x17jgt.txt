#include <bits/stdc++.h>
using namespace std;

typedef long long LL;
const int maxn = 500000 + 100;
int n;
string s;
LL ans;
LL dp[maxn][3][3];

int main() {
#ifdef ExRoc
    freopen("test.txt", "r", stdin);
#endif // ExRoc
    ios::sync_with_stdio(false);

    cin >> s;
    n = s.length();
    dp[0][0][0] = 0;
    for (int i = 1; i <= n; ++i) {
        if (s[i - 1] == 'a') {
            dp[i][0][0] = 0;
            dp[i][0][1] = dp[i - 1][0][0] + dp[i - 1][0][2] + 1;
            dp[i][0][2] = dp[i - 1][0][1];
            dp[i][1][0] = 0;
            dp[i][1][1] = dp[i - 1][1][2];
            dp[i][1][2] = dp[i - 1][1][1];
            dp[i][2][0] = 0;
            dp[i][2][1] = dp[i - 1][2][2];
            dp[i][2][2] = dp[i - 1][2][1];
        } else if (s[i - 1] == 'c') {
            dp[i][0][0] = dp[i - 1][0][0] + 1;
            dp[i][0][1] = 0;
            dp[i][0][2] = 0;
            dp[i][1][0] = 0;
            dp[i][1][1] = dp[i - 1][0][1] + dp[i - 1][2][1];
            dp[i][1][2] = dp[i - 1][1][2];
            dp[i][2][0] = 0;
            dp[i][2][1] = dp[i - 1][1][1];
            dp[i][2][2] = dp[i - 1][0][2] + dp[i - 1][2][2];
        } else {
            dp[i][0][0] = dp[i - 1][0][0] + 1;
            dp[i][0][1] = dp[i - 1][0][1];
            dp[i][0][2] = dp[i - 1][0][2];
            dp[i][1][0] = 0;
            dp[i][1][1] = dp[i - 1][1][1];
            dp[i][1][2] = dp[i - 1][1][2];
            dp[i][2][0] = 0;
            dp[i][2][1] = dp[i - 1][2][1];
            dp[i][2][2] = dp[i - 1][2][2];
        }
        ans += dp[i][2][1] + dp[i][2][2];
    }
    cout << ans << endl;

    return 0;
}
