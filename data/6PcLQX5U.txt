
public class Main {
    public static void main(String[] args) {
        BufferedReader in = new BufferedReader (new InputStreamReader(System.in));
        File fd = new File ("lab1_duom.txt"); //duomenu failas
        File fr = new File ("lab1_rez.txt"); //rezultatu failas
        int n = 0; //masyvo A elementu sk.
        int nr = 0; //meniu veiksmo numeris
        int vieta = -1; //salinamo elemento numeris
        PrintWriter rasyti = null;
        Gyvunas A[] = null;
        Gyvunas B[] = null;

        //Atidarome rezultatu faila
        try {
            rasyti = new PrintWriter (new FileWriter(fr));
        }
        catch (IOException e) {System.out.println("Nepavyko sukurti failo.");}

        while (true){
            Metodai.meniu();
            try {
                nr = Integer.parseInt(in.readLine());
            }
            catch(IOException e){System.out.println("Ivedimo klaida1!");}
            catch(NumberFormatException e){System.out.println("Ivedete ne sveika skaiciu!");}
            switch (nr) {
                case 1://skaitymas is failo
                    n = Metodai.skaiciuotiEilutes(fd);
                    System.out.println("kiekis" + n);
                    A = new Gyvunas[n];

                    A = skaityti_sar(fd, n);
                    System.out.println("Duomenys nuskaityti.");
                    Metodai.spausdinti_sar_ekrane(A, n);
                    break;

                case 2://rezultatu isvedimas i faila
                    Metodai.spausdinti_sar_faile(rasyti, A, n);
                    System.out.println("Duomenys irasyti i faila " + fr + ".");
                    break;

                case 3://naujo iraso iterpimas
                    n++;
                    A = Metodai.kopijuotiMas(A, n);
                    Metodai.iterpti(A,n);
                    Metodai.spausdinti_sar_ekrane(A, n);
                    break;

                case 4://iraso salinimas
                    if (n==0) {System.out.println("Masyvas tuscias. Nera ka salinti.");}
                    else {
                        while (true){
                            System.out.println("Iveskite salinamo elemento nr.(1 - "+ n +" ):");
                            try {
                                vieta = Integer.parseInt(in.readLine());
                                if (vieta <1 || vieta > n) System.out.println("Tokio elemento pasalinti negalima!");
                                else {
                                    n--;
                                    A = Metodai.salinti(A, n, vieta-1);
                                    Metodai.spausdinti_sar_ekrane(A, n);
                                    break;
                                }
                            }
                            catch(IOException e){System.out.println("Ivedimo klaida2!");}
                            catch(NumberFormatException e){System.out.println("Ivedete ne sveika skaiciu!");}
                        }
                    }
                    break;

                case 5://paieskos veiksmai
                    B = Metodai.surasti(A, n);
                    System.out.println("Sunkiausias gyvunas yra:");
                    Metodai.spausdinti_sar_ekrane(B, B.length);
                    break;

                case 6:// Surasti visus gyvunus sunkesnius nei nurodytas svoris ir is ju sudaryti masyva
                    A = Metodai.surastiGyvunus(A, n);
                    System.out.println("Sunkesni gyvunai yra:");
                    Metodai.spausdinti_sar_ekrane(A, A.length);
                    break;

                case 7://pabaiga
                    if (rasyti != null) rasyti.close();
                    System.out.println("Programa baige darba.");
                    System.exit(0);
                    break;



                default://veiksmai kitais atvejais
                    System.out.println("Neteisingas veiksmo nr. Pakartokite!");
                    break;
            }
        }
    }
}