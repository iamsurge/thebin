class CustomTextFormField extends StatelessWidget {
  final int? _maxLine;
  final bool? _enable;
  final TextEditingController? _controller;
  
  final String? _initValue;
  final String _txtLable;
  final Function(String)? onChanged;
  final Function(bool)? onFocusChanged;
  final String? Function(String?)? validator;
  final FocusNode? focusNode;
  final ValueChanged<String>? onFieldSubmitted;

  CustomTextFormField({
    Key? key,
    int? maxline,
    String? initvalue,
    bool? enable,
    TextEditingController? controller,
    required String txtLable,
    this.validator,
    this.obscuretext = false,
    this.onChanged,
    this.onFocusChanged,
    this.focusNode,
    this.onFieldSubmitted,
    //required errorText,
  })  : _controller = controller,
        _txtLable = txtLable,
        _enable = enable,
        _maxLine = maxline,
        _initValue = initvalue,
        obscuretext = obscuretext,
        
        super(key: key);
        

  @override
  Widget build(BuildContext context) {
    
    return TextFormField(
      focusNode: focusNode,
      enabled: _enable,
      obscureText: obscuretext,
      controller: _controller,
      initialValue: _initValue,
      onChanged: onChanged,
      onFieldSubmitted: onFieldSubmitted,
      validator: validator,
      decoration: InputDecoration(
          //   errorText: _errorText,
          border: const OutlineInputBorder(
              borderRadius: BorderRadius.all(Radius.circular(18))),
          label: Text(_txtLable)),
      maxLines: _maxLine,
    );
  }
}
