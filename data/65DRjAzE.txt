#!/usr/bin/env python3
from ev3dev.ev3 import LargeMotor
from ev3dev2.power import PowerSupply
import time
import os
import shutil
import math

# Класс для получения данных о заряде батареи
volts = PowerSupply()
# Класс для взаимодействия с двигателем
motorA = LargeMotor('outA')

# Создаем папочку для данных
#if os.path.exists('/home/robot/data_5'):
#    shutil.rmtree('/home/robot/data_5')

#os.makedirs('/home/robot/data_5')

try:
    Um = volts.measured_volts
    motorA.position = 0
    start_time = time.time()
    start_pos = motorA.position
    error = 0

    #to reset:
    A = 3
    omega = 10

    while(time.time() - start_time < 10):

        t = time.time()-start_time
        U = A * math.sin(omega * t)                      #ну тут и так понятно, что за U

        if U > Um:
            U = 100
        elif U < -Um:
            U = -100
        else:
            U = U / Um * 100

            motorA.run_direct(duty_cycle_sp=U)

            # В течение 10 секунд записываем в файл данные в формате: <time,angle,speed,error>
            with open('data_5/'+'sin(A1='+str(A)+' w1='+str(omega)+')', "a") as f:
                print(str(time.time() - start_time) + ',' + str(motorA.position - start_pos) + ',' + str(motorA.speed) + ',' + str(error))
                f.write(str(time.time() - start_time) + ',' + str(motorA.position - start_pos) + ',' + str(motorA.speed) + ',' + str(error) + '\n')

except Exception as e:
    raise e

finally:
  # Останавливаем мотор в случае ошибок в коде
    motorA.stop(stop_action='brake')