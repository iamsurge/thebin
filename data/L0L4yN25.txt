//credits: fluentcpp.com

#include <iostream>
#include <vector>
#include <algorithm>
#include <ranges>


using namespace std;


int main()
{

	vector<int> numeri = { 1, 2, 3 ,4, 5 , 6};

	//vector<int> numeri_pari;
	//copy_if(begin(numeri), end(numeri), 
	//	           back_inserter(numeri_pari), 
	//	           [](int n) { return n % 2 == 0; });

	//vector<int> numeri_pari_raddoppiati;
	//transform(begin(numeri_pari), end(numeri_pari), 
	//	             back_inserter(numeri_pari_raddoppiati), 
	//	             [](int n) { return n * 2; });

	//for (int n : numeri_pari_raddoppiati)	cout << n << ' ';

	auto numeri_pari_raddoppiati =
		numeri | ranges::views::filter([](int n) { return n % 2 == 0; }) |
		ranges::views::transform([](int n) { cout << "!!"; return n * 2; });

	for (int n : numeri_pari_raddoppiati) cout << n << ", ";


	/*for (int n : numeri | 
		           ranges::views::filter([](int n) { return n % 2 == 0; }) |
		           ranges::views::transform([](int n) { return n*2; }))
		 cout << n << ", ";*/
}

