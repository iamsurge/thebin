#include <iostream>
#include <stdlib.h>
#include "funciones.h"
using namespace std;
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	struct pasajero{
				int numeracion;	
		       char nombrePasajero[20];
		        int iNombre;
				int pesoPasajero;
				int edadPasajero;
			   char preferenciaPasajero[10];	
				int colorPasajero;
		   pasajero *siguiente;
		   pasajero *anterior;
		   pasajero *enFila;
	};
	       pasajero *primero = NULL;
		   pasajero *ultimo = NULL;
		   pasajero *enFila = NULL;
		   
// - VARIABLES BLOBALES		//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
					//   0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5
 int figuraColor[18] = {2,1,4,1,4,2,4,1,4,2,4,1,4,1,2,1,4,1};
const char*nombres[]={"PABLO","NAHUEL","IRIS","ISIS","SUSANA","ARIEL","JOAQUIN","AXEL","GONZALO","LUCAS","FRANCISCO","ARIANA","DAIANA","DANIELA","GABRIEL"};
		   const char *decision[] = {"\0","SI","NO"};
	const char *figuraPasajero [] = {"\0","MONTABLE","CON MAYOR","\0","AUTOMOVIL"};
						//  0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5
	int preferencias[26] = {2,1,4,4,2,4,1,1,4,2,1,1,1,4,4,4,2,1,2,1,1,2,2,4,4,1};	//CON PADRES, MONTABLE, AUTOMOVIl
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	void crearCarrusel(){
		posicionar(10,1);	colors(14);	cout<<"- CARRUSEL: ACOMODAR A LOS NINIOS";
		posicionar(3,3);	colors(10);	cout<<"CON UN MAYOR";	
		posicionar(3,4);	colors(9);	cout<<"MONTABLE";
		posicionar(3,5);	colors(12);	cout<<"AUTO";

					posicionar(29,3);	colors(10);	cout<<"01";	colors(7);
				posicionar(27,4);	cout<<(char)219;cout<<(char)219;cout<<(char)219;cout<<(char)219;;cout<<(char)219;
				posicionar(27,5);	cout<<(char)219;cout<<(char)219;cout<<(char)219;cout<<(char)219;;cout<<(char)219;
				posicionar(27,6);	cout<<(char)219;cout<<(char)219;cout<<(char)219;cout<<(char)219;;cout<<(char)219;
				
			for(int i=0;i<3;i++){
				/*PARTE SUPERIOR	*/{
					colors(9);	posicionar(22,4);	cout<<"02";						//+1
								posicionar(35,4);	cout<<"18";		colors(7);		//+2
   				posicionar(21,5+i); 	cout<<(char)219;cout<<(char)219;cout<<(char)219;cout<<(char)219;;cout<<(char)219;
				posicionar(33,5+i);		cout<<(char)219;cout<<(char)219;cout<<(char)219;cout<<(char)219;;cout<<(char)219;
					
					colors(12);	posicionar(16,6);	cout<<"03";						//+1
								posicionar(41,6);	cout<<"17";		colors(7);		//+2
				posicionar(15,7+i);		cout<<(char)219;cout<<(char)219;cout<<(char)219;cout<<(char)219;;cout<<(char)219;
				posicionar(39,7+i);		cout<<(char)219;cout<<(char)219;cout<<(char)219;cout<<(char)219;;cout<<(char)219; 	
					colors(9);	posicionar(10,8);	cout<<"04";						//+1
								posicionar(47,8);	cout<<"16";		colors(7);		//+2
				posicionar( 9,9+i);		cout<<(char)219;cout<<(char)219;cout<<(char)219;cout<<(char)219;;cout<<(char)219;
				posicionar(45,9+i);		cout<<(char)219;cout<<(char)219;cout<<(char)219;cout<<(char)219;;cout<<(char)219;   	
					colors(12);	posicionar(4,10);	cout<<"05";						//+1
					colors(10);	posicionar(53,10);	cout<<"15";		colors(7);		//+2
				posicionar(3,11+i);		cout<<(char)219;cout<<(char)219;cout<<(char)219;cout<<(char)219;;cout<<(char)219;   
				posicionar(51,11+i);	cout<<(char)219;cout<<(char)219;cout<<(char)219;cout<<(char)219;;cout<<(char)219;	}
				/*PARTE CENTRAL		*/{
				posicionar(27,13+i);	cout<<(char)219;cout<<(char)219;cout<<(char)219;cout<<(char)219;;cout<<(char)219;	}
				/*PARTE INFERIOR	*/{
				posicionar(3,15+i);		cout<<(char)219;cout<<(char)219;cout<<(char)219;cout<<(char)219;;cout<<(char)219;   
				posicionar(51,15+i);	cout<<(char)219;cout<<(char)219;cout<<(char)219;cout<<(char)219;;cout<<(char)219;
					colors(10);	posicionar(4,18);	cout<<"06";						//+1
					colors(9);	posicionar(53,18);	cout<<"14";		colors(7);		//+2
				
				posicionar(9,17+i);		cout<<(char)219;cout<<(char)219;cout<<(char)219;cout<<(char)219;;cout<<(char)219;
				posicionar(45,17+i);	cout<<(char)219;cout<<(char)219;cout<<(char)219;cout<<(char)219;;cout<<(char)219;   	
					colors(12);	posicionar(10,20);	cout<<"07";						//+1
								posicionar(47,20);	cout<<"13";		colors(7);		//+2
			
				posicionar(15,19+i);	cout<<(char)219;cout<<(char)219;cout<<(char)219;cout<<(char)219;;cout<<(char)219;
				posicionar(39,19+i);	cout<<(char)219;cout<<(char)219;cout<<(char)219;cout<<(char)219;;cout<<(char)219; 
					colors(9);	posicionar(16,22);	cout<<"08";						//+1
								posicionar(41,22);	cout<<"12";		colors(7);		//+2
				
				posicionar(21,21+i);	cout<<(char)219;cout<<(char)219;cout<<(char)219;cout<<(char)219;;cout<<(char)219;
				posicionar(33,21+i);	cout<<(char)219;cout<<(char)219;cout<<(char)219;cout<<(char)219;;cout<<(char)219;   
					colors(12);	posicionar(22,24);	cout<<"09";						
								posicionar(35,24);	cout<<"11";		colors(7);												}
    		}
		    	posicionar(27,22);	cout<<(char)219;cout<<(char)219;cout<<(char)219;cout<<(char)219;;cout<<(char)219;
				posicionar(27,23);	cout<<(char)219;cout<<(char)219;cout<<(char)219;cout<<(char)219;;cout<<(char)219;
				posicionar(27,24);	cout<<(char)219;cout<<(char)219;cout<<(char)219;cout<<(char)219;;cout<<(char)219;
					posicionar(28,25);	colors(10);	cout<<"10";	colors(7);	 	
	}//END
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	void ubicarPasajero(int numeracion, int colorPasajero){
		switch(numeracion){
			case 1:		posicionar(28,5);	colors(colorPasajero);		cout<<(char)219; cout<<(char)219; cout<<(char)219;	break;
			case 2:		posicionar(22,6);	colors(colorPasajero);		cout<<(char)219; cout<<(char)219; cout<<(char)219;	break;
			case 3:		posicionar(16,8);	colors(colorPasajero);		cout<<(char)219; cout<<(char)219; cout<<(char)219;	break;
			case 4:		posicionar(10,10);	colors(colorPasajero);		cout<<(char)219; cout<<(char)219; cout<<(char)219;	break;
			case 5:		posicionar(4,12);	colors(colorPasajero);		cout<<(char)219; cout<<(char)219; cout<<(char)219;	break;
			case 6:		posicionar(4,16);	colors(colorPasajero);		cout<<(char)219; cout<<(char)219; cout<<(char)219;	break;
			case 7:		posicionar(10,18);	colors(colorPasajero);		cout<<(char)219; cout<<(char)219; cout<<(char)219;	break;
			case 8:		posicionar(16,20);	colors(colorPasajero);		cout<<(char)219; cout<<(char)219; cout<<(char)219;	break;
			case 9:		posicionar(22,22);	colors(colorPasajero);		cout<<(char)219; cout<<(char)219; cout<<(char)219;	break;
			case 10:	posicionar(28,23);	colors(colorPasajero);		cout<<(char)219; cout<<(char)219; cout<<(char)219;	break;
			case 11:	posicionar(34,22);	colors(colorPasajero);		cout<<(char)219; cout<<(char)219; cout<<(char)219;	break;
			case 12:	posicionar(40,20);	colors(colorPasajero);		cout<<(char)219; cout<<(char)219; cout<<(char)219;	break;
			case 13:	posicionar(46,18);	colors(colorPasajero);		cout<<(char)219; cout<<(char)219; cout<<(char)219;	break;
			case 15:	posicionar(52,12);	colors(colorPasajero);		cout<<(char)219; cout<<(char)219; cout<<(char)219;	break;
				case 14:	posicionar(52,16);	colors(colorPasajero);		cout<<(char)219; cout<<(char)219; cout<<(char)219;	break;
		case 16:	posicionar(46,10);	colors(colorPasajero);		cout<<(char)219; cout<<(char)219; cout<<(char)219;	break;
			case 17:	posicionar(40,8);	colors(colorPasajero);		cout<<(char)219; cout<<(char)219; cout<<(char)219;	break;
			case 18:	posicionar(34,6);	colors(colorPasajero);		cout<<(char)219; cout<<(char)219; cout<<(char)219;	break;
		}
	}//END
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	void agregar(int numero, int iNombre, int peso, int edad, int iColor,int iLista){
		pasajero *nuevo = new pasajero();	
		/*numeracion*/	nuevo->numeracion = numero;		
		/*nombre*/		strcpy(nuevo->nombrePasajero,nombres[iNombre]);	
						nuevo->iNombre = iNombre;
		/*peso*/		nuevo->pesoPasajero = peso;	
		/*edad*/		nuevo->edadPasajero = edad;			
		/*color*/		nuevo->colorPasajero = iColor;								fflush(stdin);	//LIMPIA EL BUFFER	
						strcpy(nuevo->preferenciaPasajero, figuraPasajero[iColor]);	fflush(stdin);	//LIMPIA EL BUFFER	
		//ENLAZAMIENTO
				if (primero == NULL){
						          primero = nuevo;
					   primero->siguiente = primero;
					  	primero->anterior = primero; 
					  	 		   ultimo = primero;
				}
				else{
						ultimo->siguiente = nuevo;
						 nuevo->siguiente = primero;
					  	  nuevo->anterior = ultimo;
					               ultimo = nuevo;
						primero->anterior = ultimo;
						if(numero == 18){
							enFila = ultimo;
						}
				}
	}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	void visualizar(char tipoVista){
		pasajero *mostrar, *lista = new pasajero();
		int linea = 1 , color;
			switch(tipoVista){
				case 'S':	mostrar = primero;
							do{ 
								posicionar(62,3);		colors(2);	cout<<"- CLIENTES A MONTADOS:";	posicionar(62,4);	cout<<(char)219;
								color = mostrar->colorPasajero;
									posicionar(62,4+linea);
						        		colors(2);		cout<<(char)219;
						        		colors(7);		cout<<" #"<<linea<<":"<<mostrar->nombrePasajero<<",\t";
										colors(3);		cout<<mostrar->pesoPasajero<<"Kg, ";
										colors(13);		cout<<mostrar->edadPasajero<<" ANIOS, ";
										colors(color);	cout<<mostrar->preferenciaPasajero<<".";
										
										ubicarPasajero(mostrar->numeracion, color);
									mostrar = mostrar->siguiente;
								linea++;	
							}while(mostrar != enFila->siguiente);
							
					break;
					
				case 'E':	mostrar = enFila->siguiente;
							int contador = 1;
							do{ 
								posicionar(112,3);		colors(4);	cout<<"- FILA ESPERA:";	
								posicionar(112,4);		colors(4);	cout<<(char)219;
								color = mostrar->colorPasajero;
									posicionar(112,4+linea);	
										colors(4);		cout<<(char)219;
						        		colors(7);		cout<<" #"<<contador<<":"<<mostrar->nombrePasajero<<",\t";
										colors(3);		cout<<mostrar->pesoPasajero<<"Kg, ";
										colors(13);		cout<<mostrar->edadPasajero<<" ANIOS, ";
										colors(color);	cout<<mostrar->preferenciaPasajero<<".";
										
										ubicarPasajero(mostrar->numeracion, color);
									mostrar = mostrar->siguiente;
								linea++,contador++;	
							}while(mostrar != primero);
					break;
			}	
	}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    void subirPasajeros(){	
    	int lugar = 1,iNombre = 0, edad = 0, peso = 0, iColor = 0;
			while(	lugar <= 18	){
						//	AUTOGENERAR DATOS DE PASAJEROS;
							iNombre = generarNumero(0,14);
							   edad = generarNumero(3,10);
							   peso = pesoSegunEdad(edad);
							 iColor = preferencias[lugar];
							 		
						//  ENLAZARLO;	 
						agregar	(lugar, iNombre, peso, edad, iColor,1);
					fflush(stdin); //LIMPIA EL BUFFER
				iNombre = 0, edad = 0, peso = 0, iColor = 0;
			lugar++; }	 
	}//END
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    void colaEspera(int limite){	
    	int lugar = 1,iNombre = 0, edad = 0, peso = 0, iColor = 0;
			while(	lugar <= limite	){
						//	AUTOGENERAR DATOS DE PASAJEROS;
							iNombre = generarNumero(0,14);
							   edad = generarNumero(2,10);
							   peso = pesoSegunEdad(edad);
							 iColor = preferencias[lugar];//preferenciaFigura();
							 		
						//  ENLAZARLO;	 
						agregar	(lugar, iNombre, peso, edad, iColor,1);
					fflush(stdin); //LIMPIA EL BUFFER
				iNombre = 0, edad = 0, peso = 0, iColor = 0;
			lugar++; }	
	}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	void acomodarPasajeros(){
		pasajero *mostrar, *auxiliar = new pasajero();
		int tipoLista, iDesde, iHacia;
		int lugarD,iNombreD,pesoD,edadD,iColorD;//desde
		int lugarH,iNombreH,pesoH,edadH,iColorH;//Hacia
					crearCarrusel();
						visualizar('S');
						visualizar('E');
							posicionar(3,28);	colors(14);
								cout<<"- MENU: SELECCIONE LISTA.";
								posicionar(3,29); cout<<(char)219;	cout<<" 1. PASAJEROS SUBIDOS.";
								posicionar(3,30); cout<<(char)219;	cout<<" 2. PASAJEROS ESPERANDO.";
								posicionar(3,31); cout<<(char)219;
									tipoLista = takeOptionGotoxy(" > OPCION:",1,2,4,31);
										if(	tipoLista == 1	){	colors(7);					
											posicionar(62,28);	cout<<"- CAMBIAR DE POSICION: ";	
											posicionar(62,29);	cout<<(char)219; iDesde = takeOptionGotoxy("- MOVER A FIGURA :  ",1,18,64,29);
											posicionar(62,30);	cout<<(char)219; iHacia = takeOptionGotoxy("- HACIA LA FIGURA:  ",1,18,64,30);
												mostrar = primero;
												do{	
													if(mostrar->numeracion == iDesde){
														  lugarH = mostrar->numeracion;
														iNombreD = mostrar->iNombre;
														   pesoD = mostrar->pesoPasajero;
														   edadD = mostrar->edadPasajero;
														 iColorD = mostrar->colorPasajero;
													}
													if(mostrar->numeracion == iHacia){
														  lugarD = mostrar->numeracion;
														iNombreH = mostrar->iNombre;
														   pesoH = mostrar->pesoPasajero;
														   edadH = mostrar->edadPasajero;
														 iColorH = mostrar->colorPasajero;
													}
													mostrar = mostrar->siguiente;
												}while(mostrar != enFila->siguiente);
											agregar	(lugarD, iNombreH, pesoH, edadH, iColorH,1);
											agregar	(lugarH, iNombreD, pesoD, edadD, iColorD,1);
										}
										if(	tipoLista == 2	){	colors(7);					
											posicionar(62,28);	cout<<"- SACAR Y PONER PASAJERO: ";	
											posicionar(62,29);	cout<<(char)219; iDesde = takeOptionGotoxy("- POSICION DE FIGURA :  ",1,18,64,29);
											posicionar(62,30);	cout<<(char)219; iHacia = takeOptionGotoxy("- POSICION DE LA FILA:  ",1,6,64,30);
												mostrar = primero;
												switch(iHacia){
													case 1:	iHacia = 19;	break;
													case 2:	iHacia = 20;	break;
													case 3:	iHacia = 21;	break;
													case 4:	iHacia = 22;	break;
													case 5:	iHacia = 23;	break;
													case 6:	iHacia = 24;	break;
												}
												do{	
													if(mostrar->numeracion == iDesde){
														  lugarH = mostrar->numeracion;
														iNombreD = mostrar->iNombre;
														   pesoD = mostrar->pesoPasajero;
														   edadD = mostrar->edadPasajero;
														 iColorD = mostrar->colorPasajero;
													}
													if(mostrar->numeracion == iHacia){
														  lugarD = mostrar->numeracion;
														iNombreH = mostrar->iNombre;
														   pesoH = mostrar->pesoPasajero;
														   edadH = mostrar->edadPasajero;
														 iColorH = mostrar->colorPasajero;
													}
													mostrar = mostrar->siguiente;
												}while(mostrar != enFila->siguiente);
											agregar	(lugarD, iNombreH, pesoH, edadH, iColorH,1);
											agregar	(lugarH, iNombreD, pesoD, edadD, iColorD,1);
										}
				getch(); system("cls");
	}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	bool finalizar(){
		pasajero *recorrer = new pasajero();
		int color = 0;
			recorrer = primero;
				do{	
					color = recorrer->colorPasajero;
					if(color != figuraColor[recorrer->numeracion])	return false;
					recorrer->siguiente;
				}while(recorrer != enFila->siguiente);
	return true;}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	int main(void){
		bool final = false;
			subirPasajeros();
			colaEspera(6);
				do{	
					acomodarPasajeros(); getch();
						final = finalizar();
							system("cls");
				}while(final != false);
	return 0;}

