import FuelSDK
import ET_Client
import pandas as pd


#define local variables 

clientid= 'my_client_id_code'
clientsecret='my_client_secret_code' 
subdomain = 'mcx1k2thcht5qzdsm6962p8ln2c8'
auth_base_url = f'https://{subdomain}.auth.marketingcloudapis.com/'
rest_url = f'https://{subdomain}.rest.marketingcloudapis.com/'
soap_url=f'https://{subdomain}.soap.marketingcloudapis.com/'


#Passing config as a parameter to ET_Client constructor:

myClient = FuelSDK.ET_Client(True, False,
{'clientid': clientid, 
'clientsecret': clientsecret,
'useOAuth2Authentication': 'True',
'authenticationurl': auth_base_url,
'applicationType': 'server',
'baseapiurl': rest_url,
'soapendpoint': soap_url})


# Create an instance of the object type we want to work with:

list = FuelSDK.ET_List()


# Associate the ET_Client- object using the auth_stub property:

list.auth_stub = myClient


# Utilize one of the ET_List methods:

response = list.get()


# Print out the results for viewing
print('Post Status: ' + str(response.status))
print('Code: ' + str(response.code))
print('Message: ' + str(response.message))
print('Result Count: ' + str(len(response.results)))

# print('Results: ' + str(response.results))

debug = False
stubObj = ET_Client(False, False, params={'clientid': clientid,
                                                   'clientsecret': clientsecret})
getBounceEvent = ET_Client.ET_BounceEvent()
getBounceEvent.auth_stub = stubObj
getBounceEvent.props = ["SendID","SubscriberKey","EventDate","Client.ID","EventType","BatchID","TriggeredSendDefinitionObjectID","PartnerKey"]
getBounceEvent.search_filter = {'Property' : 'EventDate', 'SimpleOperator' : 'greaterThan', 'DateValue' : retrieveDate}
getResponse = getBounceEvent.get()


#define dataframe to read response into

df=pd.DataFrame(getBounceEvent.props)


#load data into csv data file

df.to_csv('salesforce_marketing_cloud_sample.csv', index=False)