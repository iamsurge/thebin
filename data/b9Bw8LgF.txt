function main()
  display()
  calibrate()
end

function calibrate()
  max_energy = 10000000  --ten million
  energy_stored = reactor.getEnergyStored()
  sleep(0.1)
  output = reactor.getEnergyStored() - energy_stored
  if output < 0 then
    output = output * -1
  end
  input = reactor.getEnergyProducedLastTick()
  if input > output then
    --increase control rods and check again
    rod_level = reactor.getControlRodLevel(1)
    reactor.setAllControlRodLevels(rod_level + 1)
    main()
  elseif input < output then
  --decrease control rods and check again
    rod_level = reactor.getControlRodLevel(1)
    reactor.setAllControlRodLevels(rod_level - 1)
    main()
  end
  sleep(1)
end

function config_conn()
  reactor = peripheral.wrap('back')
end

function display()
  term.setCursorPos(1,3)
  term.clearLine()
  term.setTextColor(colors.white)
  write('Reactor ')
  if reactor.getActive() == true then
    term.setTextColor(colors.green)
    print('ON')
  elseif reactor.getActive() == false then
    term.setTextColor(colors.red)
    print('OFF')
  end
  term.setCursorPos(1,4)
  term.clearLine()
  term.setTextColor(colors.white)
  write('Control Rods: ')
  term.setTextColor(colors.blue)
  print(reactor.getControlRodLevel(1))
end


term.clear()
term.setCursorPos(1,1)
print('Reactor Controller v2')
print('by Audacity 12/22/2022')
config_conn()
reactor.setActive(true)
reactor.setAllControlRodLevels(50)
main()

