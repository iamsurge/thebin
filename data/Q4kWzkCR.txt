class Solution {
public:
	ListNode* reverseList(ListNode* head) {
		auto a = reverseListHelper(head);
		return a.first;
	}
private:
	std::pair<ListNode*, ListNode*> reverseListHelper(ListNode* head) {
		if (head) {
			if (head->next) {
				auto tempp = reverseListHelper(head->next);
				ListNode* thead = tempp.first;
				ListNode* ttail = tempp.second;
				ttail->next = head;
				head->next = nullptr;
				return {thead, ttail->next};
//				return new ListNode(temp->val, head);
			}
			else {
				return {head, head};
			}
		}
		return {head, head};
	}
};