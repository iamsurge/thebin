#include <iostream>
#include <fstream>
#include <functional>
#define MAX 1000
using namespace std;

void LoadArray(istream &f, int arr[], int &n);
void SaveArry(ostream &f, int arr[], int n);
bool NonDecreasing(int x, int y);
bool NonIncreasing(int x, int y);
void Longest(int arr[], int n, int &L, int &R, function < int (int, int) > func);

int main(){
    ifstream fi;
    ofstream fo;
    fi.open("Numbers.txt");
    fo.open("Longest.txt");
    int arr[MAX], n;
    LoadArray(fi, arr, n);
    int NonDecreasingL, NonDecreasingR;
    Longest(arr, n, NonDecreasingL, NonDecreasingR, NonDecreasing);
    int NonIncreasingL, NonIncreasingR;
    Longest(arr, n, NonIncreasingL, NonIncreasingR, NonIncreasing);
    if (NonIncreasingR - NonIncreasingL > NonDecreasingR - NonDecreasingL)
        SaveArry(fo, arr + NonIncreasingL, NonIncreasingR - NonIncreasingL);
    else SaveArry(fo, arr + NonDecreasingL, NonDecreasingR - NonDecreasingL);
    fi.close();
    fo.close();
    return 0;
}

void LoadArray(istream &f, int arr[], int &n){
    f >> n;
    for (int i = 0; i < n; ++i) f >> arr[i];
}
void SaveArry(ostream &f, int arr[], int n){
    f << n << '\n';
    for (int i = 0; i < n; ++i) f << arr[i] << ' ';
}
bool NonDecreasing(int x, int y){
    return x <= y;
}

bool NonIncreasing(int x, int y){
    return x >= y;
}
void Longest(int arr[], int n, int &L, int &R, function < int (int, int) > func){
    L = 0;
    R = 1;
    for (int i = 0; i < n; ){
        int j = i + 1;
        while (j < n && func(arr[j - 1], arr[j])) j++;
        if (R - L < j - i){
            L = i;
            R = j;
        }
        i = j;
    }
}
