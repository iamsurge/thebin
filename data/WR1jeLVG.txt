import java.util.Random;
import java.util.Date;

class CoordinateGenerator {
		private Random randomGenerator;
		public CoordinateGenerator() {
			Date now = new Date();
			long sec = now.getTime();
			randomGenerator = new Random(sec);
		}
	
		public int generateX() {
			int x = randomGenerator.nextInt(101);
			if(x < 5) {
				x = 0;
			} 
			else if(x > 95) {
				x = 100;
			}	 	
			else {
				x = randomGenerator.nextInt(99) + 1;
			}
			return x;
		}
	
		public int generateY() {
			int y = randomGenerator.nextInt(101);
			if(y < 5) {
				y = 0;
			} 
			else if(y > 95) {
				y = 50;
			} 
			else {
				y = randomGenerator.nextInt(49) + 1;
			}
			return y;
		}	
	}

	class Minge {
		private double pozitieX, pozitieY;
		public Minge(double pozitieX, double pozitieY) {
			this.pozitieX = pozitieX;
			this.pozitieY = pozitieY;
		}

		public double genereazaX(){
			return this.pozitieX;
		}

		public double genereazaY(){
			return this.pozitieY;
		}

		public void suteaza() throws Out, Corner, Gol{
			CoordinateGenerator minge = new CoordinateGenerator();
			this.pozitieX = minge.generateX();
			this.pozitieY = minge.generateY();

			if(pozitieY == 0 || pozitieY == 50){
				throw new Out();
			}
			if((pozitieX == 0 || pozitieX == 100) && (pozitieY >= 20 && pozitieY <= 30)){
				throw new Gol();
			}
			if((pozitieX == 0 || pozitieX == 100) && ((pozitieY > 0 && pozitieY < 20) || (pozitieY > 30 && pozitieY < 50))){
				throw new Corner();
			}
		}
	}

	class Out extends Exception {
		public String toString(){
			return "Out";
		}
	}

	class Gol extends Exception {
		public String toString(){
			return "Gol";
		}
	}

	class Corner extends Exception {
		public String toString(){
			return "Corner";
		}
	}

	class Joc extends CoordinateGenerator {
		private String Echipa1, Echipa2;
		private int nrGoluri_Echipa1, nrGoluri_Echipa2;
		private int nrOut, nrCorner;

		public Joc(String Echipa1, String Echipa2){
			this.Echipa1 = Echipa1;
			this.Echipa2 = Echipa2;
		}
		
		public String toString(){
			return "[" + Echipa1 + "]: Nr. goluri = " + nrGoluri_Echipa1 + "\n" + "[" + Echipa2 + "]: Nr. goluri = " + nrGoluri_Echipa2 + "\n[#TOTAL]: Nr. out = " + nrOut + "\n[#TOTAL]: Nr. corners = " + nrCorner;
		}
		public void simuleaza(){
			CoordinateGenerator coordonateMinge = new CoordinateGenerator();
			Minge minge = new Minge(coordonateMinge.generateX(), coordonateMinge.generateY());
			int i = 0;
			for(; i<1000; i++){
				try {
					minge.suteaza();
					System.out.println(Echipa1 + " - " + Echipa2 + " : Mingea se afla la coordonatele (" + minge.genereazaX() + "," + minge.genereazaY() + ")");
				}
				catch(Gol gol){
					if(minge.genereazaX() == 0){
						nrGoluri_Echipa1++;
					}
					if(minge.genereazaX() == 100){
						nrGoluri_Echipa2++;
					}
					minge = new Minge(50, 25);
				}
				catch(Out o){
					if(minge.genereazaY() == 0 || minge.genereazaY() == 50){
						nrOut++;
						minge = new Minge(minge.genereazaX(), minge.genereazaY());
					}
				}
				catch(Corner c){
					if(minge.genereazaX() == 0 || minge.genereazaX() == 100){
						if ((minge.genereazaY()<20 && minge.genereazaY()<0) || (minge.genereazaY()>30 && minge.genereazaY()<50)){
							nrCorner++;
							minge = new Minge(minge.genereazaX(), minge.genereazaY());
						}
					}
				}
			}
		}
	}

	public class Client {
	public static void main(String[] args){
		Joc joc1 = new Joc("Steaua", "Dinamo");
		Joc joc2 = new Joc("Real madrid", "Manchester");

		joc1.simuleaza();
		joc2.simuleaza();

		System.out.println("\n\n");
		System.out.println(joc1.toString() +"\n\n");
		System.out.println(joc2.toString());
	}
}