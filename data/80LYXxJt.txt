import java.io.File;
import java.io.FileNotFoundException;
import java.io.PrintWriter;
import java.util.Scanner;

public class task54 {

	static PrintWriter pw;
	public static void main(String[] args) throws FileNotFoundException{
		Scanner scanner = new Scanner(new File("input.txt"));
		pw = new PrintWriter(new File("output.txt"));
		String command;
		int s;
		MyStack stack = new MyStack(10000);
		do {
			command = scanner.next();
			switch (command) {
			case "push":
				stack.push(scanner.nextInt());
				break;
			case "pop":
				s = stack.pop();
				pw.println((s == -999999999) ? ("error") : (s));
				break;
			case "back":
				pw.println((stack.back() == -999999999) ? ("error") : (stack.back()));
				break;
			case "size":
				pw.println(stack.size());
				break;
			case "clear":
				stack.clear();
				break;
			case "exit":
				stack.exit();
				break;
			default:
				break;
			}
		} while (!command.equals("exit"));
		scanner.close();
		pw.close();
	}

	static class MyStack {
		private int maxSize;
		private int[] stackArray;
		private int top;

		public MyStack(int sizeStack) {
			maxSize = sizeStack;
			stackArray = new int[maxSize];
			top = -1;
		}

		public void push(int element) {
			stackArray[++top] = element;
			pw.println("ok");
		}

		public int pop() {
			if (top != -1)
				return stackArray[top--];
			else {
				return -999999999;
			}
		}

		public int back() {
			if (top != -1)
				return (stackArray[top]);
			else {
				return -999999999;
			}
		}

		public int size() {
			return top + 1;
		}

		public void clear() {
			top = -1;
			pw.println("ok");
		}

		public void exit() {
			pw.println("bye");
			pw.close();
			System.exit(0); 
		}
	}
}