#include <iostream>
#include <cmath>
#include <vector>
#include <queue>
#include <algorithm>
#include <string>
#include <stack>
#include <set>
#include <map>
#define pii pair <int, int>
#define pb(x) push_back(x)
using namespace std;
using ll = long long;
using ld = long double;
using db = double;
void cv(vector <int> &v) {
    for (auto x : v) cout << x << ' ';
    cout << "\n";
}

void cvl(vector <ll> &v) {
    for (auto x : v) cout << x << ' ';
    cout << "\n";
}


void cvv(vector <vector <int> > &v) {
    for (auto x : v) cv(x);
    cout << "\n";
}

void cvb(vector <bool> v) {
    for (bool x : v) cout << x << ' ';
    cout << "\n";
}

void cvs(vector <string>  v) {
    for (auto a : v) {
        cout << a << "\n";
    }
}

void cvp(vector <pii> a) {
    for (auto p : a) {
        cout << p.first << ' ' << p.second << "\n";
    }
    cout << "\n";
}



int main() {
    ios::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
    vector <vector <int> > KOZ = {
        {
            0, 0, 0
        },
        {
            1, 1, 2
        },
        {
            2, 2, 4
        },
        {
            3, 3, 6
        },
        {
            4, 4, 8
        },
        {
            5, 6, 0
        },
        {
            6, 7, 2
        },
        {
            7, 8, 4
        },
        {
            8, 9, 6
        }
    };
    int K, O, Z;
    vector <int> ans(10);
    for (auto vec: KOZ) {
        K = vec[0];
        O = vec[1];
        Z = vec[2];
        for (int PH = 1; PH <= 9; ++PH) {
            for (int H = 1; H <= O; ++H) {
                int P = O - H;

            }
        }
    }

}
