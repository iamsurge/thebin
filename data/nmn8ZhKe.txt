
#MENI
unesen_dna ="acgttgca"
# trazenje unosa dna sekvence od korisnika 
#unesen_dna =  input("Molim unesi DNA sekvencu: ")
# Pretvori unesen dna u velika slova
dna = ( unesen_dna.upper() )

#A dio zadatka

#broje se koliko koje baze dna ima
zbroj_A = dna.count("A")
zbroj_T= dna.count("T") 
zbroj_G=dna.count("G")
zbroj_C= dna.count("C")
#racunaju se postoci za svaku pojedinu bazu i to se zaokru≈æuje na 3 decimale
postotakA =  round(((zbroj_A / len(dna))*100),3)
postotakT = round(((zbroj_T / len(dna))*100),3)
postotakG = round(((zbroj_G / len(dna))*100),3)
postotakC = round(((zbroj_C / len(dna))*100),3)
#ispisuju se postoci pojedinih baza u dna
print("Baze A ima " "%s%%"% postotakA)  
print("Baza T ima " "%s%%"% postotakT)
print("Baza G ima " "%s%%"% postotakG)
print("Baza C ima " "%s%%"% postotakC)
print()

#B dio zadatka

# Racunanje GC sastava
brojac = 0
for baza in dna:
    if baza == "G" or baza == "C":
        brojac += 1
# Pretvaranje GC sastava u postotak i zaokruzivanje postotka na dvije decimale
gc = round(((brojac/len(dna))*100),2)
#ispis postoka  gc
print("Postotak GC %.2f" % gc, "%")
print()

#C dio zadatka

# Racunanje GC sastava prve polovice sekvence
brojac2=1
n = len(dna)/2

for baza in range(int(n)):
    if baza == "G" or baza == "C":
        brojac2 += 1
        
        
# Pretvaranje GC sastava prve polovice sekvence u postotak i zaokruzivanje postotka na dvije decimale
gc_prve_polovice = round(((brojac2/(len(dna)))*100),2)
#ispis postoka  gc
print("Postotak GC sastava prve polovice sekvence %.2f" % gc_prve_polovice, "%")
print()

# Racunanje GC sastava druge polovice sekvence

#logika pomocu predhodno izracunatih brojeva
brojac3=brojac-brojac2
# Pretvaranje GC sastava druge polovice sekvence u postotak i zaokruzivanje postotka na dvije decimale
gc_druge_polovice = round(((brojac3/(len(dna)/2))*100),2)
#ispis postoka  gc DRUGE POLOVICE SEKVENCE
print("Postotak GC sastava druge polovice sekvence %.2f" % gc_druge_polovice, "%")
print()


#D dio zadatka

def isPalindrome(dna):
 
    # petlja od 0 do len/2 
    for i in range(0, int(len(dna)/2)):
        if dna[i] != dna[len(dna)-i-1]:
            return False
    return True
 
# funkcija koja odgovara je li dna polindrom
ans = isPalindrome(dna)
 
if (ans):
    print("Da, dna sekvenca je palindrom")
else:
    print("Ne, dna sekvenca nije palindrom")
    

