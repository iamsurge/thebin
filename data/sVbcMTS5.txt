--Script 1--

local DataStoreService = game:GetService("DataStoreService")
local DataStore = DataStoreService:GetDataStore("Coin")
local DataStore2 = DataStoreService:GetDataStore("Tools")

game.Players.PlayerRemoving:Connect(function(player)
	local Coin = player.leaderstats.Coin.Value
	local Levels = player.leaderstats.Level.Value
	local Doors = player.leaderstats.UnlockDoor.Value
	local Exp = player.Exp.Value
	local Tools1 = player.Backpack:GetChildren()
	local Tools = {}
	if player.Character~=nil then
		player.Character:FindFirstChild("Humanoid"):UnequipTools()
	end	
	
	for i, v in pairs(Tools1) do
		
		if v.Name ~= "StarterSword" then
			Tools[i] = v.Name
			print(v.Name)
			
		end
		
		
		
	end
	print(Tools)
	local success, errorMessage = pcall(function()
		DataStore2:SetAsync(player.UserId, Tools)
	end)

	if not success then
		print(errorMessage)
	end
	
	--
	
	local success, errorMessage = pcall(function()
		local SaveData = {Coin, Levels, Doors, Exp}
		DataStore:SetAsync(player.UserId, SaveData)
	end)
	
	if not success then
		print(errorMessage)
	end
	
end)


game.Players.PlayerAdded:Connect(function(player)
	local remoteevent = game:GetService("ReplicatedStorage").RemoteEvents:WaitForChild("Level")
	
	
	
	local Coin = player:WaitForChild("leaderstats").Coin.Value
	local Levels = player:WaitForChild("leaderstats").Level.Value
	local Doors = player:WaitForChild("leaderstats").UnlockDoor.Value
	local Tools 
	local RemoteEvent1 = game:GetService("ReplicatedStorage").RemoteEvents:WaitForChild("UnlockDoor1")
	local RemoteEvent2 = game:GetService("ReplicatedStorage").RemoteEvents:WaitForChild("UnlockDoor2")
	local RemoteEvent3 = game:GetService("ReplicatedStorage").RemoteEvents:WaitForChild("UnlockDoor3")
	local RemoteEvent4 = game:GetService("ReplicatedStorage").RemoteEvents:WaitForChild("UnlockDoor4")
	
	
	
	
	local success, SaveData = pcall(function()
		return DataStore:GetAsync(player.UserId)
		
		
	end)
	
	
	if success then
		
		local requiredexp = 100 + SaveData[2] * 100
		
		remoteevent:FireClient(player, requiredexp)	
		
		if SaveData[3] >= 1 then
			RemoteEvent1:FireClient(player)

		end
		
		if SaveData[3] >= 2 then
			RemoteEvent2:FireClient(player)

		end
		
		if SaveData[3] >= 3 then
			RemoteEvent3:FireClient(player)

		end
		
		if SaveData[3] >= 4 then
			RemoteEvent4:FireClient(player)

		end
		
		
		player.leaderstats.Coin.Value = SaveData[1]
		player.leaderstats.Level.Value = SaveData[2]
		player.leaderstats.UnlockDoor.Value = SaveData[3]
		player.Exp.Value = SaveData[4]
	end
	
	--
	
	
	local success, Tools = pcall(function()
		
		return DataStore2:GetAsync(player.UserId)


	end)


	if success then
		local ToolsFolder = game:GetService("ReplicatedStorage"):WaitForChild("Tools")
		print(Tools)
		print(#Tools)
		if #Tools > 0 then
			print("Toolss")
			for i, v in pairs(Tools) do
				
				print(v)
				local tool = ToolsFolder:FindFirstChild(v):Clone()
				
				tool.Parent = player.Backpack
			
			end
		end
	end
	
end)

--Script 2--
local remoteevent = game:GetService("ReplicatedStorage").RemoteEvents:WaitForChild("Level")
local exptext = script.Parent.Exp
local leveltext = script.Parent.Level
local exp = game.Players.LocalPlayer.Exp
local level = game.Players.LocalPlayer.leaderstats.Level
local player = game.Players.LocalPlayer

script.Parent:WaitForChild("Name").Text = player.Name

local requiredexp1 = 100 + level.Value * 100

wait(0.05)

exptext.Text = "Exp: "..exp.Value.."/"..requiredexp1
leveltext.Text = "Level: "..level.Value


remoteevent.OnClientEvent:Connect(function(requiredexp)
	
	
	
	
	exptext.Text = "Exp: "..exp.Value.."/"..requiredexp
	leveltext.Text = "Level: "..level.Value
	
	
	
	
end)