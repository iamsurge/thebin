def create_model():
    melspectrogram_layer = get_melspectrogram_layer(n_mels=log_magnitude,
                                                    n_fft=fft_number,
                                                    hop_length=hop_length,
                                                    sample_rate=sample_rate)

    res_net_layer = ResNet50(include_top=False, weights=None, input_shape=(None, None, 2))

    audio_input = Sequential()
    audio_input.add(melspectrogram_layer)
    audio_input.add(res_net_layer)
    audio_input.add(GlobalAveragePooling2D())

    audio_input = audio_input(Input(shape=(input_length, 2)))
    text_input = Input(shape=(55,))

    concatenated = tensorflow.keras.layers.concatenate([audio_input, text_input])
    concatenated = tensorflow.keras.layers.Dense(128, activation='relu')(concatenated)

    output = Dense(len(languages), activation='softmax')(concatenated)

    model = Model(inputs=[audio_input, text_input], outputs=output)

    return model