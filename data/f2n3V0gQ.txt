def greatestPower(x, p):
    s = 0
    while x % p == 0:
        x //= p
        s += 1
    return s


a, m = map(int, input().split())

divs = []
cnts = []
d = 2
while a > 1:
    while a % d != 0 and d ** 2 <= a:
        d += 1
    if a % d != 0:
        divs.append(a)
        cnts.append(1)
        a = 1
    else:
        divs.append(d)
        cnts.append(0)
        while a % d == 0:
            a //= d
            cnts[-1] += 1
print(divs)
print(cnts)

nums = [0] * len(divs)
for i in range(len(divs)):
    nums[i] = [0] * 3

for i in range(len(divs)):
    if divs[i] == 3:
        a = 1, b = (10 ** 12) ** (10 ** 6)
        divs[i][0]

    
    #l = len(divs)
    #n = 1
    #for i in range(l):
        #n *= divs[i]
    
    #k = [1] * l
    #for i in range(l):
        #while (1 + greatestPower(k[i], d)) * k[i] * n < cnts[i]:
            #k[i] += 1
    #n *= max(k)

#print(n)