chat_history_ids = torch.zeros((1, 0), dtype=torch.int)

while True:
    next_who = input("Input: ")
        
    if next_who[0] == '>':
        if len(next_who) == 2:
            next_len = next_who[1]
            if next_len == 'x':
                break
        else:
            next_len = '-'
            
        # encode the new user input, add parameters and return a tensor in Pytorch
        new_user_input_ids = tokenizer.encode(f"|1|{next_len}|", return_tensors="pt")
        # append the new user input tokens to the chat history
        chat_history_ids = torch.cat([chat_history_ids, new_user_input_ids], dim=-1)
        # print(tokenizer.decode(chat_history_ids[-1])) # uncomment to see full gpt input
        # save previous len
        input_len = chat_history_ids.shape[-1]
        # generated a response; PS you can read about the parameters at hf.co/blog/how-to-generate
        chat_history_ids = model.generate(
            chat_history_ids,
            num_return_sequences=1, # use for more variants, but have to print [i]
            max_length=512,
            no_repeat_ngram_size=3,
            do_sample=True,
            top_k=0,
            top_p=0.82,
            temperature = 0.99,  # 0 for greedy
            eos_token_id=tokenizer.eos_token_id,
            pad_token_id=tokenizer.pad_token_id,
        )
        
        # pretty print last ouput tokens from bot
        print(f"Denis: {tokenizer.decode(chat_history_ids[:, input_len:][0], skip_special_tokens=True)}")

    # else case human
    else:
        input_user = next_who
        # print(f'Human: {input_user}')
        # encode the new user input, add parameters and return a tensor in Pytorch
        new_user_input_ids = tokenizer.encode(f"|0|{get_length_param(input_user, tokenizer)}|" \
                                              + input_user + tokenizer.eos_token, return_tensors="pt")
        # append the new user input tokens to the chat history
        chat_history_ids = torch.cat([chat_history_ids, new_user_input_ids], dim=-1)