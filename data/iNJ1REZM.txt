#include <iostream>

using namespace std;

class Wymierna
{
    friend Wymierna iloczyn(Wymierna A, Wymierna B);
    int licznik;
    int mianownik;
public:
    Wymierna();     // konstruktor domyślny (bezargumentowy) - tworzy liczbę wymierną 0
    Wymierna(int l);    // konstruktor jednoargumentowy - tworzy liczbę całkowitą o podanej wartości
    Wymierna(int l, int m);
    double wartosc();
    void wypisz();
    void ustaw_licznik(int l);
    void ustaw_mianownik(int m);
    int pobierz_licznik();
    int pobierz_mianownik();
};

Wymierna iloczyn(Wymierna A, Wymierna B)
{
    Wymierna wynik(A.licznik * B.licznik, A.mianownik * B.mianownik);
    //Wymierna wynik(A.pobierz_licznik() * B.pobierz_licznik(), A.pobierz_mianownik() * B.pobierz_mianownik());
    return wynik;
}

Wymierna::Wymierna() : licznik(0), mianownik(1) {}
Wymierna::Wymierna(int l) : licznik(l), mianownik(1) {}
Wymierna::Wymierna(int l, int m) : licznik(l), mianownik(m) {}

double Wymierna::wartosc()
{
    return 1.0 * licznik / mianownik;
}

void Wymierna::wypisz()
{
    cout << licznik << '/' << mianownik << endl;
}

void Wymierna::ustaw_licznik(int l)
{
    licznik = l;
}

void Wymierna::ustaw_mianownik(int m)
{
    mianownik = m;
}

int Wymierna::pobierz_licznik()
{
    return licznik;
}

int Wymierna::pobierz_mianownik()
{
    return mianownik;
}

int main()
{
    Wymierna A(3, 2);
    Wymierna B(4, 3);
    Wymierna C = iloczyn(A, B);
    C.wypisz();
    return 0;
}