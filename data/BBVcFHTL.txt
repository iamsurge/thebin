function binarySearch(array, target) {
  let left = 0;
  let right = array.length - 1;

  while (left <= right) {
    const middle = Math.floor((left + right) / 2);
    if (array[middle] === target) {
      return middle;
    }
    if (array[middle] < target) {
      left = middle + 1;
    } else {
      right = middle - 1;
    }
  }

  return -1;
}

// Beispiel f체r die Verwendung der Funktion:
const numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];
console.log(binarySearch(numbers, 5)); // gibt "4" aus (der Index des Elements 5 im Array)
console.log(binarySearch(numbers, 11)); // gibt "-1" aus (das Element 11 ist nicht im Array enthalten)


function closestValue(array, target) {
  let left = 0;
  let right = array.length - 1;

  while (left <= right) {
    const middle = Math.floor((left + right) / 2);
    if (array[middle] === target) {
      return middle;
    }
    if (array[middle] < target) {
      left = middle + 1;
    } else {
      right = middle - 1;
    }
  }

  // Wenn das Zielelement nicht gefunden wurde, gibt die Funktion den Wert zur체ck,
  // der dem Ziel am n채chsten kommt (entweder der linke oder der rechte Wert neben der Teilung)
  return array[left] - target < target - array[right] ? left : right;
}

// Beispiel f체r die Verwendung der Funktion:
const numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];
console.log(closestValue(numbers, 5.5)); // gibt "4" aus (der Index des Elements 5 im Array)
console.log(closestValue(numbers, 11)); // gibt "9" aus (der Index des Elements 10 im Array)




// https://chat.openai.com/