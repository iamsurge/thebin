#include <iostream>
#include <vector>
using namespace std;

void swapM(vector <vector<char>>& vec, int i1, int i2, int ind) {
    for (int i = 0; i < vec[0].size(); ++i) {
        if (i != ind)
            swap(vec[i1][i], vec[i2][i]);
    }
}

void cs(vector <vector<char>>& vec, int k, int ind) {
    vector <int> c(k + 1 - 97);
    vector <vector<char>> b(vec.size() + 1, vector<char>(vec[0].size()));

    for (int i = 0; i < k + 1 - 97; ++i)
        c[i] = 0;

    for (int i = 0; i < vec.size(); ++i)
        c[vec[i][ind] - 97] = c[vec[i][ind] - 97] + 1;

    for (int i = 1; i < k + 1 - 97; ++i)
        c[i] += c[i - 1];

    for (int i = vec.size(); i > 0; --i) {
        int temp = vec[i-1][ind] - 97;
        b[c[temp] - 1][ind] = vec[i - 1][ind];
        swapM(b, c[temp] - 1, i - 1, ind);
        c[temp]--;
    }
    for (int i = 0; i < vec.size(); ++i) {
        for (int j = 0; j < vec[0].size(); ++j) {
            vec[i][j] = b[i][j];
        }
    }
        
}



int main() {
    //int n, max = 0;
    //vector <int> vec;
    //cin >> n;
    //for (int i = 0, a; i < n; ++i) {
    //    cin >> a;
    //    vec.push_back(a);
    //    if (vec[i] > max)
    //        max = vec[i];
    //}
    //vector <int> vec2 = cs(vec, max);

    //for (int i = 0; i < vec2.size() - 1; i++)
    //    cout << vec2[i] << ' ';

    int n, m, k;
    char c, max = 'a';
    cin >> n >> m >> k;
    vector<vector<char>> vec;
    for (int i = 0; i < n; ++i) {
        vector<char> temp_vec;
        for (int j = 0; j < m; ++j) {
            cin >> c;
            if (c > max)
                max = c;
            temp_vec.push_back(c);
        }
        vec.push_back(temp_vec);
    }

    for (int i = 0; i < k; ++i) {
        cs(vec, max, vec.size() - i - 1);
    }

    for (int i = 0; i < n; ++i) {
        for (int j = 0; j < m; ++j) {
            cout << vec[i][j];
        }
        cout << endl;
    }
    return 0;
}