//c121317
#include <bits/stdc++.h>
#define ll long long
#define LD long double
#define PII pair<ll, ll>
#define F first
#define S second
#define MP make_pair
#define VI vector<ll>
#define PB push_back
#define BP(x) ((x)*(x))
#define Hm(x) (1ll<<(x))
#define Gr(x) ((x)&(-(x)))
#define getbit(i, x) (((x)>>(i))&1ll)
#define MS(a, x) memset(a, x, sizeof(a))
#define ffu(i, r) for (int i=1; i<=(int)(r); i++)
#define ffd(i, l) for (int i=(int)(l); i>=1; i--)
#define fou(i, l, r) for (int i=(int)(l); i<=(int)(r); i++)
#define fod(i, l, r) for (int i=(int)(l); i>=(int)(r); i--)
using namespace std;
const ll NMX=432000, oo=0x3C3C3C3C3C3C3C3C, Bs=1000000007;
ll n, q, u, v, w;
PII a[NMX];
char chr;
void down(ll id, ll l, ll r)
{
    ll t=a[id].S, mid=(l+r)/2;
    a[2*id].F+=t;
    a[2*id].S+=t;
    a[2*id+1].F+=t;
    a[2*id+1].S+=t;
    a[id].S=0;
}
void update(ll id, ll l, ll r, ll x, ll y, ll v)
{
    if (y<l||x>r) return;
    if (x<=l&&y>=r)
    {
        a[id].F+=v;
        a[id].S+=v;
        return;
    }
    if (a[id].S!=0) down(id, l, r);
    ll mid=(l+r)/2;
    update(2*id, l, mid, x, y, v);
    update(2*id+1, mid+1, r, x, y, v);
    a[id].F=min(a[2*id].F, a[2*id+1].F);
}
ll get(ll id, ll l, ll r, ll x, ll y)
{
    if (y<l||x>r) return oo;
    if (x<=l&&y>=r) return a[id].F;
    if (a[id].S!=0) down(id, l, r);
    ll mid=(l+r)/2;
    return min(get(2*id, l, mid, x, y), get(2*id+1, mid+1, r, x, y));
}
int main()
{
    //freopen("RMQ2.INP", "r", stdin);
    //freopen("RMQ2.OUT", "w", stdout);
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);
    cin >> n >> q;
    ffu(i, n)
    {
        cin >> u;
        update(1, 1, n, i, i, u);
    }
    while (q--)
    {
        cin >> chr >> u >> v;
        if (chr=='1')
        {
            cin >> w;
            update(1, 1, n, u, v, w);
        }
        else cout << get(1, 1, n, u, v) << '\n';
    }
    return 0;
}
/*input
output
*/