function language.load()
	local language_files = fs.glob([[MHR Overlay\\languages\\.*json]]);

	if language_files == nil then
		log.info("[MHR Overlay] language_files is nil");
	else
		log.info("[MHR Overlay] language_files is table");
		log.info("[MHR Overlay] language_files: " .. table_helpers.tostring(language_files));
	end

	for i, language_file_name in ipairs(language_files) do
		log.info("[MHR Overlay] language_file_name: " .. language_file_name);
		local language_name = language_file_name:gsub(language.language_folder, ""):gsub(".json", "");
		log.info("[MHR Overlay] language name: " .. language_name);

		local loaded_language = json.load_file(language_file_name);
		if loaded_language ~= nil then
			log.info("[MHR Overlay] " .. language_name .. ".json loaded successfully");
			table.insert(language.language_names, language_name);

			local merged_language = table_helpers.merge(language.default_language, loaded_language);
			table.insert(language.languages, merged_language);

			language.save(language_file_name, merged_language);

		else
			log.error("[MHR Overlay] Failed to load " .. language_name .. ".json");
		end
	end
end