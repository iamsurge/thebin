/// @description proj_onreflect(enemy, proj)
/// @param enemy
/// @param  proj
function _proj_doreflect(enemy, proj) {
	var player = get_player_object();
	if (!instance_exists(player))
		exit;
	
	//Get projectile direction
	var sign_x = sign(proj.xspeed);
	var sign_y = sign(proj.yspeed);
	var angle_init = point_direction(xprevious, yprevious, x, y) % 90;
	var angle_final = angle_init - (angle_init == 0 ? 45 : 90);
	
	//Check if we're colliding horizontally or vertically
	var horz = rectangle_in_rectangle(proj.bbox_left, proj.bbox_top, proj.bbox_right, proj.bbox_bottom,
									  global.sectionLeft, enemy.bbox_top, global.sectionRight, enemy.bbox_bottom);
	var vert = rectangle_in_rectangle(proj.bbox_left, proj.bbox_top, proj.bbox_right, proj.bbox_bottom,
									  enemy.bbox_left, global.sectionTop, enemy.bbox_right, global.sectionBottom);
									  
	//Check what side we're colliding from
	var left = horz && !collision_line(proj.bbox_left, proj.bbox_top, proj.bbox_left, proj.bbox_bottom, enemy, false, false);
	var right = horz && !collision_line(proj.bbox_right, proj.bbox_top, proj.bbox_right, proj.bbox_bottom, enemy, false, false);
	var top = vert && !collision_line(proj.bbox_left, proj.bbox_top, proj.bbox_right, proj.bbox_top, enemy, false, false);
	var bottom = vert && !collision_line(proj.bbox_left, proj.bbox_bottom, proj.bbox_right, proj.bbox_bottom, enemy, false, false);
	
	//Check if we're hitting the corner of the object
	var corner = !horz && !vert;
	
	//Correct for hitting opposite corners
	if (proj.xspeed != 0 && proj.yspeed != 0) {
		if (proj.xspeed > 0) {
			if (left && (top || bottom)) {
				top = false;
				bottom = false;
			} else if (right && (top || bottom)) {
				right = false;
			}
		} else {
			if (right && (top || bottom)) {
				top = false;
				bottom = false;
			} else if (left && (top || bottom)) {
				left = false;
			}
		}
	}
	
	//Calculate new trajectory
	if (left || right || top || bottom || corner) {
		//If we're not fully inside the enemy, calculate based on speed and what side we hit
		if (proj.xspeed != 0 && (left || right || corner)) {
			sign_x = -sign(proj.xspeed);
			if (sign_y == 0) {sign_y = -player.image_yscale};			
		}
		if (proj.yspeed != 0 && (top || bottom || corner)) {
			sign_y = -sign(proj.yspeed);
			if (sign_x == 0) {sign_x = -proj.shootDir};
		}
	} else {
		//If we're fully inside the enemy, GO THE OTHER WAY
		sign_x = (proj.xspeed != 0) ? -sign(proj.xspeed) : -proj.shootDir;
		sign_y = (proj.yspeed != 0) ? -sign(proj.yspeed) : -player.image_yscale;
	}
	
	proj.xspeed = ceil(proj.reflectSpeed * dcos(angle_final) * sign_x);
	proj.yspeed = ceil(proj.reflectSpeed * -dsin(angle_final) * sign_y);
}