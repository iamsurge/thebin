#include <bits/stdc++.h>
using namespace std;
vector<pair<long long, long long> > g[200010]; // cvor, (0/1)
long long d[200010];
const long long INF = 1e18;
int main(){
	long long n, m;	scanf("%lld %lld", &n, &m);
	for(int i = 0; i < m; i++){
		long long a, b, c;
		scanf("%lld %lld %lld", &a, &b, &c);
		g[a].push_back({b,c});
		g[b].push_back({a,c});
	}
	long long a, b; scanf("%lld %lld", &a, &b);
	for(int i = 1; i <= n; i++)
		d[i] = INF;
	d[a] = 0;
	priority_queue<pair<long long, long long>, vector<pair<long long, long long>>, greater<pair<long long, long long>> > pq;
	pq.push({0, a});
	while(!pq.empty()){
		auto par = pq.top();
		long long v = par.second;
		long long w = par.first;
		pq.pop();
		for(auto x : g[v]){
			// paran broj puta promenio stanje => poslednja grana je 0 
			if(w % 2 == 0){
				// dosao od nule
				if(x.second == 0){
					if(d[v] < d[x.first]){
						d[x.first] = min(d[x.first], d[v]);
						pq.push({d[x.first],x.first});
					}
				}
				else{
					if(1 + d[v] < d[x.first]){
						d[x.first] = 1 + d[v];
						pq.push({d[x.first],x.first});
					}
				}
			}
			// neparan broj puta promenio stanje => poslednja grana je 1
			else{
				// dosao od keca
				if(x.second == 1){
					if(d[v] < d[x.first]){
						d[x.first] = min(d[x.first], d[v]);
						pq.push({d[x.first],x.first});
					}
				}
				else{
					if(1 + d[v] < d[x.first]){
						d[x.first] = 1 + d[v];
						pq.push({d[x.first],x.first});
					}
				}
			}
		}
	}
	if(d[b] == INF)
		printf("-1");
	else
		printf("%lld", d[b]);
	return 0;
}