#include <stdio.h>
#include <stdlib.h>
#include <time.h>

#define W 10
#define H 10

double f1(double x, double y){
    return x * x - y * y;
}

double f2(double x, double y){
    return x * x + y * y;
}

int find_saddle(double s[], int h, int w, double *sad, double *minn, double *maxx);

int main()
{
    srand(time(NULL));
    double arr[H*W];
    for(int i = 0; i < H; i++){
        for(int j = 0; j < W; j++){
            arr[i * W + j] = f1(((double)j - (double)W/2), ((double)i - (double)H/2));
        }
    }
    for(int i = 0; i < H; i++){
        for(int j = 0; j < W; j++){
            printf("%4.0f ", arr[i * W + j]);
        }
        printf("\n\n");
    }
    double sad, maxx, minn;
    if(find_saddle(arr, H, W, &sad, &minn, &maxx) == 0)
        printf("saddle point: %f\nmaximum: %f\nminimum: %f\n", sad, minn, maxx);
    else
        printf("No saddle point\nmaximum: %f\nminimum: %f\n", minn, maxx);
    return 0;
}

int find_saddle(double *n, int h, int w, double *sad, double *minn, double *maxx){
    int fl = 1;
    *minn = *n;
    *maxx = *n;
    for(int i = 0; i < h; i++){
        for(int j = 0; j < w; j++){
            double *s;
            s = n + i * w + j;
            if(i > 1 && i < h - 1 && j > 1 && j < w - 1){
                if((*(s - w) - *s)*(*(s + w) - *s) > 0 && (*(s - 1) - *s)*(*(s + 1) - *s) > 0 && (*(s - w) - *s)*(*(s - 1) - *s) < 0){
                    fl = 0;
                    *sad = *s;
                    printf("(%d,%d) = %f\n", j, i, *s);
                }
            }
            if(*maxx < *s)
                *maxx = *s;
            if(*minn > *s)
                *minn = *s;
        }
    }
    return fl;
}
