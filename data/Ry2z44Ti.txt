#include <iostream>
#include <cmath>
#include <vector>
#include <queue>
#include <algorithm>
#include <string>
#include <stack>
#include <set>
#include <map>
#define pii pair <int, int>
#define pb(x) push_back(x)
using namespace std;
using ll = long long;
using ld = long double;
using db = double;
void cv(vector <int> &v) {
    for (auto x : v) cout << x << ' ';
    cout << "\n";
}

void cvl(vector <ll> &v) {
    for (auto x : v) cout << x << ' ';
    cout << "\n";
}


void cvv(vector <vector <int> > &v) {
    for (auto x : v) cv(x);
    cout << "\n";
}

void cvb(vector <bool> v) {
    for (bool x : v) cout << x << ' ';
    cout << "\n";
}

void cvs(vector <string>  v) {
    for (auto a : v) {
        cout << a << "\n";
    }
}

void cvp(vector <pii> a) {
    for (auto p : a) {
        cout << p.first << ' ' << p.second << "\n";
    }
    cout << "\n";
}

vector <int> to(int x, int bs) {
    vector <int> r;
    while (x > 0) {
        r.pb(x % bs);
        x /= bs;
    }
    reverse(r.begin(), r.end());
    int to = 5;
    if (bs == 4) {
        to = 10;
    }
    while (r.size() < to) {
        r.pb(0);
    }
    reverse(r.begin(), r.end());
    return r;
}

int f(int x) {
    return x / 10 + x % 10;
}

int main() {
    ios::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
    set <int> can;
    for (int i = 0; i <= 65536; ++i) {
        auto a = to(i, 4);
        auto b = to(i, 16);
        int sa = 0, sb = 0;
        for (int i: a) sa += f(i);
        for (int i: b) sb += f(i);
        int d = abs(sa - sb);
        can.insert(d);
        if (d == 24){
            cv(b);
            //cv(a);
        }
    }
    for (int i: can) cout << i << ' ';
}
