local TeemUI = Instance.new("ScreenGui")
local Main = Instance.new("Frame")
local UICorner = Instance.new("UICorner")
local Top = Instance.new("ImageLabel")
local TextLabel = Instance.new("TextLabel")
local Exit = Instance.new("ImageButton")
local UIAspectRatioConstraint = Instance.new("UIAspectRatioConstraint")
local UIScale = Instance.new("UIScale")
local PenumbraShadow = Instance.new("ImageLabel")
local CommandHolder = Instance.new("ScrollingFrame")
local UIListLayout = Instance.new("UIListLayout")
local UIAspectRatioConstraint_2 = Instance.new("UIAspectRatioConstraint")
local Frame = Instance.new("Frame")
local button = Instance.new("Frame")
local Title = Instance.new("TextLabel")
local Content = Instance.new("TextLabel")
local Top_2 = Instance.new("ImageLabel")
local Accent = Instance.new("Frame")
local UICorner_2 = Instance.new("UICorner")
local PenumbraShadow_2 = Instance.new("ImageLabel")
local Clicked = Instance.new("TextButton")

TeemUI.Name = "TeemUI"
TeemUI.Parent = game:GetService("CoreGui")

Main.Name = "Main"
Main.Parent = TeemUI
Main.AnchorPoint = Vector2.new(0.5, 0.5)
Main.BackgroundColor3 = Color3.fromRGB(27, 27, 27)
Main.Position = UDim2.new(0.5, 0, 0.5, 0)
Main.Size = UDim2.new(0, 514, 0, 338)

UICorner.CornerRadius = UDim.new(0, 6)
UICorner.Parent = Main

Top.Name = "Top"
Top.Parent = Main
Top.BackgroundColor3 = Color3.fromRGB(248, 248, 248)
Top.BackgroundTransparency = 1.000
Top.BorderSizePixel = 0
Top.Position = UDim2.new(0, 0, 0, -17)
Top.Size = UDim2.new(0, 514, 0, 45)
Top.ZIndex = 3
Top.Image = "rbxassetid://6276641225"
Top.ImageColor3 = Color3.fromRGB(34, 34, 34)
Top.ScaleType = Enum.ScaleType.Slice
Top.SliceCenter = Rect.new(256, 256, 256, 256)
Top.SliceScale = 0.022

TextLabel.Parent = Top
TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel.BackgroundTransparency = 1.000
TextLabel.Position = UDim2.new(0.0314009711, 0, 0, 0)
TextLabel.Size = UDim2.new(0, 149, 0, 45)
TextLabel.ZIndex = 1231233232
TextLabel.Font = Enum.Font.Gotham
TextLabel.Text = "Teem's ui lib"
TextLabel.TextColor3 = Color3.fromRGB(197, 197, 197)
TextLabel.TextSize = 17.000
TextLabel.TextXAlignment = Enum.TextXAlignment.Left

Exit.Name = "Exit"
Exit.Parent = Top
Exit.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Exit.BackgroundTransparency = 1.000
Exit.Position = UDim2.new(0.931012809, 0, 0.240207925, 0)
Exit.Size = UDim2.new(0, 26, 0, 23)
Exit.ZIndex = 123123
Exit.AutoButtonColor = false
Exit.Image = "rbxassetid://6235536018"
Exit.ImageColor3 = Color3.fromRGB(197, 197, 197)
Exit.ScaleType = Enum.ScaleType.Fit

UIAspectRatioConstraint.Parent = Exit

UIScale.Parent = Main
UIScale.Scale = 0.000

PenumbraShadow.Name = "PenumbraShadow"
PenumbraShadow.Parent = Main
PenumbraShadow.AnchorPoint = Vector2.new(0.5, 0.5)
PenumbraShadow.BackgroundTransparency = 1.000
PenumbraShadow.BorderSizePixel = 0
PenumbraShadow.Position = UDim2.new(0.5, 0, 0.474852085, 1)
PenumbraShadow.Size = UDim2.new(1, 18, 1.05029583, 18)
PenumbraShadow.ZIndex = -1231233
PenumbraShadow.Image = "rbxassetid://1316045217"
PenumbraShadow.ImageColor3 = Color3.fromRGB(0, 0, 0)
PenumbraShadow.ImageTransparency = 0.880
PenumbraShadow.ScaleType = Enum.ScaleType.Slice
PenumbraShadow.SliceCenter = Rect.new(10, 10, 118, 118)

CommandHolder.Name = "CommandHolder"
CommandHolder.Parent = Main
CommandHolder.Active = true
CommandHolder.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
CommandHolder.BackgroundTransparency = 1.000
CommandHolder.Position = UDim2.new(0, 0, 0, 28)
CommandHolder.Size = UDim2.new(0, 514, 0, 292)
CommandHolder.VerticalScrollBarPosition = Enum.VerticalScrollBarPosition.Left

UIListLayout.Parent = CommandHolder
UIListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
UIListLayout.Padding = UDim.new(0, 10)

UIAspectRatioConstraint_2.Parent = UIListLayout

Frame.Parent = CommandHolder
Frame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Frame.BackgroundTransparency = 1.000
Frame.Position = UDim2.new(0.379227042, 0, 0, 0)
Frame.Size = UDim2.new(0, 100, 0, 1)

button.Name = "button"
button.Parent = CommandHolder
button.BackgroundColor3 = Color3.fromRGB(43, 43, 43)
button.Position = UDim2.new(0, 13, 0, 11)
button.Size = UDim2.new(0, 487, 0, 65)
button.Visible = false
button.ZIndex = 12312323

Title.Name = "Title"
Title.Parent = button
Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Title.BackgroundTransparency = 1.000
Title.BorderSizePixel = 0
Title.Position = UDim2.new(0, 10, 0, 7)
Title.Size = UDim2.new(0, 384, 0, 17)
Title.ZIndex = 1238910293
Title.Font = Enum.Font.GothamMedium
Title.Text = "POPBOB"
Title.TextColor3 = Color3.fromRGB(255, 89, 89)
Title.TextSize = 14.000
Title.TextWrapped = true
Title.TextXAlignment = Enum.TextXAlignment.Left

Content.Name = "Content"
Content.Parent = button
Content.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Content.BackgroundTransparency = 1.000
Content.BorderSizePixel = 0
Content.Position = UDim2.new(0, 12, 0, 40)
Content.Size = UDim2.new(0, 381, 0, 14)
Content.ZIndex = 12312323
Content.Font = Enum.Font.Gotham
Content.Text = "hack"
Content.TextColor3 = Color3.fromRGB(153, 153, 153)
Content.TextSize = 14.000
Content.TextWrapped = true
Content.TextXAlignment = Enum.TextXAlignment.Left
Content.TextYAlignment = Enum.TextYAlignment.Top

Top_2.Name = "Top"
Top_2.Parent = button
Top_2.BackgroundColor3 = Color3.fromRGB(248, 248, 248)
Top_2.BackgroundTransparency = 1.000
Top_2.BorderSizePixel = 0
Top_2.Size = UDim2.new(0, 487, 0, 32)
Top_2.ZIndex = 12312323
Top_2.Image = "rbxassetid://6276641225"
Top_2.ImageColor3 = Color3.fromRGB(33, 33, 33)
Top_2.ScaleType = Enum.ScaleType.Slice
Top_2.SliceCenter = Rect.new(256, 256, 256, 256)
Top_2.SliceScale = 0.022

Accent.Name = "Accent"
Accent.Parent = button
Accent.BackgroundColor3 = Color3.fromRGB(8, 8, 8)
Accent.BackgroundTransparency = 0.700
Accent.BorderSizePixel = 0
Accent.Position = UDim2.new(0, 0, 0, 31)
Accent.Size = UDim2.new(0, 487, 0, 1)
Accent.ZIndex = 1238910293

UICorner_2.CornerRadius = UDim.new(0, 6)
UICorner_2.Parent = button

PenumbraShadow_2.Name = "PenumbraShadow"
PenumbraShadow_2.Parent = button
PenumbraShadow_2.AnchorPoint = Vector2.new(0.5, 0.5)
PenumbraShadow_2.BackgroundTransparency = 1.000
PenumbraShadow_2.BorderSizePixel = 0
PenumbraShadow_2.Position = UDim2.new(0.5, 0, 0.5, 1)
PenumbraShadow_2.Size = UDim2.new(1, 18, 1, 18)
PenumbraShadow_2.Image = "rbxassetid://1316045217"
PenumbraShadow_2.ImageColor3 = Color3.fromRGB(0, 0, 0)
PenumbraShadow_2.ImageTransparency = 0.880
PenumbraShadow_2.ScaleType = Enum.ScaleType.Slice
PenumbraShadow_2.SliceCenter = Rect.new(10, 10, 118, 118)

Clicked.Name = "Clicked"
Clicked.Parent = button
Clicked.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Clicked.BackgroundTransparency = 1.000
Clicked.BorderColor3 = Color3.fromRGB(27, 42, 53)
Clicked.Position = UDim2.new(-0.00258403039, 0, 0, 0)
Clicked.Size = UDim2.new(0, 489, 0, 65)
Clicked.ZIndex = 1238910295
Clicked.AutoButtonColor = false
Clicked.Font = Enum.Font.SourceSans
Clicked.Text = ""
Clicked.TextColor3 = Color3.fromRGB(0, 0, 0)
Clicked.TextSize = 14.000

local function JMLSCWJ_fake_script()
    local script = Instance.new("LocalScript", Main)

    local module = {}
    local cam = game.Workspace.Camera

    script.Parent.Blur.Size = 0
    script.Parent.Blur.Parent = game.Lighting

    local TweenService = game:GetService("TweenService")
    function Tween(Object, TweenInfo, Goal)
        local tweenObject = TweenService:Create(Object, TweenInfo, Goal)
        tweenObject:Play()
        return tweenObject
    end
    local function GetProperty(Object)
        if Object:IsA("TextLabel") or Object:IsA("TextButton") or Object:IsA("TextBox") then
            return "TextTransparency"
        elseif Object:IsA("ViewportFrame") or Object:IsA("ImageButton") or Object:IsA("ImageLabel") then
            return "ImageTransparency"
        elseif Object:IsA("Frame") then
            return "BackgroundTransparency"
        end
    end
    local Blur = Instance.new("BlurEffect", game.Lighting)
    Blur.Size = 0
    function FadeIn(Object, FadeTime)
        local TI = TweenInfo.new(FadeTime, Enum.EasingStyle.Sine)
        local Table = Object:GetDescendants()
        Table[#Table + 1] = Object
        for i, v in pairs(Table) do
            local Property = GetProperty(v)
            if Property then
                if v:GetAttribute("InitialTransparency") then
                    Tween(
                        v,
                        TI,
                        {
                            [Property] = v:GetAttribute("InitialTransparency")
                        }
                    )
                else
                    v:SetAttribute("InitialTransparency", v[Property])
                    v[Property] = 1
                    Tween(
                        v,
                        TI,
                        {
                            [Property] = v:GetAttribute("InitialTransparency")
                        }
                    )
                end
            end
            if v:IsA("ScrollingFrame") then
                if not v:GetAttribute("InitialScrollBarTransparency") then
                    v:SetAttribute("InitialScrollBarTransparency", v.ScrollBarImageTransparency)
                end
                v.ScrollBarImageTransparency = 1
                Tween(
                    v,
                    TI,
                    {
                        ScrollBarImageTransparency = v:GetAttribute("InitialScrollBarTransparency")
                    }
                )
            end
        end
    end
    function FadeOut(Object, FadeTime)
        local TI = TweenInfo.new(FadeTime, Enum.EasingStyle.Sine)
        local Table = Object:GetDescendants()
        Table[#Table + 1] = Object
        for i, v in pairs(Table) do
            local Property = GetProperty(v)
            if Property then
                if v:GetAttribute("InitialTransparency") then
                    Tween(
                        v,
                        TI,
                        {
                            [Property] = 1
                        }
                    )
                else
                    v:SetAttribute("InitialTransparency", v[Property])
                    Tween(
                        v,
                        TI,
                        {
                            [Property] = 1
                        }
                    )
                end
            end
            if v:IsA("ScrollingFrame") then
                if not v:GetAttribute("InitialScrollBarTransparency") then
                    v:SetAttribute("InitialScrollBarTransparency", v.ScrollBarImageTransparency)
                end
                Tween(
                    v,
                    TI,
                    {
                        ScrollBarImageTransparency = 1
                    }
                )
            end
        end
    end

    FadeOut(script.Parent.CommandHolder, 0)
    local toggle = false

    function onKeyPress(actionName, userInputState, inputObject)
        if userInputState == Enum.UserInputState.Begin then
            if toggle == false then
                toggle = true
                coroutine.wrap(
                    function()
                        game:GetService("TweenService"):Create(
                            script.Parent.UIScale,
                            TweenInfo.new(0.2),
                            {
                                ["Scale"] = 1
                            }
                        ):Play()
                        game:GetService("TweenService"):Create(
                            cam,
                            TweenInfo.new(0.2),
                            {
                                ["FieldOfView"] = 90
                            }
                        ):Play()
                        game:GetService("TweenService"):Create(
                            game.Lighting.Blur,
                            TweenInfo.new(0.5),
                            {
                                ["Size"] = 15
                            }
                        ):Play()
                        wait(0.2)
                        FadeIn(script.Parent.CommandHolder, 0.3)
                    end
                )()
            end
        end
    end

    script.Parent.Top.Exit.MouseButton1Down:Connect(
        function()
            coroutine.wrap(
                function()
                    toggle = false
                    wait(0.2)
                    game:GetService("TweenService"):Create(
                        script.Parent.UIScale,
                        TweenInfo.new(0.2),
                        {
                            ["Scale"] = 0
                        }
                    ):Play()
                    game:GetService("TweenService"):Create(
                        cam,
                        TweenInfo.new(0.2),
                        {
                            ["FieldOfView"] = 70
                        }
                    ):Play()
                    game:GetService("TweenService"):Create(
                        game.Lighting.Blur,
                        TweenInfo.new(0.5),
                        {
                            ["Size"] = 0
                        }
                    ):Play()
                end
            )()
        end
    )

    game.ContextActionService:BindAction("keyPress", onKeyPress, false, Enum.KeyCode.RightShift)
end
coroutine.wrap(JMLSCWJ_fake_script)()
local function SLCGXN_fake_script()
    local script = Instance.new("LocalScript", CommandHolder)
    local content = script.Parent
    content.ScrollingEnabled = not script.SmoothingEnabled.Value

    local input = content:Clone()
    input:ClearAllChildren()
    input.BackgroundTransparency = 1
    input.ScrollBarImageTransparency = 1
    input.ZIndex = content.ZIndex + 1
    input.Name = "_smoothinputframe"
    input.ScrollingEnabled = script.SmoothingEnabled.Value
    input.Parent = content.Parent

    script.SmoothingEnabled:GetPropertyChangedSignal("Value"):Connect(
        function()
            if script.SmoothingEnabled.Value then
                input.CanvasPosition = content.CanvasPosition
            end
            content.ScrollingEnabled = not script.SmoothingEnabled.Value
            input.ScrollingEnabled = script.SmoothingEnabled.Value
        end
    )

    input:GetPropertyChangedSignal("CanvasPosition"):Connect(
        function()
            if not script.SmoothingEnabled.Value then
                content.CanvasPosition = input.CanvasPosition
            end
        end
    )

    script.InputFrame.Value = input

    local function syncProperty(prop)
        content:GetPropertyChangedSignal(prop):Connect(
            function()
                if prop == "ZIndex" then
                    input[prop] = content[prop] + 1
                else
                    input[prop] = content[prop]
                end
            end
        )
    end

    syncProperty "CanvasSize"
    syncProperty "Position"
    syncProperty "Rotation"
    syncProperty "ScrollingDirection"
    syncProperty "ScrollBarThickness"
    syncProperty "BorderSizePixel"
    syncProperty "ElasticBehavior"
    syncProperty "SizeConstraint"
    syncProperty "ZIndex"
    syncProperty "BorderColor3"
    syncProperty "Size"
    syncProperty "AnchorPoint"
    syncProperty "Visible"

    local smoothConnection =
        game:GetService("RunService").RenderStepped:Connect(
        function()
            if script.SmoothingEnabled.Value then
                local a = content.CanvasPosition
                local b = input.CanvasPosition
                local c = script.SmoothingFactor.Value
                local d = (b - a) * c + a
                content.CanvasPosition = d
            end
        end
    )

    content.AncestryChanged:Connect(
        function()
            if content.Parent == nil then
                input:Destroy()
                smoothConnection:Disconnect()
            end
        end
    )
end
coroutine.wrap(SLCGXN_fake_script)()
local function RAWZ_fake_script()
    local script = Instance.new("LocalScript", CommandHolder)

    script.Parent.UIListLayout.Changed:Connect(
        function()
            script.Parent.CanvasSize = UDim2.new(0, 0, 0, script.Parent.UIListLayout.AbsoluteContentSize.Y)
        end
    )
end
coroutine.wrap(RAWZ_fake_script)()
local function DVAVZ_fake_script()
    local script = Instance.new("LocalScript", Main)

    local UserInputService = game:GetService("UserInputService")

    local gui = script.Parent

    local dragging
    local dragInput
    local dragStart
    local startPos

    local function update(input)
        local delta = input.Position - dragStart
        gui.Position =
            UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end

    gui.InputBegan:Connect(
        function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
                dragging = true
                dragStart = input.Position
                startPos = gui.Position

                input.Changed:Connect(
                    function()
                        if input.UserInputState == Enum.UserInputState.End then
                            dragging = false
                        end
                    end
                )
            end
        end
    )

    gui.InputChanged:Connect(
        function(input)
            if
                input.UserInputType == Enum.UserInputType.MouseMovement or
                    input.UserInputType == Enum.UserInputType.Touch
             then
                dragInput = input
            end
        end
    )

    UserInputService.InputChanged:Connect(
        function(input)
            if input == dragInput and dragging then
                update(input)
            end
        end
    )
end
coroutine.wrap(DVAVZ_fake_script)()
