using UnityEditor;
using UnityEditor.Build;
using UnityEditor.Build.Reporting;
using UnityEngine;
using System.IO;
#if UNITY_IOS
using UnityEditor.iOS.Xcode;
using UnityEditor.Callbacks;

public static class PostprocessBuild
{
    private const string PLIST_FILE = "Info.plist";
    private const string EXIST_ON_SUSPEND_KEY = "UIApplicationExitsOnSuspend";
    
    private const string VERSIONING_SYSTEM_KEY = "VERSIONING_SYSTEM";
    private const string CURRENT_PROJECT_VERSION_KEY = "CURRENT_PROJECT_VERSION";
    private const string APPLE_GENERIC_VALUE = "apple-generic";
    
    private const string ENABLE_BITCODE_KEY = "ENABLE_BITCODE";
    
    
    [PostProcessBuild(1)]
    
    public static void OnPostprocessBuild(BuildTarget buildTarget, string pathToBuiltProject)
    {
        Debug.Log("Post process build function running");
        if (buildTarget == BuildTarget.iOS)
        {

            RemoveDeprecatedInfoPListKeys(pathToBuiltProject);
            
            string projectPath = pathToBuiltProject + "/Unity-iPhone.xcodeproj/project.pbxproj";
            
            
            PBXProject pbxProject = new PBXProject();
            pbxProject.ReadFromFile(projectPath);
            
            #if UNITY_2020_1_OR_NEWER
                var guidProject = pbxProject.GetUnityMainTargetGuid();
            #else
                var guidProject = pbxProject.TargetGuidByName(pbxProject.GetUnityMainTargetGuid());
            #endif
            
            Debug.Log("Setting Versioning system to Apple Generic...");
            pbxProject.SetBuildProperty(guidProject, VERSIONING_SYSTEM_KEY, APPLE_GENERIC_VALUE);
            pbxProject.SetBuildProperty(guidProject, CURRENT_PROJECT_VERSION_KEY, "1");
            
            
            //Disabling Bitcode on all targets
                        
            //Main
            string target = pbxProject.GetUnityMainTargetGuid();
            pbxProject.SetBuildProperty(target, ENABLE_BITCODE_KEY, "NO");
            
            //Unity Tests
            target = pbxProject.TargetGuidByName(PBXProject.GetUnityTestTargetName());
            pbxProject.SetBuildProperty(target, ENABLE_BITCODE_KEY, "NO");
            
            //Unity Framework
            target = pbxProject.GetUnityFrameworkTargetGuid();
            pbxProject.SetBuildProperty(target, ENABLE_BITCODE_KEY, "NO");
            
            pbxProject.WriteToFile(projectPath);
        }
    }
    
    private static void RemoveDeprecatedInfoPListKeys(string pathToBuiltProject)
    {
        string plistPath = Path.Combine(pathToBuiltProject, PLIST_FILE);
        PlistDocument plist = new PlistDocument();
        plist.ReadFromString(File.ReadAllText(plistPath));
        
        PlistElementDict rootDict = plist.root;
        
        if (rootDict.values.ContainsKey(EXIST_ON_SUSPEND_KEY))
        {
            Debug.LogFormat("Removing deprecated key \"{0}\" on \"{1}\" file", EXIST_ON_SUSPEND_KEY, PLIST_FILE);
            rootDict.values.Remove(EXIST_ON_SUSPEND_KEY);
        }
        
        File.WriteAllText(plistPath, plist.WriteToString());
    }
    
}
#endif