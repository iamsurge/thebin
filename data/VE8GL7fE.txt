/*
	int a[3];
	
	[1, 2, 3]
	 |  |  |
	 /  |  \
    50  60  70
    ----------
    
    int a[3][2]
    
    1, 2
    3, 4
    5, 6
    ----------
    
    int a[5];
    
    1, 2, 3, 4, 5 -- 1 dimensional
    
    int a[5][4];
    
    1, 2, 3, 4 }
    5, 6, 7, 8
    9, 10, 11, 12 } -- 2 dimensional
    13, 14, 15, 16
    17, 18, 19, 20 }
    
    ----------
    int a[5][4][2]
    3D = {
		    1,	3,	5,	7,
		    	*[1: 1, 2], *[3: 3, 4], *[5: 5, 6], *[7: 7, 8]
		    9,	11,	13,	15,
		    	*[9: 9, 10], *[11: 11, 12], *[13: 13, 14], *[15: 15, 16]
		    17,	19,	21,	23,
		    	*[17: 17, 18], *[19: 19, 20], *[21: 21, 22], *[23: 23, 24]
		    25,	27,	29,	31,
		    	*[25: 25, 26], *[27: 27, 28], *[29: 29, 30], *[31: 31, 32]
		    33,	35,	37,	39,
		    	*[33: 33, 34], *[35: 35, 36], *[37: 37, 38], *[39: 39, 40]
    }
    	
    (size = 40) (for 3D)
*/

#include <stdio.h>

int main()
{
	int intsize = sizeof(int);
	
	int a_1d[5];
	int a_2d[5][4];
	int a_3d[5][4][2];
	
	int size_a1d = sizeof(a_1d) / intsize;
	int size_a2d = sizeof(a_2d) / intsize;
	int size_a3d = sizeof(a_3d) / intsize;
	
	printf("(Dimensional sizes with sets: {5, 4, 2})\n\n1D[%d]: %lu,\n2D[%d][%d]: %lu,\n3D[%d][%d][%d]: %lu;", 5, size_a1d, 5, 4, size_a2d, 5, 4, 2, size_a3d); // matches predictions
	return 0;
}