// Question 1
// The following questions relate again to text processing, however this time the source of the text is a file. ...
public static String[] readTextFile(String filename) {
    String[] lines = new String[1000];
    int lineIndex = 0;
    try (BufferedReader reader = new BufferedReader(new FileReader(filename))) {
        String line = reader.readLine();
        while (line != null) {
            if (line.trim().length() > 0) {
                lines[lineIndex ++] = line;
            }
            line = reader.readLine();
        }
    } catch (IOException e) {
        System.out.printf("The file named %s was not found.\n", filename);
    }
    return lines;
}


// Question 2
// The following questions relate again to text processing, however this time the source of the text is a file. ...
public static String[] getTableOfContents(String filename) {
    String[] lines = readTextFile(filename);
    String[] ans = new String[1000];
    int index = 0;
    for (int i = 0; i < lines.length; i++) {
        if (lines[i] != null) {
            if (lines[i].matches("\\s*\\\\section\\{.*\\}.*")) {
                ans[index++] = "# " + lines[i].replaceAll("\\s*\\\\section\\{(.*)\\}.*", "$1");
            } else if (lines[i].matches("\\s*\\\\subsection\\{.*\\}.*")) {
                ans[index++] = "## " + lines[i].replaceAll("\\s*\\\\subsection\\{(.*)\\}.*", "$1");
            } else if (lines[i].matches("\\s*\\\\subsubsection\\{.*\\}.*")) {
                ans[index++] = "### " + lines[i].replaceAll("\\s*\\\\subsubsection\\{(.*)\\}.*", "$1");
            }
        }
    }
    return ans;
}




