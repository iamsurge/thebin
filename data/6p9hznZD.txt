//Rev 0 The purpose of this code is to read received codes for IR remote controls and display them on the serial monitor
#include <IRremote.h> //Include IR Remote Library by Shirriff

const int RECV_PIN = 11; //Arduino Digital Pin IR Sensor is Connected To
IRrecv irrecv(RECV_PIN); //Define IR Receiver
decode_results results; //Define Results Object for Received Code
IRsend irsend; //Create IR Send Object for Transmitting via Infrared LED

void setup() {
  Serial.begin(9600); //Start the serial monitor
  irrecv.enableIRIn(); //Enable the IR Receiver
}

void loop() {

  recCodeInter(); //Call the Received Code Interpret Function
 
} //End of void loop
//Reference 1- "DroneBot Workshop" YouTube channel video "Using IR REmote Controls with the Arduino" https://dronebotworkshop.com/using-ir-remote-controls-with-arduino/

void recCodeInter()
{ //Start of recCodeInter function definition
  if(irrecv.decode(&results)) //If we decode and get results in the results object print the result
  { //Beginning of irrecv.decode(&results) if statement
    //Serial.println(results.value, HEX); //Print code in HEX
    switch(results.value)
    { //Start of switch statement results.value
      case 0xFF18E7: //Up Arrow Button Pushed on Black IR Remote
      //Serial.println("Up Button Pressed.");
      irsend.sendNEC(0x807F8877, 32); // micca spec-1 02 media player up arrow code code
      Serial.println("Up");
      break;
      case 0xFF10EF: //Left Arrow Button Pushed on Black IR Remote
      //Serial.println("Left Button Pressed.");
      irsend.sendNEC(0x807F906F, 32); // micca spec-1 02 media player left arrow code code
      Serial.println("Left");
      break;
      case 0xFF5AA5: //Right Arrow Button Pushed on Black IR Remote
      //Serial.println("Right Button Pressed.");
      irsend.sendNEC(0x807F28D7, 32); // micca spec-1 02 media player right arrow code code
      Serial.println("Right");
      break;
      case 0xFF4AB5: //Down Arrow Button Pushed on Black IR Remote
      //Serial.println("Down Button Pressed.");
      irsend.sendNEC(0x807F10EF, 32); // micca spec-1 02 media player down arrow code code
      Serial.println("Down");
      break;
      case 0xFF38C7: //OK Button Pushed on Black IR Remote
      //Serial.println("OK Button Pressed.");
      irsend.sendNEC(0x807F7A85, 32); // micca spec-1 02 media player OK button code
      Serial.println("OK");
      break;
      case 0xFF9867: //0 Button Pushed on Black IR Remote
      //Serial.println("0 Button Pressed.");
      irsend.sendNEC(0x807F08F7, 32); // micca spec-1 02 media player Power button code
      Serial.println("0");
      break;
      case 0xFFA25D: //1 Button Pushed on Black IR Remote
      //Serial.println("1 Button Pressed.");
      irsend.sendNEC(0x807F02FD, 32); // micca spec-1 02 media player Pause/Play button code
      Serial.println("Play/Pause");
      break;
      case 0xFF629D: //2 Button Pushed on Black IR Remote
      //Serial.println("2 Button Pressed.");
      irsend.sendNEC(0x807F32CD, 32); // micca spec-1 02 media player Stop button code
      Serial.println("Stop");
      break;
      case 0xFFE21D: //3 Button Pushed on Black IR Remote
      //Serial.println("3 Button Pressed.");
      irsend.sendNEC(0x807FB847, 32); // micca spec-1 02 media player Return button code
      Serial.println("Return");
      break;
      case 0xFF22DD: //4 Button Pushed on Black IR Remote
      //Serial.println("4 Button Pressed.");
      irsend.sendNEC(0x807FC23D, 32); // micca spec-1 02 media player Rewind button code
      Serial.println("Rewind");
      break;
      case 0xFF02FD: //5 Button Pushed on Black IR Remote
      //Serial.println("5 Button Pressed.");
      irsend.sendNEC(0x807FC837, 32); // micca spec-1 02 media player Fast Forward button code
      Serial.println("Fast Forward");
      break;
      case 0xFFC23D: //6 Button Pushed on Black IR Remote
      //Serial.println("6 Button Pressed.");
      irsend.sendNEC(0x807FF807, 32); // micca spec-1 02 media player Menu button code
      Serial.println("Menu");
      break;
      case 0xFFE01F: //7 Button Pushed on Black IR Remote
      //Serial.println("7 Button Pressed.");
      irsend.sendNEC(0x807F52AD, 32); // micca spec-1 02 media player GOTO button code
      Serial.println("GOTO");
      break;
      case 0xFFA857: //8 Button Pushed on Black IR Remote
      //Serial.println("8 Button Pressed.");
      break;
      case 0xFF906F: //9 Button Pushed on Black IR Remote
      //Serial.println("9 Button Pressed.");
      break;
      case 0xFF6897: //* Button Pushed on Black IR Remote
      //Serial.println("* Button Pressed.");
      break;
      case 0xFFB04F: //# Button Pushed on Black IR Remote
      //Serial.println("# Button Pressed.");
      break;
    } //End of switch statement results.value
    //delay(200);
//    switch(results.decode_type) //To check the type of code
//    { //Start of results.decode_type switch statement
//      case NEC:
//      Serial.println("NEC");
//      break;
//      case SONY:
//      Serial.println("SONY");
//      break;
//      case RC5:
//      Serial.println("RC5");
//      break;
//      case RC6:
//      Serial.println("RC6");
//      break;
//    } //End of results.decode_type switch statement
       irrecv.resume();
  }//End of irrecv.decode(&results) if statement
} //End of recCodeInter function definition