// x를 입력하여, "a에 x를 더해 반환하는 함수"를 반환하는 Adder 구현하기
#include <iostream>
#include <functional>

// 방법 1)  고차 함수(Higher-order function) 이용하기
auto Adder1(int x) {
    return [x](int a){ return a + x; };
}

// 방법 2)  함수 객체(Functor) 이용하기
class Adder2 {
    int _x;
public:
    Adder2(int x) : _x(x) {}
    int operator()(int a) const { return a + _x; }
};

int main() {
    // 방법 1)  `add333`은 int를 넣어서 int를 반환하는 함수 (람다)
    auto add333 = Adder1(333);
    std::cout << add333(666) << '\n';

    // 방법 2)  `add666`는 Adder2 타입의 객체
    Adder2 add666 = Adder2(666);
    std::cout << add666(333) << '\n';

    // 둘 다 std::function<int(int)> 에 저장 가능
    std::function<int(int)> func;
    func = add333;
    func = add666;
}
