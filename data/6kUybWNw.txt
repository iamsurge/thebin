1.A. ans: A+(BC*-(D/E^F)*G)*H
1.B. ans: +A*-*BC*/D^EFGH
3.I ans:  ((5*(6+2))-(12/4)
3.II ans: (((2*(5*(3+6)))/5)-2)
4.I ans: |struct Node {
    	 |		int data;
         |   	struct Node* next;
    	 | 		struct Node* prev;
		 |};
         |void delete_node(struct Node** head_ref, struct Node* del){
		 |	if (*head_ref == NULL || del == NULL){
		 |		return;
		 |	}
		 |	if (del->next != NULL){
         |		del->next->prev = del->prev;
		 |	}
    	 |	if (del->prev != NULL){
         |		del->prev->next = del->next;
         |  }
    	 |	free(del);
    	 |	return;
		 |}
4.II. ans:*Singly: Stores only the next node's address, allows Traversing in only one- forward direction
          *Doubly: Stores both the next and previous Node's address, allows traversing in both ofrward and backward direction
          *Circular: Similar to singly linked list has pointers to next node's address with an exception the last node contains the first/head node's address
5.II. ans: In a linear queue, the traversal through the queue is possible only once,i.e.,once an element is deleted, we 			      cannot insert another element in its position. 
5.III. ans: 20,20,10,10,20