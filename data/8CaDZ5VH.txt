#include <Servo.h>
#include <LiquidCrystal.h>

LiquidCrystal lcd(0, 1, 2, 3, 4, 5);

int pinza_apri_chiudi = A0;
int pinza_su_giu = A1;
int pinza_rotazione = A2;
int braccio_su_giu = A3;
int braccio_base_su_giu = A4;
int piattaforma_rotazione = A5;

int pot_ex, pot_ex1,pot_ex2, pot_ex3, pot_ex4, pot_ex5;

 
//Componenti braccio (servo motori)

//pinza_apri_chiudi
Servo servomotore_1;

//pinza_su_giu
Servo servomotore_2;

//pinza_rotazione
Servo servomotore_3;

//braccio_su_giu
Servo servomotore_4;

//braccio_base_su_giu
Servo servomotore_5;

//piattaforma_rotazione
Servo servomotore_6; 
 

void setup (){
  
    lcd.begin (16, 2); //larghezza e lunghezza dello schermo
    
    //Componenti braccio
    servomotore_1.attach(13);
    servomotore_2.attach(12);
    servomotore_3.attach(11);
    servomotore_4.attach(10);
    servomotore_5.attach(9);
    servomotore_6.attach(8);
}


void loop (){
       
    //PINZA_APRI_CHIUDI
    int pot = analogRead(pinza_apri_chiudi);  
    pot = map(pot, 0,1023,1,84);
    servomotore_1.write(pot);
    
    if(pot < (pot_ex - 2) || pot > (pot_ex + 2 )){
     pot_ex = pot;
     lcd.clear();
     lcd.setCursor(0, 0); 
     lcd.print("pinza apri chiudi");
     lcd.setCursor(0, 1);
     lcd.print(pot);
     lcd.setCursor(3, 1);
     lcd.print(" gradi"); 
     delay(50);
  }

     
    //PINZA_SU_GIU
    int pot_1 = analogRead(pinza_su_giu);  
    pot_1 = map(pot_1, 0,1023,81,146);
    servomotore_2.write(pot_1);

    if(pot_1 < (pot_ex1 - 2) || pot_1 > (pot_ex1 + 2 )){
     pot_ex1 = pot_1;
     lcd.clear();
     lcd.setCursor(0, 0); 
     lcd.print("pinza_su_giu");
     lcd.setCursor(0, 1);
     lcd.print(pot_1);
     lcd.setCursor(3, 1);
     lcd.print(" gradi");
     delay(50);   
  } 
   
    //PINZA_ROTAZIONE
    int pot_2 = analogRead(pinza_rotazione);  
    pot_2 = map(pot_2, 0,1023,1,255);
    servomotore_3.write(pot_2);
  
    if(pot_2 < (pot_ex2 - 2) || pot_2 > (pot_ex2 + 2 )){
     pot_ex2 = pot_2;
     lcd.clear();
     lcd.setCursor(0, 0); 
     lcd.print("pinza_rotazione");
     lcd.setCursor(0, 1);
     lcd.print(pot_2);
     lcd.setCursor(3, 1);
     lcd.print(" gradi");
     delay(50);    
  } 
  
  
    //BRACCIO_SU_GIU
    int pot_3 = analogRead(braccio_su_giu);  
    pot_3 = map(pot_3, 0,1023,1,79);
    servomotore_4.write(pot_3);
    
    if(pot_3 < (pot_ex3 - 2) || pot_3 > (pot_ex3 + 2 )){
     pot_ex3 = pot_3;
     lcd.clear();
     lcd.setCursor(0, 0); 
     lcd.print("braccio_su_giu");
     lcd.setCursor(0, 1);
     lcd.print(pot_3);
     lcd.setCursor(3, 1);
     lcd.print(" gradi");
     delay(50);
  } 
  
   
    //BRACCIO_BASE_SU_GIU
    int pot_4 = analogRead(braccio_base_su_giu);  
    pot_4 = map(pot_4, 0,1023,1,79);
    servomotore_5.write(pot_4);
  
    if(pot_4 < (pot_ex4 - 2) || pot_4 > (pot_ex4 + 2 )){
     pot_ex4 = pot_4;
     lcd.clear();
     lcd.setCursor(0, 0); 
     lcd.print("braccio_base_su_giu");
     lcd.setCursor(0, 1);
     lcd.print(pot_4);
     lcd.setCursor(3, 1);
     lcd.print(" gradi");
     delay(50);
    } 
  
  
    //PIATTAFORMA_ROTAZIONE
    int pot_5 = analogRead(piattaforma_rotazione);  
    pot_5 = map(pot_5, 0,1023,1,255);
    servomotore_6.write(pot_5);
  
    if(pot_5 < (pot_ex5 - 2) || pot_5 > (pot_ex5 + 2 )){
     pot_ex5 = pot_5;
     lcd.clear();
     lcd.setCursor(0, 0); 
     lcd.print("piattaforma_rotazione");
     lcd.setCursor(0, 1);
     lcd.print(pot_5);
     lcd.setCursor(3, 1);
     lcd.print(" gradi");
     delay(50);
   } 
  }