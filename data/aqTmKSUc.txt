# Markthuur tabel. Handig om deze één keer in te lezen, en daarna op te splitsen in de relevante lookup tables
markthuur_tabel <- read_xlsx('modelparams_v2.xlsx', sheet = 'Markthuur')
fWOZ_tabel <- subset(markthuur_tabel, markthuur_tabel$parameter == 'fWOZ')
fBouwjaar_tabel <- subset(markthuur_tabel, markthuur_tabel$parameter == 'fBouwjaar')
fType_tabel <- subset(markthuur_tabel, markthuur_tabel$parameter == 'fType')
fRegio_tabel <- subset(markthuur_tabel, markthuur_tabel$parameter == 'fRegio')
fMarkt_tabel <- subset(markthuur_tabel, markthuur_tabel$parameter == 'fMarkt')

## Markthuur functie uit het handboek
# Deze funcite kan netter worden gemaakt, maar het oppoetsen komt straks wel. Had het liever niet via loops gedaan, maar zie zo gauw niet hoe we het hier kunnen vermijden.
bereken_markthuur <- function(m2, huur_ref, WOZ, bouwjaar, type, regio){
    # Nakijken in welk WOZ-bakje de woning valt
    num_rows = nrow(fWOZ_tabel) - 1
    for(index in 1:num_rows){
        # Als er een match is, nemen we de parameter waarde over en stoppen we de loop. Anders gaan we ervan uit dat het in de laatste rij van de referentietabel valt.
        if(WOZ <= as.numeric(fWOZ_tabel[index, 'variabele_waarde'])){
            fWOZ <- as.numeric(fWOZ_tabel[index, 'parameter_waarde'])
            break
        }
        fWOZ <- as.numeric(fWOZ_tabel[num_rows + 1, 'parameter_waarde'])
    }
    # Nakijken in welk bouwjaar-bakje de woning valt
    num_rows <- nrow(fBouwjaar_tabel) - 1
    for(index in 1:num_rows){
        # Als er een match is, nemen we de waarde over en stoppen we de loop. Anders gaan we ervan uit dat het in de laatste rij valt.
        if(bouwjaar <= as.numeric(fBouwjaar_tabel[index, 'variabele_waarde'])){
            fBouwjaar <- as.numeric(fBouwjaar_tabel[index, 'parameter_waarde'])
            break
        }
        fBouwjaar <- as.numeric(fBouwjaar_tabel[num_rows + 1, 'parameter_waarde'])
    }
    
    # Nakiken wat voor type woning het is
    fType <- as.numeric(fType_tabel[fType_tabel['variabele_waarde'] == type, 'parameter_waarde'])

    # Nakijken in welke regio de woning staat.
    fRegio <- as.numeric(fRegio_tabel[fRegio_tabel['variabele_waarde'] == regio, 'parameter_waarde'])
    fMarkt <- as.numeric(fMarkt_tabel[fMarkt_tabel['variabele_waarde'] == regio, 'parameter_waarde'])
    
    # Markthuur berekenen conform de formule
    markthuur <- (m2/((0.0125 * m2) ** 0.6796)) * huur_ref * fWOZ * fBouwjaar * fType * fRegio * fMarkt
    return(markthuur)
}

[[ BINNEN DE FOR LOOP ]]

    ## Deze loop berekent het aantal WWS-punten en de bijbehorende huur en neemt voor elk jaar en neemt mee wat het huidige energielabel is.
    # Hierin kan ook gelijk de markthuur elk jaar worden berekend.
    for (i in 1:(n_years+1)) {
    # for(i in 1:1){
        woz <- df_list[[h]]$woz.woning[i]
        huidig_label <- df_list[[h]]$energie_label[i]
        punten <- wws.helper(m2, huidig_label, finish.level, woz, points.a1, points.a4, points.a56, points.a9,lookup.table)$WOZ_punten
        huur <- wws.helper(m2, huidig_label, finish.level, woz,points.a1, points.a4, points.a56, points.a9,lookup.table)$WOZ_huur
        df_list[[h]]$punten.wws[i] <- punten ## wws punten volgens puntensysteem
        df_list[[h]]$huur.wws[i] <- 12*huur*df_list[[h]]$cumcpi[i] ## berekening in maandhuur, omzetten naar jaarhuur, opgehoogd met cpi.
        
        ## HIER AANPaSSEN: We hebben nog geen referentiehuur. Ik gooi er even de WWS-huur in, om een getal te hebben. Dit klopt natuurlijk niet!
        df_list[[h]]$markthuur[i] <- bereken_markthuur(m2, (df_list[[h]]$huur.wws[i]/m2), woz, bouwjaar, substring(huidig_label, 1, 3), regio)
    }
