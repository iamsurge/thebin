/*******************************/
/*   GROOVY - Fields Insight   */
/*******************************/
 
// Imports
// Declaración de Manejadores
// Obtener el valor de un atributo de un objeto Bean
// Obtener un objeto Bean (a partir de un atributo de otro objeto)
// Obtener el tipo de atributo Bean
// Búsqueda de objetos
// Obtener el listado de tickets conectados a un objeto Bean
 
/************************************************************************/

// Imports
import com.riadalabs.jira.plugins.insight.channel.external.api.facade.ObjectFacade
import com.riadalabs.jira.plugins.insight.channel.external.api.facade.ObjectTypeAttributeFacade
import com.riadalabs.jira.plugins.insight.services.model.factory.ObjectAttributeBeanFactory
import com.riadalabs.jira.plugins.insight.services.model.ObjectAttributeBean
import com.riadalabs.jira.plugins.insight.services.model.ObjectBean
import com.riadalabs.jira.plugins.insight.services.model.ObjectUpdateBean
/************************************/
 
// Declaración de Manejadores
@WithPlugin("com.riadalabs.jira.plugins.insight")
@PluginModule
ObjectFacade objectFacade
@PluginModule
ObjectTypeAttributeFacade objectTypeAttributeFacade
@PluginModule
ObjectAttributeBeanFactory objectAttributeBeanFactory
Class IQLFacadeClass = ComponentAccessor.getPluginAccessor().getClassLoader().loadClass("com.riadalabs.jira.plugins.insight.channel.external.api.facade.IQLFacade") 
def iqlFacade = ComponentAccessor.getOSGiComponentInstanceOfType(IQLFacadeClass)
/************************************/
 
// Obtener el valor de un atributo de un objeto Bean
ObjectAttributeBean anexoAAttributeBean = objectFacade.loadObjectAttributeBean(aplicacionObject[0].getId(), 1685)
if (anexoAAttributeBean != null) {    
    logger.debug("anexoAAttributeBean: " + anexoAAttributeBean.getObjectAttributeValueBeans()?.get(0))
	logger.debug("anexoAAttributeBeanValue: " + anexoAAttributeBean.getObjectAttributeValueBeans()?.get(0)?.getValue())
}
/************************************/
 
// Obtener un objeto Bean (a partir de un atributo de otro objeto)
def sistemaObj = objectFacade.loadObjectBean(sistemaBean.getObjectAttributeValueBeans().get(0).getValue())
/************************************/
 
// Obtener el tipo de atributo Bean
def codigoOAF = objectTypeAttributeFacade.loadObjectTypeAttributeBean(185)
def codigoBean = objectFacade.loadObjectAttributeBean(sistemaObj.getId(), codigoOAF.getId())
/************************************/
 
// Búsqueda de objetos
def aplicacionObject = iqlFacade.findObjects("objectSchema = \"CMDB Demanda Infraestructura\" AND objectType = \"Aplicacion\" AND Nombre = \"" + cfAplicacionValue + "\"")  
if (aplicacionObject != null && aplicacionObject[0] != null) {
		logger.debug(aplicacionObject[0].getId())
}       
/************************************/
 
// Obtener el listado de tickets conectados a un objeto Bean
objectFacade.findObjectTicketConnections(objectBean.getId())
issues.each{ ticketConnection ->
    def issue = issueManager.getIssueObject(ticketConnection.getTicketId())
    log.debug("issue key:" + issue.key)
}
/************************************/