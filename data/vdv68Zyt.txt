local component = require("component")
local term = require("term")
local sides = require("sides")
local debug = require("component").debug
local serialize = require("serialization").serialize
 --ids de componentes--
local mfe_1 = component.proxy("2faca477-7a4d-4c74-9e98-bd108bf3f5f0")
local mfe_2 = component.proxy("7e1e97de-3a31-43af-82d8-4206c7273050")
local mfe_3 = component.proxy("57e2983d-fabe-4ba7-83b0-d326723385cf")
local mfe_4 = component.proxy("5d958a45-33bd-46d1-ac79-70f34bed6d4e")
local mfe_5 = component.proxy("409de8b2-95c9-42ef-a379-45051479c6ac")
local mfe_6 = component.proxy("fa81e3f3-8373-4d2f-bd98-bc8243b36adf")
local mfe_7 = component.proxy("966c6c5f-b622-4dbd-acc8-7fd547b4104e")
local mfe_8 = component.proxy("b580a2b9-fcb1-4c16-b4b1-6a7b1fde015b")
local reactor = component.proxy("66653b93-b378-4fa1-90bb-099820471f57")
local redstone = component.proxy("10e2c662-2944-4420-a4a6-bb0f70c2e26c")

--RedstoneSwichs--
function redstoneSwichON()
    redstone.setOutput(sides.front, 15)
    redstone.setOutput(sides.front, 15)
end
function redstoneSwichOFF()
    redstone.setOutput(sides.front, 0)
    redstone.setOutput(sides.front, 0)
end
--End redstonewich--

--Loop failSave reactor--
MainLoop()

function MainLoop()
while true do
    print("Hola! Â¿Querer ver como va todo?")
    local input_temp = io.write("Ingresa Temp si queres ver la temperatura")
    local input_eu = io.write("Ingresa eu si queres ver la energia almacenada")
    local MaxHeat = reactor.getMaxHeat()
    local energy = mfe_1.getEnergy() + mfe_2.getEnergy() + mfe_5.getEnergy() + mfe_6.getEnergy() + mfe_7.getEnergy() + mfe_8.getEnergy()
    if MaxHeat == 100 
    then
        redstoneSwichON()
    else
        redstoneSwichOFF()
        runCommand(/say REACTOR CRITICO - APAGANDO SISTEMAS)
            MainLoop()
           end
      end
end