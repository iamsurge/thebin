Random random = new Random();

// Возвращает случайное число типа int в диапазоне
int GetRandomIntFromRange(int min, int max) {
	return random.Next(min, max);
}

// Инициализация трёхмерной матрицы случайными числами
int[,,] Create3DMatrix(int rows, int cols, int deep)
{
	int[,,] result = new int[rows, cols, deep];
	for (int i = 0; i < rows; i++) {
		for (int j = 0; j < cols; j++) {
			for (int k = 0; k < deep; k++) {
				result[i, j, k] = GetRandomIntFromRange(10, 99);
			}
		}
	}
	return result;
}

// Отображает в консоли трёххмерную матрицу
void Print3DMatrix(int[,,] target_matrix) {
	for (int i = 0; i < target_matrix.GetLength(0); i++)
	{
		for (int j = 0; j < target_matrix.GetLength(1); j++)
		{
			for (int k = 0; k < target_matrix.GetLength(2); k++)
			{
				Console.WriteLine($"{target_matrix[i, j, k]} ({i}, {j}, {k})");
			}
		}
		Console.WriteLine();
	}
	Console.WriteLine();
}


Console.WriteLine();

int default_matrix_rows = 2;
int default_matrix_cols = 2;
int default_matrix_deep = 2;

// Определяем размерность
Console.Write($"Введите количество строк матриц ({default_matrix_rows}): ");
int matrix_rows = int.TryParse(Console.ReadLine(), out matrix_rows) ? matrix_rows : default_matrix_rows;

Console.Write($"Введите количество столбцов матриц ({default_matrix_cols}): ");
int matrix_cols = int.TryParse(Console.ReadLine(), out matrix_cols) ? matrix_cols : default_matrix_cols;

Console.Write($"Введите глубину матрицы ({default_matrix_deep}): ");
int matrix_deep = int.TryParse(Console.ReadLine(), out matrix_deep) ? matrix_deep : default_matrix_deep;

Console.WriteLine();

// Инициализируем матрицу
int[,,] matrix = Create3DMatrix(matrix_rows, matrix_cols, matrix_deep);

Print3DMatrix(matrix);