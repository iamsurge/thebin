local colors = {"white", "orange", "magenta", "light_blue", "yellow", "lime", "pink", "gray", "light_gray", "cyan", "purple", "blue", "brown", "green", "red", "black"}
local file = "config.cfg"
local w, h = term.getSize()
local buttons = {}

local function setup()
    -- Check if config file exists
    if not fs.exists(file) then
        -- Ask for bundled cable side
        print("Please enter the side where the bundled cable is located: ")
        local bundledCableSide = io.read()
        -- Ask for monitor side
        print("Please enter the side where the monitor is located: ")
        local monitorSide = io.read()
        -- Save config to file
        local configFile = fs.open(file, "w")
        configFile.writeLine(bundledCableSide)
        configFile.writeLine(monitorSide)
        configFile.close()
    end
end

local function main()
    -- Open config file
    local configFile = fs.open(file, "r")
    local bundledCableSide = configFile.readLine()
    local monitorSide = configFile.readLine()
    configFile.close()
    -- Create buttons for each color
    for i, color in ipairs(colors) do
        local button = {
            x = (i-1) % (w/3) * 3,
            y = math.floor((i-1) / (w/3)) * 2,
            color = color,
            text = color,
            state = false,
        }
        table.insert(buttons, button)
    end
    -- Draw buttons on screen
    term.redirect(monitorSide)
    for _, button in ipairs(buttons) do
        term.setCursorPos(button.x, button.y)
        term.setTextColor(colors.getColor(button.color))
        term.write(button.text)
    end
    while true do
        local event, side, x, y = os.pullEvent("monitor_touch")
        for _, b in ipairs(buttons) do
            if x >= b.x and x < b.x + #b.text and y == b.y then
                b.state = not b.state
                redstone.setBundledOutput(bundledCableSide, b.color, b.state)
                term.setCursorPos(b.x, b.y)
                if b.state then
                    term.setTextColor(colors.getColor(b.color))
                else
                    term