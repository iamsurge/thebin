const int maxn = 1000 + 100;
const int maxm = 200 + 100;
int n;
int dp[maxn][maxm];

class Solution {
public:
    int maxProfit(int k, vector<int>& prices) {
        n = prices.size();
        dp[0][0] = 0;
        for (int i = 1; i <= n; ++i) {
            int top = min(k * 2, i);
            for (int j = 1; j <= top; ++j) {
                if (j % 2 == 0) {
                    dp[i][j] = dp[i - 1][j - 1] + prices[i - 1];
                } else {
                    dp[i][j] = dp[i - 1][j - 1] - prices[i - 1];
                }
                if (j != i) {
                    dp[i][j] = max(dp[i][j], dp[i - 1][j]);
                }
            }
        }
        int ans = 0;
        for (int i = 0; i <= k * 2; ++i) {
            ans = max(ans, dp[n][i]);
        }
        return ans;
    }
};