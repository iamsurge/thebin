CREATE OR REPLACE VIEW el_pris_view AS
WITH govt_fees (
    "time",
    per_kwh
) AS (
    SELECT
        "time",
        0.57208 + -- Elafgift
        0.00286 + -- Balancetarif
        0.07300 + -- Systemtarif
        0.06542 -- Transmissions nettarif
        AS per_kwh
    FROM
        power_prices
),
nrgi_abonnement (
    -- Must be added exactly once per hour every hour
    "time", per_hour
) AS (
    SELECT
        "time",
        -- Price is 16.25 per month
        ((16.25 * 12) / 365.0) / 24.0 AS per_hour
    FROM
        power_prices
),
cerius_abonnement (
    -- Must be added exactly once per hour every hour
    "time", per_hour
) AS (
    SELECT
        "time",
        CASE WHEN "time" < '2023-01-01' THEN
            -- Before 2023, the price was 699,- per year
            (699.0 / 365.0) / 24.0
        WHEN "time" >= '2023-01-01' THEN
            -- After 2023, the price was 65.94,- per month
            ((65.94 * 12) / 365.0) / 24.0 * 1.1
        END AS per_hour
    FROM
        power_prices
),
cerius_tarif (
    "time", per_kwh
) AS (
    SELECT
        "time",
        CASE WHEN "time" < '2023-01-01' THEN
            CASE WHEN "time"::time >= '17:00:00'
                AND "time"::time < '20:00:00' THEN
                0.9856
            ELSE
                0.3785
            END
        WHEN "time" >= '2023-01-01'
            AND "time" < '2023-02-01' THEN
            CASE
            -- vitertarif
            WHEN "time"::time >= '00:00:00'
                AND "time"::time < '07:00:00' THEN
                0.2038 -- lavlast
            WHEN "time"::time >= '07:00:00'
                AND "time"::time < '18:00:00' THEN
                0.6113 -- højlast
            WHEN "time"::time >= '18:00:00'
                AND "time"::time < '22:00:00' THEN
                1.8336 -- spidslast
            WHEN "time"::time >= '22:00:00'
                AND "time"::time < '00:00:00' THEN
                0.6113 -- højlast
            END
        WHEN "time" >= '2023-02-01' THEN
            CASE WHEN EXTRACT(MONTH FROM "time") IN (1, 2, 3, 10, 11, 12) THEN
                -- vintertarif
                CASE WHEN "time"::time >= '00:00:00'
                    AND "time"::time < '07:00:00' THEN
                    0.2227 -- lavlast
                WHEN "time"::time >= '07:00:00'
                    AND "time"::time < '18:00:00' THEN
                    0.6681 -- højlast
                WHEN "time"::time >= '18:00:00'
                    AND "time"::time < '22:00:00' THEN
                    2.0042 -- spidslast
                WHEN "time"::time >= '22:00:00'
                    AND "time"::time < '00:00:00' THEN
                    0.6681 -- højlast
                END
            WHEN EXTRACT(MONTH FROM "time") IN (4, 5, 6, 7, 8, 9) THEN
                -- sommertarif
                CASE WHEN "time"::time >= '00:00:00'
                    AND "time"::time < '07:00:00' THEN
                    0.2227 -- lavlast
                WHEN "time"::time >= '07:00:00'
                    AND "time"::time < '18:00:00' THEN
                    0.3340 -- højlast
                WHEN "time"::time >= '18:00:00'
                    AND "time"::time < '22:00:00' THEN
                    0.8685 -- spidslast
                WHEN "time"::time >= '22:00:00'
                    AND "time"::time < '00:00:00' THEN
                    0.3340 -- højlast
                END
            END
        END AS per_kwh
    FROM
        power_prices
)
SELECT
    "time",
    ROUND("value" + (("value" * govt_fees.per_kwh + cerius_tarif.per_kwh) + (nrgi_abonnement.per_hour + cerius_abonnement.per_hour))) AS per_kwh,
    "value" AS per_kwh_raw
FROM
    power_prices
    JOIN govt_fees USING ("time")
    JOIN nrgi_abonnement USING ("time")
    JOIN cerius_abonnement USING ("time")
    JOIN cerius_tarif USING ("time");

