const { MessageEmbed } = require('discord.js');

const https = require('https');
const cheerio = require('cheerio');
const APIKey = <REDACTED>;

module.exports = {
    name: 'lyrics',
    aliases: [],
	category: 'Music',
    utilisation: '{prefix}lyrics [song name]',
	description: 'Displays the lyrics of the current track or the track you searched',

    async execute(client, message, args) {

	  function fetchLyrics(song)
	  {
		const encodedSong = encodeURIComponent(song);
		const options = {
			hostname: 'api.genius.com',
			path: `/search?q=${encodedSong}`,
			headers: {
				'Authorization': `Bearer ${APIKey}`,
			},
		};

		return new Promise((resolve, reject) => {
			https.get(options, (response) => {
				let data = '';

				response.on('data', (chunk) => {
					data += chunk;
				});

				response.on('end', () => {
					const searchResults = JSON.parse(data);
					if(searchResults.response.hits && searchResults.response.hits.length > 0)
					{
						const song_url = searchResults.response.hits[0].result.url;
						const title = searchResults.response.hits[0].result.title;

						https.get(song_url, (response) => {
							let data = '';

							response.on('data', (chunk) => {
								data += chunk;
							});

							response.on('end', () => {
								const html = data;

								const $ = cheerio.load(html);
								const selectors = [
									() => $(".lyrics").text().trim(),
									() => $("div[class*='Lyrics__Container']")
											.toArray()
											.map((x) => {
												const ele = $(x);
												ele.find("br").replaceWith("\n");
												return ele.text();
											})
											.join("\n")
											.trim(),
								];

								var Lyrics;
								for(const x of selectors)
								{
									Lyrics = x();
								}

								resolve([Lyrics, title]);
							});
						}).on('error', (err) => {
							console.log("Error : " + err.message);
						});
					}
					else
					{
						reject("No lyrics found")
					}
				});
			});
		});
	  }

      const queue = player.getQueue(message.guild.id);

      if (!queue && !args[0]) return message.channel.send(`No track in queue or valid search provided ${message.author}... try again ? ❌`);
	 
	  var tempterm;

      message.channel.sendTyping();

	  if(args[0])
	  {
		tempterm = args.join(' ');
	  }
	  else
	  {
		tempterm = queue.current.title;
	  }
	  
	  if(tempterm.includes('('))
	  {
		var words = tempterm.split("(");
		words.pop();
		tempterm = words[0];
	  }

		var lyrics;
		var tit;
		fetchLyrics(tempterm)
			.then(([lyr, title]) => {
				lyrics = lyr;
				tit = title;
				const embed = new MessageEmbed()
				.setColor('#2beddd')
				.setTitle(`**LYRICS | ${tit}**`)
				.setDescription(lyrics.length > 4095 ? lyrics.substr(0, 4092) + '...': lyrics)
				.setFooter(`Made by ShambaC#3440`)
  
				message.channel.send({embeds:[embed]}) 
			})
			.catch((error) => {
				console.error(error);
				return message.channel.send(`🚫 | Couldn' find lyrics for this song! Please retry or search for an other track!`);
				
			});
	     
	},
};