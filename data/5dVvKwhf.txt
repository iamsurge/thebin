#include <iostream>
#include <string>
#include <algorithm>
#include <vector>

using namespace std;

typedef long long ll;
const ll INF = 2147483649;
const int LOG = 17;
const int N = 100000;

ll dp[LOG][N];

int main()
{
	ios_base::sync_with_stdio(0);
	cin.tie(0);
	cout.tie(0);

	ll n, m, ans;
	ll u, v;

	cin >> n >> m;

	cin >> dp[0][0];

	cin >> u >> v;

	for (int i = 1; i < n; i++) {
		dp[0][i] = (23 * dp[0][i - 1] + 21563) % 16714589;
	}
	
	for (int i = 1; (1 << i) <= n; i++){
		for (int j = 0; j < n; j++) {
			dp[i][j] = min(dp[i - 1][j], dp[i - 1][j + (1 << (i - 1))]);
		}
	}

	for (int i = 0; i < m; i++) {
		if (i != 0 && ans) {
			u = ((17 * u + 751 + ans + 2 * i) % n) + 1;
			v = ((13 * v + 593 + ans + 5 * i) % n) + 1;
		}
		int l = min(u, v), r = max(u, v);
		int len = r - l + 1;

		int log = 0;
		while ((1 << log) <= len) {
			log++;
		}
		--log;

		ans = min(dp[log][l - 1], dp[log][r - (1 << log)]);
	}

	cout << u << ' ' << v << ' ' << ans;
}