 getProof(index) {
    let proof = [];

    function makeProof(index, layer, concat) {
      while (layer.length > 1) {
        let isInsexLeft = index % 2 === 0 ? true : false;
        let pairIndex = isInsexLeft ? index + 1 : index - 1;
        
         if (pairIndex <= layer.length - 1) {
          let isPairInsexLeft = pairIndex % 2 === 0 ? true : false;
          proof.push({ data: layer[pairIndex], left: isPairInsexLeft });
        }

        const nextLayer = [];
        while (layer.length > 1) {
          nextLayer.push(concat(layer.shift(), layer.shift()));
          if (layer.length == 1) {
            nextLayer.push(layer.shift());
          }
        }

        if (nextLayer.length == 1) {
          break;
        } else {
          makeProof(Math.floor(pairIndex / 2), nextLayer, concat);
        }
      }
      return proof;
    }

    return makeProof(index, Array.from(this.leaves), this.concat);
    
  }