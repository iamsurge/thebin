["0p48QPFL.txt","3BhYLF6E.txt","3WFG30UV.txt","3ZKD0CXD.txt","4AKGnDsg.txt","4W2PTcjX.txt","4sfvZ57X.txt","4y64muHh.txt","5bAukCcT.txt","65whUmRB.txt","6WXHpZkW.txt","7Has3uMf.txt","7dRyMn37.txt","850WaEAr.txt","8SswykMz.txt","8Xy2xfVb.txt","8eT1eZFY.txt","8hKqiUNJ.txt","975p1gUh.txt","9AvzZJpX.txt","9LwE3dFn.txt","9VehRi1Z.txt","9bBRAMdj.txt","9dw7hGsk.txt","9ejatkXc.txt","AF0q0ULG.txt","BCKYbTeZ.txt","CLyKLEtE.txt","DXREfVed.txt","DnFdd8QK.txt","E7BM31WH.txt","ELd9GETv.txt","EXzVYPpA.txt","EzunSXNY.txt","FV9PFzt9.txt","G7pYhxc0.txt","GvXLc79T.txt","HL239wVi.txt","Hr2K2xqm.txt","J9cuHVRy.txt","JWhqCbwp.txt","JzW6Nz25.txt","KUNqtG6K.txt","M8kB91kC.txt","MarT9zQd.txt","Mnwm5LeU.txt","N7yArhSc.txt","NMrKCivj.txt","NZ6EZGt3.txt","NiSHSztn.txt","Nyqkyr7R.txt","QqecJeLH.txt","Qr26wGJV.txt","Rkuw7wW1.txt","RsW3q0qX.txt","SKinVcxN.txt","TRCXsTd6.txt","TXKGg1xv.txt","UNEnnMb7.txt","UUJ866UG.txt","UwNqRfaL.txt","Uwbp5AhZ.txt","Ux09ENdd.txt","V8yPzLRK.txt","VW67BPxM.txt","VcajLwRx.txt","Vzv55ryP.txt","W9vzNmn9.txt","WRjXkkqc.txt","XpRH1MNX.txt","XsFquNWY.txt","Y8TLVpLU.txt","ZDj0A0vQ.txt","ZRL2SQxg.txt","ZVUMDqtR.txt","asFGfgLN.txt","b0fBRWDF.txt","b42GW2W1.txt","bCMT0gG0.txt","bNiHzYTd.txt","bX3DsNED.txt","bifw15Zi.txt","cCDaWvmc.txt","cHdiYAeM.txt","ceUL3Txg.txt","cnyhX9ut.txt","cpiAuJaV.txt","d2Ww99fU.txt","dL4y8fMb.txt","dn4X2xde.txt","ebWusbbn.txt","er0pV63B.txt","f0aJz67p.txt","f0h6DuBf.txt","f4FzK1VQ.txt","fVCcBwHx.txt","g9zBvc3i.txt","gEsFXbSG.txt","hADikR0y.txt","hmnyGB05.txt","hwSyzdV1.txt","i8rpMRjz.txt","iLVJqnrz.txt","j1Svm81x.txt","j2BYAJmt.txt","jAc0zkJ3.txt","jNtm8f8X.txt","jRtpvGNT.txt","jSLwSN0L.txt","jV7YCdAG.txt","k5pWbUtt.txt","k9GVnURZ.txt","mJY51Btg.txt","nceV5ehS.txt","neqwruyV.txt","pRQkuuzr.txt","pV1wp1eW.txt","pjp9mer1.txt","qELsjGuT.txt","qkqTJ0rB.txt","qurt1f8h.txt","r9xvGPWH.txt","rcMY8v02.txt","rzwKYBtS.txt","s4i3P2C5.txt","sbLShWCF.txt","shdJM7FK.txt","smJTJUEi.txt","t6F413nL.txt","t9YanMr5.txt","uFV5D2nj.txt","uNs3AB68.txt","uviGLSuR.txt","vTujViau.txt","vXyUSYeF.txt","wXDgFEZD.txt","wtna7HCk.txt","xAvBxwE7.txt","xECUhWEt.txt","y04XHYu4.txt","z9b9892S.txt","zfaSQ8jK.txt"]//index-files

local achievements = {}


achievements["Welcome"] = {
	ImageId = 6915066359; -- ID of the achievement's image
	Description = "Thanks for playing the game!"; -- The description for this achievement
	
	OrderRank = 1; -- The position this achievement will appear on the GUI
}

achievements["10 minutes"] = {
	ImageId = 228648990;
	Description = "You've played for 10 minutes. Keep going!";
	OrderRank = 2;
}

achievements["Energetic"] = {
	ImageId = 541620958;
	Description = "You're quite energetic to have walked 500 studs already!";
	OrderRank = 3;
}


return achievements;

#include <cassert>
#include <cstdlib>
#include <algorithm>

template <typename Type>
class ArrayPtr {
public:
    // Инициализирует ArrayPtr нулевым указателем
    ArrayPtr() = default;

    // Создаёт в куче массив из size элементов типа Type.
    // Если size == 0, поле raw_ptr_ должно быть равно nullptr
    explicit ArrayPtr(size_t size) {
        // Реализуйте конструктор самостоятельно
        if (size == 0) {
            raw_ptr_ = nullptr;
        } else {
            raw_ptr_ = new Type[size];
        }
    }

    // Конструктор из сырого указателя, хранящего адрес массива в куче либо nullptr
    explicit ArrayPtr(Type* raw_ptr) noexcept {
        // Реализуйте конструктор самостоятельно
        raw_ptr_ = raw_ptr;
    }

    // Запрещаем копирование
    ArrayPtr(const ArrayPtr&) = delete;

    ~ArrayPtr() {
        // Напишите деструктор самостоятельно
        delete[] raw_ptr_;
    }

    // Запрещаем присваивание
    ArrayPtr& operator=(const ArrayPtr&) = delete;

    // Прекращает владением массивом в памяти, возвращает значение адреса массива
    // После вызова метода указатель на массив должен обнулиться
    [[nodiscard]] Type* Release() noexcept {
        // Заглушка. Реализуйте метод самостоятельно
        Type* p = raw_ptr_;
        raw_ptr_ = nullptr;
        return p;
    }

    // Возвращает ссылку на элемент массива с индексом index
    Type& operator[](size_t index) noexcept {
        // Реализуйте операцию самостоятельно
        return raw_ptr_[index];
    }

    // Возвращает константную ссылку на элемент массива с индексом index
    const Type& operator[](size_t index) const noexcept {
        // Реализуйте операцию самостоятельно
        return raw_ptr_[index];
    }

    // Возвращает true, если указатель ненулевой, и false в противном случае
    explicit operator bool() const {
        // Заглушка. Реализуйте операцию самостоятельно
        if (raw_ptr_ != nullptr) {
            return true;
        } else {
            return false;
        }
    }

    // Возвращает значение сырого указателя, хранящего адрес начала массива
    Type* Get() const noexcept {
        // Заглушка. Реализуйте метод самостоятельно
        return raw_ptr_;
    }

    // Обменивается значениям указателя на массив с объектом other
    void swap(ArrayPtr& other) noexcept {
        // Реализуйте метод самостоятельно
        std::swap(raw_ptr_, other.raw_ptr_);
        return;
    }

private:
    Type* raw_ptr_ = nullptr;
};

int main() {
    ArrayPtr<int> numbers(10);
    const auto& const_numbers = numbers;

    numbers[2] = 42;
    assert(const_numbers[2] == 42);
    assert(&const_numbers[2] == &numbers[2]);

    assert(numbers.Get() == &numbers[0]);

    ArrayPtr<int> numbers_2(5);
    numbers_2[2] = 43;

    numbers.swap(numbers_2);

    assert(numbers_2[2] == 42);
    assert(numbers[2] == 43);
}

use std::env;
use std::io::{self, prelude::*, BufReader};
use std::fs::File;
use std::collections::HashMap;

use point2d::point2d::Point2D;

const ORIGIN_X: i64 = 500;
const ORIGIN_Y: i64 = 0;
const ORIGIN: Point2D = Point2D { x: ORIGIN_X, y: ORIGIN_Y };

enum MapType {
    Origin,
    Rock,
    Sand,
}

fn can_move(sand_map: &HashMap<Point2D,MapType>, pt: &Point2D) -> bool {
    match sand_map.get(&pt) {
        None => true,
        Some(_) => false,
    }
}

fn drop_sand(sand_map: &mut HashMap<Point2D,MapType>, abyss: i64, part1: bool) -> bool {

    let mut new_pt = Point2D { x: ORIGIN_X, y: ORIGIN_Y };
    loop {

        // Assess movements
        let try_down  = Point2D { x: new_pt.x,   y: new_pt.y+1 };
        let try_left  = Point2D { x: new_pt.x-1, y: new_pt.y+1 };
        let try_right = Point2D { x: new_pt.x+1, y: new_pt.y+1 };

        let can_down  = can_move(&sand_map, &try_down);
        let can_left  = can_move(&sand_map, &try_left);
        let can_right = can_move(&sand_map, &try_right);

        // Assign movements
        if can_down {
            new_pt = try_down;
            if part1 && new_pt.y + 1 == abyss { return false; } // Fell to the abyss
        } else if can_left {
            new_pt = try_left;
        } else if can_right {
            new_pt = try_right;
        } else {
            if !part1 && new_pt == ORIGIN { return false; } // Blocking origin
            sand_map.insert(new_pt,MapType::Sand);
            return true; // At rest
        }
    }
}

fn build_map(input: &Vec<String>) -> HashMap<Point2D,MapType> {
    let mut sand_map: HashMap<Point2D,MapType> = HashMap::new();
    let origin = Point2D { x: ORIGIN_X, y: ORIGIN_Y };
    sand_map.insert(origin, MapType::Origin);
    for line in input {
        let segments: Vec<_> = line.split("->").collect();
        for segment in segments.windows(2) {
            let p1: Vec<_> = segment[0].split(",").map(|v| v.trim().parse::<i64>().unwrap()).collect();
            let p2: Vec<_> = segment[1].split(",").map(|v| v.trim().parse::<i64>().unwrap()).collect();
            let (x1,y1) = (p1[0], p1[1]);
            let (x2,y2) = (p2[0], p2[1]);
            let xrange = if x2 > x1 { x1..=x2 } else { x2..=x1 };
            let yrange = if y2 > y1 { y1..=y2 } else { y2..=y1 };
            for x in xrange.clone() {
                for y in yrange.clone() {
                    sand_map.insert(Point2D { x: x, y: y }, MapType::Rock);
                }
            }
        }
    }
    sand_map
}

fn solve(input: &str) -> io::Result<()> {
    let file = File::open(input).expect("Input file not found.");
    let reader = BufReader::new(file);

    // Input
    let input: Vec<String> = match reader.lines().collect() {
        Err(err) => panic!("Unknown error reading input: {}", err),
        Ok(result) => result,
    };

    // Part 1
    let mut sand_map = build_map(&input);

    // Identify the extent of the abyss
    let abyss = &sand_map.keys().map(|&pt| pt.y).max().unwrap() + 2;

    // Simulate sand
    'sand_lp: for sand in 0.. {
        let result = drop_sand(&mut sand_map,abyss,true);
        if !result { println!("Part 1: {sand}"); break 'sand_lp; } // 1061
    }

    // Part 2 (reset map)
    let mut sand_map = build_map(&input);

    // Build floor
    for x in 0..=1000 {
        sand_map.insert(Point2D { x: x, y: abyss },MapType::Rock);
    }

    'sand_lp2: for sand in 1.. {
        let result = drop_sand(&mut sand_map,abyss,false);
        if !result { println!("Part 2: {sand}"); break 'sand_lp2; } //  25055
    }

    Ok(())
}

fn main() {
    let args: Vec<String> = env::args().collect();
    let filename = &args[1];
    solve(&filename).unwrap();
}


local functions = {}


local dss = game:GetService("DataStoreService")
local ds = dss:GetDataStore("Achievements Data Store")

local remote = script.Parent:WaitForChild("AchievementsRemoteEvent")


function functions.LoadPlayerAchievements(plr:Player)
	if not game:GetService("RunService"):IsServer() then return end
	
	if plr.Parent == game.Players and not plr:FindFirstChild("ACHIEVEMENTS FOLDER") then
		
		local plrData
		local success, err
		
		while not success do
			success, err = pcall(function()
				plrData = ds:GetAsync(plr.UserId) or {}
			end)
			
			if not success then
				warn(err)
			end
			
			task.wait(0.5)
		end

		if success then
			local newFolder = Instance.new("Folder")
			newFolder.Name = "ACHIEVEMENTS FOLDER"
			newFolder.Parent = plr
			
			for _, achName in pairs(plrData) do
				local newAchievementValue = Instance.new("StringValue")
				newAchievementValue.Name = achName
				newAchievementValue.Parent = newFolder
			end
		end
	end
end

function functions.SavePlayerAchievements(plr:Player)
	if not game:GetService("RunService"):IsServer() then return end
	
	if plr.Parent == game.Players and plr:FindFirstChild("ACHIEVEMENTS FOLDER") then
		
		local plrAchievements = {}
		for _, achievementValue in pairs(plr["ACHIEVEMENTS FOLDER"]:GetChildren()) do
			table.insert(plrAchievements, achievementValue.Name)
		end
		
		local success, err

		while not success do
			success, err = pcall(function()
				return ds:SetAsync(plr.UserId, plrAchievements)
			end)

			task.wait(0.1)
		end
	end
end

function functions.AwardAchievement(plr:Player, achName:string)
	
	if not game:GetService("RunService"):IsServer() then return end

	if plr.Parent == game.Players and plr:FindFirstChild("ACHIEVEMENTS FOLDER") and not plr["ACHIEVEMENTS FOLDER"]:FindFirstChild(achName) then
		
		remote:FireClient(plr, "AWARD ACHIEVEMENT", achName)
		
		local newAchievementValue = Instance.new("StringValue")
		newAchievementValue.Name = achName
		newAchievementValue.Parent = plr["ACHIEVEMENTS FOLDER"]
	end
end


return functions

import java.io.*;
import java.util.*;

public class Solution {
    public static long pow(long base,long pow){
        if(pow==1){
            return base;
        }
        if(pow==0){
            return 1;
        }
        long halfpow=pow(base,pow/2);
        if(pow%2==0){
            return halfpow*halfpow;
        }
        else{
            return halfpow*halfpow*base;
        }
    }
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        int t=sc.nextInt();
        while(t-->0){
            long x=sc.nextLong();
            long y=sc.nextLong();
            long ans=(pow(2,x)+pow(2,y))%(int)(1e9+7);
            System.out.println(ans);
        }
    }
}

#include <bits/stdc++.h>
#include <unistd.h>
#include <stdio.h>
#include <stdlib.h>
#include <string>
#include <cmath>
#include <windows.h>
#include <GL/gl.h>
#include <GL/glut.h>
using namespace std;

float speed=20;
int Gamex=20,Gamey=20;
int step=0,cntr=0;
int x=Gamex/2,y=0;
int xrand=(rand()%Gamex),yrand=Gamey-1;
bool Over=false,eaten=true;

int randColorfood=0,randColorbox=0,res1=0,res2=0;


void Box(){
    if(step==1 and x-2>0)x--;
    else if(step==3 and x+1<Gamex-1)x++;
    glColor3f(1,randColorbox,randColorbox);
    glRectd(x-2,y,x+2,y+1);
    res2=1+2*randColorbox;
    if(y==yrand and (x-1==xrand or x-2==xrand or x==xrand or x+1==xrand)){
        if(res1==res2){//Same Color
            eaten=true;
            cntr++;
        }else
            Over=true;
    }
}
void food(){
    if(eaten==true or yrand<0){
        randColorfood=(rand()%2);
        randColorbox=(rand()%2);
        xrand=(rand()%Gamex)-1,yrand=Gamey-1;
        eaten=false;

    }


    int rr=1;
    if(randColorfood==0)rr=1;
    if(rr==0 and randColorfood==0)rr=1;
    glColor3f(rr,randColorfood,randColorfood);
    res1=rr+2*randColorfood;
    glRectd(xrand,yrand,xrand+1,yrand+1);
    yrand--;
}



void keyboard(int k,int x,int y){
    // 1 Left
    // 3 Right
    if(k==GLUT_KEY_LEFT)step=1;
    else if(k==GLUT_KEY_RIGHT)step=3;
}
void reshape(int a,int b){
    glViewport(0,0,(GLsizei)a,(GLsizei)b);
    glMatrixMode(GL_PROJECTION);
    glLoadIdentity();
    glOrtho(0,Gamex,0,Gamey,-1,1);
    glMatrixMode(GL_MODELVIEW);
}

void timer(int){
    glutPostRedisplay();
    glutTimerFunc(1000/speed,timer,0);
}


void MainGame(){
    glClear(GL_COLOR_BUFFER_BIT);
    food();
    Box();
    glutSwapBuffers();
    if(Over==true){
        char c[20]={0},res[9]="Score : ";
        itoa(cntr,c,10);
        strcat(res,c);
        MessageBox(NULL,res,"Don't Cry :(",0);
        // Try to add MaxScore
        exit(0);
    }
}

int main(int argc, char** argv)
{
    //Initialize GLUT and creat The Window
    glutInit(&argc, argv);
    glutInitWindowPosition(80,50);
    glutInitWindowSize(600, 600);
    glutInitDisplayMode(GLUT_DOUBLE|GLUT_RGB);
    glutCreateWindow("Game");

    //Create Main Functions
    glutDisplayFunc(MainGame);
    glutReshapeFunc(reshape);
    glutSpecialFunc(keyboard);
    glutTimerFunc(0,timer,0);


    //change Color of Window
    glClearColor(0,0,0,0);
    glutMainLoop();
    return 0;
}



// given a non async divide
const divide = (a, b) => {
  if (b === 0) throw new Error('div 0');
  return a/b;
}


// divide usage
console.log(divide(10, 2)); // 5
try {
  console.log(divide(10, 0)); // throw error
} catch (e) {
  console.error(e);
}


/**
 write down an async implementation
 1. using a promise
 2. using a callback
**/





















// hint

// divide promise usage
dividePromise(10, 2).then(
  (result) => console.log(result),
  (error) => console.error(error),
)

// divide callback usage
divideCallback(10, 2, (error, result) => {
  if (error !== undefined) {
    console.error(error);
  } else {
    console.log(result);
  }
});


#include <stdio.h>
int main(){
    int var = 12189;    //Initializing a variable var 
    int* ptr2;          //Pointer
    int **ptr1;         //Double pointer 
    ptr2 = &var;           
    ptr1 = &ptr2;
    printf("%d\n", var);
    printf("%d\n", *ptr2);
    printf("%d\n", **ptr1);
    
    return 0;
}

#include <stdio.h>
#include <stdlib.h>
#include <wctype.h>
#include <wchar.h>
#include <locale.h>
#include <time.h>

#define BUFF_SIZE 200
#define MEM_STEP 20
struct Sentence {
    wchar_t *str;
    int length;
};

struct Text {
    struct Sentence **text;
    int length;
};

struct SubTime {
    double time_dif;
    int sent_numb;
};

typedef struct Sentence Sentence;
typedef struct Text Text;
typedef struct SubTime SubTime;

Sentence *readSentence() {
    wchar_t c;
    int length = 0;
    int size = MEM_STEP;
    wchar_t *str;
    str = (wchar_t *) malloc(size * sizeof(wchar_t));
    do {
        if (length >= size - 2) {
            wchar_t *tmp;
            size += MEM_STEP;
            tmp = (wchar_t *) realloc(str, size * sizeof(wchar_t));
            if (tmp == NULL) {
                free(str);
                return NULL;
            }
            str = tmp;
        }
        c = (wchar_t) getwchar();
        str[length] = c;
        length++;
    } while (c != L'\n' && c != L'.' && c != L'!' && c != L'?');
    str[length] = L'\0';
    Sentence *sentence = (Sentence *) malloc(sizeof(Sentence));
    sentence->str = str;
    sentence->length = length;
    return sentence;
}


Sentence *fix_of_sentence(Sentence *sentence) {
    if (sentence->str[0] == '\t' || sentence->str[0] == ' ' || sentence->str[0] == '\n' || sentence->str[0] == '.') {
        for (int i = 0; i <= sentence->length; i++)
            sentence->str[i] = sentence->str[i + 1];
        sentence->length--;
    }
    return sentence;
}


Text readText() {
    int size = BUFF_SIZE;
    int length = 0;
    int nlcount = 0;
    Sentence **text = malloc(size * sizeof(Sentence *));
    Sentence *sentence;
    do {
        sentence = readSentence();
        sentence->length != 1 ? fix_of_sentence(sentence) : sentence;
        if (sentence->str[0] == L'\n') {
            nlcount++;
            free(sentence);
        } else {
            nlcount = 0;
            text[length++] = sentence;
            if (length == size - 2) {
                size += MEM_STEP;
                text = realloc(text, size * sizeof(wchar_t *));
                if (text == NULL) {
                    for (int i = 0; i < length; i++) {
                        free(text[i]->str);
                        free(text[i]);
                    }
                    Text txt;
                    txt.text = NULL;
                    txt.length = length;
                    return txt;
                }
            }
        }
    } while (nlcount < 2);
    Text txt;
    txt.text = text;
    txt.length = length;
    return txt;
}


SubTime *check_time(Text txt, struct tm timeinfo, int *len) {
    int size = MEM_STEP, fl;
    SubTime *times = (SubTime *) malloc(size * sizeof(SubTime *));
    SubTime time_stamp;
    struct tm tmp = timeinfo;
    for (int i = 0; i < txt.length; i++) {
        fl = 0;
        for (int j = 0; j < txt.text[i]->length - 5; j++) {
            if (iswdigit(txt.text[i]->str[j]) && iswdigit(txt.text[i]->str[j + 1]) && iswdigit(txt.text[i]->str[j + 3]) &&
                iswdigit(txt.text[i]->str[j + 4]) && txt.text[i]->str[j + 2] == L':'){
                wchar_t hours[2] = {txt.text[i]->str[j], txt.text[i]->str[j + 1]};
                wchar_t minutes[2] = {txt.text[i]->str[j + 3], txt.text[i]->str[j + 4]};
                tmp.tm_hour = atoi((char *)hours);
                tmp.tm_min = atoi((char *)minutes);
                printf("%s", asctime(&timeinfo));
                double seconds = difftime(mktime(&timeinfo), mktime(&tmp));
                time_stamp.time_dif = seconds;
                time_stamp.sent_numb = i;
                fl = 1;
            }
        }
        if(fl) {
            times[*len] = time_stamp;
            ++*len;
        }
    }
    return times;
}

void printSubTime(SubTime *times, int len){
    for(int i = 0; i < len; i++){
        printf("%lf %d\n", times[i].time_dif, times[i].sent_numb);
    }
}

void free_text(Text text) {
    for (int i = 0; i < text.length; i++) {
        free(text.text[i]->str);
    }
    free(text.text);
}


void print_txt(Text txt) {
    for (int i = 0; i < txt.length; i++) {
        wprintf(L"%ls\n", txt.text[i]->str);
    }
}


Text del_copy(Text txt) {
    int i, j;
    int size = txt.length;
    for (i = 0; i < size; i++) {
        for (j = i + 1; j < size; j++) {
            if (!wcscasecmp(txt.text[i]->str, txt.text[j]->str)) {
                free(txt.text[j]->str);
                free(txt.text[j]);
                txt.text[j] = txt.text[--size];
                j--;
            }
        }
    }
    txt.length = size;
    return txt;
}

//добавить удаление по спец символу к удалению копий

void del_caps(Text txt) {
    for (int k = 0; k < txt.length; k++) {
        int i = 0;
        Sentence *sentence = txt.text[k];
        while (sentence->str[i]) {
            if (iswupper(sentence->str[i])) {
                for (int j = i; sentence->str[j]; j++)
                    sentence->str[j] = sentence->str[j + 1];
                i--;
            }
            i++;
        }
        fix_of_sentence(sentence);
    }
}

int count_cyrillic(Sentence *sentence) {
    int count = 0;
    for (int i = 0; i < sentence->length; i++) {
        if ((65 > (int) sentence->str[i] || (int) sentence->str[i] > 122) && iswalpha(sentence->str[i])) {
            count++;
        }
    }
    return count;
}

int cmp(const void *s1, const void *s2) {
    Sentence **f1 = (Sentence **) s1;
    Sentence **f2 = (Sentence **) s2;
    if (count_cyrillic(*f1) < count_cyrillic(*f2))
        return 1;
    if (count_cyrillic(*f1) > count_cyrillic(*f2))
        return -1;
    return 0;
}


Text del_sent_without_spec_symbols(Text txt) {
    int i, j;
    int size = txt.length;
    for (i = 0; i < size; i++) {
        int sent_size = txt.text[i]->length, fl = 0;
        for (j = 0; j < sent_size; j++) {
            if (iswcntrl(txt.text[i]->str[j])) {
                fl = 1;
                break;
            }
        }
        if (fl) {
            continue;
        } else {
            free(txt.text[i]->str);
            free(txt.text[i]);
            txt.text[i] = txt.text[--size];
            i--;
        }
    }
    txt.length = size;
    return txt;
}

void sort_txt(Text txt) {
    qsort(txt.text, txt.length, sizeof(Sentence *), cmp);
}

int main() {
    setlocale(LC_ALL, "");
    time_t rawtime;
    time(&rawtime);
    struct tm timeinfo;
    timeinfo = *localtime (&rawtime);
    Text txt = readText();
    txt = del_copy(txt);
    del_caps(txt);
    sort_txt(txt);
    int len = 0;
    SubTime *times = check_time(txt, timeinfo, &len);
    printSubTime(times, len);
//    txt = del_sent_without_spec_symbols(txt);
//    print_txt(txt);
    free_text(txt);
    return 0;
}


.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎T‎e‎s‎t‎i‎n‎g‎.‎.‎.‎
T‎e‎s‎t‎ ‎1‎.‎.‎.‎.‎.‎.‎.‎
T‎e‎s‎t‎ ‎2‎.‎.‎.‎.‎.‎.‎.‎
T‎e‎s‎t‎ ‎3‎.‎.‎.‎.‎.‎.‎.‎
T‎e‎s‎t‎ ‎4‎.‎.‎.‎.‎.‎.‎.‎
T‎e‎s‎t‎ ‎5‎.‎.‎.‎.‎.‎.‎.‎
T‎e‎s‎t‎ ‎6‎.‎.‎.‎.‎.‎.‎.‎
T‎e‎s‎t‎ ‎7‎.‎.‎.‎.‎.‎.‎.‎
T‎e‎s‎t‎ ‎8‎.‎.‎.‎.‎.‎.‎.‎
T‎e‎s‎t‎ ‎9‎.‎.‎.‎.‎.‎.‎.‎
T‎e‎s‎t‎ ‎1‎0‎.‎.‎.‎.‎.‎.‎
T‎e‎s‎t‎ ‎1‎1‎.‎.‎.‎.‎.‎.‎
T‎e‎s‎t‎ ‎1‎2‎.‎.‎.‎.‎.‎.‎
T‎e‎s‎t‎ ‎1‎3‎.‎.‎.‎.‎.‎.‎
T‎e‎s‎t‎ ‎1‎4‎.‎.‎.‎.‎.‎.‎
T‎e‎s‎t‎ ‎c‎o‎m‎p‎l‎e‎t‎e‎.‎

H‎e‎y‎,‎ ‎y‎o‎u‎ ‎l‎o‎s‎e‎r‎s‎.‎ ‎H‎e‎r‎e‎'‎s‎ ‎t‎h‎e‎ ‎n‎e‎w‎s‎.‎

S‎u‎r‎p‎r‎i‎s‎e‎ ‎S‎w‎a‎m‎p‎ ‎F‎a‎i‎l‎:‎ ‎G‎O‎P‎ ‎a‎n‎d‎ ‎L‎i‎b‎e‎r‎a‎l‎s‎ ‎D‎e‎f‎e‎a‎t‎ ‎‘‎E‎A‎G‎L‎E‎ ‎A‎c‎t‎’‎ ‎O‎u‎t‎s‎o‎u‎r‎c‎i‎n‎g‎ ‎B‎i‎l‎l‎
E‎m‎p‎t‎y‎ ‎c‎a‎l‎l‎ ‎c‎e‎n‎t‎e‎r‎.‎
H‎o‎u‎s‎e‎ ‎G‎O‎P‎ ‎l‎e‎g‎i‎s‎l‎a‎t‎o‎r‎s‎ ‎d‎e‎f‎e‎a‎t‎e‎d‎ ‎t‎h‎e‎ ‎b‎i‎l‎l‎i‎o‎n‎a‎i‎r‎e‎-‎b‎a‎c‎k‎e‎d‎ ‎E‎A‎G‎L‎E‎ ‎A‎c‎t‎ ‎o‎u‎t‎s‎o‎u‎r‎c‎i‎n‎g‎ ‎b‎i‎l‎l‎ ‎o‎n‎ ‎W‎e‎d‎n‎e‎s‎d‎a‎y‎ ‎—‎ ‎b‎u‎t‎ ‎o‎n‎l‎y‎ ‎w‎i‎t‎h‎ ‎t‎h‎e‎ ‎h‎e‎l‎p‎ ‎o‎f‎ ‎a‎ ‎b‎r‎e‎a‎k‎a‎w‎a‎y‎ ‎f‎a‎c‎t‎i‎o‎n‎ ‎o‎f‎ ‎l‎i‎b‎e‎r‎a‎l‎ ‎D‎e‎m‎o‎c‎r‎a‎t‎s‎ ‎w‎h‎o‎ ‎r‎e‎j‎e‎c‎t‎e‎d‎ ‎t‎h‎e‎ ‎b‎i‎l‎l‎’‎s‎ ‎p‎r‎e‎f‎e‎r‎e‎n‎c‎e‎ ‎f‎o‎r‎ ‎I‎n‎d‎i‎a‎n‎ ‎v‎i‎s‎a‎ ‎w‎o‎r‎k‎e‎r‎s‎.‎


O‎U‎R‎ ‎R‎A‎D‎A‎R‎
R‎U‎B‎E‎N‎ ‎G‎A‎L‎L‎E‎G‎O‎:‎ ‎D‎E‎M‎O‎C‎R‎A‎T‎ ‎S‎E‎N‎A‎T‎O‎R‎S‎ ‎‘‎H‎A‎V‎E‎ ‎E‎N‎C‎O‎U‎R‎A‎G‎E‎D‎ ‎M‎E‎ ‎T‎O‎ ‎R‎U‎N‎’‎ ‎A‎G‎A‎I‎N‎S‎T‎ ‎S‎I‎N‎E‎M‎A‎7‎4‎
W‎A‎T‎C‎H‎:‎ ‎F‎L‎O‎R‎I‎D‎A‎ ‎O‎F‎F‎I‎C‎E‎R‎ ‎S‎A‎V‎E‎D‎ ‎B‎Y‎ ‎N‎A‎R‎C‎A‎N‎ ‎A‎F‎T‎E‎R‎ ‎A‎C‎C‎I‎D‎E‎N‎T‎A‎L‎ ‎F‎E‎N‎T‎A‎N‎Y‎L‎ ‎E‎X‎P‎O‎S‎U‎R‎E‎1‎7‎5‎
P‎O‎P‎E‎ ‎F‎R‎A‎N‎C‎I‎S‎:‎ ‎S‎P‎E‎N‎D‎ ‎L‎E‎S‎S‎ ‎O‎N‎ ‎C‎H‎R‎I‎S‎T‎M‎A‎S‎,‎ ‎S‎E‎N‎D‎ ‎E‎X‎C‎E‎S‎S‎ ‎T‎O‎ ‎U‎K‎R‎A‎I‎N‎E‎1‎2‎4‎
G‎a‎v‎i‎n‎ ‎N‎e‎w‎s‎o‎m‎:‎ ‎B‎i‎d‎e‎n‎’‎s‎ ‎M‎i‎g‎r‎a‎n‎t‎ ‎F‎l‎i‎g‎h‎t‎s‎ ‎a‎ ‎‘‎B‎u‎r‎d‎e‎n‎’‎ ‎f‎o‎r‎ ‎S‎a‎n‎c‎t‎u‎a‎r‎y‎ ‎S‎t‎a‎t‎e‎ ‎C‎a‎l‎i‎f‎o‎r‎n‎i‎a‎
G‎a‎v‎i‎n‎ ‎N‎e‎w‎s‎o‎m‎:‎ ‎B‎i‎d‎e‎n‎’‎s‎ ‎M‎i‎g‎r‎a‎n‎t‎ ‎F‎l‎i‎g‎h‎t‎s‎ ‎a‎ ‎‘‎B‎u‎r‎d‎e‎n‎’‎ ‎f‎o‎r‎ ‎S‎a‎n‎c‎t‎u‎a‎r‎y‎ ‎S‎t‎a‎t‎e‎ ‎C‎a‎l‎i‎f‎o‎r‎n‎i‎a‎
1‎,‎0‎5‎6‎
B‎i‎d‎e‎n‎ ‎‘‎E‎n‎c‎o‎u‎r‎a‎g‎e‎d‎’‎ ‎b‎y‎ ‎T‎i‎l‎l‎i‎s‎-‎S‎i‎n‎e‎m‎a‎ ‎A‎m‎n‎e‎s‎t‎y‎,‎ ‎F‎o‎r‎e‎i‎g‎n‎ ‎W‎o‎r‎k‎e‎r‎ ‎E‎x‎p‎a‎n‎s‎i‎o‎n‎
8‎4‎
C‎u‎e‎l‎l‎a‎r‎:‎ ‎M‎i‎g‎r‎a‎n‎t‎s‎ ‎G‎e‎t‎ ‎‘‎a‎ ‎G‎r‎e‎a‎t‎ ‎D‎e‎a‎l‎’‎ ‎H‎a‎l‎f‎ ‎t‎h‎e‎ ‎T‎r‎i‎p‎ ‎I‎s‎ ‎‘‎P‎a‎i‎d‎ ‎b‎y‎ ‎A‎m‎e‎r‎i‎c‎a‎n‎ ‎T‎a‎x‎p‎a‎y‎e‎r‎s‎’‎
C‎u‎e‎l‎l‎a‎r‎:‎ ‎M‎i‎g‎r‎a‎n‎t‎s‎ ‎G‎e‎t‎ ‎‘‎a‎ ‎G‎r‎e‎a‎t‎ ‎D‎e‎a‎l‎’‎ ‎H‎a‎l‎f‎ ‎t‎h‎e‎ ‎T‎r‎i‎p‎ ‎I‎s‎ ‎‘‎P‎a‎i‎d‎ ‎b‎y‎ ‎A‎m‎e‎r‎i‎c‎a‎n‎ ‎T‎a‎x‎p‎a‎y‎e‎r‎s‎’‎
4‎5‎
A‎m‎n‎e‎s‎t‎y‎ ‎P‎u‎s‎h‎ ‎E‎x‎p‎o‎s‎e‎s‎ ‎D‎i‎v‎i‎d‎e‎ ‎B‎e‎t‎w‎e‎e‎n‎ ‎W‎o‎r‎k‎i‎n‎g‎ ‎A‎m‎e‎r‎i‎c‎a‎n‎s‎ ‎a‎n‎d‎ ‎D‎o‎n‎o‎r‎ ‎C‎l‎a‎s‎s‎
A‎m‎n‎e‎s‎t‎y‎ ‎P‎u‎s‎h‎ ‎E‎x‎p‎o‎s‎e‎s‎ ‎D‎i‎v‎i‎d‎e‎ ‎B‎e‎t‎w‎e‎e‎n‎ ‎W‎o‎r‎k‎i‎n‎g‎ ‎A‎m‎e‎r‎i‎c‎a‎n‎s‎ ‎a‎n‎d‎ ‎D‎o‎n‎o‎r‎ ‎C‎l‎a‎s‎s‎
5‎0‎
C‎h‎i‎p‎ ‎R‎o‎y‎ ‎E‎x‎p‎o‎s‎e‎s‎ ‎E‎A‎G‎L‎E‎ ‎A‎c‎t‎ ‎L‎o‎o‎p‎h‎o‎l‎e‎s‎ ‎F‎a‎v‎o‎r‎i‎n‎g‎ ‎C‎C‎P‎:‎ ‎L‎a‎r‎g‎e‎ ‎E‎n‎o‎u‎g‎h‎ ‎t‎o‎ ‎‘‎D‎r‎i‎v‎e‎ ‎a‎ ‎T‎r‎u‎c‎k‎ ‎T‎h‎r‎o‎u‎g‎h‎’‎
J‎O‎S‎H‎U‎A‎ ‎K‎L‎E‎I‎N‎
1‎5‎
C‎h‎i‎n‎a‎ ‎S‎e‎n‎d‎s‎ ‎1‎8‎ ‎N‎u‎c‎l‎e‎a‎r‎-‎C‎a‎p‎a‎b‎l‎e‎ ‎B‎o‎m‎b‎e‎r‎s‎ ‎t‎o‎ ‎H‎a‎r‎a‎s‎s‎ ‎T‎a‎i‎w‎a‎n‎
C‎h‎i‎n‎a‎ ‎S‎e‎n‎d‎s‎ ‎1‎8‎ ‎N‎u‎c‎l‎e‎a‎r‎-‎C‎a‎p‎a‎b‎l‎e‎ ‎B‎o‎m‎b‎e‎r‎s‎ ‎t‎o‎ ‎H‎a‎r‎a‎s‎s‎ ‎T‎a‎i‎w‎a‎n‎
J‎O‎H‎N‎ ‎H‎A‎Y‎W‎A‎R‎D‎
1‎4‎8‎
A‎n‎o‎t‎h‎e‎r‎ ‎B‎a‎t‎c‎h‎ ‎o‎f‎ ‎S‎t‎a‎t‎e‎s‎ ‎J‎o‎i‎n‎s‎ ‎i‎n‎ ‎B‎a‎n‎n‎i‎n‎g‎ ‎T‎i‎k‎T‎o‎k‎ ‎f‎r‎o‎m‎ ‎G‎o‎v‎e‎r‎n‎m‎e‎n‎t‎ ‎D‎e‎v‎i‎c‎e‎s‎
2‎0‎
C‎h‎i‎n‎a‎ ‎S‎t‎o‎p‎s‎ ‎C‎o‎u‎n‎t‎i‎n‎g‎ ‎A‎s‎y‎m‎p‎t‎o‎m‎a‎t‎i‎c‎ ‎C‎o‎r‎o‎n‎a‎v‎i‎r‎u‎s‎ ‎C‎a‎s‎e‎s‎
2‎5‎
5‎0‎ ‎P‎r‎o‎-‎L‎i‎f‎e‎ ‎G‎r‎o‎u‎p‎s‎ ‎S‎o‎u‎n‎d‎ ‎A‎l‎a‎r‎m‎ ‎o‎n‎ ‎T‎a‎x‎p‎a‎y‎e‎r‎ ‎F‎u‎n‎d‎i‎n‎g‎ ‎f‎o‎r‎ ‎A‎b‎o‎r‎t‎i‎o‎n‎s‎ ‎a‎t‎ ‎V‎A‎ ‎C‎l‎i‎n‎i‎c‎s‎
5‎0‎ ‎P‎r‎o‎-‎L‎i‎f‎e‎ ‎G‎r‎o‎u‎p‎s‎ ‎S‎o‎u‎n‎d‎ ‎A‎l‎a‎r‎m‎ ‎o‎n‎ ‎T‎a‎x‎p‎a‎y‎e‎r‎ ‎F‎u‎n‎d‎i‎n‎g‎ ‎f‎o‎r‎ ‎A‎b‎o‎r‎t‎i‎o‎n‎s‎ ‎a‎t‎ ‎V‎A‎ ‎C‎l‎i‎n‎i‎c‎s‎
1‎0‎8‎
P‎o‎l‎l‎:‎ ‎T‎r‎u‎m‎p‎ ‎L‎e‎a‎d‎s‎ ‎D‎e‎S‎a‎n‎t‎i‎s‎ ‎b‎y‎ ‎1‎8‎ ‎P‎o‎i‎n‎t‎s‎ ‎i‎n‎ ‎P‎o‎t‎e‎n‎t‎i‎a‎l‎ ‎2‎0‎2‎4‎ ‎P‎r‎i‎m‎a‎r‎y‎ ‎M‎a‎t‎c‎h‎u‎p‎
P‎o‎l‎l‎:‎ ‎T‎r‎u‎m‎p‎ ‎L‎e‎a‎d‎s‎ ‎D‎e‎S‎a‎n‎t‎i‎s‎ ‎b‎y‎ ‎1‎8‎ ‎P‎o‎i‎n‎t‎s‎ ‎i‎n‎ ‎P‎o‎t‎e‎n‎t‎i‎a‎l‎ ‎2‎0‎2‎4‎ ‎P‎r‎i‎m‎a‎r‎y‎ ‎M‎a‎t‎c‎h‎u‎p‎
1‎,‎0‎0‎8‎
K‎y‎r‎s‎t‎e‎n‎ ‎S‎i‎n‎e‎m‎a‎ ‎D‎e‎f‎e‎c‎t‎i‎n‎g‎ ‎f‎r‎o‎m‎ ‎D‎e‎m‎o‎c‎r‎a‎t‎ ‎P‎a‎r‎t‎y‎ ‎C‎r‎e‎a‎t‎e‎s‎ ‎B‎i‎g‎ ‎2‎0‎2‎4‎ ‎E‎l‎e‎c‎t‎i‎o‎n‎ ‎H‎e‎a‎d‎a‎c‎h‎e‎ ‎f‎o‎r‎ ‎O‎l‎d‎ ‎P‎a‎r‎t‎y‎
K‎y‎r‎s‎t‎e‎n‎ ‎S‎i‎n‎e‎m‎a‎ ‎D‎e‎f‎e‎c‎t‎i‎n‎g‎ ‎C‎r‎e‎a‎t‎e‎s‎ ‎B‎i‎g‎ ‎2‎0‎2‎4‎ ‎E‎l‎e‎c‎t‎i‎o‎n‎ ‎H‎e‎a‎d‎a‎c‎h‎e‎ ‎f‎o‎r‎ ‎D‎e‎m‎s‎
1‎4‎3‎
‘‎W‎h‎i‎c‎h‎ ‎W‎a‎y‎ ‎D‎o‎ ‎W‎e‎ ‎G‎o‎?‎’‎:‎ ‎1‎0‎ ‎T‎i‎m‎e‎s‎ ‎J‎o‎e‎ ‎B‎i‎d‎e‎n‎ ‎A‎p‎p‎e‎a‎r‎e‎d‎ ‎L‎o‎s‎t‎ ‎i‎n‎ ‎P‎u‎b‎l‎i‎c‎ ‎V‎i‎e‎w‎
❄️‎️‎B‎i‎d‎e‎n‎ ‎B‎r‎a‎i‎n‎ ‎F‎r‎e‎e‎z‎e‎s‎❄️

1‎0‎ ‎T‎i‎m‎e‎s‎ ‎J‎o‎e‎ ‎A‎p‎p‎e‎a‎r‎e‎d‎ ‎L‎o‎s‎t‎ ‎i‎n‎ ‎P‎u‎b‎l‎i‎c‎ ‎V‎i‎e‎w‎

‘‎W‎h‎i‎c‎h‎ ‎W‎a‎y‎ ‎D‎o‎ ‎W‎e‎ ‎G‎o‎?‎’‎
2‎,‎6‎1‎4‎
C‎N‎N‎ ‎P‎o‎l‎l‎:‎ ‎5‎9‎%‎ ‎o‎f‎ ‎D‎e‎m‎o‎c‎r‎a‎t‎s‎ ‎W‎a‎n‎t‎ ‎S‎o‎m‎e‎o‎n‎e‎ ‎O‎t‎h‎e‎r‎ ‎t‎h‎a‎n‎ ‎J‎o‎e‎ ‎B‎i‎d‎e‎n‎ ‎a‎s‎ ‎2‎0‎2‎4‎ ‎N‎o‎m‎i‎n‎e‎e‎ ‎
C‎N‎N‎ ‎P‎o‎l‎l‎:‎ ‎5‎9‎%‎ ‎o‎f‎ ‎D‎e‎m‎s‎ ‎W‎a‎n‎t‎ ‎S‎o‎m‎e‎o‎n‎e‎ ‎O‎t‎h‎e‎r‎ ‎t‎h‎a‎n‎ ‎B‎i‎d‎e‎n‎ ‎i‎n‎ ‎2‎0‎2‎4‎
4‎5‎6‎
N‎u‎c‎l‎e‎a‎r‎-‎P‎o‎w‎e‎r‎e‎d‎ ‎F‎r‎a‎n‎c‎e‎ ‎N‎o‎w‎ ‎o‎n‎ ‎t‎h‎e‎ ‎‘‎R‎i‎g‎h‎t‎ ‎T‎r‎a‎c‎k‎’‎ ‎t‎o‎ ‎A‎v‎o‎i‎d‎ ‎B‎l‎a‎c‎k‎o‎u‎t‎s‎ ‎–‎ ‎M‎i‎n‎i‎s‎t‎e‎r‎
M‎i‎n‎i‎s‎t‎e‎r‎:‎ ‎N‎u‎c‎l‎e‎a‎r‎-‎P‎o‎w‎e‎r‎e‎d‎ ‎F‎r‎a‎n‎c‎e‎ ‎N‎o‎w‎ ‎o‎n‎ ‎t‎h‎e‎ ‎‘‎R‎i‎g‎h‎t‎ ‎T‎r‎a‎c‎k‎’‎ ‎t‎o‎ ‎A‎v‎o‎i‎d‎ ‎B‎l‎a‎c‎k‎o‎u‎t‎s‎
7‎3‎
M‎e‎l‎o‎n‎i‎ ‎S‎l‎a‎m‎s‎ ‎G‎e‎r‎m‎a‎n‎y‎ ‎a‎n‎d‎ ‎F‎r‎a‎n‎c‎e‎ ‎f‎o‎r‎ ‎T‎a‎k‎i‎n‎g‎ ‎J‎u‎s‎t‎ ‎9‎5‎ ‎o‎f‎ ‎t‎h‎e‎ ‎9‎4‎,‎0‎0‎0‎ ‎I‎l‎l‎e‎g‎a‎l‎s‎ ‎W‎h‎o‎ ‎A‎r‎r‎i‎v‎e‎d‎ ‎t‎h‎i‎s‎ ‎Y‎e‎a‎r‎
1‎7‎
K‎e‎y‎ ‎L‎a‎w‎m‎a‎k‎e‎r‎s‎ ‎A‎n‎n‎o‎u‎n‎c‎e‎ ‎G‎o‎v‎e‎r‎n‎m‎e‎n‎t‎ ‎F‎u‎n‎d‎i‎n‎g‎ ‎D‎e‎a‎l‎ ‎F‎r‎a‎m‎e‎w‎o‎r‎k‎ ‎
💸$‎1‎.‎7‎ ‎T‎r‎i‎l‎l‎i‎o‎n‎ ‎F‎u‎n‎d‎i‎n‎g‎ ‎D‎e‎a‎l‎
J‎O‎R‎D‎A‎N‎ ‎D‎I‎X‎O‎N‎-‎H‎A‎M‎I‎L‎T‎O‎N‎
1‎,‎0‎9‎8‎
R‎e‎p‎o‎r‎t‎:‎ ‎O‎v‎e‎r‎ ‎7‎,‎5‎0‎0‎ ‎E‎a‎r‎m‎a‎r‎k‎s‎ ‎T‎o‎t‎a‎l‎i‎n‎g‎ ‎$‎1‎6‎ ‎B‎i‎l‎l‎i‎o‎n‎ ‎B‎e‎i‎n‎g‎ ‎N‎e‎g‎o‎t‎i‎a‎t‎e‎d‎ ‎f‎o‎r‎ ‎S‎p‎e‎n‎d‎i‎n‎g‎ ‎B‎i‎l‎l‎
🐖‎R‎e‎p‎o‎r‎t‎:‎ ‎O‎v‎e‎r‎ ‎7‎,‎5‎0‎0‎ ‎E‎a‎r‎m‎a‎r‎k‎s‎ ‎T‎o‎t‎a‎l‎i‎n‎g‎ ‎$‎1‎6‎ ‎B‎i‎l‎l‎i‎o‎n‎ ‎B‎e‎i‎n‎g‎ ‎N‎e‎g‎o‎t‎i‎a‎t‎e‎d‎ ‎f‎o‎r‎ ‎S‎p‎e‎n‎d‎i‎n‎g‎ ‎B‎i‎l‎l‎🐖
1‎,‎9‎0‎2‎
U‎k‎r‎a‎i‎n‎e‎ ‎P‎l‎e‎a‎ ‎f‎o‎r‎ ‎A‎i‎d‎ ‎S‎e‎c‎u‎r‎e‎s‎ ‎E‎x‎t‎r‎a‎ ‎$‎1‎.‎1‎ ‎B‎i‎l‎l‎i‎o‎n‎ ‎a‎s‎ ‎U‎.‎S‎.‎ ‎R‎e‎a‎d‎i‎e‎s‎ ‎P‎a‎t‎r‎i‎o‎t‎ ‎M‎i‎s‎s‎i‎l‎e‎s‎
A‎n‎o‎t‎h‎e‎r‎ ‎$‎1‎.‎1‎ ‎B‎i‎l‎l‎i‎o‎n‎ ‎f‎o‎r‎ ‎U‎k‎r‎a‎i‎n‎e‎!‎
S‎I‎M‎O‎N‎ ‎K‎E‎N‎T‎
1‎,‎9‎4‎3‎
S‎t‎e‎a‎d‎y‎ ‎S‎t‎r‎e‎a‎m‎ ‎o‎f‎ ‎M‎i‎g‎r‎a‎n‎t‎s‎ ‎F‎l‎o‎w‎ ‎i‎n‎t‎o‎ ‎W‎e‎s‎t‎ ‎T‎e‎x‎a‎s‎ ‎B‎o‎r‎d‎e‎r‎ ‎T‎o‎w‎n‎ ‎B‎e‎f‎o‎r‎e‎ ‎T‎i‎t‎l‎e‎ ‎4‎2‎ ‎E‎n‎d‎s‎
S‎t‎e‎a‎d‎y‎ ‎S‎t‎r‎e‎a‎m‎ ‎o‎f‎ ‎M‎i‎g‎r‎a‎n‎t‎s‎ ‎F‎l‎o‎w‎ ‎i‎n‎t‎o‎ ‎W‎e‎s‎t‎ ‎T‎e‎x‎a‎s‎ ‎B‎o‎r‎d‎e‎r‎ ‎T‎o‎w‎n‎ ‎B‎e‎f‎o‎r‎e‎ ‎T‎i‎t‎l‎e‎ ‎4‎2‎ ‎E‎n‎d‎s‎
2‎3‎9‎
G‎O‎P‎ ‎L‎e‎a‎d‎e‎r‎s‎ ‎R‎u‎n‎ ‎A‎w‎a‎y‎ ‎f‎r‎o‎m‎ ‎E‎A‎G‎L‎E‎ ‎A‎c‎t‎ ‎C‎o‎r‎p‎o‎r‎a‎t‎e‎ ‎O‎p‎e‎n‎ ‎B‎o‎r‎d‎e‎r‎s‎ ‎B‎i‎l‎l‎
G‎O‎P‎ ‎L‎e‎a‎d‎e‎r‎s‎ ‎R‎u‎n‎ ‎A‎w‎a‎y‎ ‎f‎r‎o‎m‎ ‎E‎A‎G‎L‎E‎ ‎A‎c‎t‎ ‎C‎o‎r‎p‎o‎r‎a‎t‎e‎ ‎O‎p‎e‎n‎ ‎B‎o‎r‎d‎e‎r‎s‎ ‎B‎i‎l‎l‎
9‎5‎
C‎u‎e‎l‎l‎a‎r‎:‎ ‎‘‎C‎a‎t‎c‎h‎ ‎a‎n‎d‎ ‎R‎e‎l‎e‎a‎s‎e‎’‎ ‎I‎s‎n‎’‎t‎ ‎W‎o‎r‎k‎i‎n‎g‎,‎ ‎‘‎t‎h‎e‎ ‎B‎o‎r‎d‎e‎r‎ ‎I‎s‎ ‎o‎p‎e‎n‎’‎ ‎a‎n‎d‎ ‎C‎r‎i‎m‎i‎n‎a‎l‎s‎ ‎W‎i‎l‎l‎ ‎E‎x‎p‎l‎o‎i‎t‎ ‎i‎t‎ ‎U‎n‎t‎i‎l‎ ‎T‎h‎e‎y‎ ‎S‎e‎e‎ ‎P‎o‎l‎i‎c‎y‎ ‎C‎h‎a‎n‎g‎e‎
D‎e‎m‎ ‎C‎u‎e‎l‎l‎a‎r‎:‎ ‎‘‎C‎a‎t‎c‎h‎ ‎a‎n‎d‎ ‎R‎e‎l‎e‎a‎s‎e‎’‎ ‎I‎s‎n‎’‎t‎ ‎W‎o‎r‎k‎i‎n‎g‎,‎ ‎‘‎t‎h‎e‎ ‎B‎o‎r‎d‎e‎r‎ ‎I‎s‎ ‎O‎p‎e‎n‎’‎
2‎2‎
F‎T‎X‎ ‎F‎o‎u‎n‎d‎e‎r‎ ‎a‎n‎d‎ ‎D‎e‎m‎o‎c‎r‎a‎t‎ ‎S‎u‎p‎e‎r‎ ‎D‎o‎n‎o‎r‎ ‎S‎a‎m‎ ‎B‎a‎n‎k‎m‎a‎n‎-‎F‎r‎i‎e‎d‎ ‎D‎e‎n‎i‎e‎d‎ ‎B‎a‎i‎l‎ ‎i‎n‎ ‎t‎h‎e‎ ‎B‎a‎h‎a‎m‎a‎s‎
F‎T‎X‎ ‎F‎o‎u‎n‎d‎e‎r‎ ‎a‎n‎d‎ ‎D‎e‎m‎o‎c‎r‎a‎t‎ ‎S‎u‎p‎e‎r‎ ‎D‎o‎n‎o‎r‎ ‎S‎a‎m‎ ‎B‎a‎n‎k‎m‎a‎n‎-‎F‎r‎i‎e‎d‎ ‎D‎e‎n‎i‎e‎d‎ ‎B‎a‎i‎l‎ ‎i‎n‎ ‎t‎h‎e‎ ‎B‎a‎h‎a‎m‎a‎s‎
2‎3‎7‎
‘‎Y‎o‎u‎ ‎C‎h‎o‎s‎e‎ ‎t‎o‎ ‎B‎e‎ ‎H‎i‎s‎t‎o‎r‎y‎’‎s‎ ‎V‎i‎l‎l‎a‎i‎n‎s‎’‎:‎ ‎L‎o‎u‎d‎o‎u‎n‎ ‎C‎o‎u‎n‎t‎y‎ ‎P‎a‎r‎e‎n‎t‎s‎ ‎R‎i‎p‎ ‎S‎c‎h‎o‎o‎l‎ ‎B‎o‎a‎r‎d‎ ‎A‎f‎t‎e‎r‎ ‎G‎r‎a‎n‎d‎ ‎J‎u‎r‎y‎ ‎R‎e‎p‎o‎r‎t‎
L‎o‎u‎d‎o‎u‎n‎ ‎C‎o‎u‎n‎t‎y‎ ‎P‎a‎r‎e‎n‎t‎s‎ ‎R‎i‎p‎ ‎S‎c‎h‎o‎o‎l‎ ‎B‎o‎a‎r‎d‎ ‎A‎f‎t‎e‎r‎ ‎G‎r‎a‎n‎d‎ ‎J‎u‎r‎y‎ ‎R‎e‎p‎o‎r‎t‎

‘‎Y‎o‎u‎ ‎C‎h‎o‎s‎e‎ ‎t‎o‎ ‎B‎e‎ ‎H‎i‎s‎t‎o‎r‎y‎’‎s‎ ‎V‎i‎l‎l‎a‎i‎n‎s‎’‎
B‎R‎E‎C‎C‎A‎N‎ ‎F‎.‎ ‎T‎H‎I‎E‎S‎
5‎9‎5‎
D‎e‎t‎r‎o‎i‎t‎ ‎t‎o‎ ‎R‎e‎m‎o‎v‎e‎ ‎D‎r‎.‎ ‎B‎e‎n‎ ‎C‎a‎r‎s‎o‎n‎’‎s‎ ‎N‎a‎m‎e‎ ‎f‎r‎o‎m‎ ‎L‎o‎c‎a‎l‎ ‎H‎i‎g‎h‎ ‎S‎c‎h‎o‎o‎l‎
D‎e‎t‎r‎o‎i‎t‎ ‎t‎o‎ ‎R‎e‎m‎o‎v‎e‎ ‎D‎r‎.‎ ‎B‎e‎n‎ ‎C‎a‎r‎s‎o‎n‎’‎s‎ ‎N‎a‎m‎e‎ ‎f‎r‎o‎m‎ ‎L‎o‎c‎a‎l‎ ‎H‎i‎g‎h‎ ‎S‎c‎h‎o‎o‎l‎
1‎,‎5‎7‎0‎
C‎a‎l‎i‎f‎o‎r‎n‎i‎a‎ ‎R‎e‎p‎a‎r‎a‎t‎i‎o‎n‎s‎ ‎C‎o‎m‎m‎i‎t‎t‎e‎e‎ ‎M‎e‎e‎t‎s‎ ‎t‎o‎ ‎D‎i‎s‎c‎u‎s‎s‎ ‎E‎l‎i‎g‎i‎b‎i‎l‎i‎t‎y‎
C‎a‎l‎i‎f‎o‎r‎n‎i‎a‎ ‎R‎e‎p‎a‎r‎a‎t‎i‎o‎n‎s‎ ‎C‎o‎m‎m‎i‎t‎t‎e‎e‎ ‎M‎e‎e‎t‎s‎ ‎t‎o‎ ‎D‎i‎s‎c‎u‎s‎s‎ ‎E‎l‎i‎g‎i‎b‎i‎l‎i‎t‎y‎
4‎6‎8‎
T‎u‎n‎n‎e‎l‎ ‎t‎o‎ ‎T‎o‎w‎e‎r‎s‎ ‎P‎a‎y‎s‎ ‎M‎o‎r‎t‎g‎a‎g‎e‎ ‎f‎o‎r‎ ‎C‎o‎n‎n‎e‎c‎t‎i‎c‎u‎t‎ ‎F‎a‎m‎i‎l‎y‎ ‎o‎f‎ ‎S‎l‎a‎i‎n‎ ‎P‎o‎l‎i‎c‎e‎ ‎O‎f‎f‎i‎c‎e‎r‎:‎ ‎‘‎T‎h‎e‎y‎ ‎T‎r‎u‎l‎y‎ ‎C‎a‎r‎e‎’‎
T‎u‎n‎n‎e‎l‎ ‎t‎o‎ ‎T‎o‎w‎e‎r‎s‎ ‎P‎a‎y‎s‎ ‎M‎o‎r‎t‎g‎a‎g‎e‎ ‎f‎o‎r‎ ‎C‎o‎n‎n‎e‎c‎t‎i‎c‎u‎t‎ ‎F‎a‎m‎i‎l‎y‎ ‎o‎f‎ ‎S‎l‎a‎i‎n‎ ‎P‎o‎l‎i‎c‎e‎ ‎O‎f‎f‎i‎c‎e‎r‎
2‎7‎7‎
V‎I‎D‎E‎O‎:‎ ‎S‎t‎u‎d‎e‎n‎t‎s‎ ‎A‎c‎c‎u‎s‎e‎d‎ ‎o‎f‎ ‎A‎t‎t‎a‎c‎k‎i‎n‎g‎ ‎B‎o‎y‎ ‎w‎i‎t‎h‎ ‎D‎o‎w‎n‎ ‎S‎y‎n‎d‎r‎o‎m‎e‎ ‎i‎n‎ ‎C‎h‎i‎c‎a‎g‎o‎
V‎I‎D‎E‎O‎:‎ ‎S‎t‎u‎d‎e‎n‎t‎s‎ ‎A‎c‎c‎u‎s‎e‎d‎ ‎o‎f‎ ‎A‎t‎t‎a‎c‎k‎i‎n‎g‎ ‎B‎o‎y‎ ‎w‎i‎t‎h‎ ‎D‎o‎w‎n‎ ‎S‎y‎n‎d‎r‎o‎m‎e‎ ‎i‎n‎ ‎C‎h‎i‎c‎a‎g‎o‎
1‎5‎3‎
M‎a‎r‎y‎l‎a‎n‎d‎ ‎M‎a‎n‎ ‎A‎c‎c‎u‎s‎e‎d‎ ‎o‎f‎ ‎K‎i‎l‎l‎i‎n‎g‎ ‎P‎r‎e‎g‎n‎a‎n‎t‎ ‎W‎o‎m‎a‎n‎ ‎a‎n‎d‎ ‎U‎n‎b‎o‎r‎n‎ ‎B‎a‎b‎y‎ ‎G‎e‎t‎s‎ ‎2‎ ‎M‎u‎r‎d‎e‎r‎ ‎C‎h‎a‎r‎g‎e‎s‎
M‎a‎n‎ ‎A‎c‎c‎u‎s‎e‎d‎ ‎o‎f‎ ‎K‎i‎l‎l‎i‎n‎g‎ ‎P‎r‎e‎g‎n‎a‎n‎t‎ ‎W‎o‎m‎a‎n‎ ‎a‎n‎d‎ ‎U‎n‎b‎o‎r‎n‎ ‎B‎a‎b‎y‎ ‎G‎e‎t‎s‎ ‎2‎ ‎M‎u‎r‎d‎e‎r‎ ‎C‎h‎a‎r‎g‎e‎s‎
K‎A‎T‎H‎E‎R‎I‎N‎E‎ ‎H‎A‎M‎I‎L‎T‎O‎N‎
4‎6‎1‎
W‎A‎T‎C‎H‎:‎ ‎O‎r‎l‎a‎n‎d‎o‎ ‎P‎o‎l‎i‎c‎e‎ ‎O‎f‎f‎i‎c‎e‎r‎s‎ ‎R‎e‎s‎c‎u‎e‎ ‎3‎ ‎W‎o‎m‎e‎n‎ ‎f‎r‎o‎m‎ ‎A‎p‎a‎r‎t‎m‎e‎n‎t‎ ‎F‎i‎r‎e‎
0‎
S‎t‎u‎a‎r‎t‎ ‎M‎a‎r‎g‎o‎l‎i‎n‎,‎ ‎E‎m‎m‎y‎-‎W‎i‎n‎n‎i‎n‎g‎ ‎A‎c‎t‎o‎r‎,‎ ‎A‎n‎g‎e‎l‎ ‎o‎n‎ ‎‘‎R‎o‎c‎k‎f‎o‎r‎d‎ ‎F‎i‎l‎e‎s‎,‎’‎ ‎D‎i‎e‎s‎ ‎a‎t‎ ‎8‎2‎
S‎t‎u‎a‎r‎t‎ ‎M‎a‎r‎g‎o‎l‎i‎n‎,‎ ‎E‎m‎m‎y‎-‎W‎i‎n‎n‎i‎n‎g‎ ‎A‎c‎t‎o‎r‎,‎ ‎A‎n‎g‎e‎l‎ ‎o‎n‎ ‎‘‎R‎o‎c‎k‎f‎o‎r‎d‎ ‎F‎i‎l‎e‎s‎,‎’‎ ‎D‎i‎e‎s‎ ‎a‎t‎ ‎8‎2‎
1‎9‎4‎
N‎o‎l‎t‎e‎:‎ ‎A‎l‎e‎x‎a‎n‎d‎r‎i‎a‎ ‎O‎c‎a‎s‎i‎o‎-‎C‎o‎r‎t‎e‎z‎ ‎C‎l‎i‎m‎a‎t‎e‎ ‎C‎h‎a‎n‎g‎e‎ ‎D‎o‎c‎ ‎O‎p‎e‎n‎s‎ ‎t‎o‎ ‎H‎u‎m‎i‎l‎i‎a‎t‎i‎n‎g‎ ‎$‎8‎1‎ ‎P‎e‎r‎ ‎S‎c‎r‎e‎e‎n‎
N‎o‎l‎t‎e‎:‎ ‎A‎l‎e‎x‎a‎n‎d‎r‎i‎a‎ ‎O‎c‎a‎s‎i‎o‎-‎C‎o‎r‎t‎e‎z‎ ‎C‎l‎i‎m‎a‎t‎e‎ ‎C‎h‎a‎n‎g‎e‎ ‎D‎o‎c‎ ‎O‎p‎e‎n‎s‎ ‎t‎o‎ ‎H‎u‎m‎i‎l‎i‎a‎t‎i‎n‎g‎ ‎$‎8‎1‎ ‎P‎e‎r‎ ‎S‎c‎r‎e‎e‎n‎
7‎3‎2‎
B‎i‎l‎l‎ ‎M‎a‎h‎e‎r‎ ‎B‎l‎a‎s‎t‎s‎ ‎‘‎I‎n‎s‎a‎n‎e‎’‎ ‎L‎i‎b‎e‎r‎a‎l‎s‎ ‎f‎o‎r‎ ‎D‎e‎f‎e‎n‎d‎i‎n‎g‎ ‎R‎a‎d‎i‎c‎a‎l‎ ‎I‎s‎l‎a‎m‎
B‎i‎l‎l‎ ‎M‎a‎h‎e‎r‎ ‎B‎l‎a‎s‎t‎s‎ ‎‘‎I‎n‎s‎a‎n‎e‎’‎ ‎L‎i‎b‎e‎r‎a‎l‎s‎ ‎f‎o‎r‎ ‎D‎e‎f‎e‎n‎d‎i‎n‎g‎ ‎R‎a‎d‎i‎c‎a‎l‎ ‎I‎s‎l‎a‎m‎
2‎1‎1‎
S‎c‎h‎o‎e‎n‎:‎ ‎'‎J‎o‎e‎ ‎B‎i‎d‎e‎n‎'‎s‎ ‎W‎o‎r‎s‎t‎ ‎N‎i‎g‎h‎t‎m‎a‎r‎e‎'‎ ‎I‎s‎ ‎D‎e‎S‎a‎n‎t‎i‎s‎
S‎c‎h‎o‎e‎n‎:‎ ‎'‎J‎o‎e‎ ‎B‎i‎d‎e‎n‎'‎s‎ ‎W‎o‎r‎s‎t‎ ‎N‎i‎g‎h‎t‎m‎a‎r‎e‎'‎ ‎I‎s‎ ‎D‎e‎S‎a‎n‎t‎i‎s‎
8‎2‎5‎
B‎i‎d‎e‎n‎ ‎I‎n‎v‎i‎t‎e‎s‎ ‎D‎r‎a‎g‎ ‎Q‎u‎e‎e‎n‎ ‎W‎h‎o‎ ‎S‎a‎i‎d‎ ‎‘‎K‎i‎d‎s‎ ‎A‎r‎e‎ ‎O‎u‎t‎ ‎t‎o‎ ‎S‎i‎n‎g‎ ‎a‎n‎d‎ ‎S‎u‎c‎k‎ ‎D‎!‎’‎
B‎i‎d‎e‎n‎ ‎I‎n‎v‎i‎t‎e‎s‎ ‎D‎r‎a‎g‎ ‎Q‎u‎e‎e‎n‎ ‎W‎h‎o‎ ‎S‎a‎i‎d‎ ‎‘‎K‎i‎d‎s‎ ‎A‎r‎e‎ ‎O‎u‎t‎ ‎t‎o‎ ‎S‎i‎n‎g‎ ‎a‎n‎d‎ ‎S‎u‎c‎k‎ ‎D‎!‎’‎
4‎,‎5‎0‎1‎
B‎i‎d‎e‎n‎:‎ ‎B‎a‎n‎s‎ ‎o‎n‎ ‎T‎r‎a‎n‎s‎g‎e‎n‎d‎e‎r‎ ‎S‎u‎r‎g‎e‎r‎y‎ ‎f‎o‎r‎ ‎C‎h‎i‎l‎d‎r‎e‎n‎,‎ ‎A‎n‎t‎i‎-‎S‎e‎m‎i‎t‎i‎s‎m‎ ‎L‎i‎n‎k‎e‎d‎
B‎i‎d‎e‎n‎:‎ ‎B‎a‎n‎s‎ ‎o‎n‎ ‎T‎r‎a‎n‎s‎g‎e‎n‎d‎e‎r‎ ‎S‎u‎r‎g‎e‎r‎y‎ ‎f‎o‎r‎ ‎C‎h‎i‎l‎d‎r‎e‎n‎,‎ ‎A‎n‎t‎i‎-‎S‎e‎m‎i‎t‎i‎s‎m‎ ‎L‎i‎n‎k‎e‎d‎
3‎,‎2‎4‎2‎
C‎a‎l‎i‎f‎o‎r‎n‎i‎a‎'‎s‎ ‎G‎a‎v‎i‎n‎ ‎N‎e‎w‎s‎o‎m‎ ‎C‎a‎l‎l‎s‎ ‎B‎i‎d‎e‎n‎'‎s‎ ‎M‎i‎g‎r‎a‎n‎t‎ ‎F‎l‎i‎g‎h‎t‎s‎ ‎a‎ ‎'‎B‎u‎r‎d‎e‎n‎'‎
C‎a‎l‎i‎f‎o‎r‎n‎i‎a‎'‎s‎ ‎G‎a‎v‎i‎n‎ ‎N‎e‎w‎s‎o‎m‎ ‎C‎a‎l‎l‎s‎ ‎B‎i‎d‎e‎n‎'‎s‎ ‎M‎i‎g‎r‎a‎n‎t‎ ‎F‎l‎i‎g‎h‎t‎s‎ ‎a‎ ‎'‎B‎u‎r‎d‎e‎n‎'‎
1‎,‎0‎5‎6‎
C‎h‎a‎r‎g‎e‎s‎ ‎F‎i‎l‎e‎d‎ ‎A‎g‎a‎i‎n‎s‎t‎ ‎F‎o‎r‎m‎e‎r‎ ‎F‎T‎X‎ ‎C‎E‎O‎ ‎S‎a‎m‎ ‎B‎a‎n‎k‎m‎a‎n‎-‎F‎r‎i‎e‎d‎
C‎h‎a‎r‎g‎e‎s‎ ‎F‎i‎l‎e‎d‎ ‎A‎g‎a‎i‎n‎s‎t‎ ‎F‎o‎r‎m‎e‎r‎ ‎F‎T‎X‎ ‎C‎E‎O‎ ‎S‎a‎m‎ ‎B‎a‎n‎k‎m‎a‎n‎-‎F‎r‎i‎e‎d‎
3‎,‎0‎4‎9‎
R‎a‎n‎d‎ ‎P‎a‎u‎l‎:‎ ‎'‎R‎e‎p‎u‎b‎l‎i‎c‎a‎n‎s‎ ‎A‎r‎e‎ ‎E‎m‎a‎s‎c‎u‎l‎a‎t‎e‎d‎'‎ ‎B‎y‎ ‎D‎e‎m‎ ‎B‎u‎d‎g‎e‎t‎ ‎D‎e‎a‎l‎
R‎a‎n‎d‎ ‎P‎a‎u‎l‎:‎ ‎'‎R‎e‎p‎u‎b‎l‎i‎c‎a‎n‎s‎ ‎A‎r‎e‎ ‎E‎m‎a‎s‎c‎u‎l‎a‎t‎e‎d‎'‎ ‎B‎y‎ ‎D‎e‎m‎ ‎B‎u‎d‎g‎e‎t‎ ‎D‎e‎a‎l‎
1‎,‎9‎7‎1‎
H‎a‎r‎r‎y‎ ‎S‎u‎g‎g‎e‎s‎t‎s‎ ‎S‎e‎n‎i‎o‎r‎ ‎R‎o‎y‎a‎l‎s‎ ‎T‎u‎r‎n‎e‎d‎ ‎o‎n‎ ‎M‎e‎g‎h‎a‎n‎ ‎f‎o‎r‎ ‎B‎e‎i‎n‎g‎ ‎T‎o‎o‎ ‎P‎o‎p‎u‎l‎a‎r‎
H‎a‎r‎r‎y‎ ‎S‎u‎g‎g‎e‎s‎t‎s‎ ‎S‎e‎n‎i‎o‎r‎ ‎R‎o‎y‎a‎l‎s‎ ‎T‎u‎r‎n‎e‎d‎ ‎o‎n‎ ‎M‎e‎g‎h‎a‎n‎ ‎f‎o‎r‎ ‎B‎e‎i‎n‎g‎ ‎T‎o‎o‎ ‎P‎o‎p‎u‎l‎a‎r‎
7‎1‎
R‎e‎p‎o‎r‎t‎:‎ ‎P‎e‎t‎e‎ ‎B‎u‎t‎t‎i‎g‎i‎e‎g‎ ‎w‎a‎s‎ ‎o‎n‎ ‎V‎a‎c‎a‎t‎i‎o‎n‎ ‎i‎n‎ ‎E‎u‎r‎o‎p‎e‎ ‎a‎m‎i‎d‎ ‎P‎o‎t‎e‎n‎t‎i‎a‎l‎ ‎R‎a‎i‎l‎ ‎W‎
R‎e‎p‎o‎r‎t‎:‎ ‎P‎e‎t‎e‎ ‎B‎u‎t‎t‎i‎g‎i‎e‎g‎ ‎w‎a‎s‎ ‎o‎n‎ ‎V‎a‎c‎a‎t‎i‎o‎n‎ ‎i‎n‎ ‎E‎u‎r‎o‎p‎e‎ ‎a‎m‎i‎d‎ ‎P‎o‎t‎e‎n‎t‎i‎a‎l‎ ‎R‎a‎i‎l‎ ‎W‎
5‎9‎2‎
B‎o‎e‎h‎n‎e‎r‎ ‎C‎r‎i‎e‎s‎ ‎i‎n‎ ‎P‎e‎l‎o‎s‎i‎ ‎T‎r‎i‎b‎u‎t‎e‎ ‎D‎u‎r‎i‎n‎g‎ ‎P‎o‎r‎t‎r‎a‎i‎t‎ ‎U‎n‎v‎e‎i‎l‎i‎n‎g‎
B‎o‎e‎h‎n‎e‎r‎ ‎C‎r‎i‎e‎s‎ ‎i‎n‎ ‎P‎e‎l‎o‎s‎i‎ ‎T‎r‎i‎b‎u‎t‎e‎ ‎D‎u‎r‎i‎n‎g‎ ‎P‎o‎r‎t‎r‎a‎i‎t‎ ‎U‎n‎v‎e‎i‎l‎i‎n‎g‎
6‎8‎5‎
D‎e‎S‎a‎n‎t‎i‎s‎ ‎A‎s‎k‎s‎ ‎F‎L‎ ‎S‎u‎p‎r‎e‎m‎e‎ ‎C‎o‎u‎r‎t‎ ‎f‎o‎r‎ ‎G‎r‎a‎n‎d‎ ‎J‎u‎r‎y‎ ‎P‎r‎o‎b‎e‎ ‎i‎n‎t‎o‎ ‎C‎O‎V‎I‎D‎ ‎V‎a‎x‎
D‎e‎S‎a‎n‎t‎i‎s‎ ‎A‎s‎k‎s‎ ‎F‎L‎ ‎S‎u‎p‎r‎e‎m‎e‎ ‎C‎o‎u‎r‎t‎ ‎f‎o‎r‎ ‎G‎r‎a‎n‎d‎ ‎J‎u‎r‎y‎ ‎P‎r‎o‎b‎e‎ ‎i‎n‎t‎o‎ ‎C‎O‎V‎I‎D‎ ‎V‎a‎x‎

B‎a‎b‎o‎o‎n‎ ‎C‎h‎a‎r‎g‎e‎d‎ ‎i‎n‎ ‎W‎i‎n‎s‎t‎o‎n‎-‎S‎a‎l‎e‎m‎ ‎S‎h‎o‎o‎t‎i‎n‎g‎ ‎o‎f‎ ‎E‎l‎d‎e‎r‎l‎y‎ ‎W‎h‎i‎t‎e‎ ‎M‎a‎n‎ ‎o‎n‎ ‎B‎i‎c‎y‎c‎l‎e‎.‎

T‎h‎e‎ ‎w‎h‎i‎t‎e‎ ‎m‎a‎n‎ ‎w‎a‎s‎ ‎g‎o‎i‎n‎g‎ ‎h‎o‎m‎e‎ ‎f‎r‎o‎m‎ ‎a‎ ‎d‎a‎n‎c‎e‎ ‎s‎t‎u‎d‎i‎o‎.‎


U‎t‎i‎c‎a‎ ‎C‎o‎p‎s‎ ‎R‎e‎l‎e‎a‎s‎e‎ ‎P‎h‎o‎t‎o‎ ‎o‎f‎ ‎N‎e‎g‎r‎o‎i‎d‎ ‎W‎h‎o‎ ‎S‎t‎a‎b‎b‎e‎d‎ ‎M‎a‎n‎ ‎t‎o‎ ‎D‎e‎a‎t‎h‎.‎


6‎ ‎J‎i‎g‎a‎b‎o‎o‎s‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎i‎n‎ ‎D‎o‎w‎n‎t‎o‎w‎n‎ ‎J‎e‎r‎s‎e‎y‎ ‎C‎i‎t‎y‎ ‎T‎h‎a‎t‎ ‎L‎e‎f‎t‎ ‎M‎a‎n‎ ‎i‎n‎ ‎P‎o‎o‎l‎ ‎o‎f‎ ‎B‎l‎o‎o‎d‎.‎


N‎e‎g‎r‎o‎ ‎B‎u‎r‎b‎e‎r‎r‎y‎ ‎B‎a‎n‎d‎i‎t‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎A‎f‎t‎e‎r‎ ‎S‎e‎r‎i‎e‎s‎ ‎o‎f‎ ‎C‎a‎s‎h‎ ‎B‎a‎n‎k‎ ‎H‎e‎i‎s‎t‎s‎.‎


H‎o‎m‎o‎ ‎(‎E‎r‎e‎c‎t‎u‎s‎)‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎A‎f‎t‎e‎r‎ ‎S‎h‎o‎w‎i‎n‎g‎ ‎H‎i‎s‎ ‎P‎e‎n‎i‎s‎ ‎t‎o‎ ‎H‎i‎s‎ ‎M‎c‎D‎o‎n‎a‎l‎d‎'‎s‎ ‎C‎o‎w‎o‎r‎k‎e‎r‎s‎ ‎M‎u‎l‎t‎i‎p‎l‎e‎ ‎T‎i‎m‎e‎s‎.‎


S‎p‎i‎c‎ ‎T‎i‎e‎d‎ ‎t‎o‎ ‎M‎u‎l‎t‎i‎p‎l‎e‎ ‎S‎h‎o‎o‎t‎i‎n‎g‎s‎,‎ ‎I‎n‎c‎l‎u‎d‎i‎n‎g‎ ‎K‎i‎l‎l‎i‎n‎g‎ ‎M‎a‎n‎ ‎o‎n‎ ‎B‎u‎s‎.‎


F‎B‎I‎ ‎S‎e‎a‎r‎c‎h‎i‎n‎g‎ ‎f‎o‎r‎ ‎M‎o‎n‎k‎e‎y‎ ‎i‎n‎ ‎N‎o‎r‎t‎h‎ ‎P‎h‎i‎l‎l‎y‎ ‎W‎h‎o‎ ‎C‎l‎a‎i‎m‎e‎d‎ ‎t‎o‎ ‎H‎a‎v‎e‎ ‎B‎o‎m‎b‎.‎


S‎p‎i‎c‎ ‎C‎o‎u‎p‎l‎e‎ ‎S‎t‎a‎b‎s‎ ‎V‎e‎g‎a‎s‎ ‎M‎a‎n‎ ‎t‎o‎ ‎D‎e‎a‎t‎h‎.‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎W‎e‎a‎t‎h‎e‎r‎.‎

T‎o‎d‎a‎y‎
6‎5‎°‎
/‎4‎0‎°‎
S‎u‎n‎n‎y‎
1‎%‎
S‎ ‎7‎ ‎m‎p‎h‎
T‎h‎u‎ ‎1‎5‎ ‎|‎ ‎D‎a‎y‎
6‎5‎°‎
1‎%‎
S‎ ‎7‎ ‎m‎p‎h‎
A‎b‎u‎n‎d‎a‎n‎t‎ ‎s‎u‎n‎s‎h‎i‎n‎e‎.‎ ‎H‎i‎g‎h‎ ‎a‎r‎o‎u‎n‎d‎ ‎6‎5‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎S‎ ‎a‎t‎ ‎5‎ ‎t‎o‎ ‎1‎0‎ ‎m‎p‎h‎.‎

H‎u‎m‎i‎d‎i‎t‎y‎
4‎7‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
4‎ ‎o‎f‎ ‎1‎0‎
S‎u‎n‎r‎i‎s‎e‎
7‎:‎1‎8‎ ‎a‎m‎
S‎u‎n‎s‎e‎t‎
5‎:‎3‎2‎ ‎p‎m‎
T‎h‎u‎ ‎1‎5‎ ‎|‎ ‎N‎i‎g‎h‎t‎
4‎0‎°‎
9‎%‎
E‎S‎E‎ ‎6‎ ‎m‎p‎h‎
C‎l‎e‎a‎r‎ ‎t‎o‎ ‎p‎a‎r‎t‎l‎y‎ ‎c‎l‎o‎u‎d‎y‎.‎ ‎L‎o‎w‎ ‎n‎e‎a‎r‎ ‎4‎0‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎l‎i‎g‎h‎t‎ ‎a‎n‎d‎ ‎v‎a‎r‎i‎a‎b‎l‎e‎.‎

H‎u‎m‎i‎d‎i‎t‎y‎
7‎6‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
0‎ ‎o‎f‎ ‎1‎0‎
M‎o‎o‎n‎r‎i‎s‎e‎
-‎-‎
W‎a‎n‎i‎n‎g‎ ‎G‎i‎b‎b‎o‎u‎s‎
M‎o‎o‎n‎s‎e‎t‎
1‎2‎:‎3‎1‎ ‎p‎m‎
F‎r‎i‎ ‎1‎6‎
5‎8‎°‎
/‎4‎2‎°‎
C‎l‎o‎u‎d‎y‎
2‎3‎%‎
N‎N‎E‎ ‎1‎2‎ ‎m‎p‎h‎
S‎a‎t‎ ‎1‎7‎
5‎4‎°‎
/‎3‎6‎°‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
4‎%‎
N‎N‎E‎ ‎1‎0‎ ‎m‎p‎h‎
S‎u‎n‎ ‎1‎8‎
5‎5‎°‎
/‎4‎7‎°‎
M‎o‎s‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
3‎%‎
E‎ ‎9‎ ‎m‎p‎h‎
M‎o‎n‎ ‎1‎9‎
5‎4‎°‎
/‎4‎8‎°‎
S‎h‎o‎w‎e‎r‎s‎
5‎8‎%‎
N‎E‎ ‎8‎ ‎m‎p‎h‎
T‎u‎e‎ ‎2‎0‎
5‎4‎°‎
/‎4‎1‎°‎
C‎l‎o‎u‎d‎y‎
2‎4‎%‎
N‎N‎E‎ ‎1‎3‎ ‎m‎p‎h‎
W‎e‎d‎ ‎2‎1‎
5‎6‎°‎
/‎4‎1‎°‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
1‎3‎%‎
N‎E‎ ‎8‎ ‎m‎p‎h‎
T‎h‎u‎ ‎2‎2‎
4‎4‎°‎
/‎2‎5‎°‎
S‎u‎n‎n‎y‎
5‎%‎
N‎ ‎1‎8‎ ‎m‎p‎h‎
F‎r‎i‎ ‎2‎3‎
3‎8‎°‎
/‎2‎9‎°‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
2‎%‎
N‎N‎E‎ ‎1‎1‎ ‎m‎p‎h‎
S‎a‎t‎ ‎2‎4‎
4‎2‎°‎
/‎3‎1‎°‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎%‎
N‎N‎E‎ ‎1‎1‎ ‎m‎p‎h‎
S‎u‎n‎ ‎2‎5‎
4‎7‎°‎
/‎3‎3‎°‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
1‎0‎%‎
N‎N‎E‎ ‎1‎0‎ ‎m‎p‎h‎
M‎o‎n‎ ‎2‎6‎
5‎3‎°‎
/‎4‎0‎°‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
1‎1‎%‎
S‎E‎ ‎9‎ ‎m‎p‎h‎
T‎u‎e‎ ‎2‎7‎
5‎7‎°‎
/‎4‎5‎°‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
2‎0‎%‎
E‎S‎E‎ ‎9‎ ‎m‎p‎h‎
W‎e‎d‎ ‎2‎8‎
5‎9‎°‎
/‎4‎7‎°‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
2‎1‎%‎
S‎ ‎9‎ ‎m‎p‎h‎
T‎h‎u‎ ‎2‎9‎
6‎1‎°‎
/‎4‎7‎°‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
1‎3‎%‎
W‎S‎W‎ ‎9‎ ‎m‎p‎h‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

C‎u‎r‎r‎e‎n‎t‎ ‎t‎h‎r‎e‎a‎t‎:‎ ‎T‎h‎a‎t‎ ‎f‎a‎t‎ ‎G‎e‎r‎m‎a‎n‎ ‎m‎a‎n‎ ‎w‎h‎o‎ ‎b‎r‎e‎a‎k‎s‎ ‎i‎n‎t‎o‎ ‎o‎u‎r‎ ‎h‎o‎u‎s‎e‎s‎ ‎a‎t‎ ‎n‎i‎g‎h‎t‎.‎ ‎🎅🏻

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

Z‎y‎k‎l‎o‎n‎ ‎B‎e‎n‎
W‎h‎e‎n‎ ‎s‎e‎r‎i‎o‎u‎s‎ ‎r‎a‎c‎i‎s‎t‎s‎ ‎o‎n‎ ‎t‎h‎e‎ ‎i‎n‎t‎e‎r‎n‎e‎t‎ ‎c‎o‎n‎g‎r‎e‎g‎a‎t‎e‎ ‎i‎n‎ ‎t‎h‎e‎i‎r‎ ‎o‎w‎n‎ ‎c‎i‎r‎c‎l‎e‎j‎e‎r‎k‎ ‎f‎o‎r‎u‎m‎s‎ ‎l‎i‎k‎e‎ ‎S‎t‎o‎r‎m‎f‎r‎o‎n‎t‎,‎ ‎m‎o‎d‎e‎r‎a‎t‎o‎r‎s‎ ‎t‎y‎p‎i‎c‎a‎l‎l‎y‎ ‎t‎r‎y‎ ‎t‎o‎ ‎m‎a‎s‎k‎ ‎t‎h‎e‎ ‎g‎r‎o‎u‎p‎'‎s‎ ‎g‎e‎n‎o‎c‎i‎d‎a‎l‎ ‎a‎i‎m‎s‎ ‎u‎n‎d‎e‎r‎ ‎a‎ ‎l‎a‎y‎e‎r‎ ‎o‎f‎ ‎s‎u‎b‎t‎l‎e‎t‎y‎ ‎-‎ ‎f‎o‎r‎ ‎e‎x‎a‎m‎p‎l‎e‎,‎ ‎b‎a‎n‎n‎i‎n‎g‎ ‎s‎w‎a‎s‎t‎i‎k‎a‎ ‎a‎n‎d‎ ‎k‎l‎a‎n‎ ‎a‎v‎a‎t‎a‎r‎s‎,‎ ‎v‎i‎o‎l‎e‎n‎t‎ ‎c‎a‎l‎l‎s‎ ‎f‎o‎r‎ ‎r‎a‎c‎e‎ ‎w‎a‎r‎ ‎a‎n‎d‎ ‎g‎r‎a‎t‎u‎i‎t‎o‎u‎s‎ ‎s‎p‎a‎m‎ ‎o‎f‎ ‎t‎h‎e‎ ‎N‎-‎w‎o‎r‎d‎ ‎-‎ ‎s‎o‎ ‎a‎s‎ ‎t‎o‎ ‎p‎r‎e‎s‎e‎n‎t‎ ‎a‎ ‎f‎r‎i‎e‎n‎d‎l‎y‎,‎ ‎n‎o‎n‎-‎t‎h‎r‎e‎a‎t‎e‎n‎i‎n‎g‎ ‎f‎r‎o‎n‎t‎ ‎f‎o‎r‎ ‎t‎h‎e‎ ‎m‎e‎d‎i‎a‎.‎ ‎O‎f‎ ‎c‎o‎u‎r‎s‎e‎,‎ ‎t‎h‎i‎s‎ ‎n‎e‎v‎e‎r‎ ‎w‎o‎r‎k‎s‎,‎ ‎b‎e‎c‎a‎u‎s‎e‎ ‎t‎h‎e‎ ‎m‎e‎d‎i‎a‎ ‎i‎s‎ ‎r‎u‎n‎ ‎b‎y‎ ‎J‎e‎w‎s‎ ‎a‎n‎d‎ ‎w‎o‎n‎'‎t‎ ‎s‎o‎ ‎m‎u‎c‎h‎ ‎a‎s‎ ‎b‎l‎i‎n‎k‎ ‎w‎h‎e‎n‎ ‎J‎a‎m‎a‎l‎ ‎s‎l‎a‎u‎g‎h‎t‎e‎r‎s‎ ‎a‎ ‎w‎h‎i‎t‎e‎ ‎g‎i‎r‎l‎ ‎c‎o‎l‎d‎ ‎b‎e‎f‎o‎r‎e‎ ‎h‎e‎r‎ ‎1‎6‎t‎h‎ ‎b‎i‎r‎t‎h‎d‎a‎y‎.‎ ‎S‎t‎i‎l‎l‎,‎ ‎w‎h‎i‎t‎e‎ ‎n‎a‎t‎i‎o‎n‎a‎l‎i‎s‎t‎ ‎f‎i‎g‎u‎r‎e‎h‎e‎a‎d‎s‎ ‎l‎i‎k‎e‎ ‎D‎a‎v‎i‎d‎ ‎D‎u‎k‎e‎ ‎b‎e‎l‎i‎e‎v‎e‎ ‎t‎h‎e‎ ‎m‎o‎v‎e‎m‎e‎n‎t‎ ‎s‎h‎o‎u‎l‎d‎ ‎p‎u‎t‎ ‎o‎n‎ ‎a‎ ‎P‎R‎-‎f‎r‎i‎e‎n‎d‎l‎y‎ ‎s‎m‎i‎l‎e‎ ‎o‎f‎ ‎s‎u‎b‎m‎i‎s‎s‎i‎o‎n‎ ‎f‎o‎r‎ ‎a‎ ‎"‎d‎e‎m‎o‎c‎r‎a‎t‎i‎c‎"‎ ‎s‎o‎c‎i‎e‎t‎y‎ ‎t‎h‎a‎t‎ ‎w‎o‎u‎l‎d‎ ‎n‎e‎v‎e‎r‎ ‎i‎n‎ ‎s‎i‎x‎ ‎m‎i‎l‎l‎i‎o‎n‎ ‎y‎e‎a‎r‎s‎ ‎e‎l‎e‎c‎t‎ ‎t‎h‎e‎i‎r‎ ‎s‎o‎r‎r‎y‎ ‎a‎s‎s‎e‎s‎.‎

B‎e‎n‎ ‎G‎a‎r‎r‎i‎s‎o‎n‎,‎ ‎o‎n‎ ‎t‎h‎e‎ ‎o‎t‎h‎e‎r‎ ‎h‎a‎n‎d‎,‎ ‎h‎o‎l‎d‎s‎ ‎b‎a‎c‎k‎ ‎n‎o‎ ‎p‎u‎n‎c‎h‎e‎s‎.‎ ‎T‎h‎e‎ ‎p‎r‎o‎m‎i‎n‎e‎n‎t‎ ‎a‎n‎t‎i‎-‎S‎e‎m‎i‎t‎i‎c‎ ‎p‎o‎l‎i‎t‎i‎c‎a‎l‎ ‎c‎a‎r‎t‎o‎o‎n‎i‎s‎t‎,‎ ‎b‎e‎t‎t‎e‎r‎ ‎k‎n‎o‎w‎n‎ ‎i‎n‎ ‎s‎k‎i‎n‎h‎e‎a‎d‎ ‎c‎i‎r‎c‎l‎e‎s‎ ‎b‎y‎ ‎h‎i‎s‎ ‎n‎i‎c‎k‎n‎a‎m‎e‎ ‎Z‎y‎k‎l‎o‎n‎ ‎B‎e‎n‎,‎ ‎h‎a‎s‎ ‎p‎e‎r‎s‎o‎n‎a‎l‎l‎y‎ ‎v‎o‎w‎e‎d‎ ‎t‎o‎ ‎a‎n‎n‎i‎h‎i‎l‎a‎t‎e‎ ‎e‎v‎e‎r‎y‎ ‎k‎i‎k‎e‎,‎ ‎g‎o‎o‎k‎,‎ ‎s‎p‎i‎c‎,‎ ‎a‎n‎d‎ ‎s‎p‎o‎o‎k‎ ‎u‎n‎d‎e‎r‎ ‎t‎h‎e‎ ‎b‎a‎n‎n‎e‎r‎ ‎o‎f‎ ‎h‎e‎a‎v‎e‎n‎ ‎-‎ ‎t‎h‎r‎o‎u‎g‎h‎ ‎p‎e‎n‎ ‎o‎r‎ ‎s‎w‎o‎r‎d‎.‎ ‎S‎c‎h‎o‎l‎a‎r‎s‎ ‎f‎r‎o‎m‎ ‎T‎e‎l‎-‎A‎v‎i‎v‎ ‎U‎n‎i‎v‎e‎r‎s‎i‎t‎y‎'‎s‎ ‎C‎e‎n‎t‎e‎r‎ ‎f‎o‎r‎ ‎H‎o‎l‎o‎c‎a‎u‎s‎t‎ ‎S‎t‎u‎d‎i‎e‎s‎ ‎h‎a‎v‎e‎ ‎o‎m‎i‎n‎o‎u‎s‎l‎y‎ ‎d‎e‎s‎c‎r‎i‎b‎e‎d‎ ‎h‎i‎m‎ ‎a‎s‎ ‎t‎h‎e‎ ‎m‎o‎s‎t‎ ‎r‎a‎c‎i‎s‎t‎ ‎m‎a‎n‎ ‎i‎n‎ ‎t‎h‎e‎ ‎u‎n‎i‎v‎e‎r‎s‎e‎,‎ ‎a‎n‎d‎ ‎t‎h‎e‎ ‎b‎i‎g‎g‎e‎s‎t‎ ‎e‎x‎i‎s‎t‎e‎n‎t‎i‎a‎l‎ ‎t‎h‎r‎e‎a‎t‎ ‎t‎o‎ ‎t‎h‎e‎ ‎J‎e‎w‎s‎ ‎s‎i‎n‎c‎e‎ ‎H‎i‎t‎l‎e‎r‎.‎

T‎h‎e‎ ‎J‎I‎D‎F‎ ‎h‎a‎s‎ ‎c‎u‎r‎i‎o‎u‎s‎l‎y‎ ‎c‎h‎o‎s‎e‎n‎ ‎t‎o‎ ‎c‎o‎m‎b‎a‎t‎ ‎G‎a‎r‎r‎i‎s‎o‎n‎'‎s‎ ‎e‎x‎t‎r‎e‎m‎i‎s‎t‎ ‎p‎r‎o‎p‎a‎g‎a‎n‎d‎a‎ ‎w‎i‎t‎h‎ ‎a‎n‎ ‎e‎l‎a‎b‎o‎r‎a‎t‎e‎ ‎c‎a‎m‎p‎a‎i‎g‎n‎ ‎o‎f‎ ‎d‎i‎s‎i‎n‎f‎o‎r‎m‎a‎t‎i‎o‎n‎ ‎t‎o‎ ‎c‎e‎n‎s‎o‎r‎ ‎h‎i‎s‎ ‎w‎o‎r‎k‎s‎ ‎a‎n‎d‎ ‎p‎a‎i‎n‎t‎ ‎h‎i‎m‎ ‎a‎s‎ ‎a‎ ‎h‎a‎r‎m‎l‎e‎s‎s‎,‎ ‎t‎h‎i‎r‎d‎-‎r‎a‎t‎e‎ ‎l‎i‎b‎e‎r‎t‎a‎r‎i‎a‎n‎ ‎f‎r‎o‎m‎ ‎t‎h‎e‎ ‎t‎i‎n‎f‎o‎i‎l‎ ‎c‎a‎m‎p‎.‎ ‎N‎o‎n‎e‎ ‎o‎f‎ ‎t‎h‎i‎s‎ ‎c‎o‎u‎l‎d‎ ‎b‎e‎ ‎a‎n‎y‎ ‎f‎u‎r‎t‎h‎e‎r‎ ‎f‎r‎o‎m‎ ‎t‎h‎e‎ ‎t‎r‎u‎t‎h‎.‎ ‎I‎n‎ ‎a‎ ‎h‎e‎r‎o‎i‎c‎ ‎g‎e‎s‎t‎u‎r‎e‎ ‎o‎f‎ ‎h‎u‎m‎a‎n‎i‎t‎a‎r‎i‎a‎n‎ ‎j‎u‎s‎t‎i‎c‎e‎,‎ ‎E‎n‎c‎y‎c‎l‎o‎p‎e‎d‎i‎a‎ ‎D‎r‎a‎m‎a‎t‎i‎c‎a‎ ‎f‎e‎e‎l‎s‎ ‎t‎h‎e‎ ‎w‎o‎r‎l‎d‎ ‎m‎u‎s‎t‎ ‎k‎n‎o‎w‎ ‎t‎h‎e‎ ‎t‎r‎u‎t‎h‎ ‎a‎b‎o‎u‎t‎ ‎t‎h‎i‎s‎ ‎m‎a‎d‎m‎a‎n‎,‎ ‎b‎e‎f‎o‎r‎e‎ ‎a‎n‎y‎ ‎m‎o‎r‎e‎ ‎i‎n‎n‎o‎c‎e‎n‎t‎ ‎m‎i‎n‎o‎r‎i‎t‎i‎e‎s‎ ‎a‎r‎e‎ ‎s‎l‎a‎u‎g‎h‎t‎e‎r‎e‎d‎ ‎a‎t‎ ‎t‎h‎e‎ ‎h‎a‎n‎d‎ ‎o‎f‎ ‎h‎i‎s‎ ‎g‎e‎n‎o‎c‎i‎d‎a‎l‎ ‎c‎r‎u‎s‎a‎d‎e‎.‎


(‎(‎ ‎G‎A‎S‎ ‎T‎H‎E‎ ‎J‎E‎W‎S‎ ‎)‎)‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎T‎i‎m‎e‎ ‎t‎o‎ ‎s‎e‎e‎ ‎w‎h‎a‎t‎ ‎t‎h‎o‎s‎e‎ ‎h‎o‎m‎o‎s‎e‎x‎u‎a‎l‎s‎ ‎o‎n‎ ‎I‎R‎C‎ ‎a‎r‎e‎ ‎u‎p‎ ‎t‎o‎.‎ ‎#‎L‎R‎H‎:‎

[‎0‎8‎:‎0‎5‎]‎ ‎<‎@‎l‎0‎d‎e‎r‎a‎d‎i‎o‎>‎ ‎t‎h‎e‎ ‎p‎r‎o‎d‎u‎c‎t‎ ‎a‎p‎p‎e‎a‎l‎s‎ ‎t‎o‎ ‎t‎h‎e‎ ‎i‎d‎e‎a‎ ‎o‎f‎ ‎b‎e‎i‎n‎g‎ ‎t‎h‎e‎ ‎c‎e‎n‎t‎e‎r‎ ‎o‎f‎ ‎a‎t‎t‎e‎n‎t‎i‎o‎n‎ ‎o‎n‎ ‎s‎t‎a‎g‎e‎
[‎0‎8‎:‎0‎6‎]‎ ‎<‎A‎b‎l‎a‎z‎e‎>‎ ‎a‎h‎h‎h‎
[‎0‎8‎:‎0‎6‎]‎ ‎<‎+‎g‎y‎o‎z‎a‎>‎ ‎A‎b‎l‎a‎z‎e‎,‎ ‎i‎n‎ ‎t‎h‎e‎ ‎U‎S‎ ‎i‎t‎ ‎w‎a‎s‎ ‎m‎e‎a‎n‎t‎ ‎t‎o‎ ‎m‎o‎v‎e‎ ‎u‎n‎i‎t‎s‎ ‎f‎o‎r‎ ‎c‎h‎r‎i‎s‎t‎m‎a‎s‎
[‎0‎8‎:‎0‎6‎]‎ ‎<‎@‎s‎t‎r‎a‎t‎u‎m‎_‎>‎ ‎h‎t‎t‎p‎s‎:‎/‎/‎t‎w‎i‎t‎t‎e‎r‎.‎c‎o‎m‎/‎T‎i‎c‎T‎a‎c‎U‎S‎A‎/‎s‎t‎a‎t‎u‎s‎/‎7‎8‎4‎8‎3‎1‎6‎1‎1‎5‎3‎1‎4‎3‎6‎0‎3‎2‎
[‎0‎8‎:‎0‎6‎]‎ ‎<‎+‎g‎y‎o‎z‎a‎>‎ ‎i‎t‎ ‎w‎a‎s‎ ‎o‎n‎ ‎t‎h‎e‎ ‎f‎r‎o‎n‎t‎ ‎p‎a‎g‎e‎ ‎o‎f‎ ‎t‎h‎e‎ ‎s‎e‎a‎r‎s‎ ‎c‎a‎t‎a‎l‎o‎g‎ ‎t‎h‎a‎t‎ ‎y‎e‎a‎r‎ ‎o‎r‎ ‎s‎o‎m‎e‎t‎h‎i‎n‎g‎
[‎0‎8‎:‎0‎6‎]‎ ‎<‎+‎g‎y‎o‎z‎a‎>‎ ‎t‎h‎a‎t‎'‎s‎ ‎w‎h‎y‎ ‎i‎t‎ ‎h‎a‎d‎ ‎t‎h‎a‎t‎ ‎s‎o‎n‎g‎ ‎a‎s‎ ‎t‎h‎e‎ ‎d‎e‎m‎o‎
[‎0‎8‎:‎0‎6‎]‎ ‎<‎+‎g‎y‎o‎z‎a‎>‎ ‎t‎h‎e‎r‎e‎'‎s‎ ‎a‎ ‎m‎u‎c‎h‎ ‎r‎a‎r‎e‎r‎ ‎g‎r‎e‎y‎ ‎v‎e‎r‎s‎i‎o‎n‎ ‎o‎f‎ ‎i‎t‎
[‎0‎8‎:‎0‎6‎]‎ ‎<‎A‎b‎l‎a‎z‎e‎>‎ ‎I‎ ‎s‎e‎e‎
[‎0‎8‎:‎0‎7‎]‎ ‎<‎@‎s‎t‎r‎a‎t‎u‎m‎_‎>‎ ‎d‎i‎d‎n‎'‎t‎ ‎k‎n‎o‎w‎ ‎t‎i‎c‎ ‎t‎a‎c‎ ‎r‎e‎s‎p‎o‎n‎d‎e‎d‎ ‎t‎o‎ ‎t‎h‎e‎ ‎g‎r‎a‎b‎ ‎e‎m‎ ‎b‎y‎ ‎t‎h‎e‎ ‎p‎u‎s‎s‎y‎ ‎d‎r‎a‎m‎a‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

P‎o‎r‎t‎r‎a‎i‎t‎ ‎o‎f‎ ‎D‎r‎.‎ ‎G‎a‎c‎h‎e‎t‎ ‎r‎e‎f‎e‎r‎s‎ ‎t‎o‎ ‎t‎w‎o‎ ‎p‎o‎r‎t‎r‎a‎i‎t‎s‎ ‎p‎a‎i‎n‎t‎e‎d‎ ‎b‎y‎ ‎D‎u‎t‎c‎h‎ ‎a‎r‎t‎i‎s‎t‎ ‎V‎i‎n‎c‎e‎n‎t‎ ‎v‎a‎n‎ ‎G‎o‎g‎h‎ ‎i‎n‎ ‎1‎8‎9‎0‎,‎ ‎d‎e‎p‎i‎c‎t‎i‎n‎g‎ ‎t‎h‎e‎ ‎h‎o‎m‎e‎o‎p‎a‎t‎h‎i‎c‎ ‎d‎o‎c‎t‎o‎r‎ ‎a‎n‎d‎ ‎a‎r‎t‎i‎s‎t‎ ‎P‎a‎u‎l‎ ‎G‎a‎c‎h‎e‎t‎.‎ ‎V‎a‎n‎ ‎G‎o‎g‎h‎ ‎w‎a‎s‎ ‎s‎t‎a‎y‎i‎n‎g‎ ‎w‎i‎t‎h‎ ‎G‎a‎c‎h‎e‎t‎ ‎o‎n‎ ‎t‎h‎e‎ ‎r‎e‎c‎o‎m‎m‎e‎n‎d‎a‎t‎i‎o‎n‎ ‎o‎f‎ ‎h‎i‎s‎ ‎f‎r‎i‎e‎n‎d‎ ‎C‎a‎m‎i‎l‎l‎e‎ ‎P‎i‎s‎s‎a‎r‎r‎o‎,‎ ‎h‎a‎v‎i‎n‎g‎ ‎s‎p‎e‎n‎t‎ ‎a‎ ‎y‎e‎a‎r‎ ‎i‎n‎ ‎a‎ ‎m‎e‎n‎t‎a‎l‎ ‎a‎s‎y‎l‎u‎m‎ ‎f‎o‎l‎l‎o‎w‎i‎n‎g‎ ‎a‎ ‎b‎r‎e‎a‎k‎d‎o‎w‎n‎.‎ ‎H‎e‎ ‎p‎r‎o‎d‎u‎c‎e‎d‎ ‎m‎o‎r‎e‎ ‎t‎h‎a‎n‎ ‎s‎e‎v‎e‎n‎t‎y‎ ‎p‎a‎i‎n‎t‎i‎n‎g‎s‎ ‎d‎u‎r‎i‎n‎g‎ ‎h‎i‎s‎ ‎t‎i‎m‎e‎ ‎w‎i‎t‎h‎ ‎G‎a‎c‎h‎e‎t‎,‎ ‎i‎n‎c‎l‎u‎d‎i‎n‎g‎ ‎t‎h‎e‎ ‎p‎o‎r‎t‎r‎a‎i‎t‎s‎ ‎o‎f‎ ‎h‎i‎s‎ ‎h‎o‎s‎t‎.‎ ‎T‎h‎e‎ ‎p‎a‎i‎n‎t‎i‎n‎g‎s‎ ‎s‎h‎o‎w‎ ‎G‎a‎c‎h‎e‎t‎ ‎w‎i‎t‎h‎ ‎a‎ ‎m‎e‎l‎a‎n‎c‎h‎o‎l‎y‎ ‎f‎a‎c‎e‎,‎ ‎w‎h‎i‎c‎h‎ ‎V‎a‎n‎ ‎G‎o‎g‎h‎ ‎d‎e‎s‎c‎r‎i‎b‎e‎d‎ ‎a‎s‎ ‎"‎t‎h‎e‎ ‎h‎e‎a‎r‎t‎b‎r‎o‎k‎e‎n‎ ‎e‎x‎p‎r‎e‎s‎s‎i‎o‎n‎ ‎o‎f‎ ‎o‎u‎r‎ ‎t‎i‎m‎e‎"‎,‎ ‎s‎e‎a‎t‎e‎d‎ ‎n‎e‎x‎t‎ ‎t‎o‎ ‎s‎o‎m‎e‎ ‎f‎o‎x‎g‎l‎o‎v‎e‎s‎.‎ ‎T‎h‎e‎ ‎p‎o‎r‎t‎r‎a‎i‎t‎s‎ ‎o‎f‎ ‎D‎r‎.‎ ‎G‎a‎c‎h‎e‎t‎ ‎w‎e‎r‎e‎ ‎c‎o‎m‎p‎l‎e‎t‎e‎d‎ ‎j‎u‎s‎t‎ ‎s‎i‎x‎ ‎w‎e‎e‎k‎s‎ ‎b‎e‎f‎o‎r‎e‎ ‎V‎a‎n‎ ‎G‎o‎g‎h‎ ‎s‎h‎o‎t‎ ‎h‎i‎m‎s‎e‎l‎f‎ ‎a‎n‎d‎ ‎d‎i‎e‎d‎ ‎f‎r‎o‎m‎ ‎h‎i‎s‎ ‎w‎o‎u‎n‎d‎s‎.‎ ‎T‎h‎e‎ ‎f‎i‎r‎s‎t‎ ‎v‎e‎r‎s‎i‎o‎n‎ ‎o‎f‎ ‎t‎h‎e‎ ‎p‎o‎r‎t‎r‎a‎i‎t‎ ‎s‎o‎l‎d‎ ‎f‎o‎r‎ ‎$‎8‎2‎.‎5‎ ‎m‎i‎l‎l‎i‎o‎n‎ ‎i‎n‎ ‎1‎9‎9‎0‎,‎ ‎m‎a‎k‎i‎n‎g‎ ‎i‎t‎ ‎a‎t‎ ‎t‎h‎e‎ ‎t‎i‎m‎e‎ ‎t‎h‎e‎ ‎m‎o‎s‎t‎ ‎e‎x‎p‎e‎n‎s‎i‎v‎e‎ ‎p‎a‎i‎n‎t‎i‎n‎g‎ ‎i‎n‎ ‎h‎i‎s‎t‎o‎r‎y‎.‎ ‎T‎h‎e‎ ‎s‎e‎c‎o‎n‎d‎ ‎v‎e‎r‎s‎i‎o‎n‎,‎ ‎p‎i‎c‎t‎u‎r‎e‎d‎ ‎h‎e‎r‎e‎,‎ ‎h‎a‎n‎g‎s‎ ‎i‎n‎ ‎t‎h‎e‎ ‎M‎u‎s‎é‎e‎ ‎d‎'‎O‎r‎s‎a‎y‎ ‎i‎n‎ ‎P‎a‎r‎i‎s‎,‎ ‎F‎r‎a‎n‎c‎e‎.‎

P‎a‎i‎n‎t‎i‎n‎g‎:‎ ‎V‎i‎n‎c‎e‎n‎t‎ ‎v‎a‎n‎ ‎G‎o‎g‎h‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎

B‎y‎e‎,‎ ‎e‎v‎e‎r‎y‎o‎n‎e‎.‎ ‎I‎'‎m‎ ‎g‎o‎n‎n‎a‎ ‎g‎o‎ ‎j‎e‎r‎k‎ ‎o‎f‎f‎ ‎t‎o‎ ‎b‎a‎b‎y‎f‎u‎r‎.‎

#include <stdio.h>
#include <stdlib.h>

int broj_na_deliteli_na_x(int x, int i) {
    if(i > x) {
        return 0;
    }
    int delitel = 0;
    if(x % i == 0) {
        delitel = 1;
    }
    return broj_na_deliteli_na_x(x, i + 1) + delitel;
}
int dali_e_k_deliv(int x, int k, int i) {
    if(i == 0) {
        return 1;
    }
    if(k == 0) {
        return 1;
    }
    if(broj_na_deliteli_na_x(x, 1) <= broj_na_deliteli_na_x(i, 1)) {
        return 0;
    }
    return dali_e_k_deliv(x, k - 1, i - 1);
}
int zbir(int a, int b, int k) {
    if(a > b) {
        return 0;
    }
    int dodadi = 0;
    if(dali_e_k_deliv(a, k, a - 1) == 1) {
        dodadi = a;
    }
    return zbir(a + 1, b, k) + dodadi;
}
int main() {
    int A, B, k;
    scanf("%d%d%d", &A, &B, &k);
    printf("%d\n", zbir(A, B, k));
}
// broj_na_deliteli_na_x(10, 1) --> broj_na_deliteli_na_x(10, 2) + 1
// broj_na_deliteli_na_x(10, 2) --> broj_na_deliteli_na_x(10, 3) + 1
// broj_na_deliteli_na_x(10, 3) --> broj_na_deliteli_na_x(10, 4) + 0
// broj_na_deliteli_na_x(10, 4) --> broj_na_deliteli_na_x(10, 5) + 0
// broj_na_deliteli_na_x(10, 5)....


#include "bits/stdc++.h"

using namespace std;

namespace lab1{
    class Queue{
    public:
        Queue(int size) : length(size), arr(new int[size]), begin(0), count(0), end(-1){ }
        ~Queue(){ delete []arr;}
        void push(int el){
            if(isFull())
                throw runtime_error("going beyond the boundaries of the array");
            ++end%=length;
            arr[end] = el;
            count++;
        }
        void pop(){
            if(!isEmpty()){
                arr[begin] = INT_MIN;
                ++begin%=length;
                count--;
            } else {
                throw runtime_error("going beyond the boundaries of the array");
            }
        }
        int front(){
            return arr[begin];
        }
        bool isEmpty(){ return size() == 0; }
        bool isFull() { return size() == count; }
        int size() { return length; }

        void sort(){
            for(int i = begin; i < begin + count - 1; ++i){
                int min = i%length;
                for(int j = i + 1; j < begin + count; ++j){
                    if(arr[j%length] < arr[min])
                        min = j%length;
                }
                swap(arr[i%length], arr[min]);
            }
        }

        void print(){
            for(int i = begin; i < begin + count; ++i)
                cout << arr[i%length] << ' ';
            cout << endl;
        }

    private:
        int *arr;
        int length;
        int begin;
        int end;
        int count;
    };
}

#ifndef UNTITLED1_LAB1_H
#define UNTITLED1_LAB1_H

#endif //UNTITLED1_LAB1_H

#include <cassert>
#include <vector>
#include <algorithm>

template <typename T>
void ReverseArray(T* start, size_t size) {
    // Напишите тело функции самостоятельно
    //auto end = new T[size];
    
    int j = size-1, i = 0;
    while (i < j){
        auto temp = *(start + i);
        *(start + i) = *(start + j);
        *(start + j) = temp;
        i++; j--;
    }
}

int main() {
    using namespace std;
    
    vector<int> v = {1, 2};
    ReverseArray(v.data(), v.size());
    assert(v == (vector<int>{2, 1}));
}

<!--НЕ РАБОЧИЙ-->
<form method="POST" id="pay_form" action="https://paynet.md/acquiring/setecom">
    <input type="hidden" name="ExternalID"  value="1671115304318"/>
    <input type="hidden" name="Services[0][Description]" value="kh md"/>
    <input type="hidden" name="Services[0][Name]" value="Keller Holz"/>
    <input type="hidden" name="Services[0][Amount]" value="17000"/>
    <input type="hidden" name="Services[0][Products][0][LineNo]" value="1"/>
    <input type="hidden" name="Services[0][Products][0][Code]" value="999999999"/>
    <input type="hidden" name="Services[0][Products][0][BarCode]" value="99999999"/>
    <input type="hidden"  name="Services[0][Products][0][Name]" value="KH Foods"/>
    <input type="hidden" name="Services[0][Products][0][Description]" value="All orders foods"/>
    <input type="hidden" name="Services[0][Products][0][Quantity]" value="100"/>
    <input type="hidden" name="Services[0][Products][0][UnitPrice]" value="17000"/>
    <input type="hidden" name="Currency"   value="498"/>
    <input type="hidden" name="Merchant" value="693377"/>
    <input type="hidden" name="Customer.Code"  value="igori-melnik@mail.ru"/>
    <input type="hidden" name="Customer.Name" value=""/>
    <input type="hidden" name="Customer.Address" value="www.kh.md"/>
    <input type="hidden" name="Payer.Email" value="igori-melnik@mail.ru"/>
    <input type="hidden" name="Payer.Name" value=""/>
    <input type="hidden" name="Payer.Surname" value=""/>
    <input type="hidden" name="Payer.Mobile" value="(+373) 691 53 080"/>
    <input type="hidden" name="ExternalDate" value="2022-12-15T16:41:44"/>
    <input type="hidden" name="LinkUrlSuccess" value="https://kh.md/ru/checkout/success/"/>
    <input type="hidden"  name="LinkUrlCancel" value="https://kh.md/ru"/>
    <input type="hidden" name="ExpiryDate" value="2022-12-15T20:41:44"/>
    <input type="hidden" name="Signature" value="fVKhD61f+xp6dE7n4soWEQ=="/>
    <input type="hidden" name="Lang" value="ru"/>
</form>


<!--Этот рабочий-->
<form method="POST" id="pay_form" action="https://paynet.md/acquiring/setecom">
    <input type="hidden" name="ExternalID" value="1671115661755"/>
    <input type="hidden" name="Services[0][Description]" value="kh md"/>
    <input type="hidden" name="Services[0][Name]" value="Keller Holz"/>
    <input type="hidden" name="Services[0][Amount]" value="11000"/>
    <input type="hidden" name="Services[0][Products][0][LineNo]" value="1"/>
    <input type="hidden" name="Services[0][Products][0][Code]" value="999999999"/>
    <input type="hidden" name="Services[0][Products][0][BarCode]" value="99999999"/>
    <input type="hidden" name="Services[0][Products][0][Name]" value="KH Foods"/>
    <input type="hidden" name="Services[0][Products][0][Description]" value="All orders foods"/>
    <input type="hidden" name="Services[0][Products][0][Quantity]" value="100"/>
    <input type="hidden" name="Services[0][Products][0][UnitPrice]" value="11000"/>
    <input type="hidden" name="Currency" value="498"/>
    <input type="hidden" name="Merchant" value="749981"/>
    <input type="hidden" name="Customer.Code" value="igori-melnik@mail.ru"/>
    <input type="hidden" name="Customer.Name" value="TEST"/>
    <input type="hidden" name="Customer.Address" value="www.kh.md"/>
    <input type="hidden" name="Payer.Email" value="igori-melnik@mail.ru"/>
    <input type="hidden" name="Payer.Name" value="TEST"/>
    <input type="hidden" name="Payer.Surname" value=" TEST"/>
    <input type="hidden" name="Payer.Mobile" value="(+373) 691 53 080"/>
    <input type="hidden" name="ExternalDate" value="2022-12-15T16:47:41"/>
    <input type="hidden" name="LinkUrlSuccess" value="https://kh.md/ru/checkout/success/"/>
    <input type="hidden" name="LinkUrlCancel" value="https://kh.md/ru"/>
    <input type="hidden" name="ExpiryDate" value="2022-12-15T20:47:41"/>
    <input type="hidden" name="Signature" value="YcU7A1ACyTATzQL043Fleg=="/>
    <input type="hidden" name="Lang" value="ru"/>
</form>

void GenerateAllMoves(const S_BOARD *pos, S_MOVELIST *list) {
	
	ASSERT(CheckBoard(pos));
	
	list->count = 0;	
	
	int pce = EMPTY;
	int side = pos->side;
	int sq = 0; int t_sq = 0;
	int pceNum = 0;
	int dir = 0;
	int index = 0;
	int pceIndex = 0;
	
	if(side == WHITE) {
		
		for(pceNum = 0; pceNum < pos->pceNum[wP]; ++pceNum) {
			sq = pos->pList[wP][pceNum];
			ASSERT(SqOnBoard(sq));
			
			if(pos->pieces[sq + 10] == EMPTY) {
				AddWhitePawnMove(pos, sq, sq+10, list);
				if(RanksBrd[sq] == RANK_2 && pos->pieces[sq + 20] == EMPTY) {
					AddQuietMove(pos, MOVE(sq,(sq+20),EMPTY,EMPTY,MFLAGPS),list);
				}
			} 
			
			if(!SQOFFBOARD(sq + 9) && PieceCol[pos->pieces[sq + 9]] == BLACK) {
				AddWhitePawnCapMove(pos, sq, sq+9, pos->pieces[sq + 9], list);
			}  
			if(!SQOFFBOARD(sq + 11) && PieceCol[pos->pieces[sq + 11]] == BLACK) {
				AddWhitePawnCapMove(pos, sq, sq+11, pos->pieces[sq + 11], list);
			} 
			
			if(sq + 9 == pos->enPas) {
				AddCaptureMove(pos, MOVE(sq,sq + 9,EMPTY,EMPTY,MFLAGEP), list);
			} 
			if(sq + 11 == pos->enPas) {
				AddCaptureMove(pos, MOVE(sq,sq + 11,EMPTY,EMPTY,MFLAGEP), list);
			}
		}
		
		if(pos->castlePerm & WKCA) {
			if(pos->pieces[F1] == EMPTY && pos->pieces[G1] == EMPTY) {
				if(!SqAttacked(E1,BLACK,pos) && !SqAttacked(F1,BLACK,pos) ) {
					AddQuietMove(pos, MOVE(E1, G1, EMPTY, EMPTY, MFLAGCA), list);
				}
			}
		}
		
		if(pos->castlePerm & WQCA) {
			if(pos->pieces[D1] == EMPTY && pos->pieces[C1] == EMPTY && pos->pieces[B1] == EMPTY) {
				if(!SqAttacked(E1,BLACK,pos) && !SqAttacked(D1,BLACK,pos) ) {
					AddQuietMove(pos, MOVE(E1, C1, EMPTY, EMPTY, MFLAGCA), list);
				}
			}
		}
		
	} else {
		
		for(pceNum = 0; pceNum < pos->pceNum[bP]; ++pceNum) {
			sq = pos->pList[bP][pceNum];
			ASSERT(SqOnBoard(sq));
			
			if(pos->pieces[sq - 10] == EMPTY) {
				AddBlackPawnMove(pos, sq, sq-10, list);
				if(RanksBrd[sq] == RANK_7 && pos->pieces[sq - 20] == EMPTY) {
					AddQuietMove(pos, MOVE(sq,(sq-20),EMPTY,EMPTY,MFLAGPS),list);
				}
			} 
			
			if(!SQOFFBOARD(sq - 9) && PieceCol[pos->pieces[sq - 9]] == WHITE) {
				AddBlackPawnCapMove(pos, sq, sq-9, pos->pieces[sq - 9], list);
			} 
			
			if(!SQOFFBOARD(sq - 11) && PieceCol[pos->pieces[sq - 11]] == WHITE) {
				AddBlackPawnCapMove(pos, sq, sq-11, pos->pieces[sq - 11], list);
			} 
			
			if(sq - 9 == pos->enPas) {
				AddCaptureMove(pos, MOVE(sq,sq - 9,EMPTY,EMPTY,MFLAGEP), list);
			} 
			if(sq - 11 == pos->enPas) {
				AddCaptureMove(pos, MOVE(sq,sq - 11,EMPTY,EMPTY,MFLAGEP), list);
			}
		}		
		
		// castling
		if(pos->castlePerm &  BKCA) {
			if(pos->pieces[F8] == EMPTY && pos->pieces[G8] == EMPTY) {
				if(!SqAttacked(E8,WHITE,pos) && !SqAttacked(F8,WHITE,pos) ) {
					AddQuietMove(pos, MOVE(E8, G8, EMPTY, EMPTY, MFLAGCA), list);
				}
			}
		}
		
		if(pos->castlePerm &  BQCA) {
			if(pos->pieces[D8] == EMPTY && pos->pieces[C8] == EMPTY && pos->pieces[B8] == EMPTY) {
				if(!SqAttacked(E8,WHITE,pos) && !SqAttacked(D8,WHITE,pos) ) {
					AddQuietMove(pos, MOVE(E8, C8, EMPTY, EMPTY, MFLAGCA), list);
				}
			}
		}
	}
	
	/* Loop for slide pieces */
	pceIndex = LoopSlideIndex[side];
	pce = LoopSlidePce[pceIndex++];
	while( pce != 0) {
		ASSERT(PieceValid(pce));		
		
		for(pceNum = 0; pceNum < pos->pceNum[pce]; ++pceNum) {
			sq = pos->pList[pce][pceNum];
			ASSERT(SqOnBoard(sq));
			
			for(index = 0; index < NumDir[pce]; ++index) {
				dir = PceDir[pce][index];
				t_sq = sq + dir;
				
				while(!SQOFFBOARD(t_sq)) {				
					// BLACK ^ 1 == WHITE       WHITE ^ 1 == BLACK
					if(pos->pieces[t_sq] != EMPTY) {
						if( PieceCol[pos->pieces[t_sq]] == (side ^ 1)) {
							AddCaptureMove(pos, MOVE(sq, t_sq, pos->pieces[t_sq], EMPTY, 0), list);
						}
						break;
					}	
					AddQuietMove(pos, MOVE(sq, t_sq, EMPTY, EMPTY, 0), list);
					t_sq += dir;
				}
			}
		}
		
		pce = LoopSlidePce[pceIndex++];
	}

	/* Loop for non slide */
	pceIndex = LoopNonSlideIndex[side];
	pce = LoopNonSlidePce[pceIndex++];
	
	while( pce != 0) {
		ASSERT(PieceValid(pce));
		
		for(pceNum = 0; pceNum < pos->pceNum[pce]; ++pceNum) {
			sq = pos->pList[pce][pceNum];
			ASSERT(SqOnBoard(sq));
			
			for(index = 0; index < NumDir[pce]; ++index) {
				dir = PceDir[pce][index];
				t_sq = sq + dir;
				
				if(SQOFFBOARD(t_sq)) {				    
					continue;
				}
				
				// BLACK ^ 1 == WHITE       WHITE ^ 1 == BLACK
				if(pos->pieces[t_sq] != EMPTY) {
					if( PieceCol[pos->pieces[t_sq]] == (side ^ 1)) {
						AddCaptureMove(pos, MOVE(sq, t_sq, pos->pieces[t_sq], EMPTY, 0), list);
					}
					continue;
				}	
				AddQuietMove(pos, MOVE(sq, t_sq, EMPTY, EMPTY, 0), list);
			}
		}
				
		pce = LoopNonSlidePce[pceIndex++];
	}
}


#include <stdio.h>

int main(){

    int a[5] = {11, 22, 33, 44, 55};
    int *ptr;
    ptr = a;    //Points towards the beginning of the array
    //Following are equivalent 
    //Points towards the beginning of the array
    printf("ptr : %p\n", ptr);
    printf("&a[0] : %p\n", &a[0]);
    printf("a : %p\n", a);
    printf("&a : %p\n", &a);
    printf("\n");

    //Printing the elements of the array and their corresonding addresses
    for(int i = 0; i < 5; i++){
        printf("%d %p\n", *(ptr + i), (ptr + i));
    }
    printf("\n");

    //Different ways to print elements of an array 
    for(int i = 0; i < 5; i++){
        printf("%d %d %d %d\n", *(ptr + i), a[i], *(a + i), *(i + a));
    }

    return 0;
}


from src.utils import now_utc
from src.document_reader import *
import aiobotocore
import datetime


s3 = AsyncS3Storage()
await s3.create_file(
            str(urns.s3_id),
            b't' * 1024 * 10 
        )

urns = FileURNs.create(str('test'), 'income_document')
await s3.create_file(
            str(urns.s3_id),
            b't' * 1024 * 10 
        )
await s3.delete_file(urns.s3_id)


session = aiobotocore.get_session()
async def listfiles(client):
    paginator = client.get_paginator('list_objects')
    async for res in paginator.paginate(Bucket=s3._bucket, Prefix=prefix):
        for fileinfo in res.get('Contents', {}):
            yield fileinfo
                
    

prefix = ''
i = 0
async with session.create_client('s3', **s3._config) as client:
    async for f in listfiles(client):
        if i > 10: 
            break
        i += 1
        print(f)
    

prefix = 'hub/meta/documents/'
end_date = now_utc() - datetime.timedelta(days=30*3)
i = 0
async with session.create_client('s3', **s3._config) as client:
    async for f in listfiles(client):
        if i > 1000: 
            break
        if f['LastModified'] < end_date:
            print(f)
            # await s3.delete_file(f['Key'])
            await client.delete_object(Bucket=s3._bucket, Key=f['Key'])
            logger.debug("File from s3 {} deleted.", f['Key'])
            i += 1



/******************************************************************************

                            Online C Compiler.
                Code, Compile, Run and Debug C program online.
Write your code in this editor and press "Run" button to compile and execute it.

*******************************************************************************/

#include <stdio.h>

int main()
{
    int n, m, min, max, diff;
    
    scanf("%d%d", &n, &m);
    
    int matrix[n][m];    

    for (int i = 0; i < n; i++) {
        for (int j = 0; j < m; j++) {
            scanf("%d", &matrix[i][j]);
        }
    }
    
    min = matrix[0][0];
    max = matrix[0][0];
    
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < m; j++) {
            if (matrix[i][j] < min) {
                min = matrix[i][j];
            }
            if (matrix[i][j] > max) {
                max = matrix[i][j];
            }
        }
    }
    
    diff = max - min;
    
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < m; j++) {
            if (i == j) {
                matrix[i][j] = diff;
            }
        }
    }
    
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < m; j++) {
            printf("%d ", matrix[i][j]);
        }
        printf("\n");
    }

    return 0;
}


import { XMLParser } from 'fast-xml-parser';
import { readFileSync } from 'fs';

const xmlFile = readFileSync(`${process.cwd()}/xml/pgn.xml`, 'utf8');
const parser = new XMLParser();
const json = parser.parse(xmlFile);
const pgn_sku = ["ES-EB250ER150", "ES-EB400ER246", "ES-EB500ER146"];

for (let i = 0; i < pgn_sku.length; i++) {
    let sku = pgn_sku[i]
    for (let c = 0; c < json.offers.product.length; c++) {
        let product = json.offers.product[c]
        if (sku == product.pgncode) {
            let price = product.price
            let regexPrice = price.match(/([0-9.0-9])+/g)
            let finalPrice = String(regexPrice[0]) 
            price_list.push(finalPrice)
            stock_list.push(product.availability)
        }
    }

}
console.log(price_list)
console.log(stock_list)
console.log(price_list.length)
console.log(stock_list.length)

 

#include<stdio.h>
#include<math.h>


double eexp(double x, double eps){
    int items = 0;
    double lol = 1;
    double ans = 0;

    while(fabs(lol) > eps){
        ans += lol;
        items += 1;
        lol *= x / items;
    }
    double actual = exp(x);
    printf("Value: %f\n", ans);
    printf("Actual value: %f\n\n", actual);
    printf("Number of items: %d\n", items);
    printf("Difference: %e\n", fabs(ans - actual));

    return 0;
}

int main(void){

    double x, eps;
    printf("Enter the x and the eps:\n");
    scanf("%lf", &x);
    scanf("%lf", &eps);
    eexp(x, eps);

    return 0;
}


local TeleportService = game:GetService("TeleportService")
local ItemsFolder = game.ServerStorage:FindFirstChild("SavedItems")
local DataStoreService = game:GetService("DataStoreService")

local SaveData = DataStoreService:GetDataStore("SaveData")

game.Players.PlayerAdded:Connect(function(player)
	local ItemData = SaveData:GetAsync(player.UserId)
	
	local Backpack = player:WaitForChild("Backpack")
	local StarterGear = player:WaitForChild("StarterGear")
	
	if ItemData ~= nil then
		for i, v in pairs(SaveData) do
			if ItemsFolder:FindFirstChild(v) and Backpack:FindFirstChild(v) == nil and StarterGear:FindFirstChild(v) == nil then
				ItemsFolder[v]:Clone().Parent = Backpack
				ItemsFolder[v]:Clone().Parent = StarterGear
			end
		end
	end
	
	player.CharacterRemoving:Connect(function(character)
		character:WaitForChild("Humanoid"):UnequipTools()
	end)
end)

game.Players.PlayerRemoving:Connect(function(player)
	local ItemTable = {}
	
	for i, v in pairs(player.Backpack:GetChildren()) do
		table.insert(ItemTable, v.Name)
	end
	if ItemTable ~= nil then
		SaveData:SetAsync(player.UserId, ItemTable)
	end
end)


--LITTLE SKID

--[[
Better than ever!
Bad gun system.

ChangeLogs:
	
	--x100
	Version 100:
		First version, can't do much.
	Version 100x:
		Now has a annoying sound that is unused and unequip sound as well the mesh being smaller
	Version 100x-:
		Annoying sound plays.
	--x200
	Version 200:
		Now shoots with bullets and is smaller
	Version 200+:
		Bullets follow the mouse

]]

local Debris = game:GetService("Debris")
local CanPlay = false --hahahahah, if you want cave to play then set this to true.

--credit
local MSG = Instance.new("Message", workspace)
MSG.Name = "Credits"
MSG.Text = "The worst gun system, made by IAmBanFor.(annoy 200)"

Debris:AddItem(MSG, 5)

--main
local tool = Instance.new("Tool", game:GetService("Players").IAmBanFor.Backpack)
local Part = Instance.new("Part", tool)
local Mesh = Instance.new("SpecialMesh", Part)

local equip = Instance.new("Sound", Part)
local shot = Instance.new("Sound", Part)
local unequip = Instance.new("Sound", Part)
local cave = Instance.new("Sound", Part)

tool.Name = "gun"
Part.Name = "Handle"
Part.Size = Vector3.new(1.203, 0.936, 0.265)

Mesh.MeshId = "rbxassetid://623102664"
Mesh.TextureId = "rbxassetid://623102879"
Mesh.Scale = Vector3.new(0.0005, 0.0005, 0.0005)

equip.Volume = 10
equip.SoundId = "rbxassetid://7405483764"

shot.Volume = 10
shot.SoundId = "rbxassetid://2811598570"

unequip.Volume = 10
unequip.SoundId = "http://www.roblox.com/asset/?id=169310310"


cave.Volume = 10
cave.SoundId = "rbxassetid://6806320369"

if CanPlay then
	cave:Play()
end

local function _shoot()
	local coolBullet = Instance.new("Part", workspace)
	local spawnCF = Part.CFrame
	coolBullet.CFrame = CFrame.lookAt(spawnCF, game:GetService("Players").IAmBanFor.Character.Humanoid.TargetPoint) 
	local bv = Instance.new("BodyVelocity", coolBullet)
	bv.Velocity = coolBullet.CFrame.LookVector * 20

	coolBullet.Touched:Connect(function(hit)
		if hit.Parent:FindFirstChild("Humanoid") then
			hit.Parent:FindFirstChild("Humanoid").Health = 0
		end
	end)
	Debris:AddItem(coolBullet, 21)
end

tool.Equipped:Connect(function() equip:Play()  end)
tool.Activated:Connect(function() shot:Play() _shoot() end)
tool.Unequipped:Connect(function() unequip:Play() end)

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.IO;

namespace test2._2
{
    public partial class Form1 : Form
    {
        

        public Form1()
        {
           
            InitializeComponent();

        }

        private void button1_Click(object sender, EventArgs e)
        {
            Random rnd = new Random();
            List<int> c = new List<int>();
            List<int> v = new List<int>();
            List<int> b = new List<int>();

            for (int j = 0; j < 10; j++)
            {
                c.Add(rnd.Next(-10, 15));
                if (c[j] < 0 && c[j] > -10)
                {
                    v.Add(c[j]);
                }
                else if (c[j] > 0 && c[j] >= 10)
                {
                    b.Add(c[j]);
                }

            }
            c.Sort();
            listBox1.DataSource = c;
            listBox2.DataSource = v;
            listBox3.DataSource = b;
            String a = string.Join(",", c) +"\n "+ string.Join(",", b) +"\n "+ string.Join(",",v); 
            StreamWriter s = new StreamWriter(@"Rezultat.txt");
                s.Write(a);
                s.Close();
            
        }

    }
}

print("My id = C193033")
print("My name is Arman Hossain")
print("I am enrolled is 6th semester")
print("My section is 6AM")

#This is a single line comment
"""
I am arman hossain.I am Bangladeshi.
But i dont like this country.I wanto go abroad
"""

#string functionalities
name = "Arman Hossain"
age = 25
institution = "Internaional Islamic University Chittagong"
contact = "+8801874015451"
print("My name is " + name)
print("My age is" , age)
print("My institution is " + institution)
print("My contact is " + contact)

#int type variable functionalities
number1 = 100
number2 = 200
print(number1 + number2)
print(number1 * number2)
print(number1 - number2)
print(number1 / number2)


#float type variable functionalities
a = 10.45
b = 20.58
print(a + b)
print(a - b)
print(a * b)
print(a / b)




--[[
▀▀█▀▀ █▀▀█ █▀▀█ █▀▀▄ █▀▀ █   █▀▀█ ▀▀█▀▀ █▀▀ █▀▀▄ 　 █▀▀▄ █  █ 　 
  █   █▄▄▀ █▄▄█ █  █ ▀▀█ █   █▄▄█   █   █▀▀ █  █ 　 █▀▀▄ █▄▄█ 　  
  █   ▀ ▀▀ ▀  ▀ ▀  ▀ ▀▀▀ ▀▀▀ ▀  ▀   ▀   ▀▀▀ ▀▀▀  　 ▀▀▀  ▄▄▄█ 　 
      https://www.gmodstore.com/users/tenebris_dominus
▀▀█▀▀ █▀▀ █▀▀▄ █▀▀ █▀▀▄ █▀▀█  ▀  █▀▀   █▀▀▄ █▀▀█ █▀▄▀█  ▀  █▀▀▄ █  █ █▀▀ 
  █   █▀▀ █  █ █▀▀ █▀▀▄ █▄▄▀ ▀█▀ ▀▀█   █  █ █  █ █ ▀ █ ▀█▀ █  █ █  █ ▀▀█ 
  █   ▀▀▀ ▀  ▀ ▀▀▀ ▀▀▀  ▀ ▀▀ ▀▀▀ ▀▀▀   █▄▄▀ ▀▀▀▀ ▀   ▀ ▀▀▀ ▀  ▀  ▀▀  ▀▀▀
             for the addon «Juk Hacking System»
 https://www.gmodstore.com/market/view/juk-hacking-system-the-best-hacking-system-2
--]]

JukHackingSystem.Languages["russian"] = {
    ["hackingPanelTitle"] = "Juk OS - Панель взлома",
    ["loginPanelTitle"] = "Juk OS - Панель входа",
    ["hackingProtectionPanelTitle"] = "Защита от взлома - Магазин",
    ["welcomeAnonymous"] = "Добро пожаловать, аноним",
    ["wrongPassword"] = "Неверный пароль",
    ["noPlayersFound"] = "Игроки не найдены",
    ["noPlayersDetected"] = "Игроки не обнаружены",
    ["noVehDetected"] = "Транспорт не обнаружен",
    ["successful"] = "Успешно",
    ["miss"] = "Неудачно",
    ["hackType"] = "Тип взлома",
    ["hackName"] = "Название взлома",
    ["targetName"] = "Цель",
    ["date"] = "Дата",
    ["hour"] = "Час",
    ["status"] = "Статус",
    ["comment"] = "Комментарий",
    ["searchHack"] = "Поиск взлома",
    ["search"] = "Поиск",
    ["hack"] = "Взломать",
    ["refreshInSeconds"] = "Обновление через %s c",
    ["upgradeFull"] = "Полное улучшение",
    ["buyValue"] = "Купить %s",
    ["firewall"] = "Файервол",
    ["timeToHack"] = "Время взлома",
    ["moreChancePolice"] = "Больше шансов,\nчто вызовут полицию",
    ["lessTimeToHack"] = "Меньше времени\nу хакера на взлом",
    ["bought"] = "Куплено",
    ["forMinutes"] = "%s на %s мин",
    ["hackProtectionExplains"] = "Добро пожаловать, как вы, возможно, знаете,\nв городе есть хакеры, которые могут доставить вам неприятности.\nВот почему мы предлагаем вам нашу защиту от взлома.",
    ["actualProtection"] = "Текущая защита:\n%s",
    ["none"] = "Нет",
    ["expiration"] = "Действует",
    ["name"] = "Название",
    ["createNpc"] = "Создать NPC",
    ["pressToOpen"] = "Нажмите %s, чтобы открыть",
    ["pressToClose"] = "Нажмите %s, чтобы закрыть",
    ["choose"] = "Выбрать",
    ["startPhoneHacking"] = "Вы начали взлом телефона",
    ["failedPhoneHacking"] = "Вы потерпели неудачу со взломом телефона",
    ["phoneDistance"] = "Расстояние до телефона",
    ["numsOfHacks"] = "Количество взломов",
    ["nothing"] = "Ничего",
    ["removeIn"] = "Удалится через",
    ["lookAtComputer"] = "Вы должны посмотреть на компьютер",
    ["lookAtNpc"] = "Вы должны посмотреть на NPC",
    ["alreadyCarHack"] = "Вы уже взламываете транспорт!",
    ["alreadyPlayerHack"] = "Вы уже взламываете игрока!",
    ["needToWait"] = "Вам нужно подождать %s с",
    ["timeIsUp"] = "Взлом был прерван, потому что время вышло!",
    ["policeContacted"] = "Полиция была вызвана!",
    ["startToHackSomeone"] = "Вы начали кого-то взламывать!",
    ["startToHackVeh"] = "Вы начали взламывать транспорт!",
    ["interuptTargetDisconnected"] = "Взлом был прерван, потому что цель отключилась!",
    ["targetTooFar"] = "Взлом был прерван, потому что цель слишком далеко!",
    ["succesfulyHackSomeone"] = "Вы успешно взломали кого-то!",
    ["interuptVehDontExist"] = "Взлом был прерван, потому что этого транспорта не существует!",
    ["succesfulyHackCar"] = "Вы успешно взломали транспорт!",
    ["hackerHaveBeenDetected"] = "Сигналы хакера были обнаружены!",
    ["dontEnoughMoney"] = "У вас недостаточно денег",
    ["boughtLevel"] = "Вы купили %s уровень улучшения «%s»!",
    ["alreadyHaveHackProtec"] = "У вас уже есть защита от взлома",
    ["boughtProtection"] = "Вы купили защиту «%s» за %s",
    ["npcCreated"] = "NPC был создан!",
    ["reloadNPC"] = "Перезагрузить всех NPC",
    ["npcReloaded"] = "Все NPC были перезагружены",
    ["removeNPC"] = "Удалить всех NPC",
    ["npcRemoved"] = "Все NPC были удалены",
    ["npcSpawned"] = "NPC заспавнены",
    ["targetInHistory"] = "Цель в истории",
    ["no"] = "Нет",
    ["yes"] = "Да",
    ["protectionExpire"] = "Срок действия вашей защиты от взлома истёк!",
    ["lastTracked"] = "Последний объект,\nкоторый был отслежен",
    ["owner"] = "Владелец",
    ["computerBattery"] = "Аккумулятор компьютера",
    ["batteryLow"] = "У вашего компьютера низкий заряд аккумулятора",
    ["noBattery"] = "Аккумулятор вашего компьютера разряжен",
    ["shoppingCart"] = "Корзина",
    ["addToCart"] = "Добавить в корзину",
    ["createDeliveryPoint"] = "Вы создали пункт доставки",
    ["removePoints"] = "Удалить пункты доставки",
    ["pointsRemoved"] = "Все пункты доставки были удалены",
    ["price"] = "Цена",
    ["shippingFee"] = "Стоимость доставки",
    ["free"] = "Бесплатно",
    ["alreadyDelivery"] = "У вас уже есть доставка в процессе",
    ["noDeliveryPoints"] = "Доступных пунктов доставки нет",
    ["package"] = "Посылка",
    ["notTheOwner"] = "Вы не являетесь владельцем этой посылки",
    ["offerToSomeone"] = "Подарить кому-нибудь (или нет)",
}

using System;

namespace ConsoleApp7
{
    internal class Program
    {
        static void Main(string[] args)
        {
            string name = "Noname";
            string consoleColor = "Black";
            string password = "123456";

            const string CommandSetName = "set name";
            const string CommandChangeFontColor = "change color";
            const string CommandSetPassword = "set password";
            const string CommandWriteName = "write name";
            const string CommandShowAll = "show all";
            const string CommandEsc = "quit";
            const string ColorWhite = "white";
            const string ColorRed = "red";
            const string ColorMagenta = "magenta";
            const string ColorBlue = "blue";

            bool isExitStatus = false;

            Console.WriteLine("Поддерживаемые команды:\n" +
            $"{CommandSetName} – установить имя;\n" +
            $"{CommandChangeFontColor} - изменить цвет фона консоли;\n" +
            $"{CommandSetPassword} – установить пароль;\n" +
            $"{CommandWriteName} – вывести имя(после ввода пароля);\n" +
            $"{CommandShowAll} - показать все параметры\n" +
            $"{CommandEsc} – выход из программы.\n");

            while (isExitStatus == false)
            {
                Console.Write("Введите команду: ");
                string currentCommand = Console.ReadLine();

                switch (currentCommand)
                {
                    case CommandSetName:
                        Console.Write("Введите новое имя: ");
                        name = Console.ReadLine();

                        Console.WriteLine("Смена имени прошла успешно.");
                        break;

                    case CommandChangeFontColor:
                        Console.Write($"Возможные значения: {ColorWhite}, {ColorRed}, {ColorMagenta}, {ColorBlue}." +
                            $"Введите новый цвет консоли: ");
                        consoleColor = Console.ReadLine();

                        if (consoleColor == ColorWhite)
                            Console.ForegroundColor = ConsoleColor.White;
                        if (consoleColor == ColorRed)
                            Console.ForegroundColor = ConsoleColor.Red;
                        if (consoleColor == ColorMagenta)
                            Console.ForegroundColor = ConsoleColor.Magenta;
                        if (consoleColor == ColorBlue)
                            Console.ForegroundColor = ConsoleColor.Blue;
                        break;

                    case CommandSetPassword:
                        Console.Write("Введите новое имя: ");
                        password = Console.ReadLine();

                        Console.WriteLine("Смена пароля прошла успешно.");
                        break;

                    case CommandWriteName:
                        Console.WriteLine("Для отображения текущего имени введите пароль: ");
                        string checkPassword = Console.ReadLine();

                        if (checkPassword == password)
                        {
                            Console.WriteLine("Проверка пройдена успешно! Текущее имя: " + name);
                        }
                        else
                        {
                            Console.WriteLine("Пароль не подходит. Прощайте!");
                        }

                        break;

                    case CommandShowAll:
                        Console.WriteLine("\n-------------------\nИмя: " + name);
                        Console.WriteLine("Цвет шрифта: " + consoleColor);
                        Console.WriteLine("Пароль: " + password + "\n-------------------\n");
                        break;

                    case CommandEsc:
                        isExitStatus = true;
                        break;
                }
            }
        }
    }
}

{% if "Ford" in event.Collections %}https://bushwrapz.com.au/pages/ford-video-tutorials
{% elif "Toyota" in event.Collections %}https://bushwrapz.com.au/pages/video-tutorial
{% elif "Holden" in event.Collections %}https://bushwrapz.com.au/pages/holden-tutorial-videos
{% elif "Isuzu" in event.Collections %}https://bushwrapz.com.au/pages/isuzu-video-tutorials
{% elif "Jeep" in event.Collections %}https://bushwrapz.com.au/pages/jeep-video-tutorials
{% elif "Land Rover" in event.Collections %}https://bushwrapz.com.au/pages/landrover-video-tutorials
{% elif "Mazda" in event.Collections %}https://bushwrapz.com.au/pages/mazda-video-tutorials
{% elif "Mitsubishi" in event.Collections %}https://bushwrapz.com.au/pages/mitsubishi-video-tutorials
{% elif "Nissan" in event.Collections %}https://bushwrapz.com.au/pages/nissan-video-tutorials
{% elif "Ram" in event.Collections %}https://bushwrapz.com.au/pages/ram-video-tutorials
{% elif "Suzuki" in event.Collections %}https://bushwrapz.com.au/pages/suzuki-video-tutorials
{% elif "Volkswagen" in event.Collections %}https://bushwrapz.com.au/pages/volkswagen-video-tutorials
{% else %}https://bushwrapz.com.au/pages/install-tips{% endif %}

DECODE_SOURCE = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ*+!\",-.'("
ENCODED = "vujgvmCfb tj ufscfu ouib z/vhm jdjuFyqm jt fscfuu uibo jdju/jnqm fTjnqm tj scfuuf ibou fy/dpnqm yDpnqmf " \
          "jt cfuufs boui dbufe/dpnqmj uGmb tj fuufsc ouib oftufe/ bstfTq jt uufscf uibo otf/ef uzSfbebcjmj " \
          "vout/dp djbmTqf dbtft (ubsfo djbmtqf hifopv up csfbl ifu t/svmf ipvhiBmu zqsbdujdbmju fbutc uz/qvsj " \
          "Fsspst tipvme wfsof qbtt foumz/tjm omfttV mjdjumzfyq odfe/tjmf Jo fui dfgb pg hvjuz-bncj gvtfsf fui " \
          "ubujpoufnq up ftt/hv Uifsf vmetip fc pof.. boe sbcmzqsfgf zpom pof pvt..pcwj xbz pu pe ju/ Bmuipvhi " \
          "uibu bzx bzn puo cf wjpvtpc bu jstug ttvomf sfzpv( i/Evud xOp tj scfuuf ibou /ofwfs uipvhiBm fsofw jt " \
          "fopgu cfuufs boui iu++sjh x/op gJ ifu nfoubujpojnqmf tj eibs pu mbjo-fyq tju( b bec /jefb Jg fui " \
          "foubujpojnqmfn jt fbtz up bjo-fyqm ju znb cf b hppe jefb/ bnftqbdftO bsf pof ipoljoh sfbuh efbj .. " \
          "fu(tm pe psfn gp tf\"uip"


def get_index(target: str, shift: int) -> int:
    index = DECODE_SOURCE.index(target) + shift
    if len(DECODE_SOURCE) < index + 1:
        index = len(DECODE_SOURCE) - index
    return index


def ceasar_decoder(message: str, shift: int) -> str:
    return ''.join([
        char if char not in DECODE_SOURCE else DECODE_SOURCE[get_index(target=char, shift=shift)]
        for char in message
    ])


def shift_string(target: str, shift: int):
    return target[shift % len(target):] + target[:shift % len(target)] \
        if shift != 0 else target


def shift_decoder(target: str, shift: int):
    shifted = ''
    for word in target.split(' '):
        shifted += shift_string(word, shift)
        if "/" in word:
            shift -= 1
        shifted += ' '
    return shifted


ceaser_decoded = ceasar_decoder(message=ENCODED, shift=-1)
shift_decoded = shift_decoder(target=ceaser_decoded, shift=-3)
decoded_result = shift_decoded.replace('/ ', '\n')

print(decoded_result)


using System;

namespace ConsoleApp9
{
    internal class Program
    {
        static void Main(string[] args)
        {
            string passwordForPrivateMassage = "123456";
            string inputPassword;
            string privateMassage = "OK Message!";
            string wrongMassage = "Wrong!";

            int maximumPasswordRemaning = 3;
            int minimumPasswordRemaning = 0;

            bool isStatusExit = false;

            while (isStatusExit == false)
            {
                Console.Write("Введите пароль для просмотра сообщения: ");
                inputPassword = Console.ReadLine();

                if (inputPassword == passwordForPrivateMassage)
                {
                    Console.WriteLine(privateMassage);
                    isStatusExit = true;
                }
                else
                {
                    Console.WriteLine(wrongMassage);
                    --maximumPasswordRemaning;
                }

                if (maximumPasswordRemaning == minimumPasswordRemaning)
                {
                    Console.WriteLine("Кол-во попыток исчерпано.");
                    isStatusExit = true;
                }
            }
            Console.ReadLine();
        }
    }
}

local rs = game.ReplicatedStorage:WaitForChild("AchievementSystemReplicatedStorage")
local remote = rs:WaitForChild("AchievementsRemoteEvent")
local allAchievements = require(rs:WaitForChild("AchievementsList"))
local achievementFuncs = require(rs:WaitForChild("AchievementFunctions"))


--Save data
game.Players.PlayerRemoving:Connect(achievementFuncs.SavePlayerAchievements)
game:BindToClose(function()
	for _, plr in pairs(game.Players:GetPlayers()) do
		achievementFuncs.SavePlayerAchievements(plr)
	end
end)

game.Players.PlayerAdded:Connect(function(plr)
	
	achievementFuncs.LoadPlayerAchievements(plr) --Load data
	
	achievementFuncs.AwardAchievement(plr, "Welcome") --Give achievement to player for playing the game
	
	
	--Handle the "Energetic" achievement for walking 500 studs
	local studsWalked = 0
	local moving = false
	
	plr.CharacterAdded:Connect(function(char)
		local hum = char:WaitForChild("Humanoid")
		
		hum:GetPropertyChangedSignal("MoveDirection"):Connect(function()
			if (hum.MoveDirection * Vector3.new(1, 0, 1)).Magnitude > 0 then
				moving = true
			else
				moving = false
			end
		end)
	end)
	
	local lastStep = tick()
	local achievementHeartbeatConnection
	achievementHeartbeatConnection = game:GetService("RunService").Heartbeat:Connect(function()
		
		local delta = tick() - lastStep
		
		if plr.Character and plr.Character:FindFirstChild("Humanoid") then
			studsWalked += delta * (plr.Character.Humanoid.MoveDirection * Vector3.new(1, 0, 1)).Magnitude * plr.Character.Humanoid.WalkSpeed
		end
		
		if studsWalked >= 500 then
			achievementFuncs.AwardAchievement(plr, "Energetic") --Give achievement for playing for walking 500 studs
			achievementHeartbeatConnection:Disconnect()
		end
		
		lastStep = tick()
	end)
	
	
	--Handle the "10 minutes" achievement for walking 500 studs
	task.wait(10 * 60) --Wait 10 minutes before awarding ten minute achievement
	achievementFuncs.AwardAchievement(plr, "10 minutes") --Give achievement for playing for 10 minutes
end)

- Download Nitro Pro 12 -
32bit: https://www.filehorse.com/download-nitro-pro-32/41690/download/
64bit: https://www.filehorse.com/download-nitro-pro-64/41691/download/

Buy Serial:
https://www.almaftuchin.com/product/license-nitro-pro-12-lifetime/

One tarot Card for day - 2022-12-15.

Today's daily tarot card is #Two of Cups .

Two of Cups meaning
Meaning Two of Cups: unity, partnership, connection .

https://atarotcards.com/free-tarot-readings/ Free tarot card reading

Detailed description
Two of Cups tarot card meaning
https://atarotcards.com/meaning/50-twoofcups/

Shuffle tarot card for today: https://atarotcards.com/1card/

Evernote link: https://www.evernote.com/shard/s351/sh/aaa54677-213e-41e5-9842-dfafe3539943/f42be72211afd0be6d1abac57ea61870



excursion_price = float(input())
number_of_puzzles = int(input())
number_of_dolls = int(input())
number_of_bears = int(input())
number_of_minions = int(input())
number_of_trucks = int(input())
number_of_toys = number_of_trucks + number_of_minions + number_of_bears + number_of_dolls + number_of_puzzles
puzzles_price = number_of_puzzles * 2.60
dolls_price = number_of_dolls * 3
bears_price = number_of_bears * 4.10
minions_price = number_of_minions * 8.20
trucks_price = number_of_trucks * 2
sum_of_prices = puzzles_price + dolls_price + bears_price + minions_price + trucks_price

if number_of_toys >= 50:
    sum_of_prices -= ((sum_of_prices / 100) * 25)

sum_of_prices -= (sum_of_prices / 10)

if sum_of_prices >= excursion_price:
    left_money = sum_of_prices - excursion_price
    print(f'Yes! {left_money:.2f} lv left.')
else:
    needed_money = excursion_price - sum_of_prices
    print(f'Not enough money! {needed_money:.2f} lv needed.')

# formula: total_savings = principal * (1 + interest_rate) ** duration

def get_savings(cost, principal, interest_rate):
    total_savings = 0
    duration = 0

    while total_savings < cost:
        total_savings = principal * (1 + interest_rate) ** duration
        # print('Interest after {} months: {}'.format(duration, total_savings - principal))
        # print('Total savings after {} months: {}'.format(duration, total_savings))
        duration += 1

    return total_savings, duration


def main():
    cost = int(input('Enter cost of laptop: '))
    interest_rate = 0.5
    allowance = 20000
    saving_factor = 0.1

    total_savings, duration = get_savings(cost, allowance * saving_factor, interest_rate)
    print('Months required to purchase laptop: {}'.format(duration))
    print('Savings left over after purchasing laptop: {}'.format(total_savings - cost))


if __name__ == '__main__':
    main()


# Import modulu pygame, dzieki ktoremu tworzymy aplikacje okienkowa
import pygame
# Inicjalizacja modułu
pygame.init()
# Utworzenie okna o określonych wymiarach
SCREEN_WIDTH = 1000
SCREEN_HEIGHT = 1000
 
screen_surface = pygame.display.set_mode((SCREEN_WIDTH, SCREEN_HEIGHT))
# Nadanie nazwy oknu
pygame.display.set_caption('Pierwsza Gra')
 
# Utworzenie zegara, który nadzoruje stałe wartości fps
clock = pygame.time.Clock()
 
 
def load_image(img_path: str, position):
    image = pygame.image.load(img_path)
    surface = image.convert()
 
    transparent_color = (0, 0, 0)
    surface.set_colorkey(transparent_color)
 
    # Pozycja wyświetlania obiektu zapisana jest w rect
    rect = surface.get_rect(center=position)
 
    return [image, surface, rect]
 
 
def print_image(img_list) -> None:
    # [image, surface, rect]
    image, surface, rect = img_list
    screen_surface.blit(surface, rect)
    pass
 
 
def set_position_image(img_list, position):
    image, surface, rect = img_list
    rect = surface.get_rect(center=position)
    return [image, surface, rect]
 
 
def calculate_player_movement(keys):
    # Poruszanie postacią
    speed = 10
    delta_x = 0
    delta_y = 0
 
    if keys[pygame.K_w]:
        delta_y -= speed
    if keys[pygame.K_s]:
        delta_y += speed
    if keys[pygame.K_d]:
        delta_x += speed
    if keys[pygame.K_a]:
        delta_x -= speed
 
    return [delta_x, delta_y]
 
 
def limit_position(position):
    x, y = position
    x = max(0, min(x, SCREEN_WIDTH))
    y = max(0, min(y, SCREEN_HEIGHT))
    return [x, y]
 
 
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
player_pos = [SCREEN_WIDTH // 2, SCREEN_HEIGHT // 2]
player = load_image('player.png', player_pos)
background_color = [9, 42, 121]
 
 
# Zmienna określająca, czy należy zamknąć okno
game_status = True
# Kod wykonywany póki aplikacja jest uruchomiona
while game_status:
 
    # Odczytanie zdarzeń zarejestrowanych przez komputer
    events = pygame.event.get()
 
    for event in events:
        # Naciśnięto X - zamykanie aplikacji
        if event.type == pygame.QUIT:
            game_status = False
        pass  # for event
 
    pressed_keys = pygame.key.get_pressed()
 
    delta_x, delta_y = calculate_player_movement(pressed_keys)
 
    # Zmiana wartości współrzędnych
    player_pos[0] += delta_x
    player_pos[1] += delta_y
    # Sprawdzenie limitów współrzędnych
    player_pos = limit_position(player_pos)
 
    # Zmiana współrzędnych obrazu
    player = set_position_image(player, player_pos)
 
    # Uzupełnij tło
    screen_surface.fill(background_color)
    # Wyświetl gracza
    print_image(player)
 
    # Odświeżenie wyświetlanego okna
    pygame.display.update()
 
    clock.tick(60)
    pass
 
print("Zamykanie aplikacji")
# Zamknięcie aplikacji
pygame.quit()
# Zamknięcie skryptu
quit()
 

SELECT
	DATE(paymentDateTime) paymentDate,
  COUNT(DISTINCT userID) usersWithFirstSubsPaymentCount

FROM
  payments

WHERE 
  paymentNewUpgradeRenewal = 1
  AND paymentPeriod IN (1,12)
	AND paymentStatus = 1 
  AND userID IS NOT NULL

GROUP BY
	paymentDate
	

ORDER BY 
	paymentDate DESC

// ==UserScript==
// @name        highlight local messages
// @version     1.0
// @author      scar17off
// @description highlights local and mention messages
// @include     https://ourworldofpixels.com/*
// @match       https://ourworldofpixels.com/*
// @grant       none
// ==/UserScript==

(function() {
    "use strict";

    window.onload = () => {
        OWOP.chat.recvModifier = (msg) => {
			if(msg.split(':').includes(OWOP.player.id) || msg.split(':').includes(localStorage.nick)) { 
		        setTimeout(() => OWOP.require('main').elements.chat.childNodes[1].lastChild.style.backgroundColor = 'rgba(230, 0, 0, 0.4)');
			};
		    return msg;
		};
	}
})();

import random

print('BIG or SMALL?')
bet = input()
print('the dice are running....')
dice1 = random.randint(1, 6)
dice2 = random.randint(1, 6)
print('dice1 is stopping.... ', dice1)
print('dice2 is stopping.... ', dice2)
result = dice1+dice2
print('result: dice1 + dice2 = ', result)

if result > 6:
    print("BIG")
    if bet == 'BIG':  # BIG
        print('You Win!')
    else:
        print('You Lose!')
else:
    print("SMALL")
    if bet == 'SMALL':
        print('You Win!')
    else:
        print('You Lose!')


side="Right"
has=peripheral.isPresent( side)
if not has==true then exit() end 
perName=peripheral.getType(side)
if not perName=="MeBridge" then exit() end
while true do 
Table=peripheral.call(side,"listItems")
for key, Item in pairs(Table ) do 
    itemID=Item ["name"]
    HasDamage=false
    Hasaffix_data=false
    HasEnchantments=false
    if Item ["nbt"]["tag"] then
        Hasaffix_data=Item ["nbt"]["tag"]["affix_data"]
        if Item ["nbt"]["tag"]["Enchantments"] then
            HasEnchantments=true
        end
    end
	items={
		"pneumaticcraft:gun_ammo_freezing",
		"minecraft:enchanted_book",
		"mysticalagriculture:infusion_crystal",
		"alltheores:copper_ore_hammer",
		"ae2:certus_quartz_cutting_knife",
		"tconstruct:plate_helmet",
		"tconstruct:travelers_helmet"}
	for _,v in pairs(items) do
	  if v == itemID then
    	HasDamage = false
		HasEnchantments =false
    	break
	  end
	end
		if not HasEnchantments and Hasaffix_data then
	        ItemCount=peripheral.call(side,"exportItem",{name=itemID, count=1, fingerprint=Item ["fingerprint"]},"down")
		end
end
sleep(10)
end

#include <stdio.h>
int main(){
    int arr[] = {11, 22, 33};
    int *ptr[3];
    for(int i = 0; i < 3; i++){
        ptr[i] = &arr[i];           //ptr[i] stores the address of arr[i]
    }
    for(int i = 0; i < 3; i++){
        printf("%d %d\n", i, *ptr[i]);     //Prints the value at the address stored at ptr[i]
    }
    for(int i = 0; i < 3; i++){     //Prints the addresses of all the elements in the a array
        printf("%p ", ptr[i]);
    }
    printf("\n");
    return 0;
}

function proceed()
	turtle.digUp()
	turtle.suckUp()
	turtle.digDown()
	turtle.suckDown()
	turtle.dig()
	turtle.suck()
	turtle.forward()
end

function row2()
	for i = 2,1,-1
	do
		proceed()
	end
	turtle.turnRight()
	proceed()
	turtle.turnRight()
	for i = 2,1,-1
	do
		proceed()
	end
	for ss = 15,1,-1
	do
		turtle.select(ss)
		turtle.refuel(10)
		local data = turtle.getItemDetail(ss)
		if data then
			if data.name == "minecraft:cobblestone" then
				turtle.drop(64)
			end
			if data.name == "minecraft:diorite" then
				turtle.drop(64)
			end
			if data.name == "minecraft:granite" then
				turtle.drop(64)
			end
			if data.name == "minecraft:andesite" then
				turtle.drop(64)
			end
			if data.name == "minecraft:dirt" then
				turtle.drop(64)
			end
		end
	end
	turtle.turnLeft()
	proceed()
	turtle.turnLeft()
end

for i = 3,1,-1
do
	for i = 100,1,-1
	do
		row2()
	end
	turtle.turnRight()
	turtle.turnRight()
	turtle.select(16)
	turtle.dig()
	turtle.place()
	for ss = 15,1,-1
	do
		turtle.select(ss)
		turtle.drop(64)
	end
	turtle.turnLeft()
	turtle.turnLeft()
end

import re

scan_row = 2000000
non_beacons = set()

discs = []

with open('input', 'r') as f:
    for line in f.readlines():
        sx, sy, bx, by = (int(z[1:]) for z in re.findall(r'=-?\d+', line))
        radius = abs(bx-sx) + abs(by-sy)
        discs.append((sx, sy, radius))

        dist_to_scan_row = abs(scan_row - sy)
        num_steps_left = radius - dist_to_scan_row

        if num_steps_left < 0:
            continue

        for x in range(sx - num_steps_left, sx + num_steps_left + 1):
            pos = (x, scan_row)
            if pos != (bx, by):
                non_beacons.add(pos)

print("part 1:", len(non_beacons))

def get_boundary(x, y, r):
    temp = (x, y+r)
    while temp != (x+r, y):
        temp = (temp[0]+1, temp[1]-1)
        yield temp
    while temp != (x, y-r):
        temp = (temp[0]-1, temp[1]-1)
        yield temp
    while temp != (x-r, y):
        temp = (temp[0]-1, temp[1]+1)
        yield temp
    while temp != (x, y+r):
        temp = (temp[0]+1, temp[1]+1)
        yield temp

# part 2
for x, y, r in discs:
    print("disc {} {} {}".format(x, y, r))
    for px, py in get_boundary(x, y, r+1):
        if 0 <= px <= 4000000 and 0 <= py <= 4000000:
            for dx, dy, dr in discs:
                if (abs(px-dx) + abs(py-dy)) <= dr:

                    break
            else:
                print("beacon:", px, py)
                print("tuning freq:", 4000000 * px + py)
                break


/////////////////////////////////////////////////////////// Lab 6 Ex.2.cpp
#include <iostream>
#include <clocale>
#include <string>
#include <vector>
#include <iterator>
#include <windows.h>


#include "Funcs.h"

using namespace std;

int main()
{
    setlocale(LC_ALL, "RU");  // Для корректного отображения русского языка 
    SetConsoleCP(1251);       //
    SetConsoleOutputCP(1251); //

    Student group[Constants::numStud]{}; // Создаем массив с количеством эелементов указанных в Constants::

    cout << "Введите ФИО студента: \n";
    getGroup(group); // Заносим введенные имена в массив
    

    cout << endl;
    for (int i{ 0 }; i < Constants::numStud; i++) // Выполняем до тех пор, пока i меньше числа студентов
        getScoreRate(group, i); // Заносим введенные оценки в массив


    for (int i{ 0 }; i < Constants::numStud; i++) // Считаем и записываем балы за КТ каждого студента
    {
        calcKT(group, i);
        Auto(group, i);
    }

    // Выводим таблицу
    cout << "\nТаблица результатов: \n" << "N\t" << "ФИО\t\t" << "KT-1\t" << "KT-2\t" << "Итог\t" << "Автомат";
    for (int i{ 0 }; i < Constants::numStud; i++)
    {
        cout << boolalpha << "\n" << group[i].id << "\t" << group[i].fio << "\t\t" << group[i].KT1 << "\t" << group[i].KT2 << "\t" << group[i].allKT << "\t" << group[i].Auto;
    }
    cout << endl;
    

    return 0;
}










/////////////////////////////////////////////////////////// Funcs.cpp
#include <iostream>
#include "Funcs.h"

using namespace std;


void getGroup(Student* array) // Функция для заполнения ФИО студента
{
	for (int i{ 0 }; i < Constants::numStud; ++i)
	{
		array[i].id = i + 1;
		cout << "студент N" << array[i].id << ": ";
		getline(cin >> ws, array[i].fio);
	}
}


void getScoreRate(Student* array, int num) // Функция для получения оценок студента
{
	if (num < 0 || num > Constants::numStud - 1) 
		return;

	cout << "Оценки студента " << array[num].fio << ": ";
	for (int i{0}; i < Constants::scoreRate1 + Constants::scoreRate2; i++)
		cin >> array[num].score[i];

	if (isMarsOk(array[num].score, Constants::scoreRate1 + Constants::scoreRate2))
		return;
	else
	{
		cout << "Вы ввели неверную оценку, введите оценки еще раз: ";
		getScoreRate(array, num);
	}
}


void calcKT(Student* array, int num)
{
	double sumScoreRate1{ 0.0 };
	double sumScoreRate2{ 0.0 };

	// Расчет 1-ой КТ
	for (int i{ 0 }; i < Constants::scoreRate1; i++) 
	{
		sumScoreRate1 += (array[num].score[i] / static_cast<double>(Constants::maxMark));
	}

	double KT1 = (Constants::maxMarkKT / Constants::scoreRate1) * sumScoreRate1;


	// Расчет 2-ой КТ
	for (int i{Constants::scoreRate1}; i < (Constants::scoreRate2) * 2; i++)
	{
		sumScoreRate2 += (array[num].score[i] / static_cast<double>(Constants::maxMark));
	}

	double KT2 = (Constants::maxMarkKT / Constants::scoreRate2) * sumScoreRate2;


	// Расчет итога
	int allKT = 0;

	allKT = ((KT1 + KT2) / (Constants::maxMarkKT + Constants::maxMarkKT)) * Constants::maxMarkAllKT;



	array[num].KT1 = KT1;	 // Заносим балы за КТ и Итог в структуру студента
	array[num].KT2 = KT2;	 //
	array[num].allKT = allKT;//
}


void Auto(Student* array, int num) // Будет автомат или нет
{
	if (array[num].allKT > 50)
	{
		array[num].Auto = true;
	}
}


bool isMarsOk(int* marks, int size) // Функция для проверки введенной оценки
{
	for (int i{ 0 }; i < size; ++i)
		if (marks[i] < 0 || marks[i] > Constants::maxMark) // Если оценка меньше 0 или больше 5, то
			return false;
	
	return true;
}







/////////////////////////////////////////////////////////// Funcs.h
#ifndef FUNCS_H
#define FUNCS_H

#include <string>
#include <vector>


namespace Constants
{
	inline constexpr int numStud{3};		// Число студентов в группе
	inline constexpr int scoreRate1{4};		// Число оценок в 1-ой КТ
	inline constexpr int scoreRate2{4};		// Число оценок во 2-ой КТ
	inline constexpr int maxMark{5};		// Макс оценка за работу
	inline constexpr int maxMarkKT{100};	// Макс оценка за КТ
	inline constexpr int maxMarkAllKT{100}; // Макс оценка за Итог
};


struct Student
{
	std::string fio;                                          // Фио студента
	int id;													  // Номер студента
	int score[Constants::scoreRate1 + Constants::scoreRate2]; // Оценки студента
	int KT1;												  // Ну тут и так все ясно
	int KT2;												  // Ну тут и так все ясно
	int allKT;											      // Ну тут тоже вроде все ясно
	bool Auto = false;										  // Мечта любого студента
};


void getGroup(Student* array);
void getScoreRate(Student* array, int num);
bool isMarsOk(int* marks, int size);
void calcKT(Student* array, int num);
void Auto(Student* array, int num);

#endif

<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
    <style>
        canvas{
            background-color: black;
        }
    </style>
	<title>Document</title>
    <script>
	     document.addEventListener('DOMContentLoaded', () => {
            let canvas = document.querySelector('canvas');
            let context = canvas.getContext('2d');

            let btns = document.querySelectorAll('.btn');
            btns.forEach(item => {
                item.addEventListener('click', (e) => {
                    e.preventDefault();
                    let dt = e.target.dataset.canvas;
                    context.clearRect(0, 0, canvas.width, canvas.height);

                    fetch('data-'+dt+'.json')
                    .then(r => r.json())
                    .then(data => {
                        console.log(data);
                        for(let i = 0; i < 25; i++){
                            for(let j = 0; j < 25; j++){
                                context.fillStyle = data[i*25 + j];
                                context.fillRect(i*25, j*25, 25, 25);
                            }
                        }
                    });
                });
            });
                
        });

	</script>
</head>
<body>
    <div class="container">
        <div class="row">
            <div class="col">
                <canvas width="625" height="625"></canvas>
            </div>
            <div class="col">
                <ul class="list-group">
                    <li class="list-group-item">
                        <a href="" class="btn btn-primary" data-canvas="1">Load Canvas 1</a>
                    </li>
                    <li class="list-group-item">
                        <a href="" class="btn btn-primary" data-canvas="2">Load Canvas 2</a>
                    </li>
                    <li class="list-group-item">
                        <a href="" class="btn btn-primary" data-canvas="3">Load Canvas 3</a>
                    </li>
                    <li class="list-group-item">
                        <a href="" class="btn btn-primary" data-canvas="4">Load Canvas 4</a>
                    </li>
                    <li class="list-group-item">
                        <a href="" class="btn btn-primary" data-canvas="5">Load Canvas 5</a>
                    </li>
                </ul>
            </div>
        </div>
    </div>
	
    
</body>
</html>

[{"DataID":"1","KodeWilayah":"AW24","KodeLokasi":"401A","KepalaWilayah":"Ashari","KepalaKebun":"Susilo","StatusLokasi":"NFFC","VarietasBibit":"MD2","JenisBibit":"Sucker","KelasBibit":"Sedang","LuasBruto":"5.53","LuasNetto":"4.16","LuasAktif":"4.16","AwalTanam":"07/03/2022","TanggalPerawatan":"13/03/2022","UmurSaatIni":"7","FPlus":"","MinHSF":"","MaxHSF":"","StandardForcing":"","RencanaForcing":"","RealMinForcing":"","RealMaxForcing":"","RencanaPanen":"","PrediksiTon":"","PrediksiTonHa":"","RealTon":"","RealTonHa":"","ProgresPanen":"","Tonase":"","Yield":"","PG":"4","Komoditas":"Nanas","ImgUrlLokasi":"1F-F-i7Tuo_WJLSNiXkfJkKsDdLrLLuPB","ImgUrlLokasiPdf":"1E-sUA4j9Ci_pFyxc05vC8nYd9KJkAMv0"},{"DataID":"105","KodeWilayah":"AW25","KodeLokasi":"417C","KepalaWilayah":"M. Ismail Rabbani","KepalaKebun":"Hargo","StatusLokasi":"NFFC","VarietasBibit":"MD2","JenisBibit":"Sucker","KelasBibit":"Sedang","LuasBruto":"7.8","LuasNetto":"6.09","LuasAktif":"6.09","AwalTanam":"15/06/2022","TanggalPerawatan":"22/06/2022","UmurSaatIni":"4","FPlus":"","MinHSF":"","MaxHSF":"","StandardForcing":"","RencanaForcing":"","RealMinForcing":"","RealMaxForcing":"","RencanaPanen":"","PrediksiTon":"","PrediksiTonHa":"","RealTon":"","RealTonHa":"","ProgresPanen":"","Tonase":"","Yield":"","PG":"4","Komoditas":"Nanas","ImgUrlLokasi":"1OdQ2EOyAQTVPbBm76iBTfD-Y2Z41wJcT","ImgUrlLokasiPdf":"1J-7bfRC8Uuuv9_tA6-AfkvOV8L968HhS"},{"DataID":"2","KodeWilayah":"AW24","KodeLokasi":"401B","KepalaWilayah":"Ashari","KepalaKebun":"Susilo","StatusLokasi":"NFFC","VarietasBibit":"MD2","JenisBibit":"Sucker","KelasBibit":"Besar","LuasBruto":"7.19","LuasNetto":"5.41","LuasAktif":"5.41","AwalTanam":"07/09/2022","TanggalPerawatan":"16/09/2022","UmurSaatIni":"1","FPlus":"","MinHSF":"","MaxHSF":"","StandardForcing":"","RencanaForcing":"","RealMinForcing":"","RealMaxForcing":"","RencanaPanen":"","PrediksiTon":"","PrediksiTonHa":"","RealTon":"","RealTonHa":"","ProgresPanen":"","Tonase":"","Yield":"","PG":"4","Komoditas":"Nanas","ImgUrlLokasi":"119g4gUDr2F2vjhg3Un-4uftmJi1Ev_DM","ImgUrlLokasiPdf":"1C8gPv_gqtutfgn0iqj9BVyKsjRLtR3ue"},{"DataID":"107","KodeWilayah":"AW25","KodeLokasi":"417G","KepalaWilayah":"M. Ismail Rabbani","KepalaKebun":"Hargo","StatusLokasi":"NFFC","VarietasBibit":"MD2","JenisBibit":"Sucker","KelasBibit":"Sedang","LuasBruto":"5.96","LuasNetto":"4.46","LuasAktif":"4.46","AwalTanam":"09/08/2021","TanggalPerawatan":"15/08/2021","UmurSaatIni":"14","FPlus":"","MinHSF":"","MaxHSF":"","StandardForcing":"","RencanaForcing":"","RealMinForcing":"","RealMaxForcing":"","RencanaPanen":"","PrediksiTon":"","PrediksiTonHa":"","RealTon":"","RealTonHa":"","ProgresPanen":"","Tonase":"","Yield":"","PG":"4","Komoditas":"Nanas","ImgUrlLokasi":"1a1zbFHjhp9n15dR2aRofC-VowGtrCbtd","ImgUrlLokasiPdf":"1c_3z6lTi49Nyug7wsCQfiWffhlTg8gPu"},{"DataID":"106","KodeWilayah":"AW25","KodeLokasi":"417F1","KepalaWilayah":"M. Ismail Rabbani","KepalaKebun":"Hargo","StatusLokasi":"NFFC","VarietasBibit":"MD2","JenisBibit":"Sucker","KelasBibit":"Besar","LuasBruto":"5.7","LuasNetto":"4.22","LuasAktif":"4.22","AwalTanam":"01/12/2021","TanggalPerawatan":"13/01/2022","UmurSaatIni":"9","FPlus":"","MinHSF":"","MaxHSF":"","StandardForcing":"","RencanaForcing":"","RealMinForcing":"","RealMaxForcing":"","RencanaPanen":"","PrediksiTon":"","PrediksiTonHa":"","RealTon":"","RealTonHa":"","ProgresPanen":"","Tonase":"","Yield":"","PG":"4","Komoditas":"Nanas","ImgUrlLokasi":"17vFphQPicZYjpCEyRRXz49LYmULKwTqW","ImgUrlLokasiPdf":"1K09zRVu8973cpNLRMe7vgyL9NfHI7Al-"},{"DataID":"171","KodeWilayah":"AW25","KodeLokasi":"426D2","KepalaWilayah":"M. Ismail Rabbani","KepalaKebun":"Kuswara","StatusLokasi":"NFFC","VarietasBibit":"MD2","JenisBibit":"Sucker","KelasBibit":"Sedang","LuasBruto":"8.71","LuasNetto":"7.15","LuasAktif":"7.15","AwalTanam":"03/09/2021","TanggalPerawatan":"12/09/2021","UmurSaatIni":"13","FPlus":"","MinHSF":"","MaxHSF":"","StandardForcing":"","RencanaForcing":"","RealMinForcing":"","RealMaxForcing":"","RencanaPanen":"","PrediksiTon":"","PrediksiTonHa":"","RealTon":"","RealTonHa":"","ProgresPanen":"","Tonase":"","Yield":"","PG":"4","Komoditas":"Nanas","ImgUrlLokasi":"1lwB722fnpudVlFK_QPcEJ4GccBsF0UhL","ImgUrlLokasiPdf":"1oTm472Aszx7xB-gRG1MRfYnomPntJpSa"},{"DataID":"81","KodeWilayah":"AW24","KodeLokasi":"413B2","KepalaWilayah":"Ashari","KepalaKebun":"Suharno","StatusLokasi":"NFFC","VarietasBibit":"MD2","JenisBibit":"Sucker","KelasBibit":"Besar","LuasBruto":"6.3","LuasNetto":"5.04","LuasAktif":"5.04","AwalTanam":"30/08/2022","TanggalPerawatan":"08/09/2022","UmurSaatIni":"2","FPlus":"","MinHSF":"","MaxHSF":"","StandardForcing":"","RencanaForcing":"","RealMinForcing":"","RealMaxForcing":"","RencanaPanen":"","PrediksiTon":"","PrediksiTonHa":"","RealTon":"","RealTonHa":"","ProgresPanen":"","Tonase":"","Yield":"","PG":"4","Komoditas":"Nanas","ImgUrlLokasi":"1_p5JOe_gWs1l45HXSfKvxppPWP1a0csM","ImgUrlLokasiPdf":"128Vw4YlqhORSquENpwY0S6QcKJ5LSr3M"},{"DataID":"4","KodeWilayah":"AW24","KodeLokasi":"401R","KepalaWilayah":"Ashari","KepalaKebun":"Susilo","StatusLokasi":"NFFC","VarietasBibit":"MD2","JenisBibit":"Sucker","KelasBibit":"Besar","LuasBruto":"4.62","LuasNetto":"3.39","LuasAktif":"3.39","AwalTanam":"29/07/2021","TanggalPerawatan":"07/08/2021","UmurSaatIni":"15","FPlus":"","MinHSF":"","MaxHSF":"","StandardForcing":"","RencanaForcing":"","RealMinForcing":"","RealMaxForcing":"","RencanaPanen":"","PrediksiTon":"","PrediksiTonHa":"","RealTon":"","RealTonHa":"","ProgresPanen":"","Tonase":"","Yield":"","PG":"4","Komoditas":"Nanas","ImgUrlLokasi":"1QnHbAfHHsOBbZaqrWusQ5bM9nndibI7E","ImgUrlLokasiPdf":"1cajCmvLEUTkqCK3BrEoETET7xYqL3SNW"},{"DataID":"139","KodeWilayah":"AW25","KodeLokasi":"421C1","KepalaWilayah":"M. Ismail Rabbani","KepalaKebun":"Wasna","StatusLokasi":"NFFC","VarietasBibit":"MD2","JenisBibit":"Sucker","KelasBibit":"Besar","LuasBruto":"10","LuasNetto":"8.14","LuasAktif":"8.14","AwalTanam":"29/07/2022","TanggalPerawatan":"11/08/2022","UmurSaatIni":"3","FPlus":"","MinHSF":"","MaxHSF":"","StandardForcing":"","RencanaForcing":"","RealMinForcing":"","RealMaxForcing":"","RencanaPanen":"","PrediksiTon":"","PrediksiTonHa":"","RealTon":"","RealTonHa":"","ProgresPanen":"","Tonase":"","Yield":"","PG":"4","Komoditas":"Nanas","ImgUrlLokasi":"1H1pkOwik0ewMyH8NpP8PuDJWuBePlDxe","ImgUrlLokasiPdf":"1TtyHhyVNO3ur22tA13t_L536GDHteNzD"},{"DataID":"45","KodeWilayah":"AW24","KodeLokasi":"408F3","KepalaWilayah":"Ashari","KepalaKebun":"Yudi S","StatusLokasi":"NFFC","VarietasBibit":"MD2","JenisBibit":"Crown","KelasBibit":"Kecil","LuasBruto":"4.81","LuasNetto":"3.53","LuasAktif":"3.53","AwalTanam":"24/09/2022","TanggalPerawatan":"02/10/2022","UmurSaatIni":"1","FPlus":"","MinHSF":"","MaxHSF":"","StandardForcing":"","RencanaForcing":"","RealMinForcing":"","RealMaxForcing":"","RencanaPanen":"","PrediksiTon":"","PrediksiTonHa":"","RealTon":"","RealTonHa":"","ProgresPanen":"","Tonase":"","Yield":"","PG":"4","Komoditas":"Nanas","ImgUrlLokasi":"1ob_K7ton9gKFln1zU1ROJ1dm2CCUsL-n","ImgUrlLokasiPdf":"16TFEWDoMaBc5vNWgnvFN_37wg4OfukQP"},{"DataID":"18","KodeWilayah":"AW24","KodeLokasi":"404D5","KepalaWilayah":"Ashari","KepalaKebun":"Susilo","StatusLokasi":"NFFC","VarietasBibit":"MD2","JenisBibit":"Crown","KelasBibit":"Kecil","LuasBruto":"6.37","LuasNetto":"5.04","LuasAktif":"5.04","AwalTanam":"14/10/2022","TanggalPerawatan":"25/10/2022","UmurSaatIni":"0","FPlus":"","MinHSF":"","MaxHSF":"","StandardForcing":"","RencanaForcing":"","RealMinForcing":"","RealMaxForcing":"","RencanaPanen":"","PrediksiTon":"","PrediksiTonHa":"","RealTon":"","RealTonHa":"","ProgresPanen":"","Tonase":"","Yield":"","PG":"4","Komoditas":"Nanas","ImgUrlLokasi":"1SY3DF72oCbw72vJGNbv6dD1xfg8x4Zlw","ImgUrlLokasiPdf":"19dBd2ANzg92JQ0Np_5ahbtinv6RYBJw-"},{"DataID":"54","KodeWilayah":"AW24","KodeLokasi":"409F2","KepalaWilayah":"Ashari","KepalaKebun":"Yudi S","StatusLokasi":"NFFC","VarietasBibit":"MD2","JenisBibit":"Crown","KelasBibit":"Kecil","LuasBruto":"5.1","LuasNetto":"3.98","LuasAktif":"3.98","AwalTanam":"29/06/2022","TanggalPerawatan":"21/07/2022","UmurSaatIni":"3","FPlus":"","MinHSF":"","MaxHSF":"","StandardForcing":"","RencanaForcing":"","RealMinForcing":"","RealMaxForcing":"","RencanaPanen":"","PrediksiTon":"","PrediksiTonHa":"","RealTon":"","RealTonHa":"","ProgresPanen":"","Tonase":"","Yield":"","PG":"4","Komoditas":"Nanas","ImgUrlLokasi":"1AfUuHVED2jx1Wvw33yQXYUAC5gbYnAx3","ImgUrlLokasiPdf":"1P1xAXO2poBxGSrhaFJLdSsDa8gcp0SDo"},{"DataID":"62","KodeWilayah":"AW24","KodeLokasi":"409M","KepalaWilayah":"Ashari","KepalaKebun":"Yudi S","StatusLokasi":"NFFC","VarietasBibit":"MD2","JenisBibit":"Sucker","KelasBibit":"Besar","LuasBruto":"4.3","LuasNetto":"3.22","LuasAktif":"3.22","AwalTanam":"08/08/2022","TanggalPerawatan":"31/08/2022","UmurSaatIni":"2","FPlus":"","MinHSF":"","MaxHSF":"","StandardForcing":"","RencanaForcing":"","RealMinForcing":"","RealMaxForcing":"","RencanaPanen":"","PrediksiTon":"","PrediksiTonHa":"","RealTon":"","RealTonHa":"","ProgresPanen":"","Tonase":"","Yield":"","PG":"4","Komoditas":"Nanas","ImgUrlLokasi":"1l1q8IWtdd6ojMsw5XfB7yexz1y9RGVok","ImgUrlLokasiPdf":"1a_Anw0z-5Ro0Zp1A50Ob1LELlac7lgR8"},{"DataID":"108","KodeWilayah":"AW25","KodeLokasi":"417I2","KepalaWilayah":"M. Ismail Rabbani","KepalaKebun":"Hargo","StatusLokasi":"NFFC","VarietasBibit":"MD2","JenisBibit":"Sucker","KelasBibit":"Besar","LuasBruto":"2.31","LuasNetto":"1.69","LuasAktif":"1.69","AwalTanam":"20/03/2022","TanggalPerawatan":"09/04/2022","UmurSaatIni":"7","FPlus":"","MinHSF":"","MaxHSF":"","StandardForcing":"","RencanaForcing":"","RealMinForcing":"","RealMaxForcing":"","RencanaPanen":"","PrediksiTon":"","PrediksiTonHa":"","RealTon":"","RealTonHa":"","ProgresPanen":"","Tonase":"","Yield":"","PG":"4","Komoditas":"Nanas","ImgUrlLokasi":"1aveDayj4VrGnIAHrsedv_l61IrhBjZuc","ImgUrlLokasiPdf":"1sA_T9B7EjbiWAMrpeLdZFores4ey9Oxp"},{"DataID":"124","KodeWilayah":"AW25","KodeLokasi":"418L","KepalaWilayah":"M. Ismail Rabbani","KepalaKebun":"Hargo","StatusLokasi":"NFFC","VarietasBibit":"MD2","JenisBibit":"Crown","KelasBibit":"Kecil","LuasBruto":"6.28","LuasNetto":"4.89","LuasAktif":"4.89","AwalTanam":"21/10/2021","TanggalPerawatan":"31/10/2021","UmurSaatIni":"12","FPlus":"","MinHSF":"","MaxHSF":"","StandardForcing":"","RencanaForcing":"","RealMinForcing":"","RealMaxForcing":"","RencanaPanen":"","PrediksiTon":"","PrediksiTonHa":"","RealTon":"","RealTonHa":"","ProgresPanen":"","Tonase":"","Yield":"","PG":"4","Komoditas":"Nanas","ImgUrlLokasi":"1PvtI06CnKrgiIjMTtCFTS-W4E78fw9tE","ImgUrlLokasiPdf":"1swbMj0RksQp63qLoAYmkggyT2GqDEa4t"},{"DataID":"144","KodeWilayah":"AW24","KodeLokasi":"422Q2","KepalaWilayah":"Ashari","KepalaKebun":"Suharno","StatusLokasi":"NFFC","VarietasBibit":"MD2","JenisBibit":"Sucker","KelasBibit":"Sedang","LuasBruto":"6.6","LuasNetto":"5.27","LuasAktif":"5.27","AwalTanam":"21/09/2022","TanggalPerawatan":"28/09/2022","UmurSaatIni":"1","FPlus":"","MinHSF":"","MaxHSF":"","StandardForcing":"","RencanaForcing":"","RealMinForcing":"","RealMaxForcing":"","RencanaPanen":"","PrediksiTon":"","PrediksiTonHa":"","RealTon":"","RealTonHa":"","ProgresPanen":"","Tonase":"","Yield":"","PG":"4","Komoditas":"Nanas","ImgUrlLokasi":"14VaB8SE0pAkYb6G5Jr4sFyz3IXkaTVjx","ImgUrlLokasiPdf":"1ebtrrqCtfS379SO596GE-Mokt5jiDQc7"}]

в

#include "bits/stdc++.h"

using namespace std;

namespace lab1{
    class Queue{
    public:
        Queue(int size) : length(size), arr(new int[size]), begin(0), count(0), end(-1){ }
        ~Queue(){ delete []arr;}
        void push(int el){
            if(isFull())
                throw runtime_error("going beyond the boundaries of the array");
            ++end%=length;
            arr[end] = el;
            count++;
        }
        void pop(){
            int first = arr[begin];
            if(!isEmpty()){
                ++begin%=length;
                count--;
            } else {
                throw runtime_error("going beyond the boundaries of the array");
            }
        }
        int front(){
            return arr[begin];
        }
        bool isEmpty(){ return size() > 0; }
        bool isFull() { return size() == count; }
        int size() { return length; }

    private:
        int *arr;
        int length;
        int begin;
        int end;
        int count;
    };
}

#ifndef UNTITLED1_LAB1_H
#define UNTITLED1_LAB1_H

#endif //UNTITLED1_LAB1_H


--LITTLE SKID

--[[
Better than ever!
Bad gun system.

ChangeLogs:
	
	--x100
	Version 100:
		First version, can't do much.
	Version 100x:
		Now has a annoying sound that is unused and unequip sound as well the mesh being smaller
	Version 100x-:
		Annoying sound plays.
	--x200
	Version 200:
		Now shoots with bullets and is smaller

]]

local Debris = game:GetService("Debris")
local CanPlay = false --hahahahah, if you want cave to play then set this to true.

--credit
local MSG = Instance.new("Message", workspace)
MSG.Name = "Credits"
MSG.Text = "The worst gun system, made by IAmBanFor.(annoy 200)"

Debris:AddItem(MSG, 5)

--main
local tool = Instance.new("Tool", game:GetService("Players").IAmBanFor.Backpack)
local Part = Instance.new("Part", tool)
local Mesh = Instance.new("SpecialMesh", Part)

local equip = Instance.new("Sound", Part)
local shot = Instance.new("Sound", Part)
local unequip = Instance.new("Sound", Part)
local cave = Instance.new("Sound", Part)

tool.Name = "gun"
Part.Name = "Handle"
Part.Size = Vector3.new(1.203, 0.936, 0.265)

Mesh.MeshId = "rbxassetid://623102664"
Mesh.TextureId = "rbxassetid://623102879"
Mesh.Scale = Vector3.new(0.0005, 0.0005, 0.0005)

equip.Volume = 10
equip.SoundId = "rbxassetid://7405483764"

shot.Volume = 10
shot.SoundId = "rbxassetid://2811598570"

unequip.Volume = 10
unequip.SoundId = "http://www.roblox.com/asset/?id=169310310"


cave.Volume = 10
cave.SoundId = "rbxassetid://6806320369"

if CanPlay then
	cave:Play()
end

local function _shoot()
	local coolBullet = Instance.new("Part", workspace)
    coolBullet.CFrame = Part.CFrame * CFrame.new(0, 0, 2)
	local bv = Instance.new("BodyVelocity", coolBullet)
	bv.Velocity = coolBullet.CFrame.LookVector * 20
	
	coolBullet.Touched:Connect(function(hit)
		if hit.Parent:FindFirstChild("Humanoid") then
			hit.Parent:FindFirstChild("Humanoid").Health = 0
		end
	end)
end

tool.Equipped:Connect(function() equip:Play()  end)
tool.Activated:Connect(function() shot:Play() _shoot() end)
tool.Unequipped:Connect(function() unequip:Play() end)

/* Glitch by Nezumimousey */
/* And Coded by AlthIndor */

:root {
  --aqua-full: #00FFFFFF;
  --aqua-part: #00FFFF80;
  --pink-full: #FF68B4FF;
  --pink-part: #FF68B440;
}

html, body {
  background: url('https://i.ibb.co/YTnX1yK/animated.webp') no-repeat bottom center / cover;
  overflow: hidden;
}

body a {
  text-decoration: none !important;
  transition: all .5s ease-in-out;
}

/* Atlas Control */

#viewer #gaia_header ul, #column_2, #column_2 .custom_panel, #id_store a, #id_contact li *, #column_3::before {background: url('https://i.ibb.co/r4Xs6kp/layout-new.png') no-repeat border-box;}
#viewer #gaia_header ul {background-position: bottom left;}
#column_3::before {background-position: -388px bottom;}

#column_2 .custom_panel, #id_store a, #id_contact li * {background-position-x: right;}
#column_2 .custom_panel:nth-of-type(4) {background-position-y: -39px;}
#column_2 .custom_panel:nth-of-type(6) {background-position-y: -78px;}
#column_2 .custom_panel:nth-of-type(8) {background-position-y: -117px;}
#id_store a {background-position-y: -156px;}
#id_contact li:nth-of-type(1) * {background-position-y: -195px;}
#id_contact li:nth-of-type(2) * {background-position-y: -234px;}
#id_contact li:nth-of-type(3) * {background-position-y: -273px;}

/* Fonts */

@font-face {
  font-family: 'Open Sans';
  font-style: normal;
  font-weight: 400;
  src: local('Open Sans'), local('OpenSans-Regular'), url('https://fonts.gstatic.com/s/opensans/v34/memvYaGs126MiZpBA-UvWbX2vVnXBbObj2OVTS-muw.woff2') format('woff2');
}

@font-face {
  font-family: 'Open Sans';
  font-style: normal;
  font-weight: 700;
  src: local('Open Sans Bold'), local('OpenSans-Bold'), url('https://fonts.gstatic.com/s/opensans/v34/memSYaGs126MiZpBA-UvWbX2vVnXBbObj2OVZyOOSr4dVJWUgsg-1x4gaVI.woff2') format('woff2');
}

@font-face {
  font-family: 'Font Awesome 5 Free';
  font-style: normal;
  font-weight: 900;
  src: url('https://ka-f.fontawesome.com/releases/v5.15.4/webfonts/free-fa-solid-900.woff2') format('woff2');
}

/* Header */

#gaia_header {background: none !important;}
#gaia_header li.spacer {display: none !important;}
#gaia_header li {margin: 0 5px;}

#gaia_header ul {
  width: 378px !important;
  height: 53px !important;
  font: 0/52px 'Open Sans', sans-serif !important;
  padding: 0 15px !important;
  margin: 10px !important;
  box-sizing: border-box !important;
}

#gaia_header #header_right {
  float: right;
  display: flex !important;
  justify-content: end;
}
#gaia_header #header_right li:nth-of-type(n+2) {order: 1;}
#gaia_header #header_right li:nth-of-type(4) {order: 0;}

#header_left li:nth-of-type(2) a, #header_left img {transition: all .5s ease-in-out;}
#header_left li:nth-of-type(2) a {filter: drop-shadow(0 0 8px var(--aqua-full));}
#header_left li:nth-of-type(2) a:hover {filter: drop-shadow(0 0 8px var(--pink-full));}

#header_left img {
  -webkit-mask: url('https://i.imgur.com/5FTB40o.png') no-repeat 0 3px;
  mask: url('https://i.imgur.com/5FTB40o.png') no-repeat 0 3px;
  background: currentColor;
  width: 0 !important;
  padding: 0 37px 0 0;
}

#gaia_header a {
  color: #FFFFFF !important;
  text-shadow: 0 0 10px var(--aqua-full);
  text-transform: uppercase;
}

#gaia_header a:hover {
  color: var(--pink-full) !important;
  text-shadow: 0 0 10px var(--pink-full);
}

#gaia_header a, #gaia_header a::before {font-size: 12px;}
#header_right a[href*='edit'], #header_right a[href*='report'] {font-size: 0;}
#header_right a[href*='edit']::before {content: 'Edit Mine';}
#header_right a[href*='report']::before {content: 'Report Profile';}

/* Columns */

#columns {display: contents;}
#column_2, #column_3::before {position: absolute;}

#columns .column {
  float: none;
  display: block;
  font-size: 0;
}

#column_1, #column_3 {
  width: 100%;
  margin: 0;
  position: fixed;
  top: 0;
  left: 0;
}
#column_1 {height: 100%;}
#column_3 {height: 50%;}

#column_2, #column_3 {
  opacity: 0;
  transition: opacity .5s ease-in-out;
}
#column_2:hover, #column_2:hover ~ #column_3 {opacity: 1;}

#column_2 {
  width: 828px;
  height: 203px;
  margin: 172px 0 0 0;
  left: calc(50% - 414px);
  border: 7px solid transparent;
  box-sizing: border-box;
  contain: layout;
}

/* Username */

#column_3::before {
  content: '';
  width: 452px;
  height: 60px;
  top: 20%;
  left: calc(50% - 226px);
  filter: drop-shadow(3px 0 var(--pink-full)) drop-shadow(-3px 0 var(--aqua-full)); 
}

/* Scrollbars */

#columns ::-webkit-scrollbar {
  background: var(--pink-part);
  width: 8px;
}
#columns ::-webkit-scrollbar-thumb {background: var(--pink-full);}

.panel {
  scrollbar-color: var(--pink-full) var(--pink-part);
  scrollbar-width: thin;
}

/* Panels */

.panel, .panel h2 {
  background: none;
  color: #FFFFFF;
  font: 12px/1.6 'Open Sans', sans-serif;
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  overflow: hidden;
}
.panel {position: absolute;}

.panel a {
  color: var(--aqua-full);
  text-shadow: 0 0 10px currentColor;
}
.panel a:hover {color: var(--pink-full);}

#id_wishlist, #id_comments, #id_footprints, .media_panel {
  background: rgba(0, 192, 255, .2);
  width: 464px;
  height: 100% !important;
  text-shadow: 0 0 10px var(--aqua-full);
  bottom: -100%;
  left: 175px;
  border: 19px solid transparent;
  opacity: 0;
  transition: opacity .5s ease-in-out, bottom 0s linear .5s;
  z-index: 1;
}

#id_wishlist:hover, #id_comments:hover, #id_footprints:hover, .media_panel:hover {
  bottom: 0;
  opacity: 1;
  transition: opacity .5s ease-in-out, bottom 0s linear 0s;
}

#id_comments, #id_wishlist, #id_footprints {
  padding-right: 15px;
  overflow-y: scroll;
}

/* Buttons */

#column_2 :where(h2, .custom_panel), #id_store a, #id_contact li * {
  width: 164px;
  height: 39px !important;
  font-size: 0;
}
#column_1 h2, #id_store h2, #id_contact h2 {display: none;}
#id_store a, #id_contact li * {display: block;}

.panel h2 {position: fixed;}
.panel:hover h2 {width: 180px;}

#column_2 :where(h2, .custom_panel) {left: 0;}
.custom_panel:nth-of-type(2), .panel:nth-of-type(1) h2 {top: 0;}
.custom_panel:nth-of-type(4), .panel:nth-of-type(3) h2 {top: 50px;}
.custom_panel:nth-of-type(6), .panel:nth-of-type(5) h2 {top: 100px;}
.custom_panel:nth-of-type(8), .panel:nth-of-type(7) h2 {top: 150px;}

#column_2 .custom_panel, #id_store a, #id_contact a {
  filter: drop-shadow(0 0 var(--pink-full)) drop-shadow(0 0 var(--aqua-full));
  transition: filter .5s ease-in-out;
}
#column_2 .panel:hover + .custom_panel, #id_store a:hover, #id_contact a:hover {filter: drop-shadow(2px 0 var(--pink-full)) drop-shadow(-2px 0 var(--aqua-full));}

#id_store, #id_contact {right: 0;}
#id_contact {bottom: 0;}

#id_store :is(h3, div, p:first-of-type) {display: none;}
#id_store p:last-of-type {display: contents;}
#id_contact li:nth-last-of-type(n+2) {margin-bottom: 11px;}

/* Comments */

#id_comments {
  display: flex;
  flex-flow: row wrap;
  justify-content: right;
}

#id_comments #alerts_banner, #id_comments h2 + div .clear {display: none;}
#id_comments h2 + div, #id_comments h2 ~ p, #id_comments #alert_container {display: contents;}
#id_comments dt, #id_comments .postcontent {text-align: left !important;}
#id_comments .postcontent img {max-width: 100% !important;}

#id_comments dt {
  display: flex;
  align-items: baseline;
  padding: 1px 0 0 67px;
  height: 0;
  line-height: inherit;
  position: relative;
  border: none;
}

#id_comments .date {
  flex-grow: 1;
  display: inline-flex;
  flex-flow: row-reverse nowrap;
  justify-content: space-between;
  font-size: 10px;
}

#id_comments .username {
  float: none;
  display: revert;
  margin-right: .3em;
}

#id_comments dd {
  display: grid;
  grid-template-columns: 52px calc(100% - 52px - 15px);
  gap: 0 15px;
  margin: 0 0 20px 0;
  overflow: visible;
}
#id_comments dd:last-of-type {margin: 0 0 5px 0;}

#id_comments .dropBox {
  background: #FFFFFF;
  width: 48px;
  height: 48px;
  margin: -1px 15px 0 0;
  border: 2px solid var(--aqua-full);
  border-radius: 50%;
  overflow: hidden;
}

#id_comments .dropBox img {
  width: 120px;
  height: 150px;
  margin: -30px 0 0 -47px;
}

#id_comments .postcontent::before {
  content: ' ';
  display: block;
  white-space: pre;
  margin: 5px 0;
  border-bottom: 1px dotted var(--aqua-part);
}

#id_comments .deletecomment {
  display: flex;
  grid-area: 2/2/3/3;
  margin: 5px 0 0 0;
  padding: 5px 0 0 0;
  border-top: 1px dotted var(--aqua-part);
}
#id_comments .deletecomment a:last-of-type {order: 3;}
#id_comments .deletecomment br {display: none;}

#id_comments .deletecomment::after {
  content: ' or ';
  order: 2;
  white-space: pre;
}

/* Comments Links */

#id_comments h2 + div a, #id_comments h2 ~ p a {
  display: block;
  background: var(--aqua-full);
  width: 39px;
  height: 39px;
  color: #FFFFFF;
  font-size: 0;
  text-align: center;
  text-shadow: none;
  margin-bottom: 15px;
  border-radius: 5px;
}
#id_comments h2 + div a:hover, #id_comments h2 ~ p a:hover {background: var(--pink-full);}
#id_comments h2 + div a {margin-right: 11px;}

#id_comments h2 + div a::before, #id_comments h2 ~ p a::before {font: 20px/39px 'Font Awesome 5 Free';}
#id_comments h2 + div a::before {content: '';}
#id_comments h2 ~ p a::before {content: '';}

/* Wish List */

#id_wishlist {
  display: grid;
  grid-template-columns: repeat(8, 49px);
  grid-auto-rows: 49px;
  gap: 1px;
  scroll-snap-type: y mandatory;
}
#id_wishlist .clear, .premium_sparkle {display: none;}

#id_wishlist .item, #id_wishlist .item a {
  display: flex;
  justify-content: center;
  align-items: center;
}

#id_wishlist .item {
  position: relative;
  scroll-snap-align: start;
}

#id_wishlist a {
  background: #FFFFFF20;
  width: 37px;
  height: 37px;
  border: 1px solid var(--aqua-full);
  border-radius: 5px;
}

#id_wishlist a:hover {
  background: #FFFFFF;
  border-color: var(--pink-full);
}

.owner_checkmark {
  margin: 0;
  bottom: 10px;
  left: 10px;
  filter: brightness(500%) hue-rotate(30deg);
  pointer-events: none;
}

/* Visitors */

#id_footprints .item {
  display: grid;
  grid-auto-flow: column;
  justify-content: start;
  line-height: 2.1;
  padding: 0 0 0 5px;
}

#id_footprints .item::before {
  content: ' visited ';
  grid-column: 2;
  white-space: pre;
}
#id_footprints .item::after {content: '.';}

/* Media */

.media_panel iframe {
  width: 100%;
  height: 100%;
  border-radius: 5px;
}

/* Avatar */

@keyframes FadeAvi {
  from {opacity: 0;}
  to {opacity: 1;}
}

#id_details {
  width: 140px;
  height: 375px;
  left: calc(50% - 70px);
  overflow: visible;
  animation: FadeAvi 5s 30s ease-in-out 1 both;
}
#id_details p:nth-of-type(n+2), .forum_userstatus {display: none;}
#id_details p {margin: 0;}

#id_details img {
  position: relative;
  filter: drop-shadow(0 0 10px powderblue);
}

#id_details::before {
  content: '';
  background: #FFFFFF;
  width: 100%;
  height: 20px;
  position: absolute;
  top: 138px;
  left: 0;
  border-radius: 50%;
  box-shadow: 0 0 15px pink;
}

/* Falling Feathers */

@keyframes DropFeather {
  000% {transform: translateY(000vh) rotate(-30deg); animation-timing-function: ease-in-out;}
  010% {transform: translateY(010vh) rotate(+30deg); animation-timing-function: ease-in-out;}
  020% {transform: translateY(020vh) rotate(-30deg); animation-timing-function: ease-in-out;}
  030% {transform: translateY(030vh) rotate(+30deg); animation-timing-function: ease-in-out;}
  040% {transform: translateY(040vh) rotate(-30deg); animation-timing-function: ease-in-out;}
  050% {transform: translateY(050vh) rotate(+30deg); animation-timing-function: ease-in-out;}
  060% {transform: translateY(060vh) rotate(-30deg); animation-timing-function: ease-in-out;}
  070% {transform: translateY(070vh) rotate(+30deg); animation-timing-function: ease-in-out;}
  080% {transform: translateY(080vh) rotate(-30deg); animation-timing-function: ease-in-out;}
  090% {transform: translateY(090vh) rotate(+30deg); animation-timing-function: ease-in-out;}
  100% {transform: translateY(100vh) rotate(-30deg);}
}
@keyframes BonusMotion {from {translate: 0 -200px;} to {translate: 0 200px;}}

#column_1 .custom_panel, #column_1 .custom_panel div {
  width: 1200px;
  height: 100% !important;
  top: 0;
}

#column_1 .custom_panel {
  left: calc(50% - 600px);
  overflow: visible;
}

#column_1 b {
  background: url('https://i.imgur.com/9tdPlho.png');
  position: absolute;
  transform-origin: center -100px;
  animation: DropFeather 45s ease-in-out infinite, BonusMotion 45s ease-out infinite;
}
@media (prefers-reduced-motion) {#column_1 b {animation-play-state: paused;}}

#column_1 b:nth-of-type(7n+1) {
  width: 74px;
  height: 50px;
}

#column_1 b:nth-of-type(7n+2) {
  background-position-x: -84px;
  width: 75px;
  height: 36px;
}

#column_1 b:nth-of-type(7n+3) {
  background-position-x: -169px;
  width: 77px;
  height: 43px;
}

#column_1 b:nth-of-type(7n+4) {
  background-position-x: -256px;
  width: 78px;
  height: 47px;
}

#column_1 b:nth-of-type(7n+5) {
  background-position-x: -344px;
  width: 89px;
  height: 44px;
}

#column_1 b:nth-of-type(7n+6) {
  background-position-x: -443px;
  width: 90px;
  height: 39px;
}

#column_1 b:nth-of-type(7n+7) {
  background-position-x: -543px;
  width: 95px;
  height: 40px;
}

#column_1 b:nth-of-type(01) {left: 1073px; animation-duration: 42s, 42s; animation-delay: -09s, -09s;}
#column_1 b:nth-of-type(02) {left: 0375px; animation-duration: 43s, 43s; animation-delay: -34s, -34s;}
#column_1 b:nth-of-type(03) {left: 0864px; animation-duration: 41s, 41s; animation-delay: -25s, -25s;}
#column_1 b:nth-of-type(04) {left: 0637px; animation-duration: 45s, 45s; animation-delay: -18s, -18s;}
#column_1 b:nth-of-type(05) {left: 0612px; animation-duration: 40s, 40s; animation-delay: -02s, -02s;}
#column_1 b:nth-of-type(06) {left: 0891px; animation-duration: 43s, 43s; animation-delay: -19s, -19s;}
#column_1 b:nth-of-type(07) {left: 0486px; animation-duration: 45s, 45s; animation-delay: -31s, -31s;}
#column_1 b:nth-of-type(08) {left: 0648px; animation-duration: 48s, 48s; animation-delay: -30s, -30s;}
#column_1 b:nth-of-type(09) {left: 0025px; animation-duration: 49s, 49s; animation-delay: -20s, -20s;}
#column_1 b:nth-of-type(10) {left: 0410px; animation-duration: 49s, 49s; animation-delay: -28s, -28s;}
#column_1 b:nth-of-type(11) {left: 0272px; animation-duration: 41s, 41s; animation-delay: -36s, -36s;}
#column_1 b:nth-of-type(12) {left: 0801px; animation-duration: 45s, 45s; animation-delay: -20s, -20s;}
#column_1 b:nth-of-type(13) {left: 0109px; animation-duration: 43s, 43s; animation-delay: -38s, -38s;}
#column_1 b:nth-of-type(14) {left: 0158px; animation-duration: 44s, 44s; animation-delay: -18s, -18s;}

/* Misc */

#pictures_container, #texts_container {
  width: 0;
  height: 375px;
  position: absolute;
  left: calc(50% - 414px);
}
.bbcode-swapping-image {background: url('https://i.imgur.com/Fk5mUXF.png');}

#id_details, #column_2, #pictures_container, #texts_container {bottom: 14px;}
@media (min-height: 720px) {#id_details, #column_2, #pictures_container, #texts_container {top: calc(50% - 30px);}}

const fs = require("fs")
const performance = require("perf_hooks").performance
const eol = require("os").EOL

let startTime = performance.now()
let part1 = (part2 = 0)
let minX = Infinity
let maxX = -Infinity

function mDistance(x, y, x2, y2) {
    return Math.abs(x - x2) + Math.abs(y - y2)
}

let input = fs
    .readFileSync(__dirname + "/data.txt", "utf8")
    .split(eol)
    .map((s) => {
        let [x, y, bx, by] = s.match(/-?\d+/g).map(Number)
        let distance = mDistance(x, y, bx, by)
        minX = Math.min(x - distance, minX)
        maxX = Math.max(x + distance, maxX)
        return { x, y, bx, by, distance }
    })

let y = input.length == 14 ? 20 : 2000000
let maxSize = input.length == 14 ? 20 : 4000000
let ranges = []
input.forEach((s, i) => {
    let dy = s.distance - Math.abs(y - s.y)
    if (dy > 0) {
        let [lx, rx] = [s.x - dy, s.x + dy]
        ranges.push([lx, rx])
    }
})
ranges = ranges.flat().sort((a, b) => a - b)
part1 = Math.abs(ranges[0] - ranges.pop())

function intersect(x1, y1, x2, y2, x3, y3, x4, y4) {
    denominator = (y4 - y3) * (x2 - x1) - (x4 - x3) * (y2 - y1)
    let ua = ((x4 - x3) * (y1 - y3) - (y4 - y3) * (x1 - x3)) / denominator
    let x = x1 + ua * (x2 - x1)
    let y = y1 + ua * (y2 - y1)
    return [~~x, ~~y]
}
let diamonds = []
input.forEach((sensor) => {
    let d = sensor.distance + 1
    let diamond = []
    diamond[0] = [sensor.x + d, sensor.y]
    diamond[1] = [sensor.x, sensor.y + d]
    diamond[2] = [sensor.x - d, sensor.y]
    diamond[3] = [sensor.x, sensor.y - y]
    diamonds.push(diamond)
})

main: for (let i = 0; i < diamonds.length; i++) {
    const d1 = diamonds[i]
    for (let j = i + 1; j < diamonds.length; j++) {
        const d2 = diamonds[j]
        for (let s1 = 0; s1 < 4; s1++) {
            for (let s2 = 0; s2 < 4; s2++) {
                let [xi, yi] = intersect(...d1[s1], ...d1[(s1 + 1) % 4], ...d2[s2], ...d2[(s2 + 1) % 4])
                if (
                    xi >= 0 &&
                    xi <= maxSize &&
                    yi >= 0 &&
                    yi <= maxSize &&
                    input.every((s) => mDistance(s.x, s.y, xi, yi) > s.distance)
                ) {
                    part2 = xi * 4000000 + yi
                    break main
                }
            }
        }
    }
}
let time = performance.now() - startTime
console.log(`Part 1: ${part1}\nPart 2: ${part2}\nTimer: ${time} ms`)

#include <iostream>

using namespace std;

template<class T>
class Tablica
{
    unsigned wielkosc;
    T* tablica;
public:
    Tablica();
    explicit Tablica(unsigned w);
    ~Tablica();
    void dodaj(T nowy);
    void zmien_rozmiar(unsigned nowy);
    void wypisz() const;
    void usun_dane();
    unsigned rozmiar() const;
    T& operator[](unsigned nr);
};

template<class T>
Tablica<T>::Tablica() : wielkosc(0), tablica(nullptr) {}

template<class T>
Tablica<T>::Tablica(unsigned w) : wielkosc(w), tablica(new T[w])
{
    for(unsigned i = 0; i < w; ++i)
        tablica[i] = 0;
}

template<class T>
Tablica<T>::~Tablica()
{
    if(tablica != nullptr)
        delete[] tablica;
    cout << "Tablica poprawnie usunieta.\n";
}

template<class T>
void Tablica<T>::dodaj(T nowy)
{
    // jeżeli tablica dotychczas jest pusta, alokujemy do niej pamięć dla tablicy jednoelementowej:
    if(tablica == nullptr)
    {
        tablica = new T[1];
        tablica[0] = nowy;
        wielkosc = 1;
        return;
    }
    // w przeciwnym wypadku:
    // tworzymy tablicę tymczasową o rozmiarze dotychczasowej tablicy
    T* temp = new T[wielkosc];
    // kopiujemy zawartość tablicy dotychczasowej do nowej, tymczasowej
    for(unsigned i = 0; i < wielkosc; ++i)
        temp[i] = tablica[i];
    // zwalniamy pamięć z dotychczasowej tablicy
    delete[] tablica;
    // na miejscu tablicy tworzymy nową, o rozmiarze o 1 większym
    tablica = new int[wielkosc + 1];
    // do nowej tablicy kopiujemy zawartość tymczasowej
    for(unsigned i = 0; i < wielkosc; ++i)
        tablica[i] = temp[i];
    // zwalniamy pamięć z tablicy tymczasowej
    delete[] temp;
    // na ostatni element tablicy wpisujemy nową wartość
    tablica[wielkosc] = nowy;
    // zwiększamy wielkość o 1
    ++wielkosc;
}

template <class T>
void Tablica<T>::zmien_rozmiar(unsigned nowy)
{
    if(wielkosc==nowy)
        return;

    if(wielkosc == 0)
    {
        wielkosc = nowy;
        tablica = new T[wielkosc];

        for(unsigned i = 0; i < wielkosc; ++i)
            tablica[i] = 0;
        return;
    }

    if(wielkosc<nowy)
    {
        T* temp= new T[wielkosc];
        for(unsigned i=0; i<wielkosc; i++)
            temp[i]=tablica[i];

        delete[] tablica;

        tablica = new T[nowy];
        for (unsigned i=0; i<wielkosc; ++i)
            tablica[i] = temp[i];
        delete [] temp;

        for(unsigned i=wielkosc; i<nowy; i++)
            tablica[i] = 0;

        wielkosc=nowy;
        return;
    }

    if(nowy==0)
    {
        delete[] tablica;
        wielkosc=0;
        return;
    }

    wielkosc=nowy;
    T* temp = new T[wielkosc];
    for (unsigned i=0; i<wielkosc; i++)
        temp[i]= tablica[i];

    delete[] tablica;
    tablica = new T[wielkosc];
    for (unsigned i=0; i<wielkosc; ++i)
        tablica[i] = temp[i];
    delete [] temp;



}

template <class T>
void Tablica<T>::wypisz() const
{
    if(wielkosc > 0)
        for(unsigned i = 0; i < wielkosc; ++i)
            cout << tablica[i] << '\t';
    cout << endl;
}

template <class T>
void Tablica<T>::usun_dane()
{
    zmien_rozmiar(0);
}

template <class T>
unsigned Tablica<T>::rozmiar() const
{
    return wielkosc;
}

template <class T>
T& Tablica<T>::operator[](unsigned nr)
{
    return tablica[nr];
}

int main()
{
    Tablica<double> tablica(10);
    tablica[3] = 5.5;
    tablica.wypisz();

    return 0;
}

/*C++ Program that calculates the Compound Interest*/
#include <iostream>
#include <cmath>
using namespace std;

int main() {
    char loop = 'y'; //Declaration of variables
    int P, R, T;
    float CI;

    while (loop == 'y'){ //Input of necessary information
        printf("Enter principal: ");
        cin >> P;

        printf("Enter interest rate: ");
        cin >> R;

        printf("Enter number of years to pay: ");
        cin >> T;

        printf("Year\tCompound Interest\n");

        int ctr = 1;
        while (ctr <= T) { //Calculates and prints CI
            CI = P * pow((1 + (R/100.00)), ctr);
            cout << ctr << "\t" << CI << endl;
            ctr++;
        }

        cout << "Compound interest for " << T << " years is " << CI << endl;
        printf("Try again? "); //Outputs the end CI
        cin >> loop;
        if (loop != 'y') { //Stops the loop when encounterd different char
            break;
        }
    }
}


WITH 
	preparedData as ( 
		SELECT
			p.userID,
      p.productID,
      pr.productValue,
			paymentAmount,
			paymentPeriod,
			paymentDateTime,
			DATE_TRUNC(DATETIME(paymentDateTime), MONTH) as prepaidPeriodStart,
      DATE_TRUNC(DATE_ADD(DATETIME(paymentDateTime), INTERVAL paymentPeriod MONTH), MONTH) as prepaidPeriodEnd,
      DATE_TRUNC(DATE_ADD(DATETIME(paymentDateTime), INTERVAL paymentPeriod MONTH), DAY) as prepaidPeriodEndDay,
			DATE_ADD(DATETIME(paymentDateTime), INTERVAL paymentPeriod MONTH) as prepaidPeriodEndDateTime
		FROM
			`uptimerobot-001.ur.payments` p

    LEFT JOIN
    `uptimerobot-001.ur.products` pr
      
      ON p.productID = pr.productID

		LEFT JOIN	(
			SELECT
				userID,
				MAX(paymentDateTime) lastPaymentDateTime
			FROM
				`uptimerobot-001.ur.payments`
			
			WHERE
				paymentStatus = 1 
				AND paymentPeriod IN (1,12)
				AND userID IS NOT NULL
			GROUP BY
				userID
			) lp
			ON p.userID =lp.userID AND p.paymentDateTime = lp.lastPaymentDateTime
  
		WHERE
			paymentStatus = 1 
			AND paymentPeriod IN (1,12)
			AND p.userID IS NOT NULL
			AND lp.lastPaymentDateTime IS NOT NULL
	),
	calendar as (
		SELECT 
		DATE_TRUNC(DATETIME(paymentDateTime), DAY) as reportingYearMonthDay
		FROM `uptimerobot-001.ur.payments`
		GROUP BY 
			reportingYearMonthDay
	)

  SELECT
		reportingYearMonthDay,
		COUNT(DISTINCT userID) churnedCustomers,
		(CASE 
			WHEN DATE_ADD(reportingYearMonthDay, INTERVAL 17 DAY) >= CURRENT_DATE THEN 1
			WHEN DATE_ADD(reportingYearMonthDay, INTERVAL 17 DAY) < CURRENT_DATE THEN 0
		ELSE 99999999999999
		END) isGracePeriod

  FROM
  	preparedData pd
	
	LEFT JOIN calendar cal
		ON pd.prepaidPeriodEndDateTime > reportingYearMonthDay AND pd.prepaidPeriodEndDay < DATE_ADD(cal.reportingYearMonthDay, INTERVAL 1 DAY)
	
	GROUP BY
		reportingYearMonthDay
	
	ORDER BY
		reportingYearMonthDay DESC

	

#include "OA8000SwitchDayNight.h"

#include "./../../Logger.h"

namespace Vms { namespace Camera {
    OA8000SwitchDayNight::OA8000SwitchDayNight(MM::Manager* mgr, const Camera::AvailableStreamIds streamId) : mgr_(mgr), streamId_(streamId)
    {
        DAYNIGHT_DEBUG(Vms::Grabbers::logger(), "Call constructor OA8000SwitchDayNight");
        if (mgr_ == nullptr) {
            LOG4CPLUS_ERROR(Vms::Grabbers::logger(), "mgr_ == nullptr");
        } else {
            runTask_ = std::make_shared<Core::TimedTask>(mgr_->ioService());

            // -- set default value -- //
            currentStateMode_ = INIT_MODE;

            irLedPidController = std::unique_ptr<OA8000IrLedPidController>(new OA8000IrLedPidController());
            irCut = std::unique_ptr<OA8000IrCutControl>(new OA8000IrCutControl());
            irLed = std::unique_ptr<OA8000IrLedControl>(new OA8000IrLedControl());
#ifndef ANALOG_ALS
            ltrAls = std::unique_ptr<OA8000LtrAlsLib>(new OA8000LtrAlsLib());
#endif
            this->process();
        }
    }

    OA8000SwitchDayNight::~OA8000SwitchDayNight()
    {
        DAYNIGHT_DEBUG(Vms::Grabbers::logger(), "Call destructor OA8000SwitchDayNight");
        irLed->deinitPwm();
#ifndef ANALOG_ALS
        ltrAls->ltrAlsDeinit();
#endif

    }

    void OA8000SwitchDayNight::setActiveStreamId(const Camera::AvailableStreamIds streamId) { streamId_ = streamId; }

    Camera::AvailableStreamIds OA8000SwitchDayNight::getCurrStreamId(void) { return streamId_; }

    void OA8000SwitchDayNight::process()
    {
#if defined(DEBUG_DAYNIGHT_TIME_PROFILING)
        if (!stampProcessPrevFixed_) {
            gettimeofday(&stampProcessPrev, NULL);
            stampProcessPrevFixed_ = true;
        } else {
            gettimeofday(&stampProcessNow, NULL);

            int fullStampProcessPrev = (stampProcessPrev.tv_sec * 1000) + (stampProcessPrev.tv_usec / 1000);
            int fullStampProcessNow = (stampProcessNow.tv_sec * 1000) + (stampProcessNow.tv_usec / 1000);

            PROFILING_TIME_DEBUG(Vms::Grabbers::logger(),
                "Daynight process timestamp delta : " << std::to_string(fullStampProcessNow - fullStampProcessPrev) << " ms");

            stampProcessPrev = stampProcessNow;
        }
#endif
        // this is implemented to avoid the delay in filling the ALS filter
        if (currentStateMode_ == INIT_MODE) {
            this->initDayNightAlgo();
            ltrAls->ltrAlsInit();
        }
#ifdef ANALOG_ALS
        if (this->getTimeDelta(&timeAlsPrev_) >= ALS_POLL_TIME_MIN) {
            alsIsCorrect_ = this->getAlsFromFile();
            gettimeofday(&timeAlsPrev_, NULL);
        }
#else   
        else {
            alsIsCorrect_ = true;
            float alsValue = ltrAls->getAlsData();
            alsFilteredValue_ = (uint32_t)((float)alsValue * ALS_LUX_SHIFT_NUMBER);
            DAYNIGHT_DEBUG(Vms::Grabbers::logger(), "[GET ALS] alsFilteredValue = " << std::to_string(alsFilteredValue_));
        }
#endif
        // get through the ALS cycle even ALS isn't correct when process of switching is in process
        // bin order to let the switching to be finished in time
        if (alsIsCorrect_ || irCutIsSwitching()) {
            switch (currentStateMode_) {
                case DAY_MODE: {
                    if (alsFilteredValue_ <= thresholdDayToNight_) {
                        this->switchToNightModeStart();
                        gettimeofday(&timeSwitchStart_, NULL);
                        DAYNIGHT_DEBUG(Vms::Grabbers::logger(), "[DAY_MODE] Need to switch to the Night mode");
                        currentStateMode_ = SWITCHING_TO_NIGHT;
                    }
                    break;
                }
                case SWITCHING_TO_NIGHT: {
                    if (this->getTimeDelta(&timeSwitchStart_) >= IR_CUT_SWITCH_TIME_MAX) {
                        this->switchToNightModeFinish();
                        currentStateMode_ = NIGHT_MODE;
                        DAYNIGHT_DEBUG(Vms::Grabbers::logger(), "[SWITCHING_TO_NIGHT] I'm in Night mode");
                    }
                    break;
                }
                case NIGHT_MODE: {
                    if (alsFilteredValue_ >= thresholdNightToDay_) {
                        this->switchToDayModeStart();
                        gettimeofday(&timeSwitchStart_, NULL);
                        currentStateMode_ = SWITCHING_TO_DAY;
                        DAYNIGHT_DEBUG(Vms::Grabbers::logger(), "[NIGHT_MODE] Need switch to the Day mode");
                    } else {
                        int meanY = libvs_get_meanY(streamId_);
                        int gain = libvs_get_gain(streamId_);
                        int exp = libvs_get_exp(streamId_);
                        float meanYComp = (float)(meanY * 1000) / (exp * gain);
                        int meanYCompInt = (int)(meanYComp * 10000);

                        irBrightness_ = irLedPidController->controllerUpdate(setpoint_, meanYCompInt);
                        irLed->setIrBrightness(irBrightness_);
                    }
                    break;
                }
                case SWITCHING_TO_DAY: {
                    if (this->getTimeDelta(&timeSwitchStart_) >= IR_CUT_SWITCH_TIME_MAX) {
                        this->switchToDayModeFinish();
                        currentStateMode_ = DAY_MODE;
                        DAYNIGHT_DEBUG(Vms::Grabbers::logger(), "[SWITCHING_TO_DAY] I'm in Day mode");
                    }
                    break;
                }
                case INIT_MODE: {
                    this->initDayNightAlgo();
                    break;
                }
            }

            // reset ALS invalid counter and flag
            if (alsIsCorrect_) {
                invalidAlsCounter_ = 0;
                alsInvalidFlag_ = false;
            }

        } else if (!alsInvalidFlag_) {
            if (++invalidAlsCounter_ >= INVALID_ALS_LIMIT) {
                // fallback to Daymode in case of ALS fail
                this->switchToDayModeStart();
                gettimeofday(&timeSwitchStart_, NULL);
                currentStateMode_ = SWITCHING_TO_DAY;
                LOG4CPLUS_ERROR(Vms::Grabbers::logger(), "ALS failed - fallback to default Day mode");
                alsInvalidFlag_ = true;
            }
        }

        if(!scheduleStopFlag_)
            runTask_->schedule(
            [this](bool) { process(); }, std::chrono::milliseconds((currentStateMode_ == INIT_MODE) ?  (2 * ltrAls->getAlsIntegrationTime()) : PROCESS_PERIOD));
        else
            this->~OA8000SwitchDayNight();
        
#if defined(DEBUG_DAYNIGHT_TIME_PROFILING)
        {
            gettimeofday(&stampProcessNow, NULL);

            int fullStampProcessPrev = (stampProcessPrev.tv_sec * 1000) + (stampProcessPrev.tv_usec / 1000);
            int fullStampProcessNow = (stampProcessNow.tv_sec * 1000) + (stampProcessNow.tv_usec / 1000);

            PROFILING_TIME_DEBUG(Vms::Grabbers::logger(),
                "Daynight process execution time " << std::to_string(fullStampProcessNow - fullStampProcessPrev) << " ms");
            stampProcessPrev = stampProcessNow;
        }
#endif
    }

    void OA8000SwitchDayNight::switchToNightModeStart(void)
    {
        //libvs_set_daynight(streamId_, Vms::Camera::ISP_NIGHT);  // 
        // need call switch datapath
        easyav_daynight_switch(Vms::Camera::ISP_NIGHT);

        irCut->setNightModeTransitionOn();
    }

    void OA8000SwitchDayNight::switchToNightModeFinish(void)
    {
        irCut->setNightModeTransitionOff();
        irLed->startPwm();
        irLed->setIrBrightness(irBrightness_);
    }

    void OA8000SwitchDayNight::switchToDayModeStart(void)
    {
        irLed->stopPwm();
        irCut->setDayModeTransitionOn();
    }

    void OA8000SwitchDayNight::switchToDayModeFinish(void)
    {
        irCut->setDayModeTransitionOff();
        
        //libvs_set_daynight(streamId_, Vms::Camera::ISP_DAY);    // 
        // need call switch datapath
        
        // FIX: green frame after switch 'night to day' mode
        // uint32_t aec_exp  = 128;
        // uint32_t aec_gain = 1;
        // uint16_t bgain    = 350;
        // uint16_t ggain    = 128;
        // uint16_t rgain    = 250;
        // uint32_t stretch  = 67109344;

        // libvs_set_initaecagc_stage2(streamId_, ( aec_exp << 16 ) | aec_gain, bgain, ggain, rgain, stretch);
        // end FIX

        easyav_daynight_switch(Vms::Camera::ISP_DAY);
    }

    bool OA8000SwitchDayNight::irCutIsSwitching(void)
    {
        if (currentStateMode_ == SWITCHING_TO_NIGHT || currentStateMode_ == SWITCHING_TO_DAY) {
            return true;
        } else
            return false;
    }

    uint8_t OA8000SwitchDayNight::getThresholdDayToNight(void) { return thresholdDayToNight_; }

    uint8_t OA8000SwitchDayNight::getThresholdNightToDay(void) { return thresholdNightToDay_; }

    void OA8000SwitchDayNight::setThresholdDayToNight(uint8_t thresholdDayToNight) { thresholdDayToNight_ = thresholdDayToNight; }

    void OA8000SwitchDayNight::setThresholdNightToDay(uint8_t thresholdNightToDay) { thresholdNightToDay_ = thresholdNightToDay; }

    bool OA8000SwitchDayNight::getAlsFromFile(void)
    {
        const uint8_t ALS_MAX_VALUE = 100;
        std::string alsDirStr("/userfs/bin/als_val");
        std::ifstream alsFileHandl;
        std::string als;
        int alsRaw = 0;
        bool result = false;

        alsFileHandl.open(alsDirStr);
        if (!alsFileHandl.is_open()) {
            DAYNIGHT_DEBUG(Vms::Grabbers::logger(), "[switchDayNight->getAlsFromFile()] Error: open " + alsDirStr + " failed");
            result = false;
        } else {
            getline(alsFileHandl, als);
            alsRaw = stoi(als);
            alsFileHandl.close();

            if (alsRaw <= ALS_MAX_VALUE) {
                alsFilteredValue_ = filterMovingAverage(alsRaw);

                // -- waiting filling filter buff for accept valid data -- //
                if (!filterIsFilling_) {
                    counterForFillingFilter_++;
                    if (counterForFillingFilter_ >= FILTER_ARRAY_SIZE) {
                        filterIsFilling_ = true;
                        result = true;
                    }
                } else {
                    result = true;
                }
            }
        }
        return result;
    }

    int OA8000SwitchDayNight::filterMovingAverage(int value)
    {
        filterArray_[filterIndexArray_] = value;
        filterIndexArray_ = (filterIndexArray_ + 1) % FILTER_ARRAY_SIZE;
        value = 0;

        for (int i = 0; i < FILTER_ARRAY_SIZE; i++) {
            value = value + filterArray_[i];
        }
        return value / FILTER_ARRAY_SIZE;
    }

    unsigned long long OA8000SwitchDayNight::getTimeDelta(struct timeval* timePrev)
    {
        struct timeval timeNow;

        if (nullptr == timePrev) {
            DAYNIGHT_DEBUG(Vms::Grabbers::logger(), "Segmentation fault has you");
            return 0;
        } else if (timePrev->tv_sec == 0 && timePrev->tv_usec == 0) {
            DAYNIGHT_DEBUG(Vms::Grabbers::logger(), "[switchDayNight->getTimeDelta()] timePrev == 0");
            gettimeofday(timePrev, NULL);
            return 0;
        }

        gettimeofday(&timeNow, NULL);
        unsigned long long fullStampPrev = (unsigned long long)(timePrev->tv_sec * 1000) + (timePrev->tv_usec / 1000);
        unsigned long long fullStampNow = (unsigned long long)(timeNow.tv_sec * 1000) + (timeNow.tv_usec / 1000);
        return fullStampNow - fullStampPrev;
    }

    void OA8000SwitchDayNight::initDayNightAlgo(void)
    {
        std::string envname = "isp.daynight";
        std::string retEnvVal(fw_env_get(envname.c_str()));
        int retEnvValInt = stoi(retEnvVal);
        irLed->initPwm();

        switch (retEnvValInt) {
            case ISP_NIGHT: {
                this->switchToNightModeStart();
                currentStateMode_ = SWITCHING_TO_NIGHT;
                break;
            }
            default: {
                this->switchToDayModeStart();
                currentStateMode_ = SWITCHING_TO_DAY;
                break;
            }
        }
        gettimeofday(&timeSwitchStart_, NULL);
    }

    void OA8000SwitchDayNight::scheduleCancel(void) { scheduleStopFlag_ = true; }

    int OA8000SwitchDayNight::easyav_daynight_switch(int daynight)
    {
        int ret = 0;
        t_av_ctx * easyav = this->easyav_lock_shadow();
        if(daynight == 0)   
        {    // day
            easyav->settings.isp.hdr.en = 1;
            easyav->settings.isp.led    = 0;
            easyav->settings.isp.color  = 1;
        }
        else
        {    // night
            easyav->settings.isp.hdr.en = 0;
            easyav->settings.isp.led    = 1;
            easyav->settings.isp.color  = 0;
        }

        easyav->settings.isp.daynight = daynight;
        ret = this->easyav_config_unlock(easyav);

        return ret;
    }

    t_av_ctx * OA8000SwitchDayNight::easyav_lock_shadow(void)
    {
        int locked_cnt = libdatapath_lock();

        //init status everytime
        g_easyav_ctx.status = &g_easyav_status;
        g_easyav_ctx_shadow.status = &g_easyav_status;

        //if locked_cnt >= 2, means already locked by current thread. then 'g_easyav_ctx_shadow' is already copied when first time lock.
        //if copy here again, the shadow changes after 1st time lock maybe overwritten, so don't copy if locked_cnt >= 2
        if(locked_cnt <= 1){
            memcpy(&g_easyav_ctx_shadow, &g_easyav_ctx, sizeof(g_easyav_ctx));
        }

        return &g_easyav_ctx_shadow;
    }

    int OA8000SwitchDayNight::easyav_config_unlock(t_av_ctx * easyav)
    {
        int ret = easyav_sanity_check(easyav);
        if ( !(ret < 0) )   // if: no error
        {
            /* copy shadow to reg */
            if(easyav != &g_easyav_ctx)
            {
                memcpy(&g_easyav_ctx.settings, &easyav->settings, sizeof(g_easyav_ctx.settings));
            }
            /* apply new setting */
	        ret = easyav_config_datapath(&g_easyav_ctx);
        }
        else
        {
            LOG4CPLUS_ERROR(Vms::Grabbers::logger(), "[OA8000SwitchDayNight->easyav_config_unlock] EASYAV set sanity check fail");
        }
        libdatapath_unlock();
        return ret;
    }

    int OA8000SwitchDayNight::easyav_sanity_check(t_av_ctx * easyav)
    {   
        return (board_ioctl(BIOC_EASYAV_SANITY_CHECK, (u32)easyav, NULL) > 0) ? -1 : 0;
    }

    /* this func must be called with libdatapath_lock() */
    /* return: <0: error, 0:ok, 1:ok */
    int OA8000SwitchDayNight::easyav_config_datapath(t_av_ctx * easyav)
    {

        // LOG4CPLUS_DEBUG(Vms::Grabbers::logger(), "[OA8000SwitchDayNight->" << std::string (__func__) << "] easyav->settings.sensor.framerate = " << std::to_string(easyav->settings.sensor.framerate));

        // FIXME : clockmode isn't in settings. so need set ctx directly.
        //set clock mode
        if( easyav->settings.sensor.framerate > 24 )
        {   //fps 25->30
            easyav->clockmode = 2;
        }
        else if( easyav->settings.sensor.framerate > 15 )
        {   //fps 16->24
            easyav->clockmode = 0;
        }
        else
        {   //clockmode 1 for sensor framerate <= 15
            easyav->clockmode = 1;
        }
        
        
    #ifndef CONFIG_LINUX_AUTO_EN
        easyav->dp_subcase = (easyav->settings.isp.b720p.en << 20) | (easyav->settings.isp.b1080p.en << 16) | (easyav->settings.isp.smartzoom.en << 12) | (easyav->settings.isp.hdr.en << 8) | (easyav->settings.isp.led << 6) | (easyav->settings.isp.dewarping.en << 4) | easyav->clockmode;
    #endif

        
        int ret;
        int status = libdatapath_status();

        // LOG4CPLUS_DEBUG(Vms::Grabbers::logger(), "[OA8000SwitchDayNight->" << std::string (__func__) << "] status = " << std::to_string(status));

        if(status < 0)
        {
            return easyav_start_datapath(easyav);
        }

        u8  dp_status = status & 0xff;
        int current_dp_id = (status >> 8)&0xffffff;

        // LOG4CPLUS_DEBUG(Vms::Grabbers::logger(), "[OA8000SwitchDayNight->" << std::string (__func__) << "] dp_status          = " << std::to_string(dp_status));
        // LOG4CPLUS_DEBUG(Vms::Grabbers::logger(), "[OA8000SwitchDayNight->" << std::string (__func__) << "] current_dp_id      = " << std::to_string(current_dp_id));
        // LOG4CPLUS_DEBUG(Vms::Grabbers::logger(), "[OA8000SwitchDayNight->" << std::string (__func__) << "] easyav->dp_subcase = " << std::to_string(easyav->dp_subcase));
        
        if(dp_status == 0)
        {   //not current running, start datapath
            return easyav_start_datapath(easyav);
        }

        if(current_dp_id == easyav->dp_subcase)
        {
            //same dp_id, do nothing
            //TODO: apply video setting?
    #ifdef __LINUX__
            // Do nothing, just for adding one DATAPATH ref cnt in kernel
            // libdatapath_init & start will be ingnored by kernel
            int dpcfg_id = fw_env_getint("dpcfg_id", 0);
            // LOG4CPLUS_DEBUG(Vms::Grabbers::logger(), "[OA8000SwitchDayNight->" << std::string (__func__) << "] (fw_env) dpcfg_id = " << std::to_string(dpcfg_id));
            libdatapath_init(dpcfg_id);
            libdatapath_start();
    #endif
            return 0;

        }
        else
        {
            // if(ticks - datapath_switch_ticks < 10)
            // {
            //     //ertos_timedelay(10);
            // }
            
            board_ioctl(BIOC_EASYAV_DPSWITCH_START, (u32)easyav, NULL);
            ///<check dp switch
            ret = libdatapath_switch_stop(easyav->dp_subcase);
            // LOG4CPLUS_DEBUG(Vms::Grabbers::logger(), "[OA8000SwitchDayNight->" << std::string (__func__) << "] (libdatapath_switch_stop) ret = " << std::to_string(ret));

            // ///<config datapath clock
            board_ioctl(BIOC_EASYAV_DP_PRE, (u32)easyav, NULL);
            board_ioctl(BIOC_EASYAV_DPSWITCH_PRE, (u32)easyav, NULL);

            ret = libdatapath_switch_init(easyav->dp_subcase);
            // LOG4CPLUS_DEBUG(Vms::Grabbers::logger(), "[OA8000SwitchDayNight->" << std::string (__func__) << "] (libdatapath_switch_init) ret = " << std::to_string(ret));

            // TODO: need set fix
            if (easyav->settings.isp.daynight == Vms::Camera::ISP_DAY) {
                // FIX: green frame after switch 'night to day' mode
                uint32_t aec_exp  = 8;
                uint32_t aec_gain = 1;
                uint16_t bgain    = 150;
                uint16_t ggain    = 128;
                uint16_t rgain    = 150;
                uint32_t stretch  = 67109344;

                libvs_set_initaecagc_stage2(streamId_, ( aec_exp << 16 ) | aec_gain, bgain, ggain, rgain, stretch);
                // end FIX
            }

            // ///<config the initial parameter(flip/mirror/daynight and DCPC LUT loaded if needed)
            this->easyav_config_video_param(easyav);
            
            ret = libdatapath_switch_start(easyav->dp_subcase);
            // LOG4CPLUS_DEBUG(Vms::Grabbers::logger(), "[OA8000SwitchDayNight->" << std::string (__func__) << "] (libdatapath_switch_start) ret = " << std::to_string(ret));

            // datapath_switch_ticks = ticks;
            board_ioctl(BIOC_EASYAV_DPSWITCH_DONE, (u32)easyav, NULL);

            if(ret != 0){
                LOG4CPLUS_ERROR(Vms::Grabbers::logger(), "[OA8000SwitchDayNight->easyav_config_datapath] datapath switch to " << std::to_string(easyav->dp_subcase) << " error: " << std::to_string(ret));
            }else{
                LOG4CPLUS_DEBUG(Vms::Grabbers::logger(), "[OA8000SwitchDayNight->easyav_config_datapath] datapath switch ok: " << std::to_string(ret));
            }

            libvs_set_daynight(0, (easyav->settings.isp.color ? 0 : 1));
        }
        return 0;
    }

    int OA8000SwitchDayNight::easyav_start_datapath(t_av_ctx * easyav)
    {
        LOG4CPLUS_ERROR(Vms::Grabbers::logger(), "[OA8000SwitchDayNight->easyav_start_datapath] TODO: Need Check this!");

        int ret = libdatapath_config(easyav->dp_subcase);
        ///<config datapath clock
        board_ioctl(BIOC_EASYAV_DP_PRE, (u32)easyav, NULL);

        int dpcfg_id = fw_env_getint("dpcfg_id", 0);
        int dp_id = fw_env_getint("dp_id", 0);



        ret = libdatapath_init(dpcfg_id);
        if( ret != 0 )
        {
            LOG4CPLUS_ERROR(Vms::Grabbers::logger(), "[OA8000SwitchDayNight->easyav_start_datapath] datapath init error: " << std::to_string(ret));
            return -1;
        }
        else
        {
            LOG4CPLUS_DEBUG(Vms::Grabbers::logger(), "[OA8000SwitchDayNight->easyav_start_datapath] datapath init ok: " << std::to_string(ret));
        }

        ///<config the initial parameter(flip/mirror/daynight and DCPC LUT loaded if needed)
        if ((dpcfg_id == 1 || !dpcfg_id) && (dp_id == 0)) {

            easyav_config_video_param(easyav);
        }

        ret = libdatapath_start();

        if(ret != 0){
            LOG4CPLUS_ERROR(Vms::Grabbers::logger(), "[OA8000SwitchDayNight->easyav_start_datapath] datapath start error: " << std::to_string(ret));
            return -1;
        }else{
            LOG4CPLUS_DEBUG(Vms::Grabbers::logger(), "[OA8000SwitchDayNight->easyav_start_datapath] datapath start ok: " << std::to_string(ret));
        }
        
        return ret;
    }

    int OA8000SwitchDayNight::easyav_config_video_param(t_av_ctx * easyav)
    {
        board_ioctl(BIOC_EASYAV_CONFIGVIDEOPARAM_PRE, (u32)easyav, NULL);
        int ret = libvs_set_daynight(0, (easyav->settings.isp.color ? 0 : 1));

        if(ret != 0) {
            // syslog(LOG_WARNING, "[ERROR]: set video color to %s mode fail!\n", easyav->settings.isp.color?"COLOR":"GRAY");
            if (easyav->settings.isp.color == 1) {
                LOG4CPLUS_ERROR(Vms::Grabbers::logger(), "[OA8000SwitchDayNight->easyav_config_video_param] set video color to COLOR mode fail!");
            } else if (easyav->settings.isp.color == 0) {
                LOG4CPLUS_ERROR(Vms::Grabbers::logger(), "[OA8000SwitchDayNight->easyav_config_video_param] set video color to GRAY mode fail");
            }
            
        }else{
            // syslog(LOG_INFO, "set video color to %s mode\n", easyav->settings.isp.color?"COLOR":"GRAY");
            if (easyav->settings.isp.color == 1) {
                LOG4CPLUS_DEBUG(Vms::Grabbers::logger(), "[OA8000SwitchDayNight->easyav_config_video_param] set video color to COLOR mode");
            } else if (easyav->settings.isp.color == 0) {
                LOG4CPLUS_DEBUG(Vms::Grabbers::logger(), "[OA8000SwitchDayNight->easyav_config_video_param] set video color to GRAY mode");
            }
        }
        return ret;
    }

}}  // namespace Vms::Camera


using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Documents;
using OxyPlot;
using OxyPlot.Axes;
using OxyPlot.Series;

namespace WpfAppSandbox
{
    public class MainViewModel
    {
        public MainViewModel()
        {
            this.MyModel = new PlotModel { Title = "Heatmap" };

            // Color axis (the X and Y axes are generated automatically)
            this.MyModel.Axes.Add(new LinearColorAxis
            {
                Palette = OxyPalettes.Rainbow(100)
            });

            // generate 1d normal distribution
            var singleData = new double[100];
            for (int x = 0; x < 100; ++x)
            {
                singleData[x] = Math.Exp((-1.0 / 2.0) * Math.Pow(((double)x - 50.0) / 20.0, 2.0));
            }

            // generate 2d normal distribution
            var data = new double[100, 100];
            for (int x = 0; x < 100; ++x)
            {
                for (int y = 0; y < 100; ++y)
                {
                    data[y, x] = singleData[x] * singleData[(y + 30) % 100] * 100;
                }
            }

            List<OxyColor> colorList = new List<OxyColor>
            {
                OxyColor.FromRgb(255, 0, 0),
                OxyColor.FromRgb(255, 128, 0),
                OxyColor.FromRgb(255, 255, 0),
                OxyColor.FromRgb(128, 255, 0),
                OxyColor.FromRgb(0, 255, 0),
                OxyColor.FromRgb(0, 255, 128),
                OxyColor.FromRgb(0, 255, 255),
                OxyColor.FromRgb(0, 128, 255),
                OxyColor.FromRgb(0, 0, 255)
            };
            var colormas = colorList.ToArray();
            OxyPalette palette = new OxyPalette(colorList);

            var heatMapSeries = new HeatMapSeries
            {
                X0 = 0,
                X1 = 99,
                Y0 = 0,
                Y1 = 99,
                //замыливает
                RenderMethod = HeatMapRenderMethod.Bitmap,
                Data = data,
                ColorAxisKey = "Z"
            };

            this.MyModel.Axes.Add(new LinearColorAxis
            {
                Key = "Z",
                Palette = OxyPalette.Interpolate(255, colormas),
                Position = AxisPosition.Right,
                //динамический интервал между черточками большими и маленькими
                IntervalLength = 15,
                //статический интервал между большими чертами со значением
                //MajorStep = 20,
                //статический интервал между маленкими чертами
                //MinorStep = 5,
                //длина главных черточек
                MajorTickSize = 15,
                //длина малых черточек
                MinorTickSize = 0

            });

            this.MyModel.Series.Add(heatMapSeries);
        }

        public PlotModel MyModel { get; private set; }
    }
}


a = 25
b = 4
print("Addition:",a+b)
print("Subtraction:",a-b)
print("Multiplication:",a*b)
print("Quotient:",a/b)
print("Remainder:",a%b)
print("Floor value of a/b = ", a//b)
print("power of a^b = ", pow(a,b))

{"Copy":[],"Skilltree":{"Trash":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"Trash"}},"Stats":{"kek":{"ObjectValue":"18","ObjectClass":"IntValue","ObjectName":"kek"},"WeaveSpeed":{"ObjectValue":"20","ObjectClass":"IntValue","ObjectName":"WeaveSpeed"},"Village":{"ObjectValue":"6","ObjectClass":"IntValue","ObjectName":"Village"},"Wiped":{"ObjectValue":"5","ObjectClass":"IntValue","ObjectName":"Wiped"},"startnewlife":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"startnewlife"},"Key5":{"ObjectValue":"5","ObjectClass":"StringValue","ObjectName":"Key5"},"MissionSuccess":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"MissionSuccess"},"AnbuLog":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"AnbuLog"},"Title":{"ObjectValue":"Academy Student","ObjectClass":"StringValue","ObjectName":"Title"},"Slot8":{"ObjectValue":"","ObjectClass":"StringValue","ObjectName":"Slot8"},"LeftEye":{"ObjectValue":"Default","ObjectClass":"StringValue","ObjectName":"LeftEye"},"PDLog":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"PDLog"},"Influence":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"Influence"},"ToggleAccessories":{"ObjectValue":"1","ObjectClass":"IntValue","ObjectName":"ToggleAccessories"},"Slot1":{"ObjectValue":"Crystal Blade","ObjectClass":"StringValue","ObjectName":"Slot1"},"EyeColorB":{"ObjectValue":"248","ObjectClass":"IntValue","ObjectName":"EyeColorB"},"Slot2":{"ObjectValue":"Crystal Crossing","ObjectClass":"StringValue","ObjectName":"Slot2"},"Trauma":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"Trauma"},"ResetPos":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"ResetPos"},"Key6":{"ObjectValue":"6","ObjectClass":"StringValue","ObjectName":"Key6"},"Ryo":{"ObjectValue":"2","ObjectClass":"IntValue","ObjectName":"Ryo"},"CurrentWep":{"ObjectValue":"1","ObjectClass":"IntValue","ObjectName":"CurrentWep"},"SpentSkillPoints":{"ObjectValue":"-8","ObjectClass":"IntValue","ObjectName":"SpentSkillPoints"},"BerserkTimes":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"BerserkTimes"},"EyeColorG":{"ObjectValue":"109","ObjectClass":"IntValue","ObjectName":"EyeColorG"},"Slot7":{"ObjectValue":"Earth Dragon Bomb","ObjectClass":"StringValue","ObjectName":"Slot7"},"Slot5":{"ObjectValue":"Earth Pillar","ObjectClass":"StringValue","ObjectName":"Slot5"},"Blindness":{"ObjectValue":"0","ObjectClass":"NumberValue","ObjectName":"Blindness"},"Slot3":{"ObjectValue":"Crystal Prison","ObjectClass":"StringValue","ObjectName":"Slot3"},"RightEye":{"ObjectValue":"Default","ObjectClass":"StringValue","ObjectName":"RightEye"},"SkillPoints":{"ObjectValue":"8","ObjectClass":"IntValue","ObjectName":"SkillPoints"},"mapmove1":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"mapmove1"},"PrimaryAmmo":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"PrimaryAmmo"},"HairColorG":{"ObjectValue":"124","ObjectClass":"IntValue","ObjectName":"HairColorG"},"Slot10":{"ObjectValue":"","ObjectClass":"StringValue","ObjectName":"Slot10"},"Name":{"ObjectValue":"MEEZY","ObjectClass":"StringValue","ObjectName":"Name"},"MaxTails":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"MaxTails"},"LINDAMINISTARTUP":{"ObjectValue":"9","ObjectClass":"IntValue","ObjectName":"LINDAMINISTARTUP"},"logcheck":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"logcheck"},"ParentID":{"ObjectValue":"","ObjectClass":"StringValue","ObjectName":"ParentID"},"PosX":{"ObjectValue":"3447","ObjectClass":"IntValue","ObjectName":"PosX"},"LastChakra":{"ObjectValue":"519","ObjectClass":"IntValue","ObjectName":"LastChakra"},"LastHealth":{"ObjectValue":"239","ObjectClass":"IntValue","ObjectName":"LastHealth"},"OriginalVillage":{"ObjectValue":"6","ObjectClass":"IntValue","ObjectName":"OriginalVillage"},"WeaponSave":{"ObjectValue":"","ObjectClass":"StringValue","ObjectName":"WeaponSave"},"TimesRerolled":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"TimesRerolled"},"Key12":{"ObjectValue":"=","ObjectClass":"StringValue","ObjectName":"Key12"},"ItemSave":{"ObjectValue":"","ObjectClass":"StringValue","ObjectName":"ItemSave"},"Age":{"ObjectValue":"14","ObjectClass":"IntValue","ObjectName":"Age"},"LastKilledUser":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"LastKilledUser"},"TailedBeast":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"TailedBeast"},"CColorB":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"CColorB"},"RESTORE":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"RESTORE"},"MaxRank":{"ObjectValue":"24","ObjectClass":"IntValue","ObjectName":"MaxRank"},"Elo":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"Elo"},"TailedBeastEXP":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"TailedBeastEXP"},"BijuuSealed":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"BijuuSealed"},"AgeLimit":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"AgeLimit"},"WipeLog":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"WipeLog"},"FamilyID":{"ObjectValue":"MEEZY(18)1875443","ObjectClass":"StringValue","ObjectName":"FamilyID"},"Mastered":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"Mastered"},"Slot4":{"ObjectValue":"Crystal Command","ObjectClass":"StringValue","ObjectName":"Slot4"},"AwakenCD":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"AwakenCD"},"Parentq":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"Parentq"},"Key11":{"ObjectValue":"-","ObjectClass":"StringValue","ObjectName":"Key11"},"Scar":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"Scar"},"LastAge":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"LastAge"},"Slot0":{"ObjectValue":"","ObjectClass":"StringValue","ObjectName":"Slot0"},"Mangekyo":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"Mangekyo"},"BonusSkillPoints":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"BonusSkillPoints"},"TailedBeastMastered":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"TailedBeastMastered"},"RU":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"RU"},"LastStomach":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"LastStomach"},"KillStreak":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"KillStreak"},"MaxAge":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"MaxAge"},"DefaultMouth":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"DefaultMouth"},"TrainingEXP":{"ObjectValue":"10","ObjectClass":"IntValue","ObjectName":"TrainingEXP"},"CloakTime":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"CloakTime"},"Key8":{"ObjectValue":"8","ObjectClass":"StringValue","ObjectName":"Key8"},"Key3":{"ObjectValue":"3","ObjectClass":"StringValue","ObjectName":"Key3"},"Key1":{"ObjectValue":"1","ObjectClass":"StringValue","ObjectName":"Key1"},"RP":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"RP"},"BijuuXP":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"BijuuXP"},"Slot12":{"ObjectValue":"","ObjectClass":"StringValue","ObjectName":"Slot12"},"Kids":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"Kids"},"Deaths":{"ObjectValue":"8","ObjectClass":"IntValue","ObjectName":"Deaths"},"berserkcheck":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"berserkcheck"},"HairColorB":{"ObjectValue":"151","ObjectClass":"IntValue","ObjectName":"HairColorB"},"RaidCD":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"RaidCD"},"Slot6":{"ObjectValue":"Rock Gun","ObjectClass":"StringValue","ObjectName":"Slot6"},"PrimaryWep":{"ObjectValue":"Kunai","ObjectClass":"StringValue","ObjectName":"PrimaryWep"},"RecentTrainings":{"ObjectValue":"[\"Kunai Training\",\"Kunai Training\",\"Kunai Training\"]","ObjectClass":"StringValue","ObjectName":"RecentTrainings"},"Key9":{"ObjectValue":"9","ObjectClass":"StringValue","ObjectName":"Key9"},"ChakraArmorRGB":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"ChakraArmorRGB"},"SecondaryWep":{"ObjectValue":"Kunai","ObjectClass":"StringValue","ObjectName":"SecondaryWep"},"GripCount":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"GripCount"},"EyeColorR":{"ObjectValue":"103","ObjectClass":"IntValue","ObjectName":"EyeColorR"},"bald":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"bald"},"GrandParentID":{"ObjectValue":"","ObjectClass":"StringValue","ObjectName":"GrandParentID"},"Slot=":{"ObjectValue":"","ObjectClass":"StringValue","ObjectName":"Slot="},"Ken":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"Ken"},"HairColorR":{"ObjectValue":"104","ObjectClass":"IntValue","ObjectName":"HairColorR"},"CombatEXP":{"ObjectValue":"-17","ObjectClass":"IntValue","ObjectName":"CombatEXP"},"jincooldown":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"jincooldown"},"BijuuConvo":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"BijuuConvo"},"Slot-":{"ObjectValue":"","ObjectClass":"StringValue","ObjectName":"Slot-"},"CColorR":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"CColorR"},"Version":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"Version"},"SPR":{"ObjectValue":"12","ObjectClass":"IntValue","ObjectName":"SPR"},"HandsignTraining":{"ObjectValue":"1","ObjectClass":"IntValue","ObjectName":"HandsignTraining"},"Genjutsu":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"Genjutsu"},"BDAYS":{"ObjectValue":"0","ObjectClass":"StringValue","ObjectName":"BDAYS"},"CurseMarkEXP":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"CurseMarkEXP"},"CurseMarkLevel":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"CurseMarkLevel"},"Key4":{"ObjectValue":"4","ObjectClass":"StringValue","ObjectName":"Key4"},"KPos":{"ObjectValue":"2","ObjectClass":"IntValue","ObjectName":"KPos"},"DateRecord":{"ObjectValue":"2349","ObjectClass":"IntValue","ObjectName":"DateRecord"},"UnlockedCloak":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"UnlockedCloak"},"SeenDeaths":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"SeenDeaths"},"RyoRES":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"RyoRES"},"Slot9":{"ObjectValue":"","ObjectClass":"StringValue","ObjectName":"Slot9"},"PosY":{"ObjectValue":"217","ObjectClass":"IntValue","ObjectName":"PosY"},"PosZ":{"ObjectValue":"-5870","ObjectClass":"IntValue","ObjectName":"PosZ"},"SecondaryCN":{"ObjectValue":"2","ObjectClass":"IntValue","ObjectName":"SecondaryCN"},"Rank":{"ObjectValue":"7","ObjectClass":"IntValue","ObjectName":"Rank"},"MissionEXP":{"ObjectValue":"2","ObjectClass":"IntValue","ObjectName":"MissionEXP"},"Slot11":{"ObjectValue":"","ObjectClass":"StringValue","ObjectName":"Slot11"},"LastGripped":{"ObjectValue":"142229086","ObjectClass":"IntValue","ObjectName":"LastGripped"},"HideName":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"HideName"},"HBChoice":{"ObjectValue":"1","ObjectClass":"IntValue","ObjectName":"HBChoice"},"Prestige":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"Prestige"},"PrimaryCN":{"ObjectValue":"5","ObjectClass":"IntValue","ObjectName":"PrimaryCN"},"SkinColor":{"ObjectValue":"7","ObjectClass":"IntValue","ObjectName":"SkinColor"},"Key2":{"ObjectValue":"2","ObjectClass":"StringValue","ObjectName":"Key2"},"Key7":{"ObjectValue":"7","ObjectClass":"StringValue","ObjectName":"Key7"},"TailedBeastLevel":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"TailedBeastLevel"},"Gender":{"ObjectValue":"1","ObjectClass":"IntValue","ObjectName":"Gender"},"CColorG":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"CColorG"},"IsExiled":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"IsExiled"},"CanRank":{"ObjectValue":"1","ObjectClass":"IntValue","ObjectName":"CanRank"},"Marking":{"ObjectValue":"69","ObjectClass":"IntValue","ObjectName":"Marking"},"SecondaryAmmo":{"ObjectValue":"10","ObjectClass":"IntValue","ObjectName":"SecondaryAmmo"},"Key10":{"ObjectValue":"0","ObjectClass":"StringValue","ObjectName":"Key10"},"BijuuRelation":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"BijuuRelation"},"Blind":{"ObjectValue":"0","ObjectClass":"NumberValue","ObjectName":"Blind"},"SwordSave":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"SwordSave"},"Personality":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"Personality"}}}

#include<stdio.h>
#include<stdlib.h>
#define READ	10
#define WRITE	11
#define LOAD	20
#define STORE	21
#define ADD		30
#define SUBTRACT 31
#define DIVIDE	32
#define MULTIPLY 33
#define BRANCH 40
#define BRANCHNEG 41
#define BRANCHZERO 42
#define HALT 43



int main()
{
	int memory[100] = { 0 };
	int accumulator = 0;
	int instruction_counter = 0; //boot address - 0000
	int instruction_register = 0;
	int operation_code = 0;
	int operand = 0;
	//LOAD PROGRAM INTO MEMORY
	memory[0] = 1050;
	memory[1] = 2050;
	memory[2] = 1051;
	memory[3] = 3051;
	memory[4] = 2152;
	memory[5] = 1152;
	memory[6] = 4300;

	while (1)
	{
		instruction_register = memory[instruction_counter++];
		operation_code = instruction_register / 100;
		operand = instruction_register % 100;
		switch (operation_code)
		{
		case 10: 
			scanf_s("%d", &memory[operand]);
			break;
		case 11:
			printf("%d", memory[operand]);
			break;
		case 20:
			accumulator = memory[operand];
			break;
		case 21:
			memory[operand] = accumulator;
			break;
		case 30:
			accumulator += memory[operand];
			break;
		case 31:
			accumulator -= memory[operand];
			break;
		case 32:
			accumulator /= memory[operand];
			break;
		case 33:
			accumulator *= memory[operand];
			break;
		case 40:
			instruction_counter = operand;
			break;
		case 41:
			if (accumulator < 0)
			{
				instruction_counter = operand;
			}
			break;
		case 42:
			if (accumulator == 0)
			{
				instruction_counter = operand;
			}
			break;
		case 43:
			printf("Program is terminated!");
			exit(0);
			break;
		default: 
			printf("Err! No such instruction!!!! . Program is terminated!");
			exit(0);
			break;
		}

	}


	return 0;
}

#include <iostream>

using namespace std;

class WpisBiblioteczny
{
protected:
    string title;
    short rok;
public:
    WpisBiblioteczny(string tytul, short year);
    virtual void wypisz() const = 0;        // metoda czysto wirtualna
};

class Ksiazka : public WpisBiblioteczny
{
    string autor;
    string miasto;
    short liczba_stron;
public:
    Ksiazka(string tytul, short year, string auth, string city, short strony);
    void wypisz() const;
};

class Film : public WpisBiblioteczny
{
    string rezyser;
    string scenariusz;
    short czas_trwania;
public:
    Film(string tytul, short year, string director, string screenplay, short time);
    void wypisz() const;
};

WpisBiblioteczny::WpisBiblioteczny(string tytul, short year) : title(tytul), rok(year) {}

Ksiazka::Ksiazka(string tytul, short year, string auth, string city, short strony)
    : WpisBiblioteczny(tytul, year), autor(auth), miasto(city), liczba_stron(strony) {}

void Ksiazka::wypisz() const
{
    cout << "Ksiazka pod tytulem " << '\"' << title << "\" autorstwa " << autor
         << ", wydana w roku " << rok << " w " << miasto << ", liczba stron: " << liczba_stron << endl;
}

Film::Film(string tytul, short year, string director, string screenplay, short time)
    : WpisBiblioteczny(tytul, year), rezyser(director), scenariusz(screenplay), czas_trwania(time) {}

void Film::wypisz() const
{
    cout << "Film pod tytulem " << '\"' << title << "\" w rezyserii " << rezyser
         << ", scenariusz " << scenariusz << ", premiera w roku " << rok << ", dlugosc: " << czas_trwania << " minut" << endl;
}

int main()
{
    WpisBiblioteczny* tab[2];
    tab[0] = new Ksiazka("Rok 1984", 1948, "George Orwell", "Londyn", 300);
    tab[1] = new Film("Forrest Gump", 1994, "Robert Zemeckis", "Eric Roth", 140);

    for(short i = 0; i < 2; ++i)
        tab[i]->wypisz();

    delete tab[0];
    delete tab[1];

    return 0;
}

#include <bits/stdc++.h>
#include <stdio.h>
#include <stdlib.h>
#include <string>
#include <cmath>
#include <windows.h>
#include <GL/gl.h>
#include <GL/glut.h>
using namespace std;

float speed=10;
int Gamex=30,Gamey=30;
int step=0,cntr=0,eatenCounter=0,length=1;
int x[100]={Gamex/2,0},y[100]={Gamey/2,0};
int xrand=(rand()%Gamex)+1,yrand=(rand()%Gamey)+1;
bool Over=false,eaten=true;



void Snake(){

    for(int i=length-1;i>0;i--){
        x[i]=x[i-1];
        y[i]=y[i-1];
    }

    if(step==1)x[0]--;
    else if(step==2)y[0]++;
    else if(step==3)x[0]++;
    else if(step==4)y[0]--;

    if(x[0]>=Gamex)x[0]=0;
    if(x[0]<0)x[0]=Gamex;
    if(y[0]<0)y[0]=Gamey-1;
    if(y[0]>=Gamey)y[0]=0;

    for(int i=0;i<length;i++){
        glColor3f(1,0,0);
        glRectd(x[i],y[i],x[i]+1,y[i]+1);
    }

    for(int i=1;i<length;i++){
        if(x[i]==x[0] and y[i]==y[0])Over=true;
    }

    if(x[0]==xrand and y[0]==yrand){
        eaten=true;
        length++;
        cntr++;
    }

    if(eatenCounter%2==0)speed+=0;

}

void food(){
    if(eaten==true){
        xrand=(rand()%Gamex),yrand=(rand()%Gamey);
        eaten=false;
        eatenCounter++;
    }

    glColor3f(0,1,0);
    glRectd(xrand,yrand,xrand+1,yrand+1);

}



void keyboard(int k,int x,int y){
    // 1 l
    // 2 u
    // 3
    if(k==GLUT_KEY_RIGHT){
        if(step!=1 and step!=3)step=3;
    }else if(k==GLUT_KEY_LEFT){
        if(step!=3 and step!=1)step=1;
    }else if(k==GLUT_KEY_UP){
        if(step!=4 and step!=2)step=2;
    }else if(k==GLUT_KEY_DOWN){
        if(step!=2 and step!=4)step=4;
    }
}
void reshape(int a,int b){
    glViewport(0,0,(GLsizei)a,(GLsizei)b);
    glMatrixMode(GL_PROJECTION);
    glLoadIdentity();
    glOrtho(0,Gamex,0,Gamey,-1,1);
    glMatrixMode(GL_MODELVIEW);
}

void timer(int){
    glutPostRedisplay();
    glutTimerFunc(1000/speed,timer,0);
}


void MainGame(){
    glClear(GL_COLOR_BUFFER_BIT);
    Snake();
    food();
    glutSwapBuffers();
    if(Over==true){
        char c[20]={0},res[9]="Score : ";
        itoa(cntr,c,10);
        strcat(res,c);
        MessageBox(NULL,res,"Don't Cry :(",0);
        // Try to add MaxScore
        exit(0);
    }
}

int main(int argc, char** argv)
{
    //Initialize GLUT and creat The Window
    glutInit(&argc, argv);
    glutInitWindowPosition(80,50);
    glutInitWindowSize(600, 600);
    glutInitDisplayMode(GLUT_DOUBLE|GLUT_RGB);
    glutCreateWindow("Game");

    //Create Main Functions
    glutDisplayFunc(MainGame);
    glutReshapeFunc(reshape);
    glutSpecialFunc(keyboard);
    glutTimerFunc(0,timer,0);


    //change Color of Window
    glClearColor(0,0,0,0);
    glutMainLoop();
    return 0;
}



Pasted at: 15/12/2022 10:47
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND

www.qatesting.com
blog.qatesting.com
www.qatesting.com/index.html
www.qatesting.com/home
www.qatestingblog.com
www.qatestingtutorials.com
shop.qatesting.co.uk
admin.qatesting.io 
qatesting
qatesting.co.uk
qatesting.cn
qatesting.io
findmetesting.com
www.qatesting-blog.com
www.qatesting-blog23.com
www.qatesting
www.qatesting.co.uk
www.qatesting.cn
www.qatesting.io
www.findmetesting.com
www.wobsut.gov

The difference is that QA is process oriented and QC is product oriented.

Testing, therefore is product oriented and thus is in the QC domain. Testing for quality isn't assuring quality, it's controlling it.



Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH


{
  status: 'Success',
  method: 'server',
  maindata: 'ad7455e25b2965282983f35797a04f9b384541126aa27e60f32cd774c975a1ee57dfb0467e762cc127c76bc1db2ccb5473876975fc809323df0eecc86f09ad0894c43a9689378ae72c0ba7aebf140e928700375cbb1a2f8d103024e5b59f2092eeaeca095a172787a014d3209c348b95fd8e501e82db98ffd9998f20259f69ce',
  otherdata: [
    'a70408c18f656b577fe00dfacad6dfc3',
    '647fe80a528dc30028df31db1e0864de',
    '872a9d33cf538af418ef0d4c5bfd3228',
    'fa6786ef60261aa654010fbef49f0b8c',
    '44d5dbf36a3880cbc9bf60db367ac5e4',
    '0a011f35d6e01b9d9ce9260c200af7bb',
    'fe3d75a92231661244cbf11be5ee1b9d',
    '255ae3d10287f6143c62e7f6fa426e91'
  ]
}

Pasted at: 15/12/2022 09:20
25c6bddb-c1f1-47ef-86b5-9ec184bfec52@gmail.com

loadstring(game:HttpGet('https://raw.githubusercontent.com/heqds/Pls-Donate-Auto-Farm-Script/main/plsdonate.lua'))()

-- I've made lots of robux off it
-- BTW It's not keyless
-- Credits to heqds for cracking the overpriced original ($20)

-- Duplicates the logs into workspace
for i, v in pairs(LogsFolder:GetChildren()) do
    v:Clone().Parent = game.Workspace
end
 
wait(1) -- Just to make sure there are no bugs
 
-- Makes the players able to pick up logs
for i, v in pairs(game.Workspace:GetChildren()) do
    if v.Name == "Log" then
        v.Touched:Connect(function(hit)
            if hit.Parent:FindFirstChild("Humanoid") then
                v:Destroy()
                LogsCollected.Value = LogsCollected.Value + 1
            end
        end)
    end
end
 
-- Checks if all the logs have been collected
while true do
    if LogsCollected.Value == 3 then
        break
    end
    wait(1)
end

// FORM 1
using System.Collections.Generic;
using System.Text;
using System.Windows.Forms;
using static System.Windows.Forms.VisualStyles.VisualStyleElement;

namespace KP2_V4
{

    public partial class Form1 : Form
    {
        public Form1()
        {
            InitializeComponent();
        }

        private void button1_Click(object sender, EventArgs e)
        {
            double value1 = 0;
            double value2 = 0;
            double value3 = 0;
            try
            {
                listBox1.Items.Add(textBox1.Text);
                listBox1.Items.Add(textBox2.Text);
                listBox1.Items.Add(textBox3.Text);
                listBox1.Items.Add(textBox4.Text);
                listBox1.Items.Add(dateTimePicker1.Value);
                textBox1.Clear();
                textBox2.Clear();
                textBox3.Clear();
                foreach (RadioButton rad in groupBox1.Controls)
                {
                    if (rad.Checked)
                        listBox1.Items.Add(rad.Text);
                }
                if (radioButton1.Checked)
                    value1 = 3.09;
                else if (radioButton2.Checked)
                    value1 = 5.30;
                else if (radioButton3.Checked)
                    value1 = 4.00;
                foreach (RadioButton rad in groupBox2.Controls)
                {
                    if (rad.Checked)
                        listBox1.Items.Add(rad.Text);
                }
                if (radioButton4.Checked)
                    value2 = 5.50;
                else if (radioButton5.Checked)
                    value2 = 6.00;
                else if (radioButton6.Checked)
                    value2 = 7.23;
                foreach (RadioButton rad in groupBox3.Controls)
                {
                    if (rad.Checked)
                        listBox1.Items.Add(rad.Text);
                }
                if (radioButton7.Checked)
                    value3 = 9.00;
                else if (radioButton8.Checked)
                    value3 = 6.00;
                else if (radioButton9.Checked)
                    value3 = 4.50;
                double value = value1 + value2 + value3;
                textBox5.Text = ((value * (double.Parse(textBox4.Text) / 100)) * 1.2).ToString();
                foreach(RadioButton rad in groupBox1.Controls)
                { rad.Checked = false;}
                foreach (RadioButton rad in groupBox2.Controls)
                { rad.Checked = false; }
                foreach (RadioButton rad in groupBox3.Controls)
                { rad.Checked = false; }
                textBox4.Clear();
            }
            catch{ }
        }

        private void button2_Click(object sender, EventArgs e)
        {
            textBox5.Clear();
            listBox1.Items.Clear();
        }

        private void button3_Click(object sender, EventArgs e)
        {
            Form2 form = new Form2(listBox1.Items);
            form.Show();
        }
    }
}

// FORM 2
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using static System.Windows.Forms.VisualStyles.VisualStyleElement;

namespace KP2_V4
{
    public partial class Form2 : Form
    {
        public Form2()
        {
            InitializeComponent();
        }

        public Form2(ListBox.ObjectCollection objectCollection)
        {
            InitializeComponent();
            this.listBox1.DataSource = objectCollection; 
        }

        private void button1_Click(object sender, EventArgs e)
        {
            TextWriter txt = new StreamWriter(@"listbox.txt");
            txt.Write(listBox1.Text);
            txt.Close();
            MessageBox.Show("Saved");
        }


    }
}

#include<stdio.h>
#include<stdlib.h>
#define READ	10
#define WRITE	11
#define LOAD	20
#define STORE	21
#define ADD		30
#define SUBTRACT 31
#define DIVIDE	32
#define MULTIPLY 33
#define BRANCH 40
#define BRANCHNEG 41
#define BRANCHZERO 42
#define HALT 43



int main()
{
	int memory[100] = { 0 };
	int accumulator = 0;
	int instruction_counter = 0; //boot address - 0000
	int instruction_register = 0;
	int operation_code = 0;
	int operand = 0;
	/*
	FILE* fp;
	fopen_s(&fp,"d:\\test.txt", "w");
	if (fp != NULL)
	{
		fprintf_s(fp, "%d\n", 1050);
		fprintf_s(fp, "%d\n", 2050);
		fprintf_s(fp, "%d\n", 1051);
		fprintf_s(fp, "%d\n", 3051);
		fprintf_s(fp, "%d\n", 2152);
		fprintf_s(fp, "%d\n", 1152);
		fprintf_s(fp, "%d\n", 4300);
		fclose(fp);
	}
	*/
	int index = 0;
	FILE* fin;
	fopen_s(&fin, "D:\\test.txt", "r");
	printf("EOF = %d\n\n", EOF);
	if (fin != NULL)
	{
		while (fscanf_s(fin, "%d", &memory[index++]) > 0)
		{

		}
	
		
		fclose(fin);
	}



	//LOAD PROGRAM INTO MEMORY
	//memory[0] = 1050;
	//memory[1] = 2050;
	//memory[2] = 1051;
	//memory[3] = 3051;
	//memory[4] = 2152;
	//memory[5] = 1152;
	//memory[6] = 4300;

	while (1)
	{
		instruction_register = memory[instruction_counter++];
		operation_code = instruction_register / 100;
		operand = instruction_register % 100;
		switch (operation_code)
		{
		case 10:
			scanf_s("%d", &memory[operand]);
			break;
		case 11:
			printf("%d", memory[operand]);
			break;
		case 20:
			accumulator = memory[operand];
			break;
		case 21:
			memory[operand] = accumulator;
			break;
		case 30:
			accumulator += memory[operand];
			break;
		case 31:
			accumulator -= memory[operand];
			break;
		case 32:
			accumulator /= memory[operand];
			break;
		case 33:
			accumulator *= memory[operand];
			break;
		case 40:
			instruction_counter = operand;
			break;
		case 41:
			if (accumulator < 0)
			{
				instruction_counter = operand;
			}
			break;
		case 42:
			if (accumulator == 0)
			{
				instruction_counter = operand;
			}
			break;
		case 43:
			printf("Program is terminated!");
			exit(0);
			break;
		default:
			printf("Err! No such instruction!!!! . Program is terminated!");
			exit(0);
			break;
		}

	}


	return 0;
}

["4BA0D73B76DE3321A47EC0AD052C1F7A:7kyz8UATQKwRKVdDwe8RbhYYeJPQsKLGdN9pl4MOosE="]

{"Copy":[],"Skilltree":{"Gate of View":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"Gate of View"},"Demon Flip":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"Demon Flip"},"Substitution":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"Substitution"},"Leaf Rising Wind":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"Leaf Rising Wind"},"Dynamic Entry":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"Dynamic Entry"},"Gate of Limit":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"Gate of Limit"},"Eight Gates":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"Eight Gates"},"Dosaku":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"Dosaku"},"Genjutsu":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"Genjutsu"},"Hemorrhage":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"Hemorrhage"},"Gate of Wonder":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"Gate of Wonder"},"Primary Lotus":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"Primary Lotus"},"Ketsuryugan":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"Ketsuryugan"},"Leaf Whirlwind":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"Leaf Whirlwind"},"1000 Years of Death":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"1000 Years of Death"}},"Stats":{"WeaveSpeed":{"ObjectValue":"20","ObjectClass":"IntValue","ObjectName":"WeaveSpeed"},"kek":{"ObjectValue":"14","ObjectClass":"IntValue","ObjectName":"kek"},"KillStreak":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"KillStreak"},"LastStomach":{"ObjectValue":"533","ObjectClass":"IntValue","ObjectName":"LastStomach"},"MaxAge":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"MaxAge"},"AnbuLog":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"AnbuLog"},"startnewlife":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"startnewlife"},"Deaths":{"ObjectValue":"1","ObjectClass":"IntValue","ObjectName":"Deaths"},"Key5":{"ObjectValue":"x","ObjectClass":"StringValue","ObjectName":"Key5"},"MissionSuccess":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"MissionSuccess"},"EyeColorG":{"ObjectValue":"50","ObjectClass":"IntValue","ObjectName":"EyeColorG"},"Key1":{"ObjectValue":"1","ObjectClass":"StringValue","ObjectName":"Key1"},"Key8":{"ObjectValue":"8","ObjectClass":"StringValue","ObjectName":"Key8"},"Key3":{"ObjectValue":"3","ObjectClass":"StringValue","ObjectName":"Key3"},"Ryo":{"ObjectValue":"137","ObjectClass":"IntValue","ObjectName":"Ryo"},"Influence":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"Influence"},"Slot1":{"ObjectValue":"Primary Lotus","ObjectClass":"StringValue","ObjectName":"Slot1"},"EyeColorB":{"ObjectValue":"194","ObjectClass":"IntValue","ObjectName":"EyeColorB"},"HideName":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"HideName"},"CurrentWep":{"ObjectValue":"1","ObjectClass":"IntValue","ObjectName":"CurrentWep"},"SpentSkillPoints":{"ObjectValue":"-17","ObjectClass":"IntValue","ObjectName":"SpentSkillPoints"},"Slot5":{"ObjectValue":"Demon Flip","ObjectClass":"StringValue","ObjectName":"Slot5"},"Blindness":{"ObjectValue":"0","ObjectClass":"NumberValue","ObjectName":"Blindness"},"Slot3":{"ObjectValue":"Hemorrhage","ObjectClass":"StringValue","ObjectName":"Slot3"},"RightEye":{"ObjectValue":"Ketsuryugan","ObjectClass":"StringValue","ObjectName":"RightEye"},"SkillPoints":{"ObjectValue":"17","ObjectClass":"IntValue","ObjectName":"SkillPoints"},"mapmove1":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"mapmove1"},"PrimaryAmmo":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"PrimaryAmmo"},"Name":{"ObjectValue":"Max","ObjectClass":"StringValue","ObjectName":"Name"},"HairColorG":{"ObjectValue":"91","ObjectClass":"IntValue","ObjectName":"HairColorG"},"Slot10":{"ObjectValue":"","ObjectClass":"StringValue","ObjectName":"Slot10"},"MaxTails":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"MaxTails"},"PosX":{"ObjectValue":"2355","ObjectClass":"IntValue","ObjectName":"PosX"},"LastChakra":{"ObjectValue":"698","ObjectClass":"IntValue","ObjectName":"LastChakra"},"RU":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"RU"},"Slot7":{"ObjectValue":"","ObjectClass":"StringValue","ObjectName":"Slot7"},"SecondaryCN":{"ObjectValue":"2","ObjectClass":"IntValue","ObjectName":"SecondaryCN"},"Village":{"ObjectValue":"2","ObjectClass":"IntValue","ObjectName":"Village"},"LastHealth":{"ObjectValue":"1","ObjectClass":"IntValue","ObjectName":"LastHealth"},"OriginalVillage":{"ObjectValue":"2","ObjectClass":"IntValue","ObjectName":"OriginalVillage"},"WeaponSave":{"ObjectValue":"","ObjectClass":"StringValue","ObjectName":"WeaponSave"},"TimesRerolled":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"TimesRerolled"},"Slot=":{"ObjectValue":"","ObjectClass":"StringValue","ObjectName":"Slot="},"Ken":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"Ken"},"GrandParentID":{"ObjectValue":"Sad(40)855519","ObjectClass":"StringValue","ObjectName":"GrandParentID"},"Age":{"ObjectValue":"11","ObjectClass":"IntValue","ObjectName":"Age"},"LastKilledUser":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"LastKilledUser"},"TailedBeast":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"TailedBeast"},"CColorB":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"CColorB"},"RESTORE":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"RESTORE"},"MaxRank":{"ObjectValue":"24","ObjectClass":"IntValue","ObjectName":"MaxRank"},"Elo":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"Elo"},"TailedBeastEXP":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"TailedBeastEXP"},"BijuuSealed":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"BijuuSealed"},"AgeLimit":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"AgeLimit"},"WipeLog":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"WipeLog"},"FamilyID":{"ObjectValue":"Max(14)186002","ObjectClass":"StringValue","ObjectName":"FamilyID"},"Mastered":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"Mastered"},"Slot4":{"ObjectValue":"Leaf Whirlwind","ObjectClass":"StringValue","ObjectName":"Slot4"},"AwakenCD":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"AwakenCD"},"LastGripped":{"ObjectValue":"45920680","ObjectClass":"IntValue","ObjectName":"LastGripped"},"Scar":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"Scar"},"LastAge":{"ObjectValue":"1671060439","ObjectClass":"IntValue","ObjectName":"LastAge"},"Slot0":{"ObjectValue":"","ObjectClass":"StringValue","ObjectName":"Slot0"},"Mangekyo":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"Mangekyo"},"ParentID":{"ObjectValue":"yameii(14)1772970","ObjectClass":"StringValue","ObjectName":"ParentID"},"TrainingEXP":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"TrainingEXP"},"DefaultMouth":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"DefaultMouth"},"CloakTime":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"CloakTime"},"BijuuXP":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"BijuuXP"},"Slot12":{"ObjectValue":"Eight Gates","ObjectClass":"StringValue","ObjectName":"Slot12"},"RP":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"RP"},"Kids":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"Kids"},"berserkcheck":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"berserkcheck"},"HairColorB":{"ObjectValue":"79","ObjectClass":"IntValue","ObjectName":"HairColorB"},"RaidCD":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"RaidCD"},"Slot6":{"ObjectValue":"Leaf Rising Wind","ObjectClass":"StringValue","ObjectName":"Slot6"},"PrimaryWep":{"ObjectValue":"Kunai","ObjectClass":"StringValue","ObjectName":"PrimaryWep"},"RecentTrainings":{"ObjectValue":"[\"Pushup Training\",\"Kunai Training\",\"Block Training\"]","ObjectClass":"StringValue","ObjectName":"RecentTrainings"},"BerserkTimes":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"BerserkTimes"},"Slot8":{"ObjectValue":"","ObjectClass":"StringValue","ObjectName":"Slot8"},"Title":{"ObjectValue":"Chuunin","ObjectClass":"StringValue","ObjectName":"Title"},"logcheck":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"logcheck"},"LINDAMINISTARTUP":{"ObjectValue":"9","ObjectClass":"IntValue","ObjectName":"LINDAMINISTARTUP"},"HairColorR":{"ObjectValue":"107","ObjectClass":"IntValue","ObjectName":"HairColorR"},"CombatEXP":{"ObjectValue":"-18","ObjectClass":"IntValue","ObjectName":"CombatEXP"},"jincooldown":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"jincooldown"},"BijuuConvo":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"BijuuConvo"},"Slot-":{"ObjectValue":"","ObjectClass":"StringValue","ObjectName":"Slot-"},"CColorR":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"CColorR"},"Version":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"Version"},"SPR":{"ObjectValue":"12","ObjectClass":"IntValue","ObjectName":"SPR"},"TailedBeastMastered":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"TailedBeastMastered"},"BonusSkillPoints":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"BonusSkillPoints"},"SkinColor":{"ObjectValue":"3","ObjectClass":"IntValue","ObjectName":"SkinColor"},"RyoRES":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"RyoRES"},"Slot9":{"ObjectValue":"","ObjectClass":"StringValue","ObjectName":"Slot9"},"SeenDeaths":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"SeenDeaths"},"HandsignTraining":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"HandsignTraining"},"Genjutsu":{"ObjectValue":"2","ObjectClass":"IntValue","ObjectName":"Genjutsu"},"BDAYS":{"ObjectValue":"0","ObjectClass":"StringValue","ObjectName":"BDAYS"},"CurseMarkEXP":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"CurseMarkEXP"},"CurseMarkLevel":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"CurseMarkLevel"},"Key4":{"ObjectValue":"4","ObjectClass":"StringValue","ObjectName":"Key4"},"KPos":{"ObjectValue":"3","ObjectClass":"IntValue","ObjectName":"KPos"},"DateRecord":{"ObjectValue":"3430","ObjectClass":"IntValue","ObjectName":"DateRecord"},"bald":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"bald"},"Key9":{"ObjectValue":"9","ObjectClass":"StringValue","ObjectName":"Key9"},"ChakraArmorRGB":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"ChakraArmorRGB"},"SecondaryWep":{"ObjectValue":"Kunai","ObjectClass":"StringValue","ObjectName":"SecondaryWep"},"GripCount":{"ObjectValue":"1","ObjectClass":"IntValue","ObjectName":"GripCount"},"EyeColorR":{"ObjectValue":"136","ObjectClass":"IntValue","ObjectName":"EyeColorR"},"UnlockedCloak":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"UnlockedCloak"},"PosY":{"ObjectValue":"34","ObjectClass":"IntValue","ObjectName":"PosY"},"PosZ":{"ObjectValue":"193","ObjectClass":"IntValue","ObjectName":"PosZ"},"Rank":{"ObjectValue":"16","ObjectClass":"IntValue","ObjectName":"Rank"},"MissionEXP":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"MissionEXP"},"Slot11":{"ObjectValue":"Genjutsu","ObjectClass":"StringValue","ObjectName":"Slot11"},"Personality":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"Personality"},"Parentq":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"Parentq"},"Key11":{"ObjectValue":"z","ObjectClass":"StringValue","ObjectName":"Key11"},"ToggleAccessories":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"ToggleAccessories"},"HBChoice":{"ObjectValue":"1","ObjectClass":"IntValue","ObjectName":"HBChoice"},"Prestige":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"Prestige"},"PrimaryCN":{"ObjectValue":"3","ObjectClass":"IntValue","ObjectName":"PrimaryCN"},"Trauma":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"Trauma"},"ResetPos":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"ResetPos"},"Key6":{"ObjectValue":"6","ObjectClass":"StringValue","ObjectName":"Key6"},"Slot2":{"ObjectValue":"Dosaku","ObjectClass":"StringValue","ObjectName":"Slot2"},"Key2":{"ObjectValue":"2","ObjectClass":"StringValue","ObjectName":"Key2"},"Key7":{"ObjectValue":"7","ObjectClass":"StringValue","ObjectName":"Key7"},"TailedBeastLevel":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"TailedBeastLevel"},"SwordSave":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"SwordSave"},"PDLog":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"PDLog"},"LeftEye":{"ObjectValue":"Ketsuryugan","ObjectClass":"StringValue","ObjectName":"LeftEye"},"Gender":{"ObjectValue":"1","ObjectClass":"IntValue","ObjectName":"Gender"},"ItemSave":{"ObjectValue":"","ObjectClass":"StringValue","ObjectName":"ItemSave"},"Key12":{"ObjectValue":"=","ObjectClass":"StringValue","ObjectName":"Key12"},"CColorG":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"CColorG"},"IsExiled":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"IsExiled"},"CanRank":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"CanRank"},"Marking":{"ObjectValue":"69","ObjectClass":"IntValue","ObjectName":"Marking"},"Key10":{"ObjectValue":"0","ObjectClass":"StringValue","ObjectName":"Key10"},"SecondaryAmmo":{"ObjectValue":"1","ObjectClass":"IntValue","ObjectName":"SecondaryAmmo"},"BijuuRelation":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"BijuuRelation"},"Blind":{"ObjectValue":"0","ObjectClass":"NumberValue","ObjectName":"Blind"}}}

<?php
/**
 * Deals with fields used for ordering.
 *
 * First, it allows backend admin ordering.
 * Then, it makes sure numbers in order fields cannot be duplicated, or in wrong sequence.
 * It also deals with delete posts.
 */

/**
 * Dynamic Values
 */
$field_slug     = 'wpcf-order';
$post_type_slug = 'features';

add_filter( 'manage_' . $post_type_slug . '_posts_columns', 'pp_filter_posts_order_columns' );
add_action( 'manage_' . $post_type_slug . '_posts_custom_column', 'pp_filter_posts_order_column', 10, 2 );
add_filter( 'manage_edit-' . $post_type_slug . '_sortable_columns', 'pp_filter_posts_order_sortable_columns' );
add_action( 'pre_get_posts', 'pp_posts_orderby_order_field' );
add_action( 'wp_trash_post', 'pp_orchestrate_orderby_fields_on_delete' );
add_action( 'save_post', 'pp_orchestrate_orderby_fields', 10, 2 );

/**
 * Add order by in WP Admin for order number fields
 */
function pp_filter_posts_order_columns( $columns ) {
	$columns[ $field_slug ] = __( 'Order' );
	return $columns;
}
/**
 * Add order by in WP Admin for order number fields
 */
function pp_filter_posts_order_column( $column, $post_id ) {
	// Image column
	if ( $field_slug === $column ) {
		echo (int) get_post_meta( $post_id, $field_slug, true );
	}
}
/**
 * Add order by in WP Admin for order number fields
 */
function pp_filter_posts_order_sortable_columns( $columns ) {
	$columns[ $field_slug ] = $field_slug;
	return $columns;
}

/**
 * Add order by in WP Admin for order number fields
 */
function pp_posts_orderby_order_field( $query ) {
	if ( ! is_admin() || ! $query->is_main_query() ) {
		return;
	}

	if ( $field_slug === $query->get( 'orderby' ) ) {
		$query->set( 'orderby', 'meta_value' );
		$query->set( 'meta_key', $field_slug );
		$query->set( 'meta_type', 'numeric' );
	}
}

/**
 * Ensure logic to update fields when post is trashed
 *
 * Does not yet deal with "what if removed, but the number actually was wrong" (such as duplicated)
 * Technically this should never happen, because validated on save... but, you know.
 */
function pp_orchestrate_orderby_fields_on_delete( $post_id ) {

	// If this is just a revision, don't send the email.
	if ( wp_is_post_revision( $post_id ) ) {
		return;
	}

	if ( get_post_type( $post_id ) == $post_type_slug ) {

		$args = array(
			'numberposts' => -1,
			'post_type'   => $post_type_slug,
			'fields'      => 'ids',
		);

		$all_posts_of_this_type = get_posts( $args );

		$removed_value = get_post_meta( $post_id, $field_slug, true );

		$all_field_values = array();
		foreach ( $all_posts_of_this_type as  $post_id_available ) {
			$all_field_values[ $post_id_available ] = get_post_meta( $post_id_available, $field_slug, true );
		}
		asort( $all_field_values, SORT_NUMERIC );

		ksort( $all_field_values, SORT_NUMERIC );
		$post_id_to_start_from = array_search( $removed_value + 1, $all_field_values );
		$position_in_array     = array_search( $post_id_to_start_from, array_keys( $all_field_values ) );
		$posts_to_update       = array_slice( $all_field_values, $position_in_array, null, true );
		foreach ( $posts_to_update as $post_to_update ) {
			update_post_meta( $post_to_update, $field_slug, $all_field_values[ $post_to_update ] - 1 );
		}
	}

}

/**
 * Ensure logic to update felds when field a field is updated.
 */
function pp_orchestrate_orderby_fields( $post_id, $post ) {

	// If this is just a revision, don't send the email.
	if ( wp_is_post_revision( $post_id ) ) {
		return;
	}

	if ( $post->post_type == $post_type_slug ) {

		$field_value_added = $_POST[ $field_slug ];
		$args              = array(
			'numberposts' => -1,
			'post_type'   => $post_type_slug,
			'fields'      => 'ids',
		);

		$all_posts_of_this_type = get_posts( $args );
		$all_field_values       = array();
		foreach ( $all_posts_of_this_type as  $post_id_available ) {
			$all_field_values[ $post_id_available ] = get_post_meta( $post_id_available, $field_slug, true );
		}
		asort( $all_field_values, SORT_NUMERIC );

		/**
		 * If number added matches a already used number, it keeps the number and increase all others
		 */
		if ( in_array( $field_value_added, $all_field_values ) ) {
			ksort( $all_field_values, SORT_NUMERIC );
			$post_id_to_start_from = array_search( $field_value_added, $all_field_values );
			$position_in_array     = array_search( $post_id_to_start_from, array_keys( $all_field_values ) );
			$posts_to_update       = array_slice( $all_field_values, $position_in_array, null, true );
			foreach ( $posts_to_update as $post_to_update ) {
				update_post_meta( $post_to_update, $field_slug, $all_field_values[ $post_to_update ] + 1 );
			}
		}

		/**
		 * If there are missing numbers in the array, it adds this new number in the empty slot
		 */
		$missing_number = missing_number( $all_field_values );
		if ( ! empty( $missing_number ) ) {
			asort( $missing_number, SORT_NUMERIC );
			$field_value_added = $missing_number[0];
		}

		update_post_meta( $post_id, $field_slug, $field_value_added );

	}

}

function missing_number( $num_list ) {

	$new_arr = range( $num_list[0], max( $num_list ) );

	return array_diff( $new_arr, $num_list );

}

{"Copy":[],"Skilltree":{"Leaf Rising Wind":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"Leaf Rising Wind"},"Substitution":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"Substitution"},"Eight Gates":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"Eight Gates"},"Strike":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"Strike"},"Water Clone":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"Water Clone"},"Demon Mode":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"Demon Mode"},"1000 Years of Death":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"1000 Years of Death"},"Leaf Whirlwind":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"Leaf Whirlwind"}},"Stats":{"kek":{"ObjectValue":"44","ObjectClass":"IntValue","ObjectName":"kek"},"ChakraArmorRGB":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"ChakraArmorRGB"},"AnbuLog":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"AnbuLog"},"Slot8":{"ObjectValue":"","ObjectClass":"StringValue","ObjectName":"Slot8"},"Title":{"ObjectValue":"Genin","ObjectClass":"StringValue","ObjectName":"Title"},"Influence":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"Influence"},"Key5":{"ObjectValue":"5","ObjectClass":"StringValue","ObjectName":"Key5"},"MissionSuccess":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"MissionSuccess"},"ParentID":{"ObjectValue":"Frank(43)2015010","ObjectClass":"StringValue","ObjectName":"ParentID"},"Deaths":{"ObjectValue":"1","ObjectClass":"IntValue","ObjectName":"Deaths"},"startnewlife":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"startnewlife"},"LastStomach":{"ObjectValue":"7","ObjectClass":"IntValue","ObjectName":"LastStomach"},"MaxAge":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"MaxAge"},"KillStreak":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"KillStreak"},"Key3":{"ObjectValue":"3","ObjectClass":"StringValue","ObjectName":"Key3"},"Key1":{"ObjectValue":"1","ObjectClass":"StringValue","ObjectName":"Key1"},"Key8":{"ObjectValue":"8","ObjectClass":"StringValue","ObjectName":"Key8"},"WeaveSpeed":{"ObjectValue":"20","ObjectClass":"IntValue","ObjectName":"WeaveSpeed"},"Slot1":{"ObjectValue":"Demon Mode","ObjectClass":"StringValue","ObjectName":"Slot1"},"EyeColorB":{"ObjectValue":"202","ObjectClass":"IntValue","ObjectName":"EyeColorB"},"Ryo":{"ObjectValue":"497","ObjectClass":"IntValue","ObjectName":"Ryo"},"CurrentWep":{"ObjectValue":"1","ObjectClass":"IntValue","ObjectName":"CurrentWep"},"SpentSkillPoints":{"ObjectValue":"-7","ObjectClass":"IntValue","ObjectName":"SpentSkillPoints"},"BerserkTimes":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"BerserkTimes"},"Slot5":{"ObjectValue":"Leaf Whirlwind","ObjectClass":"StringValue","ObjectName":"Slot5"},"Blindness":{"ObjectValue":"0","ObjectClass":"NumberValue","ObjectName":"Blindness"},"Slot3":{"ObjectValue":"Katana","ObjectClass":"StringValue","ObjectName":"Slot3"},"PosX":{"ObjectValue":"-4765","ObjectClass":"IntValue","ObjectName":"PosX"},"LastChakra":{"ObjectValue":"460","ObjectClass":"IntValue","ObjectName":"LastChakra"},"Slot7":{"ObjectValue":"Eight Gates","ObjectClass":"StringValue","ObjectName":"Slot7"},"RightEye":{"ObjectValue":"Default","ObjectClass":"StringValue","ObjectName":"RightEye"},"SkillPoints":{"ObjectValue":"7","ObjectClass":"IntValue","ObjectName":"SkillPoints"},"mapmove1":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"mapmove1"},"PrimaryAmmo":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"PrimaryAmmo"},"HairColorG":{"ObjectValue":"56","ObjectClass":"IntValue","ObjectName":"HairColorG"},"Slot10":{"ObjectValue":"","ObjectClass":"StringValue","ObjectName":"Slot10"},"Name":{"ObjectValue":"Gyro","ObjectClass":"StringValue","ObjectName":"Name"},"MaxTails":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"MaxTails"},"RU":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"RU"},"SecondaryCN":{"ObjectValue":"3","ObjectClass":"IntValue","ObjectName":"SecondaryCN"},"Key4":{"ObjectValue":"4","ObjectClass":"StringValue","ObjectName":"Key4"},"Village":{"ObjectValue":"21","ObjectClass":"IntValue","ObjectName":"Village"},"LastHealth":{"ObjectValue":"248","ObjectClass":"IntValue","ObjectName":"LastHealth"},"OriginalVillage":{"ObjectValue":"2","ObjectClass":"IntValue","ObjectName":"OriginalVillage"},"WeaponSave":{"ObjectValue":"","ObjectClass":"StringValue","ObjectName":"WeaponSave"},"TimesRerolled":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"TimesRerolled"},"Slot=":{"ObjectValue":"","ObjectClass":"StringValue","ObjectName":"Slot="},"Ken":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"Ken"},"GrandParentID":{"ObjectValue":"","ObjectClass":"StringValue","ObjectName":"GrandParentID"},"Age":{"ObjectValue":"11","ObjectClass":"IntValue","ObjectName":"Age"},"LastKilledUser":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"LastKilledUser"},"TailedBeast":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"TailedBeast"},"CColorB":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"CColorB"},"RESTORE":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"RESTORE"},"Elo":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"Elo"},"MaxRank":{"ObjectValue":"24","ObjectClass":"IntValue","ObjectName":"MaxRank"},"TailedBeastEXP":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"TailedBeastEXP"},"BijuuSealed":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"BijuuSealed"},"AgeLimit":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"AgeLimit"},"WipeLog":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"WipeLog"},"FamilyID":{"ObjectValue":"Gyro(9)151575","ObjectClass":"StringValue","ObjectName":"FamilyID"},"Mastered":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"Mastered"},"Slot4":{"ObjectValue":"Strike","ObjectClass":"StringValue","ObjectName":"Slot4"},"AwakenCD":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"AwakenCD"},"Key10":{"ObjectValue":"0","ObjectClass":"StringValue","ObjectName":"Key10"},"BijuuRelation":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"BijuuRelation"},"SecondaryAmmo":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"SecondaryAmmo"},"Scar":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"Scar"},"LastAge":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"LastAge"},"Slot0":{"ObjectValue":"","ObjectClass":"StringValue","ObjectName":"Slot0"},"Mangekyo":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"Mangekyo"},"BonusSkillPoints":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"BonusSkillPoints"},"TailedBeastMastered":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"TailedBeastMastered"},"DefaultMouth":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"DefaultMouth"},"TrainingEXP":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"TrainingEXP"},"CloakTime":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"CloakTime"},"RP":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"RP"},"BijuuXP":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"BijuuXP"},"Slot12":{"ObjectValue":"","ObjectClass":"StringValue","ObjectName":"Slot12"},"Kids":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"Kids"},"berserkcheck":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"berserkcheck"},"HairColorB":{"ObjectValue":"50","ObjectClass":"IntValue","ObjectName":"HairColorB"},"RaidCD":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"RaidCD"},"Slot6":{"ObjectValue":"Leaf Rising Wind","ObjectClass":"StringValue","ObjectName":"Slot6"},"PrimaryWep":{"ObjectValue":"Kunai","ObjectClass":"StringValue","ObjectName":"PrimaryWep"},"RecentTrainings":{"ObjectValue":"[\"Pushup Training\",\"Weighted Gear\",\"Pushup Training\"]","ObjectClass":"StringValue","ObjectName":"RecentTrainings"},"Key9":{"ObjectValue":"9","ObjectClass":"StringValue","ObjectName":"Key9"},"SecondaryWep":{"ObjectValue":"Kunai","ObjectClass":"StringValue","ObjectName":"SecondaryWep"},"GripCount":{"ObjectValue":"2","ObjectClass":"IntValue","ObjectName":"GripCount"},"EyeColorR":{"ObjectValue":"32","ObjectClass":"IntValue","ObjectName":"EyeColorR"},"bald":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"bald"},"logcheck":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"logcheck"},"LINDAMINISTARTUP":{"ObjectValue":"9","ObjectClass":"IntValue","ObjectName":"LINDAMINISTARTUP"},"HairColorR":{"ObjectValue":"72","ObjectClass":"IntValue","ObjectName":"HairColorR"},"CombatEXP":{"ObjectValue":"89","ObjectClass":"IntValue","ObjectName":"CombatEXP"},"jincooldown":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"jincooldown"},"BijuuConvo":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"BijuuConvo"},"Slot-":{"ObjectValue":"","ObjectClass":"StringValue","ObjectName":"Slot-"},"CColorR":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"CColorR"},"Version":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"Version"},"SPR":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"SPR"},"SkinColor":{"ObjectValue":"7","ObjectClass":"IntValue","ObjectName":"SkinColor"},"RyoRES":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"RyoRES"},"Slot9":{"ObjectValue":"","ObjectClass":"StringValue","ObjectName":"Slot9"},"SeenDeaths":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"SeenDeaths"},"HandsignTraining":{"ObjectValue":"4","ObjectClass":"IntValue","ObjectName":"HandsignTraining"},"Genjutsu":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"Genjutsu"},"BDAYS":{"ObjectValue":"0","ObjectClass":"StringValue","ObjectName":"BDAYS"},"CurseMarkEXP":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"CurseMarkEXP"},"CurseMarkLevel":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"CurseMarkLevel"},"KPos":{"ObjectValue":"1","ObjectClass":"IntValue","ObjectName":"KPos"},"DateRecord":{"ObjectValue":"2705","ObjectClass":"IntValue","ObjectName":"DateRecord"},"UnlockedCloak":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"UnlockedCloak"},"PosY":{"ObjectValue":"519","ObjectClass":"IntValue","ObjectName":"PosY"},"PosZ":{"ObjectValue":"-552","ObjectClass":"IntValue","ObjectName":"PosZ"},"Rank":{"ObjectValue":"5","ObjectClass":"IntValue","ObjectName":"Rank"},"MissionEXP":{"ObjectValue":"113","ObjectClass":"IntValue","ObjectName":"MissionEXP"},"Slot11":{"ObjectValue":"","ObjectClass":"StringValue","ObjectName":"Slot11"},"Personality":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"Personality"},"Parentq":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"Parentq"},"Key11":{"ObjectValue":"-","ObjectClass":"StringValue","ObjectName":"Key11"},"ToggleAccessories":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"ToggleAccessories"},"LastGripped":{"ObjectValue":"89491908","ObjectClass":"IntValue","ObjectName":"LastGripped"},"HideName":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"HideName"},"HBChoice":{"ObjectValue":"7","ObjectClass":"IntValue","ObjectName":"HBChoice"},"Prestige":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"Prestige"},"PrimaryCN":{"ObjectValue":"5","ObjectClass":"IntValue","ObjectName":"PrimaryCN"},"Trauma":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"Trauma"},"ResetPos":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"ResetPos"},"Key6":{"ObjectValue":"6","ObjectClass":"StringValue","ObjectName":"Key6"},"Slot2":{"ObjectValue":"Water Clone","ObjectClass":"StringValue","ObjectName":"Slot2"},"Key2":{"ObjectValue":"2","ObjectClass":"StringValue","ObjectName":"Key2"},"Key7":{"ObjectValue":"7","ObjectClass":"StringValue","ObjectName":"Key7"},"TailedBeastLevel":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"TailedBeastLevel"},"SwordSave":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"SwordSave"},"PDLog":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"PDLog"},"LeftEye":{"ObjectValue":"Default","ObjectClass":"StringValue","ObjectName":"LeftEye"},"EyeColorG":{"ObjectValue":"228","ObjectClass":"IntValue","ObjectName":"EyeColorG"},"Gender":{"ObjectValue":"1","ObjectClass":"IntValue","ObjectName":"Gender"},"ItemSave":{"ObjectValue":"","ObjectClass":"StringValue","ObjectName":"ItemSave"},"Key12":{"ObjectValue":"=","ObjectClass":"StringValue","ObjectName":"Key12"},"CColorG":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"CColorG"},"IsExiled":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"IsExiled"},"CanRank":{"ObjectValue":"1","ObjectClass":"IntValue","ObjectName":"CanRank"},"Marking":{"ObjectValue":"69","ObjectClass":"IntValue","ObjectName":"Marking"},"Blind":{"ObjectValue":"0","ObjectClass":"NumberValue","ObjectName":"Blind"}}}

<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<title>Document</title>
	<script>
		document.addEventListener('DOMContentLoaded', (e) => {
			let canvas = document.querySelector('canvas');
			let ctx = canvas.getContext('2d');

			let x, y;

			canvas.addEventListener('mousedown', (e) => {
				ctx.beginPath();
				x = e.offsetX;
				y = e.offsetY;
				ctx.moveTo(x, y);
				canvas.addEventListener('mousemove', draw);
			});

			canvas.addEventListener('mouseup', (e) => {
				canvas.removeEventListener('mousemove', draw);
				ctx.closePath();
			});

			function draw(evt){
				x = evt.offsetX;
				y = evt.offsetY;
				ctx.lineTo(x, y);
				ctx.stroke();
			}
		});
	</script>
	<style>
		canvas{
			border:solid 2px black;
		}
	</style>
</head>
<body>
	<canvas width="1000" height="1000"></canvas>
</body>
</html>

#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define MAX(x, y) (((x) > (y)) ? (x) : (y))

#define MAX_SENSORS 25
#define QUESTION_Y 2000000

int compare_ranges(const void *r1, const void *r2){
    int a1 = *(int *)r1;
    int b1 = *(int *)(r1+sizeof(int));
    int a2 = *(int *)r2;
    int b2 = *(int *)(r2+sizeof(int));
    if(a1 < a2) return -1;
    if(a1 == a2) return b1-b2;
    return 1;
}

void main(){
    int range[MAX_SENSORS][2], r=0;
    int beacon[MAX_SENSORS], b=0;

    int sx,sy,bx,by,dist,found,i;
    while(scanf("Sensor at x=%d, y=%d: closest beacon is at x=%d, y=%d\n",&sx,&sy,&bx,&by) == 4){
        dist=abs(sx-bx)+abs(sy-by);
        if(dist>=abs(sy-QUESTION_Y)){
            range[r][0]=sx-(dist-abs(sy-QUESTION_Y));
            range[r++][1]=sx+(dist-abs(sy-QUESTION_Y));
        }
        if(by == QUESTION_Y) {
            for(found=0,i=0;i<b;i++) if(beacon[i]==bx) found=1;
            if(!found) beacon[b++]=bx;
        }
    }

    qsort(range,r,sizeof(int)*2,compare_ranges);

    for(i=0; i<r-1;i++){ //merge overlaping ranges
        if(range[i+1][0] >= range[i][0] && range[i+1][0] <= range[i][1]){
            range[i+1][0]=range[i][0];
            range[i+1][1]=MAX(range[i][1],range[i+1][1]);
            range[i][0]=0;
            range[i][1]=-1;
        }
    }

    int sum=0;
    for(i=0;i<r;i++){
        sum+=range[i][1]-range[i][0]+1;
        for(int j=0;j<b;j++) if(beacon[j]>=range[i][0] && beacon[j]<=range[i][1]) sum--;
    }

    printf("Sum = %d\n",sum);
}

{"ip":{"103.176.160.20":2855,"44.200.187.250":6623,"23.26.252.86":531,"174.138.17.237":578,"23.26.252.66":1144,"143.107.166.120":29,"112.214.84.13":560,"152.89.196.54":56,"112.171.126.149":4,"185.14.62.10":12,"162.241.158.17":40,"211.23.8.133":22,"64.111.24.165":5,"200.69.84.118":3,"104.168.136.197":1,"185.135.72.240":2,"161.82.250.253":1,"92.255.57.25":3,"63.135.161.39":1,"114.113.139.191":4,"103.150.143.103":2,"3.71.184.133":1,"152.89.198.133":1,"87.251.67.97":1,"194.165.16.76":4,"193.118.53.210":1,"109.248.175.80":2,"190.171.228.186":3,"219.235.233.238":2,"59.125.196.15":5,"190.104.168.51":3,"87.251.75.64":1,"186.122.150.34":7,"190.210.215.244":16,"185.170.144.3":2,"5.149.64.4":1,"87.251.75.145":2,"117.248.251.174":6,"42.61.211.101":2,"138.197.16.243":1,"115.227.59.179":1,"45.143.201.62":1,"103.8.114.195":6,"138.3.214.54":2,"203.130.20.146":4,"87.251.75.120":1,"115.227.59.145":2,"103.8.114.199":1,"8.210.54.158":1,"176.113.115.140":1,"81.60.200.105":2,"139.162.221.44":6,"139.59.99.183":4,"200.54.195.203":5,"81.0.220.101":7,"40.115.49.158":47,"122.163.120.143":1,"162.142.125.7":1,"185.73.125.124":1,"186.208.139.104":56,"152.89.196.52":1,"188.121.106.248":5,"41.67.5.5":1,"119.73.154.210":3,"87.251.75.179":1,"178.238.226.226":2,"45.239.176.45":2,"176.113.115.106":1,"5.161.114.11":3,"54.37.116.149":6,"36.91.222.100":1,"198.235.24.6":5,"110.171.165.57":1,"70.183.29.58":1,"45.77.107.49":11,"189.113.181.21":2,"103.168.205.199":15,"137.220.38.49":12,"87.236.176.62":2,"193.46.255.41":1,"194.28.112.140":4,"20.119.164.88":3,"165.232.152.58":1,"213.55.90.51":1,"37.18.73.128":1},"asn":{"AS141526":2855,"AS14618":6623,"AS400536":1675,"AS14061":584,"AS28571":29,"AS10036":560,"AS57523":61,"AS4766":4,"AS202813":12,"AS19871":40,"AS3462":27,"AS33302":5,"AS262186":3,"AS54290":1,"AS55720":2,"AS132280":1,"AS206092":1,"AS134700":4,"AS133296":2,"AS16509":1,"AS208091":7,"AS48721":4,"AS21859":1,"AS25227":2,"AS25620":3,"AS9809":2,"AS27895":3,"AS11664":7,"AS16814":16,"AS48080":2,"AS57888":1,"AS9829":6,"AS3758":5,"AS58461":3,"AS210950":1,"AS133495":7,"AS31898":2,"AS24435":4,"AS45102":1,"AS57678":2,"AS12430":2,"AS63949":6,"AS16629":5,"AS51167":9,"AS8075":50,"AS24560":1,"AS398324":1,"AS28265":56,"AS202468":5,"AS37197":1,"AS268370":2,"AS213230":3,"AS16276":6,"AS7713":1,"AS396982":5,"AS17552":1,"AS22773":1,"AS20473":23,"AS270334":2,"AS132925":15,"AS211298":2,"AS47890":1,"AS50968":4,"AS24757":1,"AS208677":1},"isp":{"Jbn Online Private Limited":2855,"Amazon.com":6623,"Ace Data Centers":1675,"DigitalOcean, LLC":580,"Universidade De SAO Paulo":29,"DLIVE":560,"Chang Way Technologies Co. Limited":61,"Korea Telecom":4,"Liberatel Comunicaciones":12,"Unified Layer":40,"Chunghwa Telecom Co., Ltd.":27,"Data102":5,"TV AZTECA SUCURSAL COLOMBIA":3,"Hostwinds LLC.":1,"Gigabit Hosting Sdn Bhd":2,"Symphony Communication Public Company Limited":1,"Rockion LLC":1,"Times Network Technology Co":4,"Web Werks India Pvt. Ltd.":2,"Amazon Technologies Inc.":1,"Xhost Internet Solutions LP":7,"Flyservers S.A.":4,"Zenlayer Inc":1,"JSC Avantel":2,"Cotas Ltda.":3,"SHENZHEN NOVA TECHNOLOGIES DEVELOPMENT., LTD.":2,"Núcleo S.A.":3,"Techtel LMDS Comunicaciones Interactivas S.A.":7,"NSS S.A.":16,"Dmitriy Panchenko":2,"Dsl-elektronika D.O.O":1,"BSNL Internet":6,"SingNet Pte Ltd":5,"Chinanet":3,"TOV E-RISHENNYA":1,"Vision Telecom Lahore":7,"Oracle Corporation":2,"Supernet 32":4,"Alibaba.com LLC":1,"Red Bytes LLC":2,"Ono":2,"Linode, LLC":6,"DIGITALOCEAN":4,"CTC. CORP S.A. (TELEFONICA EMPRESAS)":5,"Casablanca INT fraction":7,"Microsoft Corporation":50,"Bharti Airtel Ltd.":1,"Censys, Inc.":1,"Abcrede Provedor De Internet Eireli":56,"Noyan Abr Arvan Co. ( Private Joint Stock)":5,"University of Gadarif":1,"Contabo GmbH":2,"Ceara Networks Telecomunicacoes Ltda - ME":2,"Hetzner Online GmbH":3,"OVH SAS":6,"PT Telekomunikasi Indonesia":1,"Google LLC":5,"True Internet Corporation CO. Ltd.":1,"Cox Communications Inc.":1,"The Constant Company":23,"NET 100A":2,"Ideastack Solutions Private Limited":15,"Constantine Cybersecurity Ltd.":2,"Unmanaged LTD":1,"Hostmaster, Ltd.":4,"Ethio Telecom":1,"Cloud technology Limited (Ltd.)":1},"org":{"JBN Solution Private Limited":2855,"AWS EC2 (us-east-1)":6623,"Ipxo LLC":1676,"DigitalOcean, LLC":583,"Universidade De SAO Paulo":29,"DLIVE Woori Cable TV":560,"Starcrecium Limited":58,"Korea Telecom":4,"Ftth Pilas":12,"WEBSITEWELCOME.COM":40,"Chunghwa Telecom Co. Ltd.":27,"Data102":5,"TV AZTECA SUCURSAL COLOMBIA":3,"Hostwinds LLC":1,"Data Center Network Limited":2,"Unknown":30,"Chang Way Technologies Co. Limited":3,"Guangdong Hanoi Times Network Technology Co., Ltd":4,"Linkstack Solution Private Limited":2,"AWS EC2 (eu-central-1)":1,"Xhost Internet Solutions":6,"UAB Host Baltic":4,"Zenlayer Inc":1,"JSC Avantel":2,"MARIELA A#EZ VIERA":3,"Shenzhen Nova Technology Development Co., Ltd.":2,"Núcleo S.A":3,"AMX Argentina S.A":7,"Xhostis":3,"SingNet Pte Ltd":2,"Digital Ocean":1,"Chinanet ZJ":3,"TOV VAIZ PARTNER":1,"Vision Telecom (pvt) Ltd":7,"Oracle Cloud Infrastructure (ap-tokyo-1)":2,"Hong Kong":1,"Red Bytes LLC":2,"ONO_Mobile&Wifi":2,"LINODE-UK":6,"Soltex Chile S.A.":5,"Casablanca INT":7,"Microsoft Azure Cloud (westeurope)":47,"BHARTI":1,"Censys Inc":1,"Abcrede Provedor De Internet Eireli":56,"Noyan Abr Arvan Co. ( Private Joint Stock)":5,"Cogri Asia Pacific PTE LTD":3,"Contabo GmbH":2,"Ceara Networks Telecomunicacoes Ltda - ME":2,"HETZNER-DC":3,"OVH GmbH":6,"Telekomunikasi Indonesia":1,"Palo Alto Networks, Inc":5,"Truenet CM":1,"Cox Communications Inc.":1,"Vultr Holdings, LLC":23,"NET 100A":2,"Bluesp":15,"Internetmeasurement C":2,"Unmanaged LTD":1,"Network Systems Ltd":4,"Microsoft Azure Cloud (eastus2)":3,"Cloud technology Limited (Ltd.)":1},"regionName":{"Maharashtra":2857,"Virginia":8301,"South West":582,"Sao Paulo":85,"Gyeonggi-do":560,"Moscow":64,"Seoul":4,"Andalusia":12,"Utah":40,"New Taipei":22,"Colorado":5,"Bogota D.C.":3,"Washington":13,"Kowloon City":2,"Bangkok":1,"New York":1,"Guangdong":4,"Hesse":1,"Lower Silesia":1,"Vilnius":4,"North Holland":60,"Departamento de Santa Cruz":3,"Beijing":2,"Tainan":5,"Asuncion":3,"Santa Fe":7,"Buenos Aires F.D.":16,"Federation of B&H":1,"Gujarat":6,"Central Singapore":5,"New Jersey":12,"Zhejiang":3,"Kyiv City":1,"Punjab":11,"Tokyo":2,"Central and Western District":1,"St.-Petersburg":2,"Madrid":2,"England":16,"Santiago Metropolitan":5,"West Bengal":1,"Michigan":1,"Tehran":5,"Khartoum":1,"Bavaria":2,"Ceara":2,"District of Columbia":3,"Saarland":6,"Jakarta":1,"California":7,"Maha Sarakham":1,"Rio de Janeiro":2,"Uttar Pradesh":15,"Amhara":1},"country":{"India":2879,"United States":8383,"Singapore":587,"Brazil":89,"South Korea":564,"Russia":66,"Spain":14,"Taiwan":27,"Colombia":3,"Hong Kong":3,"Thailand":2,"China":9,"Germany":9,"Poland":1,"Lithuania":4,"Netherlands":60,"Bolivia":3,"Paraguay":3,"Argentina":23,"Bosnia and Herzegovina":1,"Ukraine":1,"Pakistan":11,"Japan":2,"United Kingdom":16,"Chile":5,"Iran":5,"Sudan":1,"Indonesia":1,"Ethiopia":1},"account":{"hello":12581,"Domain":63,"142.93.8.59":91,"r702xffo":2,"Unknown":2,"(empty)":5,"Administr":11,"Test":7,"4pyn0nk0":1,"BdwoBoO":1,"RKLJfUG":1,"oePOLXjCP":1,"JtQiNBZbu":1,"vLOROPbYR":1,"wGxWhsTvi":1,"oSlxby":1,"eltons":2,"mailuk04$":1},"keyboard":{"Unknown":12755,"English - United States":14,"English - United Kingdom":4},"client_build":{"Unknown":12755,"client_build-17134":2,"RDP 7.1":1,"RDP 5.1":14,"RDP 5.2":1},"client_name":{"Unknown":12755,"DESKTOP-F840GIK":2,"WEBSERVERPR":1,"sina-VirtualBox":1,"rdpscan":1,"rdesktop":1,"MSTSC":3,"EMP-LAP-0014":4,"ELTONS-DEV2":1,"WIN-H2H4BC9LHEV":1,"WIN-FIIELPTB25M":3},"ip_type":{"Unknown":5377,"hosting":7383,"hosting & proxy":3,"proxy":1,"mobile":9}}

#include "2022_utils.h"

using namespace std;

namespace {
  struct V {
    int x, y;
  };

  bool operator==(const V& l, const V& r) { return l.x == r.x && l.y == r.y; }
  bool operator<(const V& l, const V& r) { return l.x == r.x ? l.y < r.y : l.x < r.x; }
}

namespace std {
  template <>
  struct hash<V>
  {
    std::size_t operator()(const V& k) const {
      return std::hash<int>()(k.x ^ (k.y << 16));
    }
  };
}

namespace {
  struct S {
    // Position.
    V p;

    // Nearest beacon.
    V nb;
  };

  auto part1() {
    auto in = load_strings("2022/2022_day15_input.txt");
    
    vector<S> sensors;
    for (auto& str : in) {
      S s;
      sscanf_s(str.c_str(), "Sensor at x=%d, y=%d: closest beacon is at x=%d, y=%d",
        &s.p.x, &s.p.y, &s.nb.x, &s.nb.y);
      sensors.push_back(s);
    }

    int row = 2000000;
    set<int> no_distress_x;

    for (auto& s : sensors) {
      int signal_radius = (abs(s.p.x - s.nb.x) + abs(s.p.y - s.nb.y));
      int radius_at_row = signal_radius - abs(s.p.y - row);

      if (radius_at_row <= 0) continue;

      for (int x = s.p.x - radius_at_row; x <= s.p.x + radius_at_row; ++x) {
        // Skip beacon itself.
        if (s.nb == V(x, row)) continue;
        no_distress_x.insert(x);
      }
    }

    return no_distress_x.size();
  }

  auto part2() {
    auto in = load_strings("2022/2022_day15_input.txt");

    vector<S> sensors;
    for (auto& str : in) {
      S s;
      sscanf_s(str.c_str(), "Sensor at x=%d, y=%d: closest beacon is at x=%d, y=%d",
        &s.p.x, &s.p.y, &s.nb.x, &s.nb.y);
      sensors.push_back(s);
    }

    int max_coord = 4000000;
    //int max_coord = 20;
    for (int i = 0; i < sensors.size(); ++i) {
      auto& s = sensors[i];
      int signal_radius_i = (abs(s.p.x - s.nb.x) + abs(s.p.y - s.nb.y));

      // Start with 4 positions to walk each edge of the perimeter.
      V p_top_left(s.p.x, s.p.y - signal_radius_i - 1);
      V p_top_right = p_top_left;
      V p_bottom_left(s.p.x, s.p.y + signal_radius_i + 1);
      V p_bottom_right = p_bottom_left;

      // Check each position against each sensor.
      for (int r = 0; r <= signal_radius_i; ++r) {
        for (V p : vector<V>{ p_top_left, p_top_right, p_bottom_left, p_bottom_right }) {
          if (p.x < 0 || p.y < 0 || p.x > max_coord || p.y > max_coord) continue;

          bool detected = false;
          for (int j = 0; j < sensors.size(); ++j) {
            if (i == j) continue;

            // Check whether the sensor could detect this position.
            auto& ss = sensors[j];
            int signal_radius_j = (abs(ss.p.x - ss.nb.x) + abs(ss.p.y - ss.nb.y));
            int d = abs(p.x - ss.p.x) + abs(p.y - ss.p.y);
            if (d <= signal_radius_j) {
              detected = true;
              break;
            }
          }

          if (!detected) {
            return (int64_t)p.x * 4000000 + p.y;
          }
        }

        p_top_left.x -= 1;
        p_top_left.y += 1;
        p_top_right.x += 1;
        p_top_right.y += 1;
        p_bottom_left.x -= 1;
        p_bottom_left.y -= 1;
        p_bottom_right.x += 1;
        p_bottom_right.y -= 1;
      }
    }


    return (int64_t)(-1);
  }
}

namespace y2022 {
  void day15() {
    {
      Profile p("duration");
      cout << "part 1: " << part1() << "\n";
    }

    {
      Profile p("duration");
      cout << "part 2: " << part2() << "\n";
    }
  }
}


#include <stdio.h>
#include <stdlib.h>


int main() {
    int n, k;
    scanf("%d%d", &n, &k);
    int niza[n];
    for(int i = 0; i < n; i++) {
        scanf("%d", &niza[i]);
    }
    int a[n];
    int indeks = 0;
    for(int i = k; i < n; i++) {
        a[indeks] = niza[i];
        indeks++;
    }
    for(int i = 0; i < k; i++) {
        a[indeks] = niza[i];
        indeks++;
    }
    for(int i = 0; i < n; i++) {
        printf("%d ", a[i]);
    }
}


#include <stdio.h>
#include <stdlib.h>


int main() {
    int n;
    scanf("%d", &n);
    int niza[n];
    
    for(int i = 0; i < n; i++) {
        scanf("%d", &niza[i]);
    }
    int brojac[100];
    for(int i = 0; i < 100; i++) {
        brojac[i] = 0;
    }
    
    for(int i = 0; i < n; i++) {
        brojac[niza[i]]++;
    }
    
    for(int i = 0; i < 100; i++) {
        if(brojac[i] > 0) {
            printf("Brojot %d se pojavil %d pati\n", i, brojac[i]);
        }
    }
}


#include <iostream>
#include <string>

using namespace std;

template <typename T>
void RunTestImpl(
        T func
        ,const string& testName
//        ,const string& file
//        , const string& funcN
//        , unsigned line
//        , const string& hint
        ) {
    cerr 
//           << "begin " 
           << testName
//         << ", in func "s<<  funcN
//         <<" in file "s<<  file
//         << " on line "s<< line
//         << " ("s<< hint<<")"s
//         << endl
           << "... "s
           ;
    func();
    cerr
           << "OK"s
//         << "end "
//         << testName
//         << ", in func "s<<  funcN
//         <<" in file "s
//         <<  file<< " on line "s
//         << line<< " ("s
//         << hint<<")"s
         << endl;

}

#define RUN_TEST(func)  RunTestImpl((func), #func/*, __FILE__, __FUNCTION__, __LINE__, ""s*/)

void Test1() {
}

int main() {
    RUN_TEST(Test1);
}


/*C++ Program that simulates an ordering system*/

#include <iostream>
using namespace std;

int main() {
    char choice; //Declare choices for user input and total bill
    float T_Bill = 0;

    printf("Welcome to 'Maes-Resto'!\n");
    printf("May I take your order?\n");
    printf("Press '1' - Yes, Press '2' - No: ");
    cin >> choice;

    if (choice == '1'){
        cout << "===================================\n";
        printf("Do you want an appetizer?\n");
        printf("Press '1' - Yes, Press '2' - No: ");
        cin >> choice;

        cout << "===================================\n";
        switch (choice){
        case '1':
            printf("Choose from the following options:\n");
            printf("A: Salad\tB:Soup\n");
            printf("Your Choice: ");
            cin >> choice;
            switch (choice){ //Jumps to labels' SALAD, SOUP, or MAINMENU
            case 'A':
                goto SALAD;
            case 'B':
                goto SOUP;
            }
        case '2':
            goto MAINMENU;
        }
    }
    else {
        printf("Thank you so much for coming to 'Maes-Resto'!");
        exit(0); //Terminates the code
    }

    SALAD:
        {
        const float TV_Salad = 7.95, C_Salad = 5.00; //Price of products
        cout << "===================================\n";
        printf("SALAD MENU:\n");
        cout << "A: Thai Vermicelli Salad     $" << TV_Salad << endl;
        cout << "B: Ceasar Salad              $" << C_Salad << endl;
        printf("Your Choice: ");
        cin >> choice;
        switch (choice){ //Adds the price to the total bill
        case 'A':
            T_Bill += TV_Salad;
            break;
        case 'B':
            T_Bill += C_Salad;
            break;
        }
        goto MAINMENU; //Jumps to MAINMENU
        }

    SOUP:
        {
        const float TY_Soup = 10.95, CT_Soup = 9.00;
        cout << "===================================\n";
        printf("SOUP MENU:\n");
        cout << "A: Tom Yum Soup              $" << TY_Soup << endl;
        cout << "B: Clear Tofu Soup           $" << CT_Soup << endl;
        printf("Your Choice: ");
        cin >> choice;
        switch (choice){
        case 'A':
            T_Bill += TY_Soup;
            break;
        case 'B':
            T_Bill += CT_Soup;
            break;
        }
        goto MAINMENU;
        }


    MAINMENU:
        {
        const float EBF_Fillets = 20.05, MG_Salmon = 25.25, CC_Bleu = 22.99;
        cout << "===================================\n";
        printf("MAIN COURSE MENU:\n");
        cout << "A: Easy Baked Fish Fillets   $" << EBF_Fillets << endl;
        cout << "B: Miso-Glazed Salmon        $" << MG_Salmon << endl;
        cout << "C: Chicken Cordon Bleu       $" << CC_Bleu << endl;
        printf("Your Choice: ");
        cin >> choice;
        switch (choice){
        case 'A':
            T_Bill += EBF_Fillets;
            break;
        case 'B':
            T_Bill += MG_Salmon;
            break;
        case 'C':
            T_Bill += CC_Bleu;
            break;
        }
        goto CHECKOUT; // Jumps to CHECKOUT
        }

    CHECKOUT:
        float pay;
        while (true) { //Loops infinetely until user provided sufficient payment
            cout << "===================================\n";
            cout << "Total amount: $" << T_Bill << endl;
            cout << "Payment: $";
            cin >> pay;
            if (pay >= T_Bill){
                cout << "Change: $" << (pay - T_Bill) << endl;
                cout << "Thank you so much for coming to 'Maes-Resto'!\n";
                break; //Stops the loop
            }
            cout << "Insufficient amount!\n";
        }
}



#include "Graph_painting.h"

using namespace std;

// program to test function
// dot -Tsvg -O file.dot
// ./file.dot.svg

// parse command line arguments
// format: ./graph_painting input_file output_file

int main(int argc, char* argv[]) {
  // проверка на количество аргументов
  if (argc != 3) {
    cout << "Wrong number of arguments" << endl;
    return 1;
  }

  // проверка на существование входного файла
  ifstream input(argv[1]);
  if (!input.is_open()) {
    cout << "File not found" << endl;
    return 1;
  }
  input.close();

  // проверка на существование выходного файла
  ofstream output(argv[2]);
  if (!output.is_open()) {
    cout << "File not found" << endl;
    return 1;
  }
  output.close();

  // создание графа
  Graph test_graph(6);
  test_graph.set_matrix(argv[1]);
  cout << "Coloring of graph" << endl;

  // поиск минимального количества цветов
  test_graph.greedy_coloring();
  test_graph.chromatic_number();
  test_graph.print_matrix();
  test_graph.draw_graph(argv[2]);

  test_graph.print_chromatic_number();

  return 0;
}

using System;

namespace ConsoleApp10
{
    internal class Program
    {
        static void Main(string[] args)
        {
            int randomNumber;
            int startRanfomNumber = 1;
            int endRanfomNumber = 27;
            int startThreeDigit = 100;
            int endThreeDigit = 1000;
            int countThreeDigit = 0;
            int tempNumber = 0;

            Random random = new Random();
            randomNumber = random.Next(startRanfomNumber, endRanfomNumber);

            bool isWhileExit;

            for (int i = startThreeDigit; i < endThreeDigit; i++)
            {
                isWhileExit = true;
                tempNumber = i;

                if (i == endRanfomNumber)
                {
                    isWhileExit = false;
                }

                while (isWhileExit)
                {
                    tempNumber -= randomNumber;

                    if (tempNumber == 0)
                    {
                        countThreeDigit++;
                        isWhileExit = false;
                    }
                    else if (tempNumber < 0)
                    {
                        isWhileExit = false;
                    }
                }
            }

            Console.WriteLine($"Количество трехзначных натуральных чисел, которые кратны {randomNumber} - {countThreeDigit}");
            Console.ReadKey();
        }
    }
}

<a href="mailto:kerryspointer@gmail.com">kerryspointer@gmail.com</a>
<a href="mailto:kerryspointer+14216@gmail.com">kerryspointer+14216@gmail.com</a>
<a href="mailto:kerryspointer+29704@gmail.com">kerryspointer+29704@gmail.com</a>
<a href="mailto:kerryspointer+7018@gmail.com">kerryspointer+7018@gmail.com</a>
<a href="mailto:kerryspointer+14538@gmail.com">kerryspointer+14538@gmail.com</a>
<a href="mailto:kerryspointer+9281@gmail.com">kerryspointer+9281@gmail.com</a>
<a href="mailto:kerryspointer+6333@gmail.com">kerryspointer+6333@gmail.com</a>
<a href="mailto:kerryspointer+6438@gmail.com">kerryspointer+6438@gmail.com</a>
<a href="mailto:kerryspointer+4125@gmail.com">kerryspointer+4125@gmail.com</a>
<a href="mailto:kerryspointer+18674@gmail.com">kerryspointer+18674@gmail.com</a>
<a href="mailto:kerryspointer+6800@gmail.com">kerryspointer+6800@gmail.com</a>
<a href="mailto:kerryspointer+23864@gmail.com">kerryspointer+23864@gmail.com</a>
<a href="mailto:kerryspointer+20147@gmail.com">kerryspointer+20147@gmail.com</a>
<a href="mailto:kerryspointer+8793@gmail.com">kerryspointer+8793@gmail.com</a>
<a href="mailto:kerryspointer+6419@gmail.com">kerryspointer+6419@gmail.com</a>
<a href="mailto:kerryspointer+13303@gmail.com">kerryspointer+13303@gmail.com</a>
<a href="mailto:kerryspointer+4853@gmail.com">kerryspointer+4853@gmail.com</a>
<a href="mailto:kerryspointer+2500@gmail.com">kerryspointer+2500@gmail.com</a>
<a href="mailto:kerryspointer+12258@gmail.com">kerryspointer+12258@gmail.com</a>
<a href="mailto:kerryspointer+15248@gmail.com">kerryspointer+15248@gmail.com</a>
<a href="mailto:kerryspointer+13405@gmail.com">kerryspointer+13405@gmail.com</a>
<a href="mailto:kerryspointer+26121@gmail.com">kerryspointer+26121@gmail.com</a>
<a href="mailto:kerryspointer+3988@gmail.com">kerryspointer+3988@gmail.com</a>
<a href="mailto:kerryspointer+2470@gmail.com">kerryspointer+2470@gmail.com</a>
<a href="mailto:kerryspointer+12942@gmail.com">kerryspointer+12942@gmail.com</a>
<a href="mailto:kerryspointer+15914@gmail.com">kerryspointer+15914@gmail.com</a>
<a href="mailto:kerryspointer+11589@gmail.com">kerryspointer+11589@gmail.com</a>
<a href="mailto:kerryspointer+13564@gmail.com">kerryspointer+13564@gmail.com</a>
<a href="mailto:kerryspointer+2914@gmail.com">kerryspointer+2914@gmail.com</a>
<a href="mailto:kerryspointer+29867@gmail.com">kerryspointer+29867@gmail.com</a>
<a href="mailto:kerryspointer+29252@gmail.com">kerryspointer+29252@gmail.com</a>
<a href="mailto:kerryspointer+3163@gmail.com">kerryspointer+3163@gmail.com</a>
<a href="mailto:kerryspointer+15276@gmail.com">kerryspointer+15276@gmail.com</a>
<a href="mailto:kerryspointer+13076@gmail.com">kerryspointer+13076@gmail.com</a>
<a href="mailto:kerryspointer+8749@gmail.com">kerryspointer+8749@gmail.com</a>
<a href="mailto:kerryspointer+16426@gmail.com">kerryspointer+16426@gmail.com</a>
<a href="mailto:kerryspointer+419@gmail.com">kerryspointer+419@gmail.com</a>
<a href="mailto:kerryspointer+32577@gmail.com">kerryspointer+32577@gmail.com</a>
<a href="mailto:kerryspointer+21888@gmail.com">kerryspointer+21888@gmail.com</a>
<a href="mailto:kerryspointer+15166@gmail.com">kerryspointer+15166@gmail.com</a>
<a href="mailto:kerryspointer+20243@gmail.com">kerryspointer+20243@gmail.com</a>
<a href="mailto:kerryspointer+22683@gmail.com">kerryspointer+22683@gmail.com</a>
<a href="mailto:kerryspointer+14744@gmail.com">kerryspointer+14744@gmail.com</a>
<a href="mailto:kerryspointer+32237@gmail.com">kerryspointer+32237@gmail.com</a>
<a href="mailto:kerryspointer+6314@gmail.com">kerryspointer+6314@gmail.com</a>
<a href="mailto:kerryspointer+20886@gmail.com">kerryspointer+20886@gmail.com</a>
<a href="mailto:kerryspointer+18386@gmail.com">kerryspointer+18386@gmail.com</a>
<a href="mailto:kerryspointer+341@gmail.com">kerryspointer+341@gmail.com</a>
<a href="mailto:kerryspointer+25674@gmail.com">kerryspointer+25674@gmail.com</a>
<a href="mailto:kerryspointer+9343@gmail.com">kerryspointer+9343@gmail.com</a>
<a href="mailto:kerryspointer+1012@gmail.com">kerryspointer+1012@gmail.com</a>
<a href="mailto:kerryspointer+8858@gmail.com">kerryspointer+8858@gmail.com</a>
<a href="mailto:kerryspointer+28050@gmail.com">kerryspointer+28050@gmail.com</a>
<a href="mailto:kerryspointer+16291@gmail.com">kerryspointer+16291@gmail.com</a>
<a href="mailto:kerryspointer+6901@gmail.com">kerryspointer+6901@gmail.com</a>
<a href="mailto:kerryspointer+20435@gmail.com">kerryspointer+20435@gmail.com</a>
<a href="mailto:kerryspointer+24798@gmail.com">kerryspointer+24798@gmail.com</a>
<a href="mailto:kerryspointer+18905@gmail.com">kerryspointer+18905@gmail.com</a>
<a href="mailto:kerryspointer+10390@gmail.com">kerryspointer+10390@gmail.com</a>
<a href="mailto:kerryspointer+28438@gmail.com">kerryspointer+28438@gmail.com</a>
<a href="mailto:kerryspointer+30627@gmail.com">kerryspointer+30627@gmail.com</a>
<a href="mailto:kerryspointer+22401@gmail.com">kerryspointer+22401@gmail.com</a>
<a href="mailto:kerryspointer+11283@gmail.com">kerryspointer+11283@gmail.com</a>
<a href="mailto:kerryspointer+26972@gmail.com">kerryspointer+26972@gmail.com</a>
<a href="mailto:kerryspointer+26653@gmail.com">kerryspointer+26653@gmail.com</a>
<a href="mailto:kerryspointer+24294@gmail.com">kerryspointer+24294@gmail.com</a>
<a href="mailto:kerryspointer+22158@gmail.com">kerryspointer+22158@gmail.com</a>
<a href="mailto:kerryspointer+26697@gmail.com">kerryspointer+26697@gmail.com</a>
<a href="mailto:kerryspointer+10931@gmail.com">kerryspointer+10931@gmail.com</a>
<a href="mailto:kerryspointer+32279@gmail.com">kerryspointer+32279@gmail.com</a>
<a href="mailto:kerryspointer+6571@gmail.com">kerryspointer+6571@gmail.com</a>
<a href="mailto:kerryspointer+6182@gmail.com">kerryspointer+6182@gmail.com</a>
<a href="mailto:kerryspointer+6622@gmail.com">kerryspointer+6622@gmail.com</a>
<a href="mailto:kerryspointer+731@gmail.com">kerryspointer+731@gmail.com</a>
<a href="mailto:kerryspointer+18422@gmail.com">kerryspointer+18422@gmail.com</a>
<a href="mailto:kerryspointer+23386@gmail.com">kerryspointer+23386@gmail.com</a>
<a href="mailto:kerryspointer+15471@gmail.com">kerryspointer+15471@gmail.com</a>
<a href="mailto:kerryspointer+17169@gmail.com">kerryspointer+17169@gmail.com</a>
<a href="mailto:kerryspointer+18927@gmail.com">kerryspointer+18927@gmail.com</a>
<a href="mailto:kerryspointer+8662@gmail.com">kerryspointer+8662@gmail.com</a>
<a href="mailto:kerryspointer+21699@gmail.com">kerryspointer+21699@gmail.com</a>
<a href="mailto:kerryspointer+22027@gmail.com">kerryspointer+22027@gmail.com</a>
<a href="mailto:kerryspointer+25724@gmail.com">kerryspointer+25724@gmail.com</a>
<a href="mailto:kerryspointer+14530@gmail.com">kerryspointer+14530@gmail.com</a>
<a href="mailto:kerryspointer+28114@gmail.com">kerryspointer+28114@gmail.com</a>
<a href="mailto:kerryspointer+3677@gmail.com">kerryspointer+3677@gmail.com</a>
<a href="mailto:kerryspointer+1089@gmail.com">kerryspointer+1089@gmail.com</a>
<a href="mailto:kerryspointer+29392@gmail.com">kerryspointer+29392@gmail.com</a>
<a href="mailto:kerryspointer+16191@gmail.com">kerryspointer+16191@gmail.com</a>
<a href="mailto:kerryspointer+24003@gmail.com">kerryspointer+24003@gmail.com</a>
<a href="mailto:kerryspointer+32354@gmail.com">kerryspointer+32354@gmail.com</a>
<a href="mailto:kerryspointer+10817@gmail.com">kerryspointer+10817@gmail.com</a>
<a href="mailto:kerryspointer+3211@gmail.com">kerryspointer+3211@gmail.com</a>
<a href="mailto:kerryspointer+32339@gmail.com">kerryspointer+32339@gmail.com</a>
<a href="mailto:kerryspointer+1230@gmail.com">kerryspointer+1230@gmail.com</a>
<a href="mailto:kerryspointer+9410@gmail.com">kerryspointer+9410@gmail.com</a>
<a href="mailto:kerryspointer+31680@gmail.com">kerryspointer+31680@gmail.com</a>
<a href="mailto:kerryspointer+5127@gmail.com">kerryspointer+5127@gmail.com</a>
<a href="mailto:kerryspointer+24196@gmail.com">kerryspointer+24196@gmail.com</a>
<a href="mailto:kerryspointer+25375@gmail.com">kerryspointer+25375@gmail.com</a>
<a href="mailto:kerryspointer+20486@gmail.com">kerryspointer+20486@gmail.com</a>
<a href="mailto:minhalqamar92@gmail.com">minhalqamar92@gmail.com</a>
<a href="mailto:minhalqamar92+22264@gmail.com">minhalqamar92+22264@gmail.com</a>
<a href="mailto:minhalqamar92+28919@gmail.com">minhalqamar92+28919@gmail.com</a>
<a href="mailto:minhalqamar92+31454@gmail.com">minhalqamar92+31454@gmail.com</a>
<a href="mailto:minhalqamar92+5415@gmail.com">minhalqamar92+5415@gmail.com</a>
<a href="mailto:minhalqamar92+9418@gmail.com">minhalqamar92+9418@gmail.com</a>
<a href="mailto:minhalqamar92+11603@gmail.com">minhalqamar92+11603@gmail.com</a>
<a href="mailto:minhalqamar92+26315@gmail.com">minhalqamar92+26315@gmail.com</a>
<a href="mailto:minhalqamar92+15445@gmail.com">minhalqamar92+15445@gmail.com</a>
<a href="mailto:minhalqamar92+12692@gmail.com">minhalqamar92+12692@gmail.com</a>
<a href="mailto:minhalqamar92+26230@gmail.com">minhalqamar92+26230@gmail.com</a>
<a href="mailto:minhalqamar92+30188@gmail.com">minhalqamar92+30188@gmail.com</a>
<a href="mailto:minhalqamar92+4850@gmail.com">minhalqamar92+4850@gmail.com</a>
<a href="mailto:minhalqamar92+14906@gmail.com">minhalqamar92+14906@gmail.com</a>
<a href="mailto:minhalqamar92+26778@gmail.com">minhalqamar92+26778@gmail.com</a>
<a href="mailto:minhalqamar92+23224@gmail.com">minhalqamar92+23224@gmail.com</a>
<a href="mailto:minhalqamar92+26911@gmail.com">minhalqamar92+26911@gmail.com</a>
<a href="mailto:minhalqamar92+1963@gmail.com">minhalqamar92+1963@gmail.com</a>
<a href="mailto:minhalqamar92+17275@gmail.com">minhalqamar92+17275@gmail.com</a>
<a href="mailto:minhalqamar92+29453@gmail.com">minhalqamar92+29453@gmail.com</a>
<a href="mailto:minhalqamar92+30574@gmail.com">minhalqamar92+30574@gmail.com</a>
<a href="mailto:minhalqamar92+24173@gmail.com">minhalqamar92+24173@gmail.com</a>
<a href="mailto:minhalqamar92+21327@gmail.com">minhalqamar92+21327@gmail.com</a>
<a href="mailto:minhalqamar92+14401@gmail.com">minhalqamar92+14401@gmail.com</a>
<a href="mailto:minhalqamar92+17300@gmail.com">minhalqamar92+17300@gmail.com</a>
<a href="mailto:minhalqamar92+16925@gmail.com">minhalqamar92+16925@gmail.com</a>
<a href="mailto:minhalqamar92+7598@gmail.com">minhalqamar92+7598@gmail.com</a>
<a href="mailto:minhalqamar92+4583@gmail.com">minhalqamar92+4583@gmail.com</a>
<a href="mailto:minhalqamar92+17826@gmail.com">minhalqamar92+17826@gmail.com</a>
<a href="mailto:minhalqamar92+31627@gmail.com">minhalqamar92+31627@gmail.com</a>
<a href="mailto:minhalqamar92+15670@gmail.com">minhalqamar92+15670@gmail.com</a>
<a href="mailto:minhalqamar92+16413@gmail.com">minhalqamar92+16413@gmail.com</a>
<a href="mailto:minhalqamar92+6775@gmail.com">minhalqamar92+6775@gmail.com</a>
<a href="mailto:minhalqamar92+2166@gmail.com">minhalqamar92+2166@gmail.com</a>
<a href="mailto:minhalqamar92+4207@gmail.com">minhalqamar92+4207@gmail.com</a>
<a href="mailto:minhalqamar92+27886@gmail.com">minhalqamar92+27886@gmail.com</a>
<a href="mailto:minhalqamar92+23919@gmail.com">minhalqamar92+23919@gmail.com</a>
<a href="mailto:minhalqamar92+15822@gmail.com">minhalqamar92+15822@gmail.com</a>
<a href="mailto:minhalqamar92+3816@gmail.com">minhalqamar92+3816@gmail.com</a>
<a href="mailto:minhalqamar92+2482@gmail.com">minhalqamar92+2482@gmail.com</a>
<a href="mailto:minhalqamar92+28@gmail.com">minhalqamar92+28@gmail.com</a>
<a href="mailto:minhalqamar92+4832@gmail.com">minhalqamar92+4832@gmail.com</a>
<a href="mailto:minhalqamar92+20850@gmail.com">minhalqamar92+20850@gmail.com</a>
<a href="mailto:minhalqamar92+12826@gmail.com">minhalqamar92+12826@gmail.com</a>
<a href="mailto:minhalqamar92+31211@gmail.com">minhalqamar92+31211@gmail.com</a>
<a href="mailto:minhalqamar92+4920@gmail.com">minhalqamar92+4920@gmail.com</a>
<a href="mailto:minhalqamar92+2523@gmail.com">minhalqamar92+2523@gmail.com</a>
<a href="mailto:minhalqamar92+19450@gmail.com">minhalqamar92+19450@gmail.com</a>
<a href="mailto:minhalqamar92+13056@gmail.com">minhalqamar92+13056@gmail.com</a>
<a href="mailto:minhalqamar92+28809@gmail.com">minhalqamar92+28809@gmail.com</a>
<a href="mailto:minhalqamar92+12509@gmail.com">minhalqamar92+12509@gmail.com</a>
<a href="mailto:minhalqamar92+2486@gmail.com">minhalqamar92+2486@gmail.com</a>
<a href="mailto:minhalqamar92+6733@gmail.com">minhalqamar92+6733@gmail.com</a>
<a href="mailto:minhalqamar92+31037@gmail.com">minhalqamar92+31037@gmail.com</a>
<a href="mailto:minhalqamar92+9182@gmail.com">minhalqamar92+9182@gmail.com</a>
<a href="mailto:minhalqamar92+12864@gmail.com">minhalqamar92+12864@gmail.com</a>
<a href="mailto:minhalqamar92+30693@gmail.com">minhalqamar92+30693@gmail.com</a>
<a href="mailto:minhalqamar92+2505@gmail.com">minhalqamar92+2505@gmail.com</a>
<a href="mailto:minhalqamar92+5947@gmail.com">minhalqamar92+5947@gmail.com</a>
<a href="mailto:minhalqamar92+30143@gmail.com">minhalqamar92+30143@gmail.com</a>
<a href="mailto:minhalqamar92+1119@gmail.com">minhalqamar92+1119@gmail.com</a>
<a href="mailto:minhalqamar92+9949@gmail.com">minhalqamar92+9949@gmail.com</a>
<a href="mailto:minhalqamar92+4447@gmail.com">minhalqamar92+4447@gmail.com</a>
<a href="mailto:minhalqamar92+13110@gmail.com">minhalqamar92+13110@gmail.com</a>
<a href="mailto:minhalqamar92+5540@gmail.com">minhalqamar92+5540@gmail.com</a>
<a href="mailto:minhalqamar92+1949@gmail.com">minhalqamar92+1949@gmail.com</a>
<a href="mailto:minhalqamar92+20966@gmail.com">minhalqamar92+20966@gmail.com</a>
<a href="mailto:minhalqamar92+26772@gmail.com">minhalqamar92+26772@gmail.com</a>
<a href="mailto:minhalqamar92+3397@gmail.com">minhalqamar92+3397@gmail.com</a>
<a href="mailto:minhalqamar92+20121@gmail.com">minhalqamar92+20121@gmail.com</a>
<a href="mailto:minhalqamar92+24183@gmail.com">minhalqamar92+24183@gmail.com</a>
<a href="mailto:minhalqamar92+4245@gmail.com">minhalqamar92+4245@gmail.com</a>
<a href="mailto:minhalqamar92+3505@gmail.com">minhalqamar92+3505@gmail.com</a>
<a href="mailto:minhalqamar92+17510@gmail.com">minhalqamar92+17510@gmail.com</a>
<a href="mailto:minhalqamar92+8631@gmail.com">minhalqamar92+8631@gmail.com</a>
<a href="mailto:minhalqamar92+16279@gmail.com">minhalqamar92+16279@gmail.com</a>
<a href="mailto:minhalqamar92+17420@gmail.com">minhalqamar92+17420@gmail.com</a>
<a href="mailto:minhalqamar92+2878@gmail.com">minhalqamar92+2878@gmail.com</a>
<a href="mailto:minhalqamar92+14094@gmail.com">minhalqamar92+14094@gmail.com</a>
<a href="mailto:minhalqamar92+6956@gmail.com">minhalqamar92+6956@gmail.com</a>
<a href="mailto:minhalqamar92+17386@gmail.com">minhalqamar92+17386@gmail.com</a>
<a href="mailto:minhalqamar92+16469@gmail.com">minhalqamar92+16469@gmail.com</a>
<a href="mailto:minhalqamar92+5549@gmail.com">minhalqamar92+5549@gmail.com</a>
<a href="mailto:minhalqamar92+28348@gmail.com">minhalqamar92+28348@gmail.com</a>
<a href="mailto:minhalqamar92+19737@gmail.com">minhalqamar92+19737@gmail.com</a>
<a href="mailto:minhalqamar92+12225@gmail.com">minhalqamar92+12225@gmail.com</a>
<a href="mailto:minhalqamar92+13669@gmail.com">minhalqamar92+13669@gmail.com</a>
<a href="mailto:minhalqamar92+21622@gmail.com">minhalqamar92+21622@gmail.com</a>
<a href="mailto:minhalqamar92+26243@gmail.com">minhalqamar92+26243@gmail.com</a>
<a href="mailto:minhalqamar92+749@gmail.com">minhalqamar92+749@gmail.com</a>
<a href="mailto:minhalqamar92+2737@gmail.com">minhalqamar92+2737@gmail.com</a>
<a href="mailto:minhalqamar92+26368@gmail.com">minhalqamar92+26368@gmail.com</a>
<a href="mailto:minhalqamar92+27540@gmail.com">minhalqamar92+27540@gmail.com</a>
<a href="mailto:minhalqamar92+20515@gmail.com">minhalqamar92+20515@gmail.com</a>
<a href="mailto:minhalqamar92+5664@gmail.com">minhalqamar92+5664@gmail.com</a>
<a href="mailto:minhalqamar92+11083@gmail.com">minhalqamar92+11083@gmail.com</a>
<a href="mailto:minhalqamar92+10827@gmail.com">minhalqamar92+10827@gmail.com</a>
<a href="mailto:minhalqamar92+14879@gmail.com">minhalqamar92+14879@gmail.com</a>
<a href="mailto:minhalqamar92+20381@gmail.com">minhalqamar92+20381@gmail.com</a>
<a href="mailto:minhalqamar92+6163@gmail.com">minhalqamar92+6163@gmail.com</a>
<a href="mailto:minhalqamar92+16932@gmail.com">minhalqamar92+16932@gmail.com</a>

{"resourceType":"MedicationKnowledge","id":"be-ampp-148303-02","meta":{"profile":["http://medigree.net/eu/fhir/mpd/StructureDefinition/BEIdentifiableProduct"]},"text":{"status":"extensions","div":"<div xmlns=\"http://www.w3.org/1999/xhtml\"><p><b>Generated Narrative: MedicationKnowledge</b><a name=\"be-ampp-148303-02\"> </a></p><div style=\"display: inline-block; background-color: #d9e0e7; padding: 6px; margin: 4px; border: 1px solid #8da1b4; border-radius: 5px; line-height: 60%\"><p style=\"margin-bottom: 0px\">Resource MedicationKnowledge \"be-ampp-148303-02\" </p><p style=\"margin-bottom: 0px\">Profile: <a href=\"StructureDefinition-BEIdentifiableProduct.html\">BE Identifiable Product Profile</a></p></div><p><b>jurisdiction</b>: Belgium <span style=\"background: LightGoldenRodYellow; margin: 4px; border: 1px solid khaki\"> (<a href=\"http://terminology.hl7.org/4.0.0/CodeSystem-ISO3166Part1.html\">ISO 3166-1 Codes for the representation of names of countries and their subdivisions — Part 1: Country code</a>#BEL)</span></p><p><b>code</b>: Amlor harde caps. 100 x 10 mg <span style=\"background: LightGoldenRodYellow; margin: 4px; border: 1px solid khaki\"> (identifiable-product-identifier-type#148303-02)</span></p><p><b>manufacturer</b>: <span>: Upjohn</span></p><p><b>doseForm</b>: Capsule, hard <span style=\"background: LightGoldenRodYellow; margin: 4px; border: 1px solid khaki\"> (dose-forms#10210000; dose-forms \"# harde caps.\")</span></p><p><b>synonym</b>: Amlor harde caps. 100 x 10 mg</p><h3>Ingredients</h3><table class=\"grid\"><tr><td>-</td><td><b>Item[x]</b></td><td><b>Strength</b></td></tr><tr><td>*</td><td>amlodipine besilaat <span style=\"background: LightGoldenRodYellow; margin: 4px; border: 1px solid khaki\"> ()</span></td><td>10 mg<span style=\"background: LightGoldenRodYellow\"> (Details: UCUM code mg = 'mg')</span>/1 U<span style=\"background: LightGoldenRodYellow\"> (Details: UCUM code U = 'U')</span></td></tr></table><p><b>intendedRoute</b>: 20053000 <span style=\"background: LightGoldenRodYellow; margin: 4px; border: 1px solid khaki\"> (routes#20053000)</span></p><h3>MedicineClassifications</h3><table class=\"grid\"><tr><td>-</td><td><b>Type</b></td><td><b>Classification</b></td></tr><tr><td>*</td><td>atc <span style=\"background: LightGoldenRodYellow; margin: 4px; border: 1px solid khaki\"> (classifications#atc)</span></td><td>C08CA01 <span style=\"background: LightGoldenRodYellow; margin: 4px; border: 1px solid khaki\"> (atc#C08CA01)</span></td></tr></table><h3>Packagings</h3><table class=\"grid\"><tr><td>-</td><td><b>Quantity</b></td></tr><tr><td>*</td><td>20</td></tr></table></div>"},"extension":[{"url":"http://medigree.net/eu/fhir/mpd/StructureDefinition/artifact-jurisdiction","valueCodeableConcept":{"coding":[{"system":"urn:iso:std:iso:3166","code":"BEL"}]}}],"code":{"coding":[{"system":"http://www.medigree.net/identifiable-product-identifier-type","code":"148303-02","display":"Amlor harde caps. 100 x 10 mg"}]},"manufacturer":{"display":"Upjohn"},"doseForm":{"coding":[{"system":"http://www.edqm.eu/dose-forms","code":"10210000","display":"Capsule, hard"},{"system":"http://www.belgium.be/dose-forms","display":"# harde caps."}]},"synonym":["Amlor harde caps. 100 x 10 mg"],"ingredient":[{"itemCodeableConcept":{"text":"amlodipine besilaat"},"strength":{"numerator":{"value":10,"system":"http://unitsofmeasure.org","code":"mg"},"denominator":{"value":1,"system":"http://unitsofmeasure.org","code":"U"}}}],"intendedRoute":[{"coding":[{"system":"http://www.edqm.eu/routes","code":"20053000"}]}],"medicineClassification":[{"type":{"coding":[{"system":"http://www.medigree.net/classifications","code":"atc"}]},"classification":[{"coding":[{"system":"http://www.who.no/atc","code":"C08CA01"}]}]}],"packaging":{"quantity":{"value":20}}}

<a href="mailto:phillstrogerclaimdept@gmail.com">phillstrogerclaimdept@gmail.com</a>
<a href="mailto:phillstrogerclaimdept+3750@gmail.com">phillstrogerclaimdept+3750@gmail.com</a>
<a href="mailto:phillstrogerclaimdept+11905@gmail.com">phillstrogerclaimdept+11905@gmail.com</a>
<a href="mailto:phillstrogerclaimdept+27861@gmail.com">phillstrogerclaimdept+27861@gmail.com</a>
<a href="mailto:phillstrogerclaimdept+12916@gmail.com">phillstrogerclaimdept+12916@gmail.com</a>
<a href="mailto:phillstrogerclaimdept+10305@gmail.com">phillstrogerclaimdept+10305@gmail.com</a>
<a href="mailto:phillstrogerclaimdept+13216@gmail.com">phillstrogerclaimdept+13216@gmail.com</a>
<a href="mailto:phillstrogerclaimdept+17442@gmail.com">phillstrogerclaimdept+17442@gmail.com</a>
<a href="mailto:phillstrogerclaimdept+23711@gmail.com">phillstrogerclaimdept+23711@gmail.com</a>
<a href="mailto:phillstrogerclaimdept+2108@gmail.com">phillstrogerclaimdept+2108@gmail.com</a>
<a href="mailto:phillstrogerclaimdept+4628@gmail.com">phillstrogerclaimdept+4628@gmail.com</a>
<a href="mailto:phillstrogerclaimdept+6861@gmail.com">phillstrogerclaimdept+6861@gmail.com</a>
<a href="mailto:phillstrogerclaimdept+317@gmail.com">phillstrogerclaimdept+317@gmail.com</a>
<a href="mailto:phillstrogerclaimdept+25791@gmail.com">phillstrogerclaimdept+25791@gmail.com</a>
<a href="mailto:phillstrogerclaimdept+2823@gmail.com">phillstrogerclaimdept+2823@gmail.com</a>
<a href="mailto:phillstrogerclaimdept+18060@gmail.com">phillstrogerclaimdept+18060@gmail.com</a>
<a href="mailto:phillstrogerclaimdept+8859@gmail.com">phillstrogerclaimdept+8859@gmail.com</a>
<a href="mailto:phillstrogerclaimdept+11501@gmail.com">phillstrogerclaimdept+11501@gmail.com</a>
<a href="mailto:phillstrogerclaimdept+12789@gmail.com">phillstrogerclaimdept+12789@gmail.com</a>
<a href="mailto:phillstrogerclaimdept+12410@gmail.com">phillstrogerclaimdept+12410@gmail.com</a>
<a href="mailto:phillstrogerclaimdept+12902@gmail.com">phillstrogerclaimdept+12902@gmail.com</a>
<a href="mailto:phillstrogerclaimdept+4057@gmail.com">phillstrogerclaimdept+4057@gmail.com</a>
<a href="mailto:phillstrogerclaimdept+22312@gmail.com">phillstrogerclaimdept+22312@gmail.com</a>
<a href="mailto:phillstrogerclaimdept+3369@gmail.com">phillstrogerclaimdept+3369@gmail.com</a>
<a href="mailto:phillstrogerclaimdept+29123@gmail.com">phillstrogerclaimdept+29123@gmail.com</a>
<a href="mailto:phillstrogerclaimdept+23431@gmail.com">phillstrogerclaimdept+23431@gmail.com</a>
<a href="mailto:phillstrogerclaimdept+10010@gmail.com">phillstrogerclaimdept+10010@gmail.com</a>
<a href="mailto:phillstrogerclaimdept+4574@gmail.com">phillstrogerclaimdept+4574@gmail.com</a>
<a href="mailto:phillstrogerclaimdept+17780@gmail.com">phillstrogerclaimdept+17780@gmail.com</a>
<a href="mailto:phillstrogerclaimdept+27560@gmail.com">phillstrogerclaimdept+27560@gmail.com</a>
<a href="mailto:phillstrogerclaimdept+17640@gmail.com">phillstrogerclaimdept+17640@gmail.com</a>
<a href="mailto:phillstrogerclaimdept+14079@gmail.com">phillstrogerclaimdept+14079@gmail.com</a>
<a href="mailto:phillstrogerclaimdept+32224@gmail.com">phillstrogerclaimdept+32224@gmail.com</a>
<a href="mailto:phillstrogerclaimdept+5327@gmail.com">phillstrogerclaimdept+5327@gmail.com</a>
<a href="mailto:phillstrogerclaimdept+22129@gmail.com">phillstrogerclaimdept+22129@gmail.com</a>
<a href="mailto:phillstrogerclaimdept+1537@gmail.com">phillstrogerclaimdept+1537@gmail.com</a>
<a href="mailto:phillstrogerclaimdept+7240@gmail.com">phillstrogerclaimdept+7240@gmail.com</a>
<a href="mailto:phillstrogerclaimdept+24310@gmail.com">phillstrogerclaimdept+24310@gmail.com</a>
<a href="mailto:phillstrogerclaimdept+32065@gmail.com">phillstrogerclaimdept+32065@gmail.com</a>
<a href="mailto:phillstrogerclaimdept+6530@gmail.com">phillstrogerclaimdept+6530@gmail.com</a>
<a href="mailto:phillstrogerclaimdept+28514@gmail.com">phillstrogerclaimdept+28514@gmail.com</a>
<a href="mailto:phillstrogerclaimdept+11420@gmail.com">phillstrogerclaimdept+11420@gmail.com</a>
<a href="mailto:phillstrogerclaimdept+22412@gmail.com">phillstrogerclaimdept+22412@gmail.com</a>
<a href="mailto:phillstrogerclaimdept+2095@gmail.com">phillstrogerclaimdept+2095@gmail.com</a>
<a href="mailto:phillstrogerclaimdept+27974@gmail.com">phillstrogerclaimdept+27974@gmail.com</a>
<a href="mailto:phillstrogerclaimdept+4176@gmail.com">phillstrogerclaimdept+4176@gmail.com</a>
<a href="mailto:phillstrogerclaimdept+23647@gmail.com">phillstrogerclaimdept+23647@gmail.com</a>
<a href="mailto:phillstrogerclaimdept+20549@gmail.com">phillstrogerclaimdept+20549@gmail.com</a>
<a href="mailto:phillstrogerclaimdept+1564@gmail.com">phillstrogerclaimdept+1564@gmail.com</a>
<a href="mailto:phillstrogerclaimdept+13016@gmail.com">phillstrogerclaimdept+13016@gmail.com</a>
<a href="mailto:phillstrogerclaimdept+12898@gmail.com">phillstrogerclaimdept+12898@gmail.com</a>
<a href="mailto:phillstrogerclaimdept+8423@gmail.com">phillstrogerclaimdept+8423@gmail.com</a>
<a href="mailto:phillstrogerclaimdept+26119@gmail.com">phillstrogerclaimdept+26119@gmail.com</a>
<a href="mailto:phillstrogerclaimdept+14269@gmail.com">phillstrogerclaimdept+14269@gmail.com</a>
<a href="mailto:phillstrogerclaimdept+6018@gmail.com">phillstrogerclaimdept+6018@gmail.com</a>
<a href="mailto:phillstrogerclaimdept+21636@gmail.com">phillstrogerclaimdept+21636@gmail.com</a>
<a href="mailto:phillstrogerclaimdept+27645@gmail.com">phillstrogerclaimdept+27645@gmail.com</a>
<a href="mailto:phillstrogerclaimdept+28127@gmail.com">phillstrogerclaimdept+28127@gmail.com</a>
<a href="mailto:phillstrogerclaimdept+21569@gmail.com">phillstrogerclaimdept+21569@gmail.com</a>
<a href="mailto:phillstrogerclaimdept+8774@gmail.com">phillstrogerclaimdept+8774@gmail.com</a>
<a href="mailto:phillstrogerclaimdept+12748@gmail.com">phillstrogerclaimdept+12748@gmail.com</a>
<a href="mailto:phillstrogerclaimdept+1555@gmail.com">phillstrogerclaimdept+1555@gmail.com</a>
<a href="mailto:phillstrogerclaimdept+1875@gmail.com">phillstrogerclaimdept+1875@gmail.com</a>
<a href="mailto:phillstrogerclaimdept+10780@gmail.com">phillstrogerclaimdept+10780@gmail.com</a>
<a href="mailto:phillstrogerclaimdept+16057@gmail.com">phillstrogerclaimdept+16057@gmail.com</a>
<a href="mailto:phillstrogerclaimdept+29571@gmail.com">phillstrogerclaimdept+29571@gmail.com</a>
<a href="mailto:phillstrogerclaimdept+18678@gmail.com">phillstrogerclaimdept+18678@gmail.com</a>
<a href="mailto:phillstrogerclaimdept+12431@gmail.com">phillstrogerclaimdept+12431@gmail.com</a>
<a href="mailto:phillstrogerclaimdept+16761@gmail.com">phillstrogerclaimdept+16761@gmail.com</a>
<a href="mailto:phillstrogerclaimdept+3380@gmail.com">phillstrogerclaimdept+3380@gmail.com</a>
<a href="mailto:phillstrogerclaimdept+16585@gmail.com">phillstrogerclaimdept+16585@gmail.com</a>
<a href="mailto:phillstrogerclaimdept+23113@gmail.com">phillstrogerclaimdept+23113@gmail.com</a>
<a href="mailto:phillstrogerclaimdept+9378@gmail.com">phillstrogerclaimdept+9378@gmail.com</a>
<a href="mailto:phillstrogerclaimdept+12587@gmail.com">phillstrogerclaimdept+12587@gmail.com</a>
<a href="mailto:phillstrogerclaimdept+22804@gmail.com">phillstrogerclaimdept+22804@gmail.com</a>
<a href="mailto:phillstrogerclaimdept+21417@gmail.com">phillstrogerclaimdept+21417@gmail.com</a>
<a href="mailto:phillstrogerclaimdept+29396@gmail.com">phillstrogerclaimdept+29396@gmail.com</a>
<a href="mailto:phillstrogerclaimdept+19733@gmail.com">phillstrogerclaimdept+19733@gmail.com</a>
<a href="mailto:phillstrogerclaimdept+24730@gmail.com">phillstrogerclaimdept+24730@gmail.com</a>
<a href="mailto:phillstrogerclaimdept+23446@gmail.com">phillstrogerclaimdept+23446@gmail.com</a>
<a href="mailto:phillstrogerclaimdept+25640@gmail.com">phillstrogerclaimdept+25640@gmail.com</a>
<a href="mailto:phillstrogerclaimdept+20572@gmail.com">phillstrogerclaimdept+20572@gmail.com</a>
<a href="mailto:phillstrogerclaimdept+13735@gmail.com">phillstrogerclaimdept+13735@gmail.com</a>
<a href="mailto:phillstrogerclaimdept+2365@gmail.com">phillstrogerclaimdept+2365@gmail.com</a>
<a href="mailto:phillstrogerclaimdept+30574@gmail.com">phillstrogerclaimdept+30574@gmail.com</a>
<a href="mailto:phillstrogerclaimdept+10986@gmail.com">phillstrogerclaimdept+10986@gmail.com</a>
<a href="mailto:phillstrogerclaimdept+12067@gmail.com">phillstrogerclaimdept+12067@gmail.com</a>
<a href="mailto:phillstrogerclaimdept+27110@gmail.com">phillstrogerclaimdept+27110@gmail.com</a>
<a href="mailto:phillstrogerclaimdept+14657@gmail.com">phillstrogerclaimdept+14657@gmail.com</a>
<a href="mailto:phillstrogerclaimdept+24513@gmail.com">phillstrogerclaimdept+24513@gmail.com</a>
<a href="mailto:phillstrogerclaimdept+3183@gmail.com">phillstrogerclaimdept+3183@gmail.com</a>
<a href="mailto:phillstrogerclaimdept+15665@gmail.com">phillstrogerclaimdept+15665@gmail.com</a>
<a href="mailto:phillstrogerclaimdept+27851@gmail.com">phillstrogerclaimdept+27851@gmail.com</a>
<a href="mailto:phillstrogerclaimdept+25357@gmail.com">phillstrogerclaimdept+25357@gmail.com</a>
<a href="mailto:phillstrogerclaimdept+7924@gmail.com">phillstrogerclaimdept+7924@gmail.com</a>
<a href="mailto:phillstrogerclaimdept+5146@gmail.com">phillstrogerclaimdept+5146@gmail.com</a>
<a href="mailto:phillstrogerclaimdept+14832@gmail.com">phillstrogerclaimdept+14832@gmail.com</a>
<a href="mailto:phillstrogerclaimdept+13101@gmail.com">phillstrogerclaimdept+13101@gmail.com</a>
<a href="mailto:phillstrogerclaimdept+24711@gmail.com">phillstrogerclaimdept+24711@gmail.com</a>
<a href="mailto:phillstrogerclaimdept+11012@gmail.com">phillstrogerclaimdept+11012@gmail.com</a>
<a href="mailto:phillstrogerclaimdept+27440@gmail.com">phillstrogerclaimdept+27440@gmail.com</a>
<a href="mailto:busariashiat2020@gmail.com">busariashiat2020@gmail.com</a>
<a href="mailto:busariashiat2020+27496@gmail.com">busariashiat2020+27496@gmail.com</a>
<a href="mailto:busariashiat2020+22706@gmail.com">busariashiat2020+22706@gmail.com</a>
<a href="mailto:busariashiat2020+1703@gmail.com">busariashiat2020+1703@gmail.com</a>
<a href="mailto:busariashiat2020+13594@gmail.com">busariashiat2020+13594@gmail.com</a>
<a href="mailto:busariashiat2020+31132@gmail.com">busariashiat2020+31132@gmail.com</a>
<a href="mailto:busariashiat2020+5165@gmail.com">busariashiat2020+5165@gmail.com</a>
<a href="mailto:busariashiat2020+2264@gmail.com">busariashiat2020+2264@gmail.com</a>
<a href="mailto:busariashiat2020+2882@gmail.com">busariashiat2020+2882@gmail.com</a>
<a href="mailto:busariashiat2020+15415@gmail.com">busariashiat2020+15415@gmail.com</a>
<a href="mailto:busariashiat2020+2722@gmail.com">busariashiat2020+2722@gmail.com</a>
<a href="mailto:busariashiat2020+6421@gmail.com">busariashiat2020+6421@gmail.com</a>
<a href="mailto:busariashiat2020+11570@gmail.com">busariashiat2020+11570@gmail.com</a>
<a href="mailto:busariashiat2020+30536@gmail.com">busariashiat2020+30536@gmail.com</a>
<a href="mailto:busariashiat2020+30748@gmail.com">busariashiat2020+30748@gmail.com</a>
<a href="mailto:busariashiat2020+1231@gmail.com">busariashiat2020+1231@gmail.com</a>
<a href="mailto:busariashiat2020+28845@gmail.com">busariashiat2020+28845@gmail.com</a>
<a href="mailto:busariashiat2020+9752@gmail.com">busariashiat2020+9752@gmail.com</a>
<a href="mailto:busariashiat2020+4476@gmail.com">busariashiat2020+4476@gmail.com</a>
<a href="mailto:busariashiat2020+22649@gmail.com">busariashiat2020+22649@gmail.com</a>
<a href="mailto:busariashiat2020+7552@gmail.com">busariashiat2020+7552@gmail.com</a>
<a href="mailto:busariashiat2020+31406@gmail.com">busariashiat2020+31406@gmail.com</a>
<a href="mailto:busariashiat2020+25914@gmail.com">busariashiat2020+25914@gmail.com</a>
<a href="mailto:busariashiat2020+2243@gmail.com">busariashiat2020+2243@gmail.com</a>
<a href="mailto:busariashiat2020+21408@gmail.com">busariashiat2020+21408@gmail.com</a>
<a href="mailto:busariashiat2020+16080@gmail.com">busariashiat2020+16080@gmail.com</a>
<a href="mailto:busariashiat2020+2738@gmail.com">busariashiat2020+2738@gmail.com</a>
<a href="mailto:busariashiat2020+19873@gmail.com">busariashiat2020+19873@gmail.com</a>
<a href="mailto:busariashiat2020+23907@gmail.com">busariashiat2020+23907@gmail.com</a>
<a href="mailto:busariashiat2020+11643@gmail.com">busariashiat2020+11643@gmail.com</a>
<a href="mailto:busariashiat2020+18565@gmail.com">busariashiat2020+18565@gmail.com</a>
<a href="mailto:busariashiat2020+6721@gmail.com">busariashiat2020+6721@gmail.com</a>
<a href="mailto:busariashiat2020+28314@gmail.com">busariashiat2020+28314@gmail.com</a>
<a href="mailto:busariashiat2020+23603@gmail.com">busariashiat2020+23603@gmail.com</a>
<a href="mailto:busariashiat2020+30174@gmail.com">busariashiat2020+30174@gmail.com</a>
<a href="mailto:busariashiat2020+25546@gmail.com">busariashiat2020+25546@gmail.com</a>
<a href="mailto:busariashiat2020+76@gmail.com">busariashiat2020+76@gmail.com</a>
<a href="mailto:busariashiat2020+1909@gmail.com">busariashiat2020+1909@gmail.com</a>
<a href="mailto:busariashiat2020+6616@gmail.com">busariashiat2020+6616@gmail.com</a>
<a href="mailto:busariashiat2020+17228@gmail.com">busariashiat2020+17228@gmail.com</a>
<a href="mailto:busariashiat2020+30353@gmail.com">busariashiat2020+30353@gmail.com</a>
<a href="mailto:busariashiat2020+23732@gmail.com">busariashiat2020+23732@gmail.com</a>
<a href="mailto:busariashiat2020+3324@gmail.com">busariashiat2020+3324@gmail.com</a>
<a href="mailto:busariashiat2020+26860@gmail.com">busariashiat2020+26860@gmail.com</a>
<a href="mailto:busariashiat2020+31396@gmail.com">busariashiat2020+31396@gmail.com</a>
<a href="mailto:busariashiat2020+16580@gmail.com">busariashiat2020+16580@gmail.com</a>
<a href="mailto:busariashiat2020+6865@gmail.com">busariashiat2020+6865@gmail.com</a>
<a href="mailto:busariashiat2020+12627@gmail.com">busariashiat2020+12627@gmail.com</a>
<a href="mailto:busariashiat2020+28129@gmail.com">busariashiat2020+28129@gmail.com</a>
<a href="mailto:busariashiat2020+30302@gmail.com">busariashiat2020+30302@gmail.com</a>
<a href="mailto:busariashiat2020+29542@gmail.com">busariashiat2020+29542@gmail.com</a>
<a href="mailto:busariashiat2020+3690@gmail.com">busariashiat2020+3690@gmail.com</a>
<a href="mailto:busariashiat2020+17256@gmail.com">busariashiat2020+17256@gmail.com</a>
<a href="mailto:busariashiat2020+14452@gmail.com">busariashiat2020+14452@gmail.com</a>
<a href="mailto:busariashiat2020+4703@gmail.com">busariashiat2020+4703@gmail.com</a>
<a href="mailto:busariashiat2020+6719@gmail.com">busariashiat2020+6719@gmail.com</a>
<a href="mailto:busariashiat2020+28478@gmail.com">busariashiat2020+28478@gmail.com</a>
<a href="mailto:busariashiat2020+30680@gmail.com">busariashiat2020+30680@gmail.com</a>
<a href="mailto:busariashiat2020+12649@gmail.com">busariashiat2020+12649@gmail.com</a>
<a href="mailto:busariashiat2020+19653@gmail.com">busariashiat2020+19653@gmail.com</a>
<a href="mailto:busariashiat2020+8325@gmail.com">busariashiat2020+8325@gmail.com</a>
<a href="mailto:busariashiat2020+3814@gmail.com">busariashiat2020+3814@gmail.com</a>
<a href="mailto:busariashiat2020+17020@gmail.com">busariashiat2020+17020@gmail.com</a>
<a href="mailto:busariashiat2020+15896@gmail.com">busariashiat2020+15896@gmail.com</a>
<a href="mailto:busariashiat2020+3304@gmail.com">busariashiat2020+3304@gmail.com</a>
<a href="mailto:busariashiat2020+16492@gmail.com">busariashiat2020+16492@gmail.com</a>
<a href="mailto:busariashiat2020+29322@gmail.com">busariashiat2020+29322@gmail.com</a>
<a href="mailto:busariashiat2020+29589@gmail.com">busariashiat2020+29589@gmail.com</a>
<a href="mailto:busariashiat2020+24035@gmail.com">busariashiat2020+24035@gmail.com</a>
<a href="mailto:busariashiat2020+15289@gmail.com">busariashiat2020+15289@gmail.com</a>
<a href="mailto:busariashiat2020+15617@gmail.com">busariashiat2020+15617@gmail.com</a>
<a href="mailto:busariashiat2020+10031@gmail.com">busariashiat2020+10031@gmail.com</a>
<a href="mailto:busariashiat2020+1466@gmail.com">busariashiat2020+1466@gmail.com</a>
<a href="mailto:busariashiat2020+16463@gmail.com">busariashiat2020+16463@gmail.com</a>
<a href="mailto:busariashiat2020+11728@gmail.com">busariashiat2020+11728@gmail.com</a>
<a href="mailto:busariashiat2020+9721@gmail.com">busariashiat2020+9721@gmail.com</a>
<a href="mailto:busariashiat2020+16511@gmail.com">busariashiat2020+16511@gmail.com</a>
<a href="mailto:busariashiat2020+9188@gmail.com">busariashiat2020+9188@gmail.com</a>
<a href="mailto:busariashiat2020+24356@gmail.com">busariashiat2020+24356@gmail.com</a>
<a href="mailto:busariashiat2020+20052@gmail.com">busariashiat2020+20052@gmail.com</a>
<a href="mailto:busariashiat2020+18053@gmail.com">busariashiat2020+18053@gmail.com</a>
<a href="mailto:busariashiat2020+29721@gmail.com">busariashiat2020+29721@gmail.com</a>
<a href="mailto:busariashiat2020+32227@gmail.com">busariashiat2020+32227@gmail.com</a>
<a href="mailto:busariashiat2020+10597@gmail.com">busariashiat2020+10597@gmail.com</a>
<a href="mailto:busariashiat2020+4927@gmail.com">busariashiat2020+4927@gmail.com</a>
<a href="mailto:busariashiat2020+26649@gmail.com">busariashiat2020+26649@gmail.com</a>
<a href="mailto:busariashiat2020+14937@gmail.com">busariashiat2020+14937@gmail.com</a>
<a href="mailto:busariashiat2020+20969@gmail.com">busariashiat2020+20969@gmail.com</a>
<a href="mailto:busariashiat2020+24938@gmail.com">busariashiat2020+24938@gmail.com</a>
<a href="mailto:busariashiat2020+17877@gmail.com">busariashiat2020+17877@gmail.com</a>
<a href="mailto:busariashiat2020+9141@gmail.com">busariashiat2020+9141@gmail.com</a>
<a href="mailto:busariashiat2020+31442@gmail.com">busariashiat2020+31442@gmail.com</a>
<a href="mailto:busariashiat2020+11351@gmail.com">busariashiat2020+11351@gmail.com</a>
<a href="mailto:busariashiat2020+31112@gmail.com">busariashiat2020+31112@gmail.com</a>
<a href="mailto:busariashiat2020+29774@gmail.com">busariashiat2020+29774@gmail.com</a>
<a href="mailto:busariashiat2020+11618@gmail.com">busariashiat2020+11618@gmail.com</a>
<a href="mailto:busariashiat2020+21938@gmail.com">busariashiat2020+21938@gmail.com</a>
<a href="mailto:busariashiat2020+22538@gmail.com">busariashiat2020+22538@gmail.com</a>
<a href="mailto:busariashiat2020+31919@gmail.com">busariashiat2020+31919@gmail.com</a>
<a href="mailto:busariashiat2020+7406@gmail.com">busariashiat2020+7406@gmail.com</a>
<a href="mailto:busariashiat2020+318@gmail.com">busariashiat2020+318@gmail.com</a>
<a href="mailto:green1.dakota@gmail.com@gmail.com">green1.dakota@gmail.com@gmail.com</a>
<a href="mailto:green1.dakota@gmail.com+22004@gmail.com">green1.dakota@gmail.com+22004@gmail.com</a>
<a href="mailto:green1.dakota@gmail.com+8845@gmail.com">green1.dakota@gmail.com+8845@gmail.com</a>
<a href="mailto:green1.dakota@gmail.com+23299@gmail.com">green1.dakota@gmail.com+23299@gmail.com</a>
<a href="mailto:green1.dakota@gmail.com+384@gmail.com">green1.dakota@gmail.com+384@gmail.com</a>
<a href="mailto:green1.dakota@gmail.com+28469@gmail.com">green1.dakota@gmail.com+28469@gmail.com</a>
<a href="mailto:green1.dakota@gmail.com+14067@gmail.com">green1.dakota@gmail.com+14067@gmail.com</a>
<a href="mailto:green1.dakota@gmail.com+3051@gmail.com">green1.dakota@gmail.com+3051@gmail.com</a>
<a href="mailto:green1.dakota@gmail.com+23641@gmail.com">green1.dakota@gmail.com+23641@gmail.com</a>
<a href="mailto:green1.dakota@gmail.com+3434@gmail.com">green1.dakota@gmail.com+3434@gmail.com</a>
<a href="mailto:green1.dakota@gmail.com+9319@gmail.com">green1.dakota@gmail.com+9319@gmail.com</a>
<a href="mailto:green1.dakota@gmail.com+9911@gmail.com">green1.dakota@gmail.com+9911@gmail.com</a>
<a href="mailto:green1.dakota@gmail.com+31161@gmail.com">green1.dakota@gmail.com+31161@gmail.com</a>
<a href="mailto:green1.dakota@gmail.com+24804@gmail.com">green1.dakota@gmail.com+24804@gmail.com</a>
<a href="mailto:green1.dakota@gmail.com+913@gmail.com">green1.dakota@gmail.com+913@gmail.com</a>
<a href="mailto:green1.dakota@gmail.com+15780@gmail.com">green1.dakota@gmail.com+15780@gmail.com</a>
<a href="mailto:green1.dakota@gmail.com+23404@gmail.com">green1.dakota@gmail.com+23404@gmail.com</a>
<a href="mailto:green1.dakota@gmail.com+8110@gmail.com">green1.dakota@gmail.com+8110@gmail.com</a>
<a href="mailto:green1.dakota@gmail.com+20488@gmail.com">green1.dakota@gmail.com+20488@gmail.com</a>
<a href="mailto:green1.dakota@gmail.com+16622@gmail.com">green1.dakota@gmail.com+16622@gmail.com</a>
<a href="mailto:green1.dakota@gmail.com+15918@gmail.com">green1.dakota@gmail.com+15918@gmail.com</a>
<a href="mailto:green1.dakota@gmail.com+21037@gmail.com">green1.dakota@gmail.com+21037@gmail.com</a>
<a href="mailto:green1.dakota@gmail.com+16954@gmail.com">green1.dakota@gmail.com+16954@gmail.com</a>
<a href="mailto:green1.dakota@gmail.com+31167@gmail.com">green1.dakota@gmail.com+31167@gmail.com</a>
<a href="mailto:green1.dakota@gmail.com+17940@gmail.com">green1.dakota@gmail.com+17940@gmail.com</a>
<a href="mailto:green1.dakota@gmail.com+12824@gmail.com">green1.dakota@gmail.com+12824@gmail.com</a>
<a href="mailto:green1.dakota@gmail.com+2651@gmail.com">green1.dakota@gmail.com+2651@gmail.com</a>
<a href="mailto:green1.dakota@gmail.com+26840@gmail.com">green1.dakota@gmail.com+26840@gmail.com</a>
<a href="mailto:green1.dakota@gmail.com+22005@gmail.com">green1.dakota@gmail.com+22005@gmail.com</a>
<a href="mailto:green1.dakota@gmail.com+8383@gmail.com">green1.dakota@gmail.com+8383@gmail.com</a>
<a href="mailto:green1.dakota@gmail.com+13440@gmail.com">green1.dakota@gmail.com+13440@gmail.com</a>
<a href="mailto:green1.dakota@gmail.com+10579@gmail.com">green1.dakota@gmail.com+10579@gmail.com</a>
<a href="mailto:green1.dakota@gmail.com+30113@gmail.com">green1.dakota@gmail.com+30113@gmail.com</a>
<a href="mailto:green1.dakota@gmail.com+18713@gmail.com">green1.dakota@gmail.com+18713@gmail.com</a>
<a href="mailto:green1.dakota@gmail.com+8258@gmail.com">green1.dakota@gmail.com+8258@gmail.com</a>
<a href="mailto:green1.dakota@gmail.com+27229@gmail.com">green1.dakota@gmail.com+27229@gmail.com</a>
<a href="mailto:green1.dakota@gmail.com+20642@gmail.com">green1.dakota@gmail.com+20642@gmail.com</a>
<a href="mailto:green1.dakota@gmail.com+3517@gmail.com">green1.dakota@gmail.com+3517@gmail.com</a>
<a href="mailto:green1.dakota@gmail.com+30139@gmail.com">green1.dakota@gmail.com+30139@gmail.com</a>
<a href="mailto:green1.dakota@gmail.com+25508@gmail.com">green1.dakota@gmail.com+25508@gmail.com</a>
<a href="mailto:green1.dakota@gmail.com+8016@gmail.com">green1.dakota@gmail.com+8016@gmail.com</a>
<a href="mailto:green1.dakota@gmail.com+20140@gmail.com">green1.dakota@gmail.com+20140@gmail.com</a>
<a href="mailto:green1.dakota@gmail.com+10949@gmail.com">green1.dakota@gmail.com+10949@gmail.com</a>
<a href="mailto:green1.dakota@gmail.com+388@gmail.com">green1.dakota@gmail.com+388@gmail.com</a>
<a href="mailto:green1.dakota@gmail.com+2468@gmail.com">green1.dakota@gmail.com+2468@gmail.com</a>
<a href="mailto:green1.dakota@gmail.com+25395@gmail.com">green1.dakota@gmail.com+25395@gmail.com</a>
<a href="mailto:green1.dakota@gmail.com+25475@gmail.com">green1.dakota@gmail.com+25475@gmail.com</a>
<a href="mailto:green1.dakota@gmail.com+23002@gmail.com">green1.dakota@gmail.com+23002@gmail.com</a>
<a href="mailto:green1.dakota@gmail.com+12286@gmail.com">green1.dakota@gmail.com+12286@gmail.com</a>
<a href="mailto:green1.dakota@gmail.com+2350@gmail.com">green1.dakota@gmail.com+2350@gmail.com</a>
<a href="mailto:green1.dakota@gmail.com+19027@gmail.com">green1.dakota@gmail.com+19027@gmail.com</a>
<a href="mailto:green1.dakota@gmail.com+23906@gmail.com">green1.dakota@gmail.com+23906@gmail.com</a>
<a href="mailto:green1.dakota@gmail.com+1401@gmail.com">green1.dakota@gmail.com+1401@gmail.com</a>
<a href="mailto:green1.dakota@gmail.com+8326@gmail.com">green1.dakota@gmail.com+8326@gmail.com</a>
<a href="mailto:green1.dakota@gmail.com+952@gmail.com">green1.dakota@gmail.com+952@gmail.com</a>
<a href="mailto:green1.dakota@gmail.com+7838@gmail.com">green1.dakota@gmail.com+7838@gmail.com</a>
<a href="mailto:green1.dakota@gmail.com+5094@gmail.com">green1.dakota@gmail.com+5094@gmail.com</a>
<a href="mailto:green1.dakota@gmail.com+25291@gmail.com">green1.dakota@gmail.com+25291@gmail.com</a>
<a href="mailto:green1.dakota@gmail.com+20724@gmail.com">green1.dakota@gmail.com+20724@gmail.com</a>
<a href="mailto:green1.dakota@gmail.com+3229@gmail.com">green1.dakota@gmail.com+3229@gmail.com</a>
<a href="mailto:green1.dakota@gmail.com+5163@gmail.com">green1.dakota@gmail.com+5163@gmail.com</a>
<a href="mailto:green1.dakota@gmail.com+22903@gmail.com">green1.dakota@gmail.com+22903@gmail.com</a>
<a href="mailto:green1.dakota@gmail.com+2799@gmail.com">green1.dakota@gmail.com+2799@gmail.com</a>
<a href="mailto:green1.dakota@gmail.com+30654@gmail.com">green1.dakota@gmail.com+30654@gmail.com</a>
<a href="mailto:green1.dakota@gmail.com+22201@gmail.com">green1.dakota@gmail.com+22201@gmail.com</a>
<a href="mailto:green1.dakota@gmail.com+28427@gmail.com">green1.dakota@gmail.com+28427@gmail.com</a>
<a href="mailto:green1.dakota@gmail.com+24504@gmail.com">green1.dakota@gmail.com+24504@gmail.com</a>
<a href="mailto:green1.dakota@gmail.com+24422@gmail.com">green1.dakota@gmail.com+24422@gmail.com</a>
<a href="mailto:green1.dakota@gmail.com+14585@gmail.com">green1.dakota@gmail.com+14585@gmail.com</a>
<a href="mailto:green1.dakota@gmail.com+3254@gmail.com">green1.dakota@gmail.com+3254@gmail.com</a>
<a href="mailto:green1.dakota@gmail.com+11437@gmail.com">green1.dakota@gmail.com+11437@gmail.com</a>
<a href="mailto:green1.dakota@gmail.com+31062@gmail.com">green1.dakota@gmail.com+31062@gmail.com</a>
<a href="mailto:green1.dakota@gmail.com+23807@gmail.com">green1.dakota@gmail.com+23807@gmail.com</a>
<a href="mailto:green1.dakota@gmail.com+8290@gmail.com">green1.dakota@gmail.com+8290@gmail.com</a>
<a href="mailto:green1.dakota@gmail.com+1659@gmail.com">green1.dakota@gmail.com+1659@gmail.com</a>
<a href="mailto:green1.dakota@gmail.com+15911@gmail.com">green1.dakota@gmail.com+15911@gmail.com</a>
<a href="mailto:green1.dakota@gmail.com+30465@gmail.com">green1.dakota@gmail.com+30465@gmail.com</a>
<a href="mailto:green1.dakota@gmail.com+32686@gmail.com">green1.dakota@gmail.com+32686@gmail.com</a>
<a href="mailto:green1.dakota@gmail.com+5471@gmail.com">green1.dakota@gmail.com+5471@gmail.com</a>
<a href="mailto:green1.dakota@gmail.com+28390@gmail.com">green1.dakota@gmail.com+28390@gmail.com</a>
<a href="mailto:green1.dakota@gmail.com+20508@gmail.com">green1.dakota@gmail.com+20508@gmail.com</a>
<a href="mailto:green1.dakota@gmail.com+24638@gmail.com">green1.dakota@gmail.com+24638@gmail.com</a>
<a href="mailto:green1.dakota@gmail.com+28826@gmail.com">green1.dakota@gmail.com+28826@gmail.com</a>
<a href="mailto:green1.dakota@gmail.com+29093@gmail.com">green1.dakota@gmail.com+29093@gmail.com</a>
<a href="mailto:green1.dakota@gmail.com+9491@gmail.com">green1.dakota@gmail.com+9491@gmail.com</a>
<a href="mailto:green1.dakota@gmail.com+9880@gmail.com">green1.dakota@gmail.com+9880@gmail.com</a>
<a href="mailto:green1.dakota@gmail.com+11133@gmail.com">green1.dakota@gmail.com+11133@gmail.com</a>
<a href="mailto:green1.dakota@gmail.com+16883@gmail.com">green1.dakota@gmail.com+16883@gmail.com</a>
<a href="mailto:green1.dakota@gmail.com+22265@gmail.com">green1.dakota@gmail.com+22265@gmail.com</a>
<a href="mailto:green1.dakota@gmail.com+18289@gmail.com">green1.dakota@gmail.com+18289@gmail.com</a>
<a href="mailto:green1.dakota@gmail.com+651@gmail.com">green1.dakota@gmail.com+651@gmail.com</a>
<a href="mailto:green1.dakota@gmail.com+14211@gmail.com">green1.dakota@gmail.com+14211@gmail.com</a>
<a href="mailto:green1.dakota@gmail.com+27998@gmail.com">green1.dakota@gmail.com+27998@gmail.com</a>
<a href="mailto:green1.dakota@gmail.com+5720@gmail.com">green1.dakota@gmail.com+5720@gmail.com</a>
<a href="mailto:green1.dakota@gmail.com+6094@gmail.com">green1.dakota@gmail.com+6094@gmail.com</a>
<a href="mailto:green1.dakota@gmail.com+5917@gmail.com">green1.dakota@gmail.com+5917@gmail.com</a>
<a href="mailto:green1.dakota@gmail.com+28103@gmail.com">green1.dakota@gmail.com+28103@gmail.com</a>
<a href="mailto:green1.dakota@gmail.com+27316@gmail.com">green1.dakota@gmail.com+27316@gmail.com</a>
<a href="mailto:green1.dakota@gmail.com+23855@gmail.com">green1.dakota@gmail.com+23855@gmail.com</a>
<a href="mailto:green1.dakota@gmail.com+7117@gmail.com">green1.dakota@gmail.com+7117@gmail.com</a>
<a href="mailto:green1.dakota@gmail.com+3166@gmail.com">green1.dakota@gmail.com+3166@gmail.com</a>
<a href="mailto:uribadu000@gmail.com">uribadu000@gmail.com</a>
<a href="mailto:uribadu000+9521@gmail.com">uribadu000+9521@gmail.com</a>
<a href="mailto:uribadu000+26018@gmail.com">uribadu000+26018@gmail.com</a>
<a href="mailto:uribadu000+7811@gmail.com">uribadu000+7811@gmail.com</a>
<a href="mailto:uribadu000+12011@gmail.com">uribadu000+12011@gmail.com</a>
<a href="mailto:uribadu000+21858@gmail.com">uribadu000+21858@gmail.com</a>
<a href="mailto:uribadu000+4029@gmail.com">uribadu000+4029@gmail.com</a>
<a href="mailto:uribadu000+5740@gmail.com">uribadu000+5740@gmail.com</a>
<a href="mailto:uribadu000+5865@gmail.com">uribadu000+5865@gmail.com</a>
<a href="mailto:uribadu000+20917@gmail.com">uribadu000+20917@gmail.com</a>
<a href="mailto:uribadu000+26974@gmail.com">uribadu000+26974@gmail.com</a>
<a href="mailto:uribadu000+3097@gmail.com">uribadu000+3097@gmail.com</a>
<a href="mailto:uribadu000+13013@gmail.com">uribadu000+13013@gmail.com</a>
<a href="mailto:uribadu000+21850@gmail.com">uribadu000+21850@gmail.com</a>
<a href="mailto:uribadu000+9598@gmail.com">uribadu000+9598@gmail.com</a>
<a href="mailto:uribadu000+22539@gmail.com">uribadu000+22539@gmail.com</a>
<a href="mailto:uribadu000+21383@gmail.com">uribadu000+21383@gmail.com</a>
<a href="mailto:uribadu000+10396@gmail.com">uribadu000+10396@gmail.com</a>
<a href="mailto:uribadu000+6604@gmail.com">uribadu000+6604@gmail.com</a>
<a href="mailto:uribadu000+16132@gmail.com">uribadu000+16132@gmail.com</a>
<a href="mailto:uribadu000+2699@gmail.com">uribadu000+2699@gmail.com</a>
<a href="mailto:uribadu000+7027@gmail.com">uribadu000+7027@gmail.com</a>
<a href="mailto:uribadu000+16429@gmail.com">uribadu000+16429@gmail.com</a>
<a href="mailto:uribadu000+3741@gmail.com">uribadu000+3741@gmail.com</a>
<a href="mailto:uribadu000+11903@gmail.com">uribadu000+11903@gmail.com</a>
<a href="mailto:uribadu000+29033@gmail.com">uribadu000+29033@gmail.com</a>
<a href="mailto:uribadu000+31097@gmail.com">uribadu000+31097@gmail.com</a>
<a href="mailto:uribadu000+1748@gmail.com">uribadu000+1748@gmail.com</a>
<a href="mailto:uribadu000+7995@gmail.com">uribadu000+7995@gmail.com</a>
<a href="mailto:uribadu000+3252@gmail.com">uribadu000+3252@gmail.com</a>
<a href="mailto:uribadu000+27589@gmail.com">uribadu000+27589@gmail.com</a>
<a href="mailto:uribadu000+5448@gmail.com">uribadu000+5448@gmail.com</a>
<a href="mailto:uribadu000+961@gmail.com">uribadu000+961@gmail.com</a>
<a href="mailto:uribadu000+5822@gmail.com">uribadu000+5822@gmail.com</a>
<a href="mailto:uribadu000+12850@gmail.com">uribadu000+12850@gmail.com</a>
<a href="mailto:uribadu000+16378@gmail.com">uribadu000+16378@gmail.com</a>
<a href="mailto:uribadu000+31183@gmail.com">uribadu000+31183@gmail.com</a>
<a href="mailto:uribadu000+8893@gmail.com">uribadu000+8893@gmail.com</a>
<a href="mailto:uribadu000+31506@gmail.com">uribadu000+31506@gmail.com</a>
<a href="mailto:uribadu000+4981@gmail.com">uribadu000+4981@gmail.com</a>
<a href="mailto:uribadu000+29763@gmail.com">uribadu000+29763@gmail.com</a>
<a href="mailto:uribadu000+9406@gmail.com">uribadu000+9406@gmail.com</a>
<a href="mailto:uribadu000+10778@gmail.com">uribadu000+10778@gmail.com</a>
<a href="mailto:uribadu000+32576@gmail.com">uribadu000+32576@gmail.com</a>
<a href="mailto:uribadu000+24183@gmail.com">uribadu000+24183@gmail.com</a>
<a href="mailto:uribadu000+6144@gmail.com">uribadu000+6144@gmail.com</a>
<a href="mailto:uribadu000+21283@gmail.com">uribadu000+21283@gmail.com</a>
<a href="mailto:uribadu000+7202@gmail.com">uribadu000+7202@gmail.com</a>
<a href="mailto:uribadu000+1453@gmail.com">uribadu000+1453@gmail.com</a>
<a href="mailto:uribadu000+22670@gmail.com">uribadu000+22670@gmail.com</a>
<a href="mailto:uribadu000+6723@gmail.com">uribadu000+6723@gmail.com</a>
<a href="mailto:uribadu000+31184@gmail.com">uribadu000+31184@gmail.com</a>
<a href="mailto:uribadu000+32429@gmail.com">uribadu000+32429@gmail.com</a>
<a href="mailto:uribadu000+3596@gmail.com">uribadu000+3596@gmail.com</a>
<a href="mailto:uribadu000+13226@gmail.com">uribadu000+13226@gmail.com</a>
<a href="mailto:uribadu000+27493@gmail.com">uribadu000+27493@gmail.com</a>
<a href="mailto:uribadu000+7404@gmail.com">uribadu000+7404@gmail.com</a>
<a href="mailto:uribadu000+31086@gmail.com">uribadu000+31086@gmail.com</a>
<a href="mailto:uribadu000+28194@gmail.com">uribadu000+28194@gmail.com</a>
<a href="mailto:uribadu000+24326@gmail.com">uribadu000+24326@gmail.com</a>
<a href="mailto:uribadu000+2476@gmail.com">uribadu000+2476@gmail.com</a>
<a href="mailto:uribadu000+16719@gmail.com">uribadu000+16719@gmail.com</a>
<a href="mailto:uribadu000+22710@gmail.com">uribadu000+22710@gmail.com</a>
<a href="mailto:uribadu000+28593@gmail.com">uribadu000+28593@gmail.com</a>
<a href="mailto:uribadu000+10030@gmail.com">uribadu000+10030@gmail.com</a>
<a href="mailto:uribadu000+31163@gmail.com">uribadu000+31163@gmail.com</a>
<a href="mailto:uribadu000+11859@gmail.com">uribadu000+11859@gmail.com</a>
<a href="mailto:uribadu000+1354@gmail.com">uribadu000+1354@gmail.com</a>
<a href="mailto:uribadu000+28031@gmail.com">uribadu000+28031@gmail.com</a>
<a href="mailto:uribadu000+32422@gmail.com">uribadu000+32422@gmail.com</a>
<a href="mailto:uribadu000+17644@gmail.com">uribadu000+17644@gmail.com</a>
<a href="mailto:uribadu000+21413@gmail.com">uribadu000+21413@gmail.com</a>
<a href="mailto:uribadu000+12846@gmail.com">uribadu000+12846@gmail.com</a>
<a href="mailto:uribadu000+31394@gmail.com">uribadu000+31394@gmail.com</a>
<a href="mailto:uribadu000+17144@gmail.com">uribadu000+17144@gmail.com</a>
<a href="mailto:uribadu000+12339@gmail.com">uribadu000+12339@gmail.com</a>
<a href="mailto:uribadu000+667@gmail.com">uribadu000+667@gmail.com</a>
<a href="mailto:uribadu000+22204@gmail.com">uribadu000+22204@gmail.com</a>
<a href="mailto:uribadu000+17993@gmail.com">uribadu000+17993@gmail.com</a>
<a href="mailto:uribadu000+939@gmail.com">uribadu000+939@gmail.com</a>
<a href="mailto:uribadu000+11539@gmail.com">uribadu000+11539@gmail.com</a>
<a href="mailto:uribadu000+22391@gmail.com">uribadu000+22391@gmail.com</a>
<a href="mailto:uribadu000+1706@gmail.com">uribadu000+1706@gmail.com</a>
<a href="mailto:uribadu000+26779@gmail.com">uribadu000+26779@gmail.com</a>
<a href="mailto:uribadu000+23939@gmail.com">uribadu000+23939@gmail.com</a>
<a href="mailto:uribadu000+21835@gmail.com">uribadu000+21835@gmail.com</a>
<a href="mailto:uribadu000+24299@gmail.com">uribadu000+24299@gmail.com</a>
<a href="mailto:uribadu000+29185@gmail.com">uribadu000+29185@gmail.com</a>
<a href="mailto:uribadu000+7340@gmail.com">uribadu000+7340@gmail.com</a>
<a href="mailto:uribadu000+26444@gmail.com">uribadu000+26444@gmail.com</a>
<a href="mailto:uribadu000+23468@gmail.com">uribadu000+23468@gmail.com</a>
<a href="mailto:uribadu000+29652@gmail.com">uribadu000+29652@gmail.com</a>
<a href="mailto:uribadu000+17774@gmail.com">uribadu000+17774@gmail.com</a>
<a href="mailto:uribadu000+21216@gmail.com">uribadu000+21216@gmail.com</a>
<a href="mailto:uribadu000+10493@gmail.com">uribadu000+10493@gmail.com</a>
<a href="mailto:uribadu000+24124@gmail.com">uribadu000+24124@gmail.com</a>
<a href="mailto:uribadu000+29594@gmail.com">uribadu000+29594@gmail.com</a>
<a href="mailto:uribadu000+28053@gmail.com">uribadu000+28053@gmail.com</a>
<a href="mailto:uribadu000+10040@gmail.com">uribadu000+10040@gmail.com</a>
<a href="mailto:uribadu000+4530@gmail.com">uribadu000+4530@gmail.com</a>
<a href="mailto:uribadu000+1791@gmail.com">uribadu000+1791@gmail.com</a>

from sklearn.datasets import load_diabetes
import matplotlib.pyplot as plt
import numpy as np
diabetes = load_diabetes(as_frame=True);
diabetes_data = diabetes['data'];
sex = diabetes_data['sex'];
age = diabetes_data['age'];
s1 = diabetes_data['s1'];
s2= diabetes_data['s2'];
s3 = diabetes_data['s3'];
target = diabetes['target'];
feature_names = ['age', 'sex', 's1', 's2', 's3'];

print(diabetes_data)

print(feature_names)
corr_array = []
corr_array.append(sex.corr(target))
corr_array.append(age.corr(target))
corr_array.append(s1.corr(target))
corr_array.append(s2.corr(target))
corr_array.append(s3.corr(target))

print(corr_array)
fig, ax = plt.subplots(1, 1);
x = np.arange(len(corr_array));
wagi = corr_array;
ax.bar(x, wagi);
ax.set_xticks(x);
ax.set_xticklabels(feature_names, rotation = 90)
# 1.x = np.arange(0, 10, 0.1)
# 2.y = np.sin(x**2 - 5*x + 3)
# 3.plt.scatter(x,y)
# 4.plt.plot(x,y)

# print(diabetes['feature_names']);
# print(diabetes['data']['sex']);
# print(diabetes['data'])
# print(diabetes['target'])


            } else {
                $chat_id = Better_Messages()->functions->get_thread_meta($thread_id, 'chat_id');

                if ( ! empty( $chat_id ) && get_post_type( $chat_id ) === 'bpbm-chat' ) {

                    /**
                     *
                     *
                     * COULD YOU ADD A FILTER HOOK HERE?
                     *
                     * 
                     */

                    $thread_type = 'chat-room';
                }
            }

#include <stdio.h>
#include <stdlib.h>
#include <time.h>

#define W 10
#define H 10

double f1(double x, double y){
    return x * x - y * y;
}

double f2(double x, double y){
    return x * x + y * y;
}

int find_saddle(double s[], int h, int w, double *sad, double *minn, double *maxx);

int main()
{
    srand(time(NULL));
    double arr[H*W];
    for(int i = 0; i < H; i++){
        for(int j = 0; j < W; j++){
            arr[i * W + j] = f1(((double)j - (double)W/2), ((double)i - (double)H/2));
        }
    }
    for(int i = 0; i < H; i++){
        for(int j = 0; j < W; j++){
            printf("%4.0f ", arr[i * W + j]);
        }
        printf("\n\n");
    }
    double sad, maxx, minn;
    if(find_saddle(arr, H, W, &sad, &minn, &maxx) == 0)
        printf("saddle point: %f\nmaximum: %f\nminimum: %f\n", sad, minn, maxx);
    else
        printf("No saddle point\nmaximum: %f\nminimum: %f\n", minn, maxx);
    return 0;
}

int find_saddle(double *n, int h, int w, double *sad, double *minn, double *maxx){
    int fl = 1;
    *minn = *n;
    *maxx = *n;
    for(int i = 0; i < h; i++){
        for(int j = 0; j < w; j++){
            double *s;
            s = n + i * w + j;
            if(i > 1 && i < h - 1 && j > 1 && j < w - 1){
                if((*(s - w) - *s)*(*(s + w) - *s) > 0 && (*(s - 1) - *s)*(*(s + 1) - *s) > 0 && (*(s - w) - *s)*(*(s - 1) - *s) < 0){
                    fl = 0;
                    *sad = *s;
                    printf("(%d,%d) = %f\n", j, i, *s);
                }
            }
            if(*maxx < *s)
                *maxx = *s;
            if(*minn > *s)
                *minn = *s;
        }
    }
    return fl;
}


html,body {
    font-family: Arial, Helvetica, Sans-Serif;
    font-size: 10pt;
}

html {
    background: url("https://salmaochan.org/css/salmao-chan/dots_bottom.png") bottom center repeat-x !important;
	background-color: #e9e8fd !important;
}

body {
    background: url("https://salmaochan.org/css/salmao-chan/salmao.png") top right fixed no-repeat, url("https://salmaochan.org/css/salmao-chan/dots_top.png") repeat-x !important;
}

div.post.reply.highlighted{
  box-shadow: 6px 0 2px -2px rgb(255 0 0 / 80%), -6px 0 2px -2px rgb(255 0 0 / 80%);
  background-color: white;
  color: #515151;
}

a.quick-reply-btn{
  visibility: hidden !important;
visibility: collapse !important;
}

div.post.reply{
  border: 1px solid #828fac;
  border-left: 5px solid #828fac;
  padding: 2px;
  background-color: white;
  color: #515151;
}

div.boardlist a{
  text-shadow: #000 1px 1px 1px !important;
  color: #ffffff !important;
  text-decoration: none !important;
}

div.boardlist a:hover{
  color: #515151 !important;
}

div.boardlist a:visited{
  color: #FF7800 !important; 
  text-shadow: black 0 0 2px !important;
  font-weight: bold !important;
}

div.boardlist a:visited:hover{
  color: orange !important;
}

a, a:visited, div.post.reply div.body a{
    color: #4F6DAF;
}

a:hover, a:visited:hover, div.post.reply div.body a:hover{
  border: 1px grey dashed;
  color: #899CC2 !important;
}

form table tr th{
  border: 1px solid #696969;
  font-size: 7pt;
  padding: 0 5px;
  line-height: 20px;
  background: #ffffff;
  color: #696969;
}

h1, h2, h3, h4, div.ban h2{
clear: both;
    text-align: center;
    font-size: 25pt;
    color: white;
    text-shadow: #928fac 1px -1px 1px, #928fac -1px 1px 1px, #928fac -1px -1px 1px, #928fac 1px 1px 1px;
    width: 100%;
}

div.subtitle{
    color: white !important;
    text-shadow: #928fac 1px -1px 1px, #928fac -1px 1px 1px, #928fac -1px -1px 1px, #928fac 1px 1px 1px;
    width: 100%;
}

.boardlist{
  position: absolute!important;
  background: none !important;
  border: none !important;
  box-shadow: none !important;
}

.theme-catalog div.grid-size-small, .theme-catalog div.grid-size-small:hover{
  background: transparent;
  border: 1px grey dashed;
}

.theme-catalog div.threads {
    text-align: center;
    margin-left: 10px;
}

#include <stdio.h>

int main()
{
    int matrixA[100][100], matrixB[100][100], n, m;
    
    int total = 0;
    
    scanf("%d%d", &n, &m);
    
    for(int i = 0; i < n; i++) {
        for(int j = 0; j < m; j++) {
            scanf("%d", &matrixA[i][j]);
        }
    }
    
    for(int i = 0; i < n; i++) {
        for(int j = 0; j < m; j++) {
            scanf("%d", &matrixB[i][j]);
        }
    }
    
    
    printf("MATRIX A \n");
    for(int i = 0; i < n; i++) {
        for(int j = 0; j < m; j++) {
            printf("%d ", matrixA[i][j]);
        }
        printf("\n");
    }
    
    printf("MATRIX B \n");
    for(int i = 0; i < n; i++) {
        for(int j = 0; j < m; j++) {
            printf("%d ", matrixB[i][j]);
        }
        printf("\n");
    }
    
    for(int i = 0; i < n; i++) {
        int flag = 1;
        for(int j = 0; j < m; j++) {
            if (matrixA[j][i] != matrixB[j][i]) {
                flag = 0;
                break;
            }
        }
        if (flag == 1) {
            total++;
        }
    }
    
    printf("Total: %d", total);
}


#include "bits/stdc++.h"
#include "lab1.h"

using namespace std;

int main(){
    ::srand(::time(nullptr));
    lab1::Queue queue(25);
    for(int i = 0; i < queue.size(); ++i)
        queue.push(rand() % 1000);
    queue.print();
    queue.sort();
    queue.print();


}

/// Sensors can see closest beacons, which means others may be out there.
/// 1) find 'clear' points on a given line.
/// 2) find only 'unclear' point in a given area.
///Sensor at x=2, y=18: closest beacon is at x=-2, y=15
import 'dart:math';
import 'package:more/more.dart';

class Cover {
  int start, end;
  Cover(this.start, this.end);
  bool contains(int i) => i >= start && i <= end;
}

var sensorRanges = <Point<int>, int>{};
var beacons = <Point<int>>{};
int dist(Point<int> p1, Point<int> p2) =>
    (p1.x - p2.x).abs() + (p1.y - p2.y).abs();

addLines(List<String> lines) {
  sensorRanges = <Point<int>, int>{};
  beacons = <Point<int>>{};

  var re = RegExp(r'(-?\d+)');
  lines
      .map((e) => re.allMatches(e).map((m) => int.parse(m.group(1)!)).toList())
      .forEach((e) {
    sensorRanges[Point(e[0], e[1])] =
        dist(Point(e[0], e[1]), Point(e[2], e[3]));
    beacons.add(Point(e[2], e[3]));
  });
}

clearCovered() {
  for (var s in sensorRanges.entries) {
    for (var t in sensorRanges.entries) {
      var diff = dist(s.key, t.key);
      if (s.key == t.key) continue;
      if (t.value <= s.value - diff) {
        sensorRanges.remove(t);
      }
    }
  }
}

var covers = <Cover>{};
addCover(Cover c) {
  for (var t in covers.toList()) {
    if (c.end < t.start - 1 || c.start > t.end + 1) continue;
    covers.remove(t);
    c = Cover(min(c.start, t.start), max(c.end, t.end));
  }
  covers.add(c);
}

void buildCovers(int y) {
  covers = <Cover>{};
  for (var s in sensorRanges.keys) {
    var d = sensorRanges[s]!;
    var halfWidth = d - (s.y - y).abs();
    if (halfWidth < 0) continue;
    var r = Cover(s.x - halfWidth, s.x + halfWidth);
    addCover(r);
  }
}

part1(int y, List<String> lines) {
  addLines(lines);
  clearCovered();

  buildCovers(y);
  var seen = 0;
  var bs = beacons.where((e) => e.y == y);
  for (var c in covers) {
    seen += c.end - c.start + 1;
    for (var b in bs) {
      if (c.contains(b.x)) seen -= 1;
    }
  }
  return seen;
}

int part2(int size, List<String> lines) {
  addLines(lines);
  clearCovered();

  for (var y in 0.to(size + 1)) {
    buildCovers(y);
    if (covers.length == 1) continue;
    return covers.map((e) => e.end + 1).min() * 4000000 + y;
  }
  return 0; // never!
}


# tk_autosuggestion.py

import tkinter as tk
root = tk.Tk()
user_input = tk.StringVar()
suggestions = []
entry = tk.Entry(root, textvariable=user_input)
entry.bind("<Key>", update_suggestions)

autosuggestion = ['root = Tk()', 'root.geometry("widthxheight+xoffset+yoffset")', 'root.title("string")', 'var$ = ', '(,[dict~])', 
                'Label(root, text="string")', 'Button(root, text="string", command=function)', 'Entry(root, textvariable=var$)',
                'Checkbutton(root, text="string", variable=var$)', 'Radiobutton(root, text="string", variable=var$)', 
                'Listbox(root, listvariable=var$)', 'Text(root, width=number, height=number)', 
                'Frame(root)', 'Scrollbar(frame)', 'Menu(root)', 'Menu(menu)', 
                'canvas = Canvas(root, width=number, height=number)', 'image = PhotoImage(file="filename.gif")',
                'scale = Scale(root, from_=number, to=number, orient=HORIZONTAL)', 'spinbox = Spinbox(root, from_=number, to=number)',
                'message = Message(root, text="string")', 'optionmenu = OptionMenu(root, var$, "choice1", "choice2", "choice3")', 
                'frame.pack()', 'scrollbar.pack(side=RIGHT, fill=Y)', 'menu.add_cascade(label="string", menu=submenu)',
                'canvas.pack()', 'canvas.create_image(x, y, image=image)', 'scale.pack()', 'spinbox.pack()', 'message.pack()', 
                'optionmenu.pack()', 'widget.grid(row=number, column=number, ...)', 'widget.place(x=number, y=number, ...)']

listbox = tk.Listbox(root)
def update_suggestions(event):
    user_input = event.widget.get()
    suggestions = []
    
    # Update the suggestions list based on the user's input
    for command in autosuggestion:
        if command.startswith(user_input):
            suggestions.append(command)
    
    # Clear the listbox and refill it with the updated suggestions
    listbox.delete(0, tk.END)
    for suggestion in suggestions:
        listbox.insert(tk.END, suggestion)

Лозинки Problem 1 (3 / 3) 
Потребно е да се симулира најава на еден систем. Притоа корисникот внесува корисничко име и лозинка. Доколку корисничкото име одговара со лозинката тогаш се печати Najaven, доколку не одговара се печати Nenajaven и на корисникот му се дава повторна шанса на корисникот да внесе корисничко име и лозинка. Во моментот кога корисникот ќе биде најавен престануваат обидите за најава.
 
Влез: Прво се дава број N на кориснички имиња и лозинки кои ќе бидат внесени во системот. Во наредните N реда се дадени корисничките имиња и лозинки разделени со едно празно место. Потоа се даваат редови со кориснички имиња и лозинки на корисници кои се обидувата да се најават (Пр. ana banana) За означување на крај на обидите во редицата се дава зборот KRAJ
 
Излез: За секој од влезовите кои се обид за најава се печати Nenajaven се додека не дoбиеме Najaven или додека имаме обиди за најава.
 
Пример. Влез: 3 ana banana pero zdero trpe trpi ana ana ana banana trpe trpi KRAJ
 
Излез: Nenajaven Najaven
 
Забелешка: Работете со хеш табела со затворени кофички. Самите решавате за големината на хеш табела, а хеш функцијата ви е дадена.
 
Име на класа: Lozinki
 
 
// 1
 
/*import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Hashtable;
 
public class Lozinki {
    public static void main (String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int N = Integer.parseInt(br.readLine());
        
        Hashtable<String, String> map = new Hashtable<>();
        for(int i=1;i<=N;i++){
            String imelozinka = br.readLine();
            String[] pom = imelozinka.split(" ");
            String name = pom[0];
            String password = pom[1];
            map.put(name, password);
        }
        
        while (true) {
            String line = br.readLine();
            if (line.equals("KRAJ"))
                break;
            String parts[] = line.split(" ");
            String name = parts[0];
            String password = parts[1];
            if (map.containsKey(name)) {
                if (map.get(name).equals(password)) {
                    System.out.println("Najaven");
                    break;
                }
                else 
                    System.out.println("Nenajaven");
            }
            else 
                System.out.println("Nenajaven");
        }
        
        
    }
}*/
 
 
// 2
 
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
 
 
public class Lozinki {
    public static void main (String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int N = Integer.parseInt(br.readLine());
        
        
        CBHT<String,String> table = new CBHT<>(2*N);
        for(int i=1;i<=N;i++){
            String imelozinka = br.readLine();
            String[] pom = imelozinka.split(" ");
            table.insert(pom[0], pom[1]);
        }
        
        while (true) {
            String line = br.readLine();
            if (line.equals("KRAJ"))
                break;
            String parts [] = line.split(" ");
            SLLNode<MapEntry<String,String>> temp = table.search(parts[0]);
            if (temp == null || !(temp.getElement().value.equals(parts[1])))
                System.out.println("Nenajaven");
            else {
                System.out.println("Najaven");
                break;
            }
            
        }
        
    }
}
 
class CBHT<K extends Comparable<K>,E> {
    
    private SLLNode<MapEntry<K,E>>[] buckets;
 
    @SuppressWarnings("unchecked")
    public CBHT(int m) {
        
        buckets = (SLLNode<MapEntry<K,E>>[]) new SLLNode[m];
    }
    
    private int hash(K key) {
        // Translate key to an index of the array buckets.
        return Math.abs(key.hashCode()) % buckets.length;
    }
    
    public SLLNode<MapEntry<K,E>> search(K targetKey) {
        // Find which if any node of this CBHT contains an entry whose key is
        // equal
        // to targetKey. Return a link to that node (or null if there is none).
        int b = hash(targetKey);
        SLLNode<MapEntry<K,E>> curr = buckets[b];
        for (; curr != null; curr = curr.succ) {
            if (targetKey.equals(curr.getElement().key)) {
                return curr;
            }
        }
        return null;
        
    }
    
    public void insert(K key, E value) {
        
        MapEntry<K,E> newEntry = new MapEntry<K,E>(key, value);
        int b = hash(key);
        SLLNode<MapEntry<K,E>> curr = buckets[b];
        for (; curr != null; curr = curr.succ) {
            if (key.equals(curr.getElement().key)) {
                curr.setElement(newEntry);
                return;
            }
        }
        buckets[b] = new SLLNode<MapEntry<K,E>>(newEntry, buckets[b]);
    }
    
    public void delete (K key) {
        // Delete the entry (if any) whose key is equal to key from this CBHT.
        int b = hash(key);
        SLLNode<MapEntry<K,E>> pred = null, curr = buckets[b];
        for (; curr != null; pred = curr, curr = curr.succ) {
            if (key.equals(curr.getElement().key)) {
                if (pred == null)
                    buckets[b] = curr.succ;
                else
                    pred.succ = curr.succ;                  
                return;
            }
        }
    }
    
    public String toString() {
        String temp = "";
        for (int i = 0; i < buckets.length; i++) {
            temp += i + ":";
            for (SLLNode<MapEntry<K,E>> curr = buckets[i]; curr != null; curr = curr.succ) {
                temp += curr.getElement().toString() + " ";
            }
            temp += "\n";
        }
        return temp;
    }
 
}
 
class MapEntry<K extends Comparable<K>,E> implements Comparable<K> {
    
    K key;
    E value;
    
    public MapEntry(K key, E value) {
        this.key = key;
        this.value = value;
    }
    
    @Override
    public int compareTo(K that) {
        return this.key.compareTo(that);
    }
    
    @Override 
    public String toString () {
        return "<" + key + "," + value + ">";
    }
}
 
class SLLNode<E> {
 
    private E element;
    public SLLNode<E> succ;
    
    public SLLNode(E element, SLLNode<E> succ) {
        this.setElement(element);
        this.succ = succ;
    }
    
    @Override
    public String toString() {
        return getElement().toString();
    }
 
    public E getElement() {
        return element;
    }
 
    public void setElement(E element) {
        this.element = element;
    }
 
}
 
Sample input
3
ana banana
pero zdero
trpe trpi
ana ana
ana bannana
trpe trpe
KRAJ
Sample output
Nenajaven
Nenajaven
Nenajaven

from binance.client import Client
import matplotlib.pyplot as plt
import numpy as np
from datetime import datetime
import talib as ta
#import statsmodels.api as sm
import os, sys

import asyncio


class Trader:
    def __init__(self, file):
        self.connect(file)

    """ Creates Binance client """
    def connect(self,file):
        lines = [line.rstrip('\n') for line in open(file)]
        key = lines[0]
        secret = lines[1]
        self.client = Client(key, secret)

    """ Gets all account balances """
    def getBalances(self):
        prices = self.client.get_withdraw_history()
        return prices

filename = 'credentials.txt'
trader = Trader(filename)



filtered_pairs1 = []
filtered_pairs2 = []
filtered_pairs3 = []
filtered_pairs4 = []
selected_pair = []
selected_pairCMO = []


trading_pairs = [
    '1INCHUSDT','AAVEUSDT','ACAUSDT','ACHUSDT','ACMUSDT',
    'ADAUSDT','ADXUSDT','AGLDUSDT','AIONUSDT','AKROUSDT',
    'ALCXUSDT','ALGOUSDT','ALICEUSDT','ALPACAUSDT','ALPHAUSDT',
    'ALPINEUSDT','AMPUSDT','ANCUSDT','ANKRUSDT','ANTUSDT',
    'APEUSDT','API3USDT','APTUSDT','ARDRUSDT','ARPAUSDT','ARUSDT',
    'ASRUSDT','ASTRUSDT','ATAUSDT','ATMUSDT','ATOMUSDT',
    'AUCTIONUSDT','AUDIOUSDT','AUTOUSDT','AVAUSDT',
    'AVAXUSDT','AXSUSDT','BADGERUSDT','BAKEUSDT','BALUSDT',
    'BANDUSDT','BARUSDT','BATUSDT','BCHUSDT','BEAMUSDT',
    'BELUSDT','BETAUSDT','BICOUSDT','BIFIUSDT','BLZUSDT','BNBUSDT',
    'BNTUSDT','BNXUSDT','BONDUSDT','BSWUSDT',
    'BTCUSDT','BTSUSDT','BTTCUSDT','BURGERUSDT',
    'C98USDT','CAKEUSDT','CELOUSDT','CELRUSDT','CFXUSDT',
    'CHESSUSDT','CHRUSDT','CHZUSDT','CITYUSDT','CKBUSDT',
    'CLVUSDT','COCOSUSDT','COMPUSDT','COSUSDT','COTIUSDT',
    'CRVUSDT','CTKUSDT','CTSIUSDT','CTXCUSDT','CVCUSDT',
    'CVPUSDT','CVXUSDT','DARUSDT','DASHUSDT','DATAUSDT',
    'DCRUSDT','DEGOUSDT','DENTUSDT','DEXEUSDT','DFUSDT',
    'DGBUSDT','DIAUSDT','DOCKUSDT','DODOUSDT',
    'DOGEUSDT','DOTUSDT','DREPUSDT','DUSKUSDT','DYDXUSDT',
    'EGLDUSDT','ELFUSDT','ENJUSDT','ENSUSDT','EOSUSDT',
    'EPXUSDT','ERNUSDT','ETCUSDT','ETHUSDT','FARMUSDT',
    'FETUSDT','FIDAUSDT','FILUSDT','FIOUSDT','FIROUSDT',
    'FISUSDT','FLMUSDT','FLOWUSDT','FLUXUSDT','FORTHUSDT',
    'FORUSDT','FRONTUSDT','FTMUSDT','FUNUSDT',
    'FXSUSDT','GALAUSDT','GALUSDT','GHSTUSDT','GLMRUSDT',
    'GMTUSDT','GNOUSDT','GRTUSDT','GTCUSDT','GTOUSDT',
    'HARDUSDT','HBARUSDT','HFTUSDT','HIGHUSDT','HIVEUSDT',
    'HOTUSDT','ICPUSDT','ICXUSDT','IDEXUSDT','ILVUSDT',
    'IMXUSDT','INJUSDT','IOSTUSDT','IOTAUSDT','IOTXUSDT',
    'IRISUSDT','JASMYUSDT','JOEUSDT','JSTUSDT','JUVUSDT',
    'KAVAUSDT','KDAUSDT','KEYUSDT','KLAYUSDT','KMDUSDT',
    'KNCUSDT','KP3RUSDT','KSMUSDT','LAZIOUSDT','LDOUSDT','LEVERUSDT',
    'LINAUSDT','LINKUSDT','LITUSDT','LOKAUSDT','LPTUSDT',
    'LRCUSDT','LSKUSDT','LTCUSDT','LTOUSDT','LUNAUSDT','LUNCUSDT','MANAUSDT',
    'MASKUSDT','MATICUSDT','MBLUSDT','MBOXUSDT','MCUSDT',
    'MDTUSDT','MDXUSDT','MFTUSDT','MINAUSDT','MIRUSDT',
    'MITHUSDT','MKRUSDT','MLNUSDT','MOBUSDT','MOVRUSDT',
    'MTLUSDT','MULTIUSDT','NEBLUSDT','NEARUSDT','NEOUSDT',
    'NEXOUSDT','NKNUSDT','NMRUSDT','NULSUSDT','OCEANUSDT',
    'OGNUSDT','OGUSDT','OMGUSDT','OMUSDT','ONEUSDT',
    'ONGUSDT','ONTUSDT','OOKIUSDT','ORNUSDT','OSMOUSDT','OXTUSDT',
    'PAXGUSDT','PEOPLEUSDT','PERLUSDT','PERPUSDT','PHAUSDT','PHBUSDT',
    'PLAUSDT','PNTUSDT','POLSUSDT','POLYXUSDT','PONDUSDT',
    'PORTOUSDT','POWRUSDT','PSGUSDT','PUNDIXUSDT','PYRUSDT',
    'QIUSDT','QNTUSDT','QTUMUSDT','QUICKUSDT','RADUSDT',
    'RAREUSDT','RAYUSDT','REEFUSDT','REIUSDT',
    'RENUSDT','REPUSDT','REQUSDT','RIFUSDT','RLCUSDT',
    'RNDRUSDT','ROSEUSDT','RSRUSDT','RUNEUSDT','RVNUSDT',
    'SANDUSDT','SANTOSUSDT','SCRTUSDT','SCUSDT','SFPUSDT',
    'SHIBUSDT','SKLUSDT','SLPUSDT','SNXUSDT','SOLUSDT',
    'SPELLUSDT','SRMUSDT','STEEMUSDT','STGUSDT','STMXUSDT','STORJUSDT','STPTUSDT',
    'STRAXUSDT','STXUSDT','SUNUSDT','SUPERUSDT','SUSHIUSDT',
    'SXPUSDT','SYSUSDT','TFUELUSDT','THETAUSDT',
    'TKOUSDT','TLMUSDT','TOMOUSDT','TORNUSDT','TRBUSDT',
    'TRIBEUSDT','TROYUSDT','TRUUSDT','TRXUSDT','TUSDT',
    'TVKUSDT','TWTUSDT','UMAUSDT','UNFIUSDT','UNIUSDT',
    'UTKUSDT','VETUSDT','VGXUSDT','VIDTUSDT','VITEUSDT',
    'VOXELUSDT','VTHOUSDT','WANUSDT','WAVESUSDT','WAXPUSDT',
    'WINGUSDT','WINUSDT','WNXMUSDT','WOOUSDT','WRXUSDT',
    'WTCUSDT','XECUSDT','XEMUSDT','XLMUSDT','XMRUSDT',
    'XNOUSDT','XRPUSDT','XTZUSDT','XVGUSDT','XVSUSDT',
    'YFIIUSDT','YFIUSDT','YGGUSDT','ZECUSDT','ZENUSDT',
    'ZILUSDT','ZRXUSDT'
    ]



def filter1(pair):

    interval = '4h'
    symbol = pair
    klines = trader.client.get_klines(symbol=symbol,interval=interval)
    open_time = [int(entry[0]) for entry in klines]
    close = [float(entry[4]) for entry in klines]
    close_array = np.asarray(close)

    print("on 4h timeframe " + symbol)

    x = close
    y = range(len(x))

    best_fit_line1 = np.poly1d(np.polyfit(y, x, 1))(y)
    best_fit_line2 = (np.poly1d(np.polyfit(y, x, 1))(y)) * 1.01
    best_fit_line3 = (np.poly1d(np.polyfit(y, x, 1))(y)) * 0.99
 
    if x[-1] < best_fit_line3[-1] and best_fit_line1[0] <= best_fit_line1[-1]:
        filtered_pairs1.append(symbol)
        print('found')

        #plt.figure(figsize=(8,6))
        #plt.grid(True)
        #plt.plot(x)
        #plt.plot(best_fit_line1, '--', color='r')
        #plt.plot(best_fit_line2, '--', color='r')
        #plt.plot(best_fit_line3, '--', color='r')
        #plt.show(block=False)
        #plt.pause(6)
        #plt.close()

    elif x[-1] < best_fit_line3[-1] and best_fit_line1[0] >= best_fit_line1[-1]:
        filtered_pairs1.append(symbol)
        print('found')

        #plt.figure(figsize=(8,6))
        #plt.grid(True)
        #plt.plot(x)
        #plt.plot(best_fit_line1, '--', color='r')
        #plt.plot(best_fit_line2, '--', color='r')
        #plt.plot(best_fit_line3, '--', color='r')
        #plt.show(block=False)
        #plt.pause(6)
        #plt.close()

    else:
        print('searching') 

def filter2(filtered_pairs1):
    interval = '2h'
    symbol = filtered_pairs1
    klines = trader.client.get_klines(symbol=symbol,interval=interval)
    open_time = [int(entry[0]) for entry in klines]
    close = [float(entry[4]) for entry in klines]
    close_array = np.asarray(close)

    print("on 2h " + symbol)

    x = close
    y = range(len(x))

    best_fit_line1 = np.poly1d(np.polyfit(y, x, 1))(y)
    best_fit_line2 = (np.poly1d(np.polyfit(y, x, 1))(y)) * 1.01
    best_fit_line3 = (np.poly1d(np.polyfit(y, x, 1))(y)) * 0.99

    if x[-1] < best_fit_line3[-1] and best_fit_line1[0] < best_fit_line1[-1]:
        filtered_pairs2.append(symbol)
        print('found')

        #plt.figure(figsize=(8,6))
        #plt.grid(True)
        #plt.plot(x)
        #plt.plot(best_fit_line1, '--', color='r')
        #plt.plot(best_fit_line2, '--', color='r')
        #plt.plot(best_fit_line3, '--', color='r')
        #plt.show(block=False)
        #plt.pause(6)
        #plt.close()

    if x[-1] < best_fit_line3[-1] and best_fit_line1[0] >= best_fit_line1[-1]:
        filtered_pairs2.append(symbol)
        print('found') 

        #plt.figure(figsize=(8,6))
        #plt.grid(True)
        #plt.plot(x)
        #plt.plot(best_fit_line1, '--', color='r')
        #plt.plot(best_fit_line2, '--', color='r')
        #plt.plot(best_fit_line3, '--', color='r')
        #plt.show(block=False)
        #plt.pause(6)
        #plt.close()

def filter3(filtered_pairs2):
    interval = '1h'
    symbol = filtered_pairs2
    klines = trader.client.get_klines(symbol=symbol,interval=interval)
    open_time = [int(entry[0]) for entry in klines]
    close = [float(entry[4]) for entry in klines]
    close_array = np.asarray(close)

    print("on 1h timeframe " + symbol)

    #min = ta.MIN(close_array, timeperiod=30)
    #max = ta.MAX(close_array, timeperiod=30)

    #real = ta.HT_TRENDLINE(close_array)
    #wcl = ta.WCLPRICE(max, min, close_array)
    
    print(close[-1])
    print()
    #print(min[-1])
    #print(max[-1])
    #print(real[-1])    

    x = close
    y = range(len(x))

    best_fit_line1 = np.poly1d(np.polyfit(y, x, 1))(y)
    best_fit_line2 = (np.poly1d(np.polyfit(y, x, 1))(y)) * 1.01
    best_fit_line3 = (np.poly1d(np.polyfit(y, x, 1))(y)) * 0.99

    if x[-1] < best_fit_line1[-1]:
        filtered_pairs3.append(symbol)
        print('found')

        #plt.figure(figsize=(8,6))
        #plt.title(symbol)
        #plt.grid(True)
        #plt.plot(close)
        #plt.plot(best_fit_line1, '--', color='r')
        #plt.plot(best_fit_line2, '--', color='r')
        #plt.plot(best_fit_line3, '--', color='r')
        #plt.plot(close)
        #plt.plot(min)
        #plt.plot(max)
        #plt.plot(real)
        #plt.show(block=False)
        #plt.pause(5)
        #plt.close()

    else:
        print('searching') 


def filter4(filtered_pairs3):
    interval = '15m'
    symbol = filtered_pairs3
    klines = trader.client.get_klines(symbol=symbol,interval=interval)
    open_time = [int(entry[0]) for entry in klines]
    close = [float(entry[4]) for entry in klines]
    close_array = np.asarray(close)

    print("on 15m timeframe " + symbol)

    #min = ta.MIN(close_array, timeperiod=30)
    #max = ta.MAX(close_array, timeperiod=30)

    #real = ta.HT_TRENDLINE(close_array)
    #wcl = ta.WCLPRICE(max, min, close_array)
    
    print(close[-1])
    print()
    #print(min[-1])
    #print(max[-1])
    #print(real[-1])    

    x = close
    y = range(len(x))

    best_fit_line1 = np.poly1d(np.polyfit(y, x, 1))(y)
    best_fit_line2 = (np.poly1d(np.polyfit(y, x, 1))(y)) * 1.01
    best_fit_line3 = (np.poly1d(np.polyfit(y, x, 1))(y)) * 0.99

    if x[-1] < best_fit_line1[-1]:
        filtered_pairs4.append(symbol)
        print('found')

        #plt.figure(figsize=(8,6))
        #plt.title(symbol)
        #plt.grid(True)
        #plt.plot(close)
        #plt.plot(best_fit_line1, '--', color='r')
        #plt.plot(best_fit_line2, '--', color='r')
        #plt.plot(best_fit_line3, '--', color='r')
        #plt.plot(close)
        #plt.plot(min)
        #plt.plot(max)
        #plt.plot(real)
        #plt.show(block=False)
        #plt.pause(5)
        #plt.close()

    else:
        print('searching') 

def momentum(filtered_pairs4):
    interval = '5m'
    symbol = filtered_pairs4
    klines = trader.client.get_klines(symbol=symbol,interval=interval)
    open_time = [int(entry[0]) for entry in klines]
    close = [float(entry[4]) for entry in klines]
    close_array = np.asarray(close)

    print()
    print("on 5m timeframe " + symbol)

    real = ta.CMO(close_array, timeperiod=14)
    #print(real[-1])

    if real[-1] < -50:
        print('oversold dip found')
        selected_pair.append(symbol)
        selected_pairCMO.append(real[-1])

    else:
        print('searching')


for i in trading_pairs:
    output = filter1(i)
    print(filtered_pairs1)

for i in filtered_pairs1:
    output = filter2(i)
    print(filtered_pairs2) 

for i in filtered_pairs2:
    output = filter3(i)
    print(filtered_pairs3) 

for i in filtered_pairs3:
    output = filter4(i)
    print(filtered_pairs4)
    
for i in filtered_pairs4:
    output = momentum(i)
    print(selected_pair)

if len(selected_pair) > 1:
    print('dips are more then 1 oversold') 
    print(selected_pair) 
    #print(selected_pairCMO)
    
    if min(selected_pairCMO) in selected_pairCMO:
        #print(selected_pairCMO.index(min(selected_pairCMO)))
        position = selected_pairCMO.index(min(selected_pairCMO))

    for id, value in enumerate(selected_pair):
        if id == position:
            print(selected_pair[id])
    #sys.exit()

elif len(selected_pair) == 1:
    print('1 dip found')   
    print(selected_pair) 
    #print(selected_pairCMO)
    #sys.exit()

else:
    print('no oversold dips for the moment, rescan dips...')

    #print(selected_pair) 
    #print(selected_pairCMO) 
    #os.execl(sys.executable, sys.executable, *sys.argv)

    

sys.exit(0)
sys.exit()
exit()



# Import the required libraries
import homeassistant.components.thermostat as thermostat

# Set up the American Standard thermostat
thermostat.setup(hass, 'thermostat.american_standard', {
  'username': 'my_username',
  'password': 'my_password',
  'device_id': 'my_device_id'
})

# Set the initial state of the thermostat
thermostat.set_temperature(hass, 'thermostat.american_standard', 72)
thermostat.set_hvac_mode(hass, 'thermostat.american_standard', 'cool')

# Define a function to handle temperature changes
def temperature_changed(entity, old_state, new_state):
  new_temperature = new_state.attributes.get('temperature')

  # Set the temperature on the American Standard thermostat
  thermostat.set_temperature(hass, 'thermostat.american_standard', new_temperature)

# Listen for changes to the temperature
hass.states.listen('sensor.temperature', temperature_changed)


#include <iostream>

using namespace std;

class TablicaInt
{
    unsigned wielkosc;
    int* tablica;
public:
    TablicaInt();
    explicit TablicaInt(unsigned w);
    ~TablicaInt();
    void dodaj(int nowy);
    void zmien_rozmiar(unsigned nowy);
    void wypisz() const;
    void usun_dane();
    unsigned rozmiar() const;
};

TablicaInt::TablicaInt() : wielkosc(0), tablica(nullptr) {}

TablicaInt::TablicaInt(unsigned w) : wielkosc(w), tablica(new int[w])
{
    for(unsigned i = 0; i < w; ++i)
        tablica[i] = 0;
}

TablicaInt::~TablicaInt()
{
    if(tablica != nullptr)
        delete[] tablica;
    cout << "Tablica poprawnie usunieta.\n";
}

void TablicaInt::dodaj(int nowy)
{
    // jeżeli tablica dotychczas jest pusta, alokujemy do niej pamięć dla tablicy jednoelementowej:
    if(tablica == nullptr)
    {
        tablica = new int[1];
        tablica[0] = nowy;
        wielkosc = 1;
        return;
    }
    // w przeciwnym wypadku:
    // tworzymy tablicę tymczasową o rozmiarze dotychczasowej tablicy
    int* temp = new int[wielkosc];
    // kopiujemy zawartość tablicy dotychczasowej do nowej, tymczasowej
    for(unsigned i = 0; i < wielkosc; ++i)
        temp[i] = tablica[i];
    // zwalniamy pamięć z dotychczasowej tablicy
    delete[] tablica;
    // na miejscu tablicy tworzymy nową, o rozmiarze o 1 większym
    tablica = new int[wielkosc + 1];
    // do nowej tablicy kopiujemy zawartość tymczasowej
    for(unsigned i = 0; i < wielkosc; ++i)
        tablica[i] = temp[i];
    // zwalniamy pamięć z tablicy tymczasowej
    delete[] temp;
    // na ostatni element tablicy wpisujemy nową wartość
    tablica[wielkosc] = nowy;
    // zwiększamy wielkość o 1
    ++wielkosc;
}

void TablicaInt::wypisz() const
{
    if(wielkosc > 0)
        for(unsigned i = 0; i < wielkosc; ++i)
            cout << tablica[i] << '\t';
    cout << endl;
}


int main()
{
    TablicaInt tablica(5);
    tablica.wypisz();
    tablica.dodaj(10);
    tablica.wypisz();
    return 0;
}

using StudentGroup;

namespace LoginDemo
{
    public partial class Form1 : Form
    {
        SqlProjectExecutor sqlConn;

        public Form1()
        {
            InitializeComponent();
            txtPassword.PasswordChar = '*';
            sqlConn = new SqlProjectExecutor();
        }

        private void WriteInListBox()
        {
            lsbxMemberNames.Items.Clear();

            foreach (string name in sqlConn.GetMemberNames())
            {
                lsbxMemberNames.Items.Add(name);
            }
        }

        private void Form1_Load(object sender, EventArgs e)
        {
            WriteInListBox();
        }

        private void btnLogin_Click(object sender, EventArgs e)
        {
            if (sqlConn.isCorrect(txtName.Text, txtPassword.Text))
            {
                lblResult.Text = "Yeah bodyy";
            }
            else
            {
                lblResult.Text = "Nah";
            }

            WriteInListBox();
        }

    }
}

using System;
using System.Collections.Generic;
using System.Data.SqlClient;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Xml.Linq;

namespace StudentGroup
{
    public class SqlProjectExecutor
    {
        string connString;
        SqlConnection conn;
        SqlCommand command;
        SqlDataReader dataReader;
        SqlDataAdapter adapter;

        public SqlProjectExecutor()
        {
            connString = "Data source = DESKTOP-TK4NSQC\\SQLEXPRESS; Initial Catalog=FontysExercising; Integrated security = true";
            conn = new SqlConnection(connString);
        }

        public List<string> GetMemberNames()
        {
            string sql = "";
            List<string> members = new List<string>();

            conn.Open();
            sql = "Select * from HousingAgencyMembers";
            command = new SqlCommand(sql, conn);
            dataReader = command.ExecuteReader();

            while (dataReader.Read())
            {
                string memberName = dataReader.GetString(0);
                // string memberPassword = dataReader.GetString(1);

                members.Add(memberName);
                // members.Add($"{memberName} - {memberPassword}");
                // members.Add($"{dataReader.GetValue(0)}");
            }

            dataReader.Close();
            command.Dispose();
            conn.Close();

            return members;
        }

        private bool isPresent(string userName)
        {
            List<string> members = GetMemberNames();

            if (members.Contains(userName))
            {
                return true;
            }
            else
            {
                return false;
            }
            
        }

        public bool isCorrect(string userName, string userPassword)
        {
            if (isPresent(userName))
            {
                string sql, password = "";

                conn.Open();
                sql = $"Select * from HousingAgencyMembers where userName = '{userName}' ";
                command = new SqlCommand(sql, conn);
                dataReader = command.ExecuteReader();
                dataReader.Read();
                password = dataReader.GetString(1);

                dataReader.Close();
                command.Dispose();
                conn.Close();

                if (userPassword == password)
                {
                    return true;
                }
            }
            return false;
        }

        // ---------------------- Public
        //public List<string> GetMembers()
        //{
        //    string sql = "";
        //    List<string> Output = new List<string>();
        //    conn.Open();

        //    sql = "Select * from Members";
        //    command = new SqlCommand(sql, conn);
        //    dataReader = command.ExecuteReader();

        //    while (dataReader.Read())
        //    {
        //        Output.Add($"{dataReader.GetValue(0)} - {dataReader.GetValue(1)}\n");
        //    }

        //    dataReader.Close();
        //    command.Dispose();
        //    conn.Close();

        //    return Output;
        //}

        //public void AddMember(string Name, string ProjectGroupName)
        //{
        //    string sql, name, projectGroup = "";
        //    name = Name;
        //    projectGroup = ProjectGroupName.Replace("\n", "");
        //    conn.Open();

        //    sql = $"Insert into Members(name, projectGroup) values('{name}', '{projectGroup}')";
        //    command = new SqlCommand(sql, conn);

        //    adapter = new SqlDataAdapter();
        //    adapter.InsertCommand = new SqlCommand(sql, conn);
        //    adapter.InsertCommand.ExecuteNonQuery();

        //    command.Dispose();
        //    conn.Close();
        //}

        //public List<string> GetProjectGroups()
        //{
        //    string sql = "";
        //    List<string> output = new List<string>();
        //    conn.Open();

        //    sql = "Select * from ProjectGroup";
        //    command = new SqlCommand(sql, conn);
        //    dataReader = command.ExecuteReader();

        //    while (dataReader.Read())
        //    {
        //        output.Add($"{dataReader.GetValue(0)}\n");
        //    }

        //    dataReader.Close();
        //    command.Dispose();
        //    conn.Close();

        //    return output;
        //}

        //public void AddProjectGroup(string Name)
        //{
        //    string sql, name = "";
        //    name = Name;
        //    conn.Open();

        //    sql = $"Insert into ProjectGroup(name) values('{name}')";
        //    command = new SqlCommand(sql, conn);

        //    adapter = new SqlDataAdapter();
        //    adapter.InsertCommand = new SqlCommand(sql, conn);
        //    adapter.InsertCommand.ExecuteNonQuery();

        //    command.Dispose();
        //    conn.Close();
        //}

        //public List<string> GetGroupMembers(string group)
        //{
        //    string sql, groupName = "";
        //    groupName = group.Replace("\n", "");
        //    List<string> output = new List<string>();
        //    conn.Open();

        //    sql = $"select * from Members where projectGroup = '{groupName}'";
        //    command = new SqlCommand(sql, conn);
        //    dataReader = command.ExecuteReader();

        //    while (dataReader.Read())
        //    {
        //        output.Add($"{dataReader.GetValue(1)}\n");
        //    }

        //    dataReader.Close();
        //    command.Dispose();
        //    conn.Close();

        //    return output;
        //}

        //// ---------------- Private methods
        //private void DropMembers()
        //{
        //    string sql = "";
        //    adapter = new SqlDataAdapter();
        //    conn.Open();

        //    sql = $"Drop table Members";
        //    command = new SqlCommand(sql, conn);

        //    adapter.InsertCommand = new SqlCommand(sql, conn);
        //    adapter.InsertCommand.ExecuteNonQuery();

        //    command.Dispose();
        //    conn.Close();
        //}

        //private void DropProjectGroup()
        //{
        //    string sql = "";
        //    adapter = new SqlDataAdapter();
        //    conn.Open();

        //    sql = $"Drop table ProjectGroup";
        //    command = new SqlCommand(sql, conn);

        //    adapter.InsertCommand = new SqlCommand(sql, conn);
        //    adapter.InsertCommand.ExecuteNonQuery();

        //    command.Dispose();
        //    conn.Close();
        //}

        //private void CreateMembers()
        //{
        //    string sql = "";
        //    adapter = new SqlDataAdapter();
        //    conn.Open();

        //    sql = "create table Members (\r\n\tstudentNumber int NOT NULL PRIMARY KEY IDENTITY(1, 1),\r\n\tname varchar(55) NOT NULL,\r\n\tprojectGroup varchar(55) NOT NULL FOREIGN KEY REFERENCES ProjectGroup(name)\r\n);";
        //    command = new SqlCommand(sql, conn);

        //    adapter.InsertCommand = new SqlCommand(sql, conn);
        //    adapter.InsertCommand.ExecuteNonQuery();

        //    command.Dispose();
        //    conn.Close();
        //}

        //private void CreateProjectGroup()
        //{
        //    string sql = "";
        //    adapter = new SqlDataAdapter();
        //    conn.Open();

        //    sql = "create table ProjectGroup (\r\n\t-- projectGroupNumber int NOT NULL PRIMARY KEY IDENTITY(1, 1),\r\n\tname varchar(55) NOT NULL PRIMARY KEY\r\n);";
        //    command = new SqlCommand(sql, conn);

        //    adapter.InsertCommand = new SqlCommand(sql, conn);
        //    adapter.InsertCommand.ExecuteNonQuery();

        //    command.Dispose();
        //    conn.Close();
        //}

        //// ----------------- Other
        //public void HardReset()
        //{
        //    // Dropping
        //    DropMembers();
        //    DropProjectGroup();

        //    // Creating
        //    CreateProjectGroup();
        //    CreateMembers();
        //}

    }
}


{"Copy":[],"Skilltree":{"Gate of View":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"Gate of View"},"Demon Flip":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"Demon Flip"},"Dynamic Entry":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"Dynamic Entry"},"Gate of Limit":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"Gate of Limit"},"Substitution":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"Substitution"},"Leaf Rising Wind":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"Leaf Rising Wind"},"Dosaku":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"Dosaku"},"Genjutsu":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"Genjutsu"},"Eight Gates":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"Eight Gates"},"Hemorrhage":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"Hemorrhage"},"Ketsuryugan":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"Ketsuryugan"},"Leaf Whirlwind":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"Leaf Whirlwind"},"1000 Years of Death":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"1000 Years of Death"},"Primary Lotus":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"Primary Lotus"}},"Stats":{"kek":{"ObjectValue":"14","ObjectClass":"IntValue","ObjectName":"kek"},"Village":{"ObjectValue":"2","ObjectClass":"IntValue","ObjectName":"Village"},"ParentID":{"ObjectValue":"yameii(14)1772970","ObjectClass":"StringValue","ObjectName":"ParentID"},"startnewlife":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"startnewlife"},"MaxAge":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"MaxAge"},"KillStreak":{"ObjectValue":"3","ObjectClass":"IntValue","ObjectName":"KillStreak"},"LastStomach":{"ObjectValue":"431","ObjectClass":"IntValue","ObjectName":"LastStomach"},"Key3":{"ObjectValue":"3","ObjectClass":"StringValue","ObjectName":"Key3"},"Key1":{"ObjectValue":"1","ObjectClass":"StringValue","ObjectName":"Key1"},"Key5":{"ObjectValue":"5","ObjectClass":"StringValue","ObjectName":"Key5"},"MissionSuccess":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"MissionSuccess"},"WeaveSpeed":{"ObjectValue":"20","ObjectClass":"IntValue","ObjectName":"WeaveSpeed"},"Ryo":{"ObjectValue":"91","ObjectClass":"IntValue","ObjectName":"Ryo"},"ToggleAccessories":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"ToggleAccessories"},"KPos":{"ObjectValue":"3","ObjectClass":"IntValue","ObjectName":"KPos"},"DateRecord":{"ObjectValue":"3430","ObjectClass":"IntValue","ObjectName":"DateRecord"},"SecondaryCN":{"ObjectValue":"2","ObjectClass":"IntValue","ObjectName":"SecondaryCN"},"Key4":{"ObjectValue":"4","ObjectClass":"StringValue","ObjectName":"Key4"},"Slot1":{"ObjectValue":"Primary Lotus","ObjectClass":"StringValue","ObjectName":"Slot1"},"EyeColorB":{"ObjectValue":"194","ObjectClass":"IntValue","ObjectName":"EyeColorB"},"Slot2":{"ObjectValue":"Dosaku","ObjectClass":"StringValue","ObjectName":"Slot2"},"Trauma":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"Trauma"},"ResetPos":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"ResetPos"},"Key6":{"ObjectValue":"6","ObjectClass":"StringValue","ObjectName":"Key6"},"CurrentWep":{"ObjectValue":"1","ObjectClass":"IntValue","ObjectName":"CurrentWep"},"SpentSkillPoints":{"ObjectValue":"-16","ObjectClass":"IntValue","ObjectName":"SpentSkillPoints"},"Slot5":{"ObjectValue":"Demon Flip","ObjectClass":"StringValue","ObjectName":"Slot5"},"Blindness":{"ObjectValue":"0","ObjectClass":"NumberValue","ObjectName":"Blindness"},"Slot3":{"ObjectValue":"Hemorrhage","ObjectClass":"StringValue","ObjectName":"Slot3"},"RightEye":{"ObjectValue":"Ketsuryugan","ObjectClass":"StringValue","ObjectName":"RightEye"},"SkillPoints":{"ObjectValue":"16","ObjectClass":"IntValue","ObjectName":"SkillPoints"},"mapmove1":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"mapmove1"},"PrimaryAmmo":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"PrimaryAmmo"},"Slot10":{"ObjectValue":"","ObjectClass":"StringValue","ObjectName":"Slot10"},"HairColorG":{"ObjectValue":"91","ObjectClass":"IntValue","ObjectName":"HairColorG"},"Name":{"ObjectValue":"Max","ObjectClass":"StringValue","ObjectName":"Name"},"MaxTails":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"MaxTails"},"RU":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"RU"},"Elo":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"Elo"},"TailedBeastEXP":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"TailedBeastEXP"},"MaxRank":{"ObjectValue":"24","ObjectClass":"IntValue","ObjectName":"MaxRank"},"Slot7":{"ObjectValue":"","ObjectClass":"StringValue","ObjectName":"Slot7"},"PosX":{"ObjectValue":"3586","ObjectClass":"IntValue","ObjectName":"PosX"},"LastChakra":{"ObjectValue":"930","ObjectClass":"IntValue","ObjectName":"LastChakra"},"LastHealth":{"ObjectValue":"326","ObjectClass":"IntValue","ObjectName":"LastHealth"},"OriginalVillage":{"ObjectValue":"2","ObjectClass":"IntValue","ObjectName":"OriginalVillage"},"WeaponSave":{"ObjectValue":"","ObjectClass":"StringValue","ObjectName":"WeaponSave"},"TimesRerolled":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"TimesRerolled"},"Key12":{"ObjectValue":"=","ObjectClass":"StringValue","ObjectName":"Key12"},"ItemSave":{"ObjectValue":"","ObjectClass":"StringValue","ObjectName":"ItemSave"},"Age":{"ObjectValue":"11","ObjectClass":"IntValue","ObjectName":"Age"},"LastKilledUser":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"LastKilledUser"},"TailedBeast":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"TailedBeast"},"CColorB":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"CColorB"},"RESTORE":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"RESTORE"},"AgeLimit":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"AgeLimit"},"WipeLog":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"WipeLog"},"FamilyID":{"ObjectValue":"Max(14)186002","ObjectClass":"StringValue","ObjectName":"FamilyID"},"Mastered":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"Mastered"},"Slot4":{"ObjectValue":"Leaf Whirlwind","ObjectClass":"StringValue","ObjectName":"Slot4"},"AwakenCD":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"AwakenCD"},"Parentq":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"Parentq"},"Key11":{"ObjectValue":"z","ObjectClass":"StringValue","ObjectName":"Key11"},"Scar":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"Scar"},"LastAge":{"ObjectValue":"1671060439","ObjectClass":"IntValue","ObjectName":"LastAge"},"Slot0":{"ObjectValue":"","ObjectClass":"StringValue","ObjectName":"Slot0"},"Mangekyo":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"Mangekyo"},"TrainingEXP":{"ObjectValue":"1145","ObjectClass":"IntValue","ObjectName":"TrainingEXP"},"DefaultMouth":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"DefaultMouth"},"CloakTime":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"CloakTime"},"Key8":{"ObjectValue":"8","ObjectClass":"StringValue","ObjectName":"Key8"},"RP":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"RP"},"BijuuXP":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"BijuuXP"},"Slot12":{"ObjectValue":"Eight Gates","ObjectClass":"StringValue","ObjectName":"Slot12"},"Kids":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"Kids"},"Deaths":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"Deaths"},"berserkcheck":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"berserkcheck"},"HairColorB":{"ObjectValue":"79","ObjectClass":"IntValue","ObjectName":"HairColorB"},"RaidCD":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"RaidCD"},"Slot6":{"ObjectValue":"Leaf Rising Wind","ObjectClass":"StringValue","ObjectName":"Slot6"},"PrimaryWep":{"ObjectValue":"Kunai","ObjectClass":"StringValue","ObjectName":"PrimaryWep"},"RecentTrainings":{"ObjectValue":"[\"Pushup Training\",\"Kunai Training\",\"Block Training\"]","ObjectClass":"StringValue","ObjectName":"RecentTrainings"},"BerserkTimes":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"BerserkTimes"},"GrandParentID":{"ObjectValue":"Sad(40)855519","ObjectClass":"StringValue","ObjectName":"GrandParentID"},"Slot=":{"ObjectValue":"","ObjectClass":"StringValue","ObjectName":"Slot="},"Ken":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"Ken"},"BijuuConvo":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"BijuuConvo"},"Slot-":{"ObjectValue":"","ObjectClass":"StringValue","ObjectName":"Slot-"},"CColorR":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"CColorR"},"Version":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"Version"},"SPR":{"ObjectValue":"12","ObjectClass":"IntValue","ObjectName":"SPR"},"TailedBeastMastered":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"TailedBeastMastered"},"BonusSkillPoints":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"BonusSkillPoints"},"SkinColor":{"ObjectValue":"3","ObjectClass":"IntValue","ObjectName":"SkinColor"},"RyoRES":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"RyoRES"},"Slot9":{"ObjectValue":"","ObjectClass":"StringValue","ObjectName":"Slot9"},"SeenDeaths":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"SeenDeaths"},"PosY":{"ObjectValue":"158","ObjectClass":"IntValue","ObjectName":"PosY"},"PosZ":{"ObjectValue":"3044","ObjectClass":"IntValue","ObjectName":"PosZ"},"HandsignTraining":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"HandsignTraining"},"Genjutsu":{"ObjectValue":"2","ObjectClass":"IntValue","ObjectName":"Genjutsu"},"BDAYS":{"ObjectValue":"0","ObjectClass":"StringValue","ObjectName":"BDAYS"},"CurseMarkEXP":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"CurseMarkEXP"},"CurseMarkLevel":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"CurseMarkLevel"},"bald":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"bald"},"Key9":{"ObjectValue":"9","ObjectClass":"StringValue","ObjectName":"Key9"},"ChakraArmorRGB":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"ChakraArmorRGB"},"SecondaryWep":{"ObjectValue":"Kunai","ObjectClass":"StringValue","ObjectName":"SecondaryWep"},"GripCount":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"GripCount"},"EyeColorR":{"ObjectValue":"136","ObjectClass":"IntValue","ObjectName":"EyeColorR"},"UnlockedCloak":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"UnlockedCloak"},"Rank":{"ObjectValue":"15","ObjectClass":"IntValue","ObjectName":"Rank"},"MissionEXP":{"ObjectValue":"322","ObjectClass":"IntValue","ObjectName":"MissionEXP"},"Slot11":{"ObjectValue":"Genjutsu","ObjectClass":"StringValue","ObjectName":"Slot11"},"LastGripped":{"ObjectValue":"45920680","ObjectClass":"IntValue","ObjectName":"LastGripped"},"HideName":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"HideName"},"HBChoice":{"ObjectValue":"1","ObjectClass":"IntValue","ObjectName":"HBChoice"},"Prestige":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"Prestige"},"PrimaryCN":{"ObjectValue":"3","ObjectClass":"IntValue","ObjectName":"PrimaryCN"},"Key2":{"ObjectValue":"2","ObjectClass":"StringValue","ObjectName":"Key2"},"Slot8":{"ObjectValue":"","ObjectClass":"StringValue","ObjectName":"Slot8"},"Title":{"ObjectValue":"Chuunin","ObjectClass":"StringValue","ObjectName":"Title"},"Influence":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"Influence"},"jincooldown":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"jincooldown"},"logcheck":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"logcheck"},"LINDAMINISTARTUP":{"ObjectValue":"9","ObjectClass":"IntValue","ObjectName":"LINDAMINISTARTUP"},"HairColorR":{"ObjectValue":"107","ObjectClass":"IntValue","ObjectName":"HairColorR"},"CombatEXP":{"ObjectValue":"-110","ObjectClass":"IntValue","ObjectName":"CombatEXP"},"AnbuLog":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"AnbuLog"},"BijuuSealed":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"BijuuSealed"},"Key7":{"ObjectValue":"7","ObjectClass":"StringValue","ObjectName":"Key7"},"TailedBeastLevel":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"TailedBeastLevel"},"SwordSave":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"SwordSave"},"PDLog":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"PDLog"},"LeftEye":{"ObjectValue":"Ketsuryugan","ObjectClass":"StringValue","ObjectName":"LeftEye"},"EyeColorG":{"ObjectValue":"50","ObjectClass":"IntValue","ObjectName":"EyeColorG"},"Gender":{"ObjectValue":"1","ObjectClass":"IntValue","ObjectName":"Gender"},"CColorG":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"CColorG"},"CanRank":{"ObjectValue":"1","ObjectClass":"IntValue","ObjectName":"CanRank"},"IsExiled":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"IsExiled"},"Marking":{"ObjectValue":"69","ObjectClass":"IntValue","ObjectName":"Marking"},"SecondaryAmmo":{"ObjectValue":"1","ObjectClass":"IntValue","ObjectName":"SecondaryAmmo"},"Key10":{"ObjectValue":"0","ObjectClass":"StringValue","ObjectName":"Key10"},"BijuuRelation":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"BijuuRelation"},"Blind":{"ObjectValue":"0","ObjectClass":"NumberValue","ObjectName":"Blind"},"Personality":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"Personality"}}}

<!DOCTYPE html>
<html>

<head>
    <title>Html Page</title>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,300;0,400;1,400&display=swap"
        rel="stylesheet">

</head>

<body>
    <h2>Registration Form</h2>
    <form action="./file.html" style="text-align: center;">
        <label for="fname">Name:</label><br>
        <input type="text" placeholder="Enter your name" required><br><br>
        <label for="lname">Last Name:</label><br>
        <input type="text"placeholder="Enter your name"> <br><br>
        <label for="age">Age:</label><br>
        <input type="number" placeholder="Enter you age" value="18"><br><br>

        <label for="gender">Gender:</label><br>
        <input type="radio" name="gender" value="male">
        <label for="male">Male</label>
        <input type="radio" name="gender" value="Female">
        <label for="female">Female</label><br><br>
        <label for="email">Email:</label><br>
        <input type="email" placeholder="Enter yoyur email"><br><br>
        <label for="password">Password:</label><br>
        <input type="password"><br><br>
        <label for="Degree">degree:</label><br>
        <input type="checkbox" name="b.tech" value="b.tech">
        <label for="b.tech">b.tech</label>
        <input type="checkbox" name="bcom" value="bcom">
        <label for="bcom">bcom</label>
        <input type="checkbox" name="ba" value="ba">
        <label for="ba">ba</label>
        <input type="checkbox" name="bsc" value="bsc">
        <label for="bsc">bsc</label><br>
        <input type="submit" value="submit">
        <input type="reset" value="reset">






    </form>




</body>

</html>

   FRAME* OA8000MpuDrv::getVideoFrame(const Camera::AvailableStreamIds streamId, std::uint32_t* const compressedFlags)
    {
        FRAME *frm;
        switch(streamId) {
        case MainVideo: 
            frm = mainVideoStream_->getFrame(compressedFlags);

            if (frm != nullptr) {
                u32 bgain = 0;
                u32 ggain = 0;
                u32 rgain = 0;
                //u32 stretch = 0;

                libvs_get_awb(0, &bgain, &ggain, &rgain);
                //stretch = libvs_get_stretch(0);

                LOG4CPLUS_DEBUG(Vms::Grabbers::logger(), "[OA8000MpuDrv->" << std::string (__func__) 
                << "] bgain: "    << std::to_string(bgain) 
                << " | ggain: "   << std::to_string(ggain) 
                << " | rgain: "   << std::to_string(rgain)
                );
            }

            break;
        case SubVideo:
            frm = subVideoStream_->getFrame(compressedFlags);
            break;
        default:
            LOG4CPLUS_ERROR(Vms::Grabbers::logger(), "getVideoFrame wrong streamId");
            frm = nullptr;
            break;
        } 
        return frm;
    }    


#include <iostream>
#include <string>
#include <cmath>
#include <iomanip>
#include <limits>

int checkForBadFormat(std::string);
double fact(double);
double E(double, double);
double sec(double, double);
void printStr(double, double);

std::string modifyString(std::string);

int main() {
	setlocale(LC_CTYPE, "Russian");

	std::string tempString;

	double absError = 0;
	double xMin = 1.7;
	double xMax = 1.7;
	double step = 0;
	double xIdeal = 1.7;


	do {
		std::cout << "Введите точность E от 10^(-7) до 10^(-1): ";
		std::cin >> tempString;

		if (modifyString(tempString).size() != 0) {
			absError = std::stod(modifyString(tempString));
		}
		else {
			std::cout << "Введите корректное значение!\n";

			continue;
		}

		if (absError < pow(10, -7) || absError > pow(10, -1) || checkForBadFormat(tempString)) {
			std::cout << "Введите корректное значение!\n";
		}

	} while (absError < pow(10, -7) || absError > pow(10, -1) || checkForBadFormat(tempString));

	do {
		std::cout << "Введите x_start: ";
		std::cin >> tempString;

		if (modifyString(tempString).size() != 0) {
			xMin = std::stod(modifyString(tempString));
		}
		else {
			std::cout << "Введите корректное значение!\n";

			continue;
		}

		if (xMin < -1.57 || xMin > 1.57 || checkForBadFormat(tempString)) {
			std::cout << "Введите корректное значение!\n";
		}

	} while (xMin < -1.57 || xMin > 1.57 || checkForBadFormat(tempString));

	do {
		std::cout << "Введите xEnd: ";
		std::cin >> tempString;

		if (modifyString(tempString).size() != 0) {
			xMax = std::stod(modifyString(tempString));
		}
		else {
			std::cout << "Введите корректное значение!\n";

			continue;
		}

		if (xMax < -1.57 || xMax > 1.57 || checkForBadFormat(tempString)) {
			std::cout << "Введите корректное значение!\n";
		}

	} while (xMax < -1.57 || xMax > 1.57 || checkForBadFormat(tempString));

	bool flag = false;

	do {
		std::cout << "Введите шаг: ";
		std::cin >> tempString;


		if (modifyString(tempString).size() != 0) {
			step = std::stod(modifyString(tempString));
			flag = false;
		}
		else {
			std::cout << "Введите корректное значение!\n";
			flag = true;
			continue;
		}


		if (flag || (std::fabs(xMax - xMin) >= std::numeric_limits<double>::epsilon() && std::fabs(step) < std::numeric_limits<double>::epsilon()) || (step < 0 && xMin < xMax) || (step > 0 && xMin > xMax) || checkForBadFormat(tempString)) {
			std::cout << "Введите корректное значение!\n";
		}

	} while (flag || (std::fabs(xMax - xMin) >= std::numeric_limits<double>::epsilon() && std::fabs(step) < std::numeric_limits<double>::epsilon()) || (step < 0 && xMin < xMax) || (step > 0 && xMin > xMax) || checkForBadFormat(tempString));


	printf("_________________________________________________________________________________________________\n");
	printf("|           x           |         f(x)          |        F(x)           |          del          |\n");
	printf("|_______________________|_______________________|_______________________|_______________________|\n");

	bool pFlag = false;

	if (xMax > xMin) {
		for (double x = xMin; x <= xMax; x = round((x + step) * 100000000) / 100000000) {

			if (std::fabs(x - xMax) < pow(10, -7)) {
				pFlag = true;
				break;
			}

			printStr(x, absError);
		}

		if (pFlag) {
			printStr(xMax, absError);
		}
	}
	else {
		for (double x = xMin; x >= xMax; x = round((x + step) * 100000000) / 100000000) {
			if (std::fabs(x - xMax) < pow(10, -7)) {
				pFlag = true;
				break;
			}
			std::cout << "oao" << std::endl;

			printStr(x, absError);
		}
		if (pFlag) {
			printStr(xMax, absError);
		}
	}


	std::cout << "\n\n";

	do {
		std::cout << "Введите Xideal: ";
		std::cin >> tempString;

		if (modifyString(tempString).size() != 0 && !checkForBadFormat(tempString)) {
			xIdeal = std::stod(modifyString(tempString));
		}
		else {
			std::cout << "Введите корректное значение!\n";

			continue;
		}

	} while (xIdeal < -1.6 || xIdeal >= 1.6 || checkForBadFormat(tempString));

	double systemAnswer = 1 / cos(xIdeal);

	printf("_________________________________________________________________________________________________\n");
	printf("|           e           |         f(x)          |        F(x)           |          del          |\n");
	printf("|_______________________|_______________________|_______________________|_______________________|\n");
	for (double i = 0.1; i > 0.0000001; i /= 10)
	{
		printf("| %-15.7f       | %-15.6f       | %-15.6f       | %-15.6f       |\n", i, sec(xIdeal, i), systemAnswer, sqrt(fabs(sec(xIdeal, i) * sec(xIdeal, i) - systemAnswer * systemAnswer)));
		printf("|_______________________|_______________________|_______________________|_______________________|\n");
	}
}

int checkForBadFormat(std::string a) {
	return a[0] == '.' || (a[0] == '-' && a[1] == '.');
}

double fact(double N)
{
	if (N < 0)
		return 0;
	if (N == 0)
		return 1;
	else
		return N * fact(N - 1);
}

double E(double n, double absError) {
	double res = std::pow(2, 2 * n + 2) * fact(2 * n) / std::pow(atan(1) * 4, 2 * n + 1);
	double summ = 0;
	double la = 0, a = 0;

	int k = 0;
	while (true) {
		la = a;
		a = pow(-1, k % 2) / pow(2 * k + 1, 2 * n + 1);
		if (isnan(a + summ) || !isfinite(a + summ) || abs(abs(a) - abs(la)) < absError) break;
		summ += a;
		k++;
	}

	if (isnan(summ * res) || !isfinite(summ * res)) return 1;

	return summ * res;
}

double sec(double x, double absError) {
	double pi = atan(1) * 4;
	double summ = E(0, absError);
	double last_a = 0, a = E(0, absError);
	double n = 1;

	do {
		last_a = a;
		a *= fabs(E(n, absError) / E(n - 1, absError)) * x * x /
			static_cast<double>(2 * n) / static_cast<double>(2 * n - 1);
		summ += a;
		++n;
	} while (absError <= fabs(fabs(a) - fabs(last_a)));

	return summ;
}

std::string modifyString(const std::string st) {
	std::string newStr = "";

	for (size_t i = 0; i < st.size(); i++) {
		if ((st[i] >= '0' && st[i] <= '9') || st[i] == '.' || st[i] == '-') {
			newStr += st[i];
		}
		else {
			return "";
		}
	}

	if (newStr == "." || newStr == "-") {
		return "";
	}

	return newStr;
}

void printStr(double x, double absError) {
	double systemAnswer = 1 / cos(x);

	printf("| %-15f       | %-15f       | %-15f       | %-15f       |\n", x, sec(x, absError), systemAnswer, sqrt(fabs(sec(x, absError) * sec(x, absError) - systemAnswer * systemAnswer)));
	printf("|_______________________|_______________________|_______________________|_______________________|\n");
}


ssize_t getFirstMinElementIndex_(const int * const array, ssize_t currentIndex, ssize_t arraySize) {
    if (currentIndex == arraySize - 1)
        return currentIndex;
    else {
        ssize_t nextMinIndex = getFirstMinElementIndex_(array, currentIndex + 1, arraySize);
        if (array[nextMinIndex] < array[currentIndex])
            return nextMinIndex;
        else
            return currentIndex;
    }
}

ssize_t getFirstMinElementIndex(const int * const array, ssize_t arraySize) {
    return getFirstMinElementIndex_(array, 0, arraySize);
}

/** Fix JKIT conflict with Dynamic Visibility for Elementor plugin */
function enqueue_dce_visibility_script() {
	wp_enqueue_script( 'dce-visibility' );
}
add_action( 'wp_enqueue_scripts', 'enqueue_dce_visibility_script' );

local TS = game:GetService("TeleportService")
local TweenService = game:GetService("TweenService")
local placeId = "6476627996" -- Enter a second Id Place.
local leaveGuiEvent = game.ReplicatedStorage.LeaveGuiEvent
local TransitionEvent = game.ReplicatedStorage.TransitionEvent
local list = {}
local billboard = script.Parent.billboardPart.billboardGui
local timer
local teleporting = false
local spawnTeleport = script.Parent.spawn
local MinPlayers = 2
local Bus = script.Parent.Parent.Bus
local Seats = Bus.Seats
local Debounce = false

local function updateGui()
	billboard.Frame.players.Text = "Players: " ..#list.. "/12" -- Change the number 16 according to the Max Player who want to be teleported.
end

local function removeFromList(character)
	for i=1,#list do
		if list[i] == character.Name then
			table.remove(list,i)
			updateGui()
		end
	end
end

local function teleportPlayers()
	if #list >= MinPlayers then
		billboard.Frame.Status.Text = "TELEPORTING"
		billboard.Frame.Status.TextColor3 = Color3.fromRGB(255, 0, 0)
		local playersToTeleport = {}
		local teleportTime = 0
		for i=1,#list do
			if game.Players:findFirstChild(list[i]) then
				table.insert(playersToTeleport,game.Players:findFirstChild(list[i]))
				TransitionEvent:FireClient(game.Players:findFirstChild(list[i]))
			else
				table.remove(list,i)	
			end
		end 
		local code = TS:ReserveServer(placeId)
		teleporting = true
		TS:TeleportToPrivateServer(placeId,code,playersToTeleport)
		repeat wait() until #list <= 0
		billboard.Frame.Status.Text = "START"
		billboard.Frame.Status.TextColor3 = Color3.fromRGB(255, 0, 0)
		teleporting = false
	elseif #list < MinPlayers then
		billboard.Frame.players.Text = MinPlayers.."Players Needed!"
		wait(1)
		billboard.Frame.players.Text = "Players: "..#list.."/12"
	end
end

script.Parent.Gate.Touched:Connect(function(hit)
	if hit.Parent:findFirstChild("Humanoid") then
		if teleporting == false then
			local char = hit.Parent
			local player = game.Players:FindFirstChild(char.Name)
			local alreadyExists = false
			
			for i=1,#list do
				if list[i] == char.Name then
					alreadyExists = true
				end
			end
			
			if alreadyExists == false then
				if #list < 12 then -- Many Players have been teleported.
					table.insert(list,char.Name)
					char.PrimaryPart.CFrame = spawnTeleport.CFrame
					if Debounce == false then end
					local player = game.Players:GetPlayerFromCharacter(hit.Parent)
					for i, v in pairs(Seats) do
						if Seats.Occupant == nil then
							local Check = Instance.new("Weld")
							Check.Name = "Check"
							Check.Parent = player.Character
							Check.Parent.Humanoid.JumpPower = 0
							Check.Parent.Humanoid.WalkSpeed = 0
						end
					end
					Seats[math.random(1, #Seats)]:Sit(player.Character.Humanoid)
					game.ServerStorage.ExitGui:Clone().Parent = player.PlayerGui
					updateGui()
					leaveGuiEvent:FireClient(player)
				end
				
				
				player.CharacterRemoving:connect(function(character)
					removeFromList(character)
				end)
			end
			
		end
	end
end)

leaveGuiEvent.OnServerEvent:Connect(function(player)
	player:LoadCharacter()
end)

while wait() do
	timer = 31
	for i=1,timer do
		timer = timer - 1
		billboard.Frame.time.Text = timer
		wait(1)
	end
	teleportPlayers()
end

<!DOCTYPE html>
<html>

<head>
    <title>Html Page</title>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,300;0,400;1,400&display=swap"
        rel="stylesheet">

</head>

<body>
    <!-- HTML LINKS -->
    <a href="/file.html">This is a link</a>
    <!-- HTML IMAGES-->
    <img src="/image/js.png" alt="js logo" height="100px" width="100px" style="border: 1px solid black;">
    <p style="background-image: url('/image/js.png');
     width: 100px;
     height: 100px;">
        Acciojob frontend 2022</p>
    <!--HTML LIST -->
    <H4>Unordered List: skills</H4>
    <ul style="list-style-type:disc;">
        <li>HTML</li>
        <li>CSS</li>
        <li>js</li>
    </ul>
    <H4>Ordered List: skills</H4>
    <ol type="a">
        <li>HTML</li>
        <li>CSS</li>
        <li>js</li>
    </ol>
    <!--Nested list-->
    <ol>
        <li>html</li>
        <li>css</li>
        <li>js:
            <ol>
                <li>
                    <a href="">React.js</a>

                </li>
                <li>css</li>
                <li>js</li>
            </ol>
        </li>
    </ol>
    <!--html block & inline element-->
    <p style="border: 1px solid black;">hi</p>
    <p style="border: 1px solid black;">hey</p>
    <span>heloooo</span>
    <span>heyaaaa</span>
    <h1>hey</h1>
    <h1>hiii</h1>
    <img src="./image/fk logo.png" alt=" ">
    <img src="./image/js.png" alt="">
    <h2>Registration Form</h2>
    <form>
        <label for="fname">Name:</label><br>
        <input type="text" placeholder="Enter your name" required><br><br>
        <label for="lname">Last Name:</label><br>
        <input type="text"><br><br>
        <label for="age">Age:</label><br><br>
        <input type="number" placeholder="Enter you age" value="18"><br><br>

        <label for="gender">Gender:</label><br>
        <input type="radio" name="gender" value="male">
        <label for="male">male</label>
        <input type="radio" name="gender" value="female">
        <label for="female">female</label><br><br>
        <label for="email">Email:</label><br>
        <input type="email" placeholder="Enter yoyur email"><br><br>
        <label for="password">password:</label><br>
        <input type="password"><br><br>
        <label for="degree">degree:</label><br>
        <input type="checkbox" name="b.tech" value="b.tech">
        <label for="b.tech">b.tech</label>
        <input type="checkbox" name="bcom" value="bcom">
        <label for="bcom">bcom</label>
        <input type="checkbox" name="ba" value="ba">
        <label for="ba">ba</label>
        <input type="checkbox" name="bsc" value="bsc">
        <label for="bsc">bsc</label>
        <input type="submit" value="submit">
        <input type="reset" value="reset">






    </form>




</body>

</html>

Dec 15 18:47:54 testnet-5-lodestar lodestar[16999]: Dec-15 18:47:54.001[]                 info: Synced - slot: 14314 - head: 14314 0x9aa9…24cb - execution: valid(0xa3d3…1c20) - finalized: 0xe56a…a648:445 - peers: 6
Dec 15 18:48:06 testnet-5-lodestar lodestar[16999]: Dec-15 18:48:06.000[]                 info: Synced - slot: 14315 - head: 14315 0x4a83…03ec - execution: valid(0x3fc9…f45b) - finalized: 0xe56a…a648:445 - peers: 6
Dec 15 18:48:18 testnet-5-lodestar lodestar[16999]: Dec-15 18:48:18.000[]                 info: Synced - slot: 14316 - head: 14316 0x3877…385e - execution: valid(0x8c58…96a7) - finalized: 0xe56a…a648:445 - peers: 6
Dec 15 18:48:30 testnet-5-lodestar lodestar[16999]: Dec-15 18:48:30.000[]                 info: Synced - slot: 14317 - head: 14317 0x8cec…0623 - execution: valid(0x5d6e…c445) - finalized: 0xe56a…a648:445 - peers: 6
Dec 15 18:48:42 testnet-5-lodestar lodestar[16999]: Dec-15 18:48:42.001[]                 info: Synced - slot: 14318 - head: 14318 0x8481…08e9 - execution: valid(0x7dd9…94f2) - finalized: 0xe56a…a648:445 - peers: 6
Dec 15 18:48:54 testnet-5-lodestar lodestar[16999]: Dec-15 18:48:54.001[]                 info: Synced - slot: 14319 - head: 14319 0x0a26…e4fb - execution: valid(0xaa26…adc1) - finalized: 0xe56a…a648:445 - peers: 6
Dec 15 18:49:06 testnet-5-lodestar lodestar[16999]: Dec-15 18:49:06.001[]                 info: Synced - slot: 14320 - head: 14320 0x8cae…e047 - execution: valid(0x35a3…0daa) - finalized: 0xe56a…a648:445 - peers: 6
Dec 15 18:49:18 testnet-5-lodestar lodestar[16999]: Dec-15 18:49:18.001[]                 info: Synced - slot: 14321 - head: 14321 0xe750…6366 - execution: valid(0xc377…cc23) - finalized: 0xe56a…a648:445 - peers: 6
Dec 15 18:49:30 testnet-5-lodestar lodestar[16999]: Dec-15 18:49:30.001[]                 info: Synced - slot: 14322 - head: 14322 0x432d…13cd - execution: valid(0x1f2a…4703) - finalized: 0xe56a…a648:445 - peers: 6
Dec 15 18:49:42 testnet-5-lodestar lodestar[16999]: Dec-15 18:49:42.000[]                 info: Synced - slot: 14323 - head: 14323 0x5839…e419 - execution: valid(0x95fa…d2dd) - finalized: 0xe56a…a648:445 - peers: 6
Dec 15 18:49:54 testnet-5-lodestar lodestar[16999]: Dec-15 18:49:54.001[]                 info: Synced - slot: 14324 - head: 14324 0x6bde…e652 - execution: valid(0xb4d3…5e3f) - finalized: 0xe56a…a648:445 - peers: 6
Dec 15 18:50:06 testnet-5-lodestar lodestar[16999]: Dec-15 18:50:06.001[]                 info: Synced - slot: 14325 - head: 14325 0xd45d…c92d - execution: valid(0xe41f…404e) - finalized: 0xe56a…a648:445 - peers: 6
Dec 15 18:50:18 testnet-5-lodestar lodestar[16999]: Dec-15 18:50:18.001[]                 info: Synced - slot: 14326 - head: 14326 0x9df3…9872 - execution: valid(0x2458…d5de) - finalized: 0xe56a…a648:445 - peers: 6
Dec 15 18:50:30 testnet-5-lodestar lodestar[16999]: Dec-15 18:50:30.001[]                 info: Synced - slot: 14327 - head: 14327 0xb5c0…4bc8 - execution: valid(0xf1ee…cc8a) - finalized: 0xe56a…a648:445 - peers: 6
Dec 15 18:50:42 testnet-5-lodestar lodestar[16999]: Dec-15 18:50:42.001[]                 info: Synced - slot: 14328 - head: 14328 0x791e…a782 - execution: valid(0x7664…ecc4) - finalized: 0xe56a…a648:445 - peers: 6
Dec 15 18:50:54 testnet-5-lodestar lodestar[16999]: Dec-15 18:50:54.001[]                 info: Synced - slot: 14329 - head: 14329 0x4841…af57 - execution: valid(0xe860…5c9e) - finalized: 0xe56a…a648:445 - peers: 6
Dec 15 18:51:06 testnet-5-lodestar lodestar[16999]: Dec-15 18:51:06.001[]                 info: Synced - slot: 14330 - head: 14330 0xd5dc…8ba8 - execution: valid(0xaf3b…b9d8) - finalized: 0xe56a…a648:445 - peers: 6
Dec 15 18:51:18 testnet-5-lodestar lodestar[16999]: Dec-15 18:51:18.002[]                 info: Synced - slot: 14331 - head: 14331 0x3828…01e5 - execution: valid(0x794f…db00) - finalized: 0xe56a…a648:445 - peers: 6
Dec 15 18:51:30 testnet-5-lodestar lodestar[16999]: Dec-15 18:51:30.000[]                 info: Synced - slot: 14332 - head: 14332 0xb530…398b - execution: valid(0xc55e…1073) - finalized: 0xe56a…a648:445 - peers: 6
Dec 15 18:51:42 testnet-5-lodestar lodestar[16999]: Dec-15 18:51:42.000[]                 info: Synced - slot: 14333 - head: 14333 0xef55…4e86 - execution: valid(0xe85d…90f6) - finalized: 0xe56a…a648:445 - peers: 6
Dec 15 18:51:54 testnet-5-lodestar lodestar[16999]: Dec-15 18:51:54.002[]                 info: Synced - slot: 14334 - head: 14334 0xea3e…00c3 - execution: valid(0x5fcf…7133) - finalized: 0xe56a…a648:445 - peers: 6
Dec 15 18:52:06 testnet-5-lodestar lodestar[16999]: Dec-15 18:52:06.002[]                 info: Synced - slot: 14335 - head: 14335 0x8bb6…4fc4 - execution: valid(0x55d4…ea9b) - finalized: 0xe56a…a648:445 - peers: 6
Dec 15 18:52:18 testnet-5-lodestar lodestar[16999]: Dec-15 18:52:18.000[]                 info: Synced - slot: 14336 - head: 14336 0x91c5…7f10 - execution: valid(0xa915…8a59) - finalized: 0xae2c…8644:446 - peers: 6
Dec 15 18:52:30 testnet-5-lodestar lodestar[16999]: Dec-15 18:52:30.000[]                 info: Synced - slot: 14337 - head: 14337 0x6a25…612c - execution: valid(0x0986…2538) - finalized: 0xae2c…8644:446 - peers: 6
Dec 15 18:52:42 testnet-5-lodestar lodestar[16999]: Dec-15 18:52:42.000[]                 info: Synced - slot: 14338 - head: 14338 0xa1f3…f06e - execution: valid(0xacc2…7081) - finalized: 0xae2c…8644:446 - peers: 6
Dec 15 18:52:54 testnet-5-lodestar lodestar[16999]: Dec-15 18:52:54.002[]                 info: Synced - slot: 14339 - head: 14339 0xd0cb…5c9e - execution: valid(0xed74…c849) - finalized: 0xae2c…8644:446 - peers: 6
Dec 15 18:53:06 testnet-5-lodestar lodestar[16999]: Dec-15 18:53:06.001[]                 info: Synced - slot: 14340 - head: 14340 0xfcf6…b05b - execution: valid(0x2f8f…c66b) - finalized: 0xae2c…8644:446 - peers: 6
Dec 15 18:53:18 testnet-5-lodestar lodestar[16999]: Dec-15 18:53:18.000[]                 info: Synced - slot: 14341 - head: 14341 0xf842…635d - execution: valid(0x9b3e…707b) - finalized: 0xae2c…8644:446 - peers: 6
Dec 15 18:53:30 testnet-5-lodestar lodestar[16999]: Dec-15 18:53:30.000[]                 info: Synced - slot: 14342 - head: 14342 0x32c4…a164 - execution: valid(0x764c…c952) - finalized: 0xae2c…8644:446 - peers: 6
Dec 15 18:53:42 testnet-5-lodestar lodestar[16999]: Dec-15 18:53:42.001[]                 info: Synced - slot: 14343 - head: 14343 0xdb10…570c - execution: valid(0x3791…c3a1) - finalized: 0xae2c…8644:446 - peers: 6
Dec 15 18:53:54 testnet-5-lodestar lodestar[16999]: Dec-15 18:53:54.001[]                 info: Synced - slot: 14344 - head: 14344 0xd9b5…6793 - execution: valid(0x6d48…123f) - finalized: 0xae2c…8644:446 - peers: 6
Dec 15 18:54:06 testnet-5-lodestar lodestar[16999]: Dec-15 18:54:06.000[]                 info: Synced - slot: 14345 - head: 14345 0x5bdd…fa05 - execution: valid(0xc2bc…8f3c) - finalized: 0xae2c…8644:446 - peers: 6
Dec 15 18:54:18 testnet-5-lodestar lodestar[16999]: Dec-15 18:54:18.000[]                 info: Synced - slot: 14346 - head: 14346 0xc664…546d - execution: valid(0x09b5…578f) - finalized: 0xae2c…8644:446 - peers: 6
Dec 15 18:54:30 testnet-5-lodestar lodestar[16999]: Dec-15 18:54:30.001[]                 info: Synced - slot: 14347 - head: 14347 0x1b4d…ed91 - execution: valid(0x61fc…b72b) - finalized: 0xae2c…8644:446 - peers: 6
Dec 15 18:54:42 testnet-5-lodestar lodestar[16999]: Dec-15 18:54:42.002[]                 info: Synced - slot: 14348 - head: 14348 0xeb00…daaf - execution: valid(0xf86a…43f4) - finalized: 0xae2c…8644:446 - peers: 6
Dec 15 18:54:54 testnet-5-lodestar lodestar[16999]: Dec-15 18:54:54.001[]                 info: Synced - slot: 14349 - head: 14349 0x66d5…4a61 - execution: valid(0x8cf6…550d) - finalized: 0xae2c…8644:446 - peers: 6
Dec 15 18:55:06 testnet-5-lodestar lodestar[16999]: Dec-15 18:55:06.000[]                 info: Synced - slot: 14350 - head: 14350 0xa07f…b3da - execution: valid(0x4cdb…6f11) - finalized: 0xae2c…8644:446 - peers: 6
Dec 15 18:55:18 testnet-5-lodestar lodestar[16999]: Dec-15 18:55:18.001[]                 info: Synced - slot: 14351 - head: 14351 0xf2a5…ee8e - execution: valid(0x7b5a…f721) - finalized: 0xae2c…8644:446 - peers: 6
Dec 15 18:55:30 testnet-5-lodestar lodestar[16999]: Dec-15 18:55:30.000[]                 info: Synced - slot: 14352 - head: 14352 0x25bb…a1e9 - execution: valid(0xd4aa…cc9c) - finalized: 0xae2c…8644:446 - peers: 6
Dec 15 18:55:42 testnet-5-lodestar lodestar[16999]: Dec-15 18:55:42.001[]                 info: Synced - slot: 14353 - head: 14353 0xecac…e2cb - execution: valid(0x08e3…8e3c) - finalized: 0xae2c…8644:446 - peers: 6
Dec 15 18:55:54 testnet-5-lodestar lodestar[16999]: Dec-15 18:55:54.001[]                 info: Synced - slot: 14354 - head: 14354 0xf8c9…1380 - execution: valid(0xde17…607a) - finalized: 0xae2c…8644:446 - peers: 6
Dec 15 18:56:06 testnet-5-lodestar lodestar[16999]: Dec-15 18:56:06.000[]                 info: Synced - slot: 14355 - head: 14355 0x8feb…0dc4 - execution: valid(0x3620…619a) - finalized: 0xae2c…8644:446 - peers: 6
Dec 15 18:56:18 testnet-5-lodestar lodestar[16999]: Dec-15 18:56:18.001[]                 info: Synced - slot: 14356 - head: 14356 0x34c9…94f9 - execution: valid(0x81e0…fafa) - finalized: 0xae2c…8644:446 - peers: 6
Dec 15 18:56:30 testnet-5-lodestar lodestar[16999]: Dec-15 18:56:30.001[]                 info: Synced - slot: 14357 - head: 14357 0xeaa6…cac2 - execution: valid(0xe310…f664) - finalized: 0xae2c…8644:446 - peers: 6
Dec 15 18:56:42 testnet-5-lodestar lodestar[16999]: Dec-15 18:56:42.000[]                 info: Synced - slot: 14358 - head: 14358 0x91cb…3839 - execution: valid(0x1277…1f9c) - finalized: 0xae2c…8644:446 - peers: 6
Dec 15 18:56:54 testnet-5-lodestar lodestar[16999]: Dec-15 18:56:54.002[]                 info: Synced - slot: 14359 - head: 14359 0x5a96…62a3 - execution: valid(0x09d3…6648) - finalized: 0xae2c…8644:446 - peers: 6
Dec 15 18:57:06 testnet-5-lodestar lodestar[16999]: Dec-15 18:57:06.000[]                 info: Synced - slot: 14360 - head: 14360 0xf676…acba - execution: valid(0xb01a…b35b) - finalized: 0xae2c…8644:446 - peers: 6
Dec 15 18:57:18 testnet-5-lodestar lodestar[16999]: Dec-15 18:57:18.000[]                 info: Synced - slot: 14361 - head: 14361 0xeffd…f3e4 - execution: valid(0x7cf2…ef80) - finalized: 0xae2c…8644:446 - peers: 6
Dec 15 18:57:30 testnet-5-lodestar lodestar[16999]: Dec-15 18:57:30.000[]                 info: Synced - slot: 14362 - head: 14362 0x45a7…7602 - execution: valid(0x6b07…0eb9) - finalized: 0xae2c…8644:446 - peers: 6
Dec 15 18:57:42 testnet-5-lodestar lodestar[16999]: Dec-15 18:57:42.000[]                 info: Synced - slot: 14363 - head: 14363 0xcf37…5190 - execution: valid(0xbc73…d1f6) - finalized: 0xae2c…8644:446 - peers: 6
Dec 15 18:57:54 testnet-5-lodestar lodestar[16999]: Dec-15 18:57:54.000[]                 info: Synced - slot: 14364 - head: 14364 0xa323…7e68 - execution: valid(0x7b1b…51ea) - finalized: 0xae2c…8644:446 - peers: 6
Dec 15 18:58:06 testnet-5-lodestar lodestar[16999]: Dec-15 18:58:06.000[]                 info: Synced - slot: 14365 - head: 14365 0x7e9e…0553 - execution: valid(0x7637…0f21) - finalized: 0xae2c…8644:446 - peers: 6
Dec 15 18:58:18 testnet-5-lodestar lodestar[16999]: Dec-15 18:58:18.001[]                 info: Synced - slot: 14366 - head: 14366 0x68b3…50b9 - execution: valid(0xf193…a3b0) - finalized: 0xae2c…8644:446 - peers: 6
Dec 15 18:58:30 testnet-5-lodestar lodestar[16999]: Dec-15 18:58:30.001[]                 info: Synced - slot: 14367 - head: 14367 0xfa3e…82c2 - execution: valid(0xdd99…d70d) - finalized: 0xae2c…8644:446 - peers: 6
Dec 15 18:58:42 testnet-5-lodestar lodestar[16999]: Dec-15 18:58:42.000[]                 info: Synced - slot: 14368 - head: 14368 0x3265…924b - execution: valid(0x383b…d4d6) - finalized: 0x1de8…fad0:447 - peers: 6
Dec 15 18:58:54 testnet-5-lodestar lodestar[16999]: Dec-15 18:58:54.001[]                 info: Synced - slot: 14369 - head: 14369 0x3a64…f302 - execution: valid(0xead4…42e9) - finalized: 0x1de8…fad0:447 - peers: 6
Dec 15 18:59:06 testnet-5-lodestar lodestar[16999]: Dec-15 18:59:06.002[]                 info: Synced - slot: 14370 - head: 14370 0x1af7…79f5 - execution: valid(0xc30b…4ee6) - finalized: 0x1de8…fad0:447 - peers: 6
Dec 15 18:59:18 testnet-5-lodestar lodestar[16999]: Dec-15 18:59:18.001[]                 info: Synced - slot: 14371 - head: 14371 0x46d5…bb9b - execution: valid(0xe7b0…6a09) - finalized: 0x1de8…fad0:447 - peers: 6
Dec 15 18:59:30 testnet-5-lodestar lodestar[16999]: Dec-15 18:59:30.001[]                 info: Synced - slot: 14372 - head: 14372 0x7fcf…2a9e - execution: valid(0x5b8b…177f) - finalized: 0x1de8…fad0:447 - peers: 6
Dec 15 18:59:42 testnet-5-lodestar lodestar[16999]: Dec-15 18:59:42.001[]                 info: Synced - slot: 14373 - head: 14373 0x8159…f8ae - execution: valid(0x18af…0d5a) - finalized: 0x1de8…fad0:447 - peers: 6
Dec 15 18:59:54 testnet-5-lodestar lodestar[16999]: Dec-15 18:59:54.001[]                 info: Synced - slot: 14374 - head: 14374 0x4d6a…8aba - execution: valid(0x2a82…b946) - finalized: 0x1de8…fad0:447 - peers: 6

# planned network reset at 19:00:00 - client was stopped, datadir removed and started with a new genesis state again

Dec 15 19:00:02 testnet-5-lodestar systemd[1]: Stopping eth2 beacon chain service...
Dec 15 19:00:02 testnet-5-lodestar lodestar[16999]: Dec-15 19:00:02.461[]                 info: Stopping gracefully, use Ctrl+C again to force process exit
Dec 15 19:00:02 testnet-5-lodestar systemd[1]: beacon-chain.service: Succeeded.
Dec 15 19:00:02 testnet-5-lodestar systemd[1]: Stopped eth2 beacon chain service.
Dec 15 19:00:02 testnet-5-lodestar systemd[1]: beacon-chain.service: Consumed 1min 14.653s CPU time.
Dec 15 19:00:02 testnet-5-lodestar systemd[1]: Started eth2 beacon chain service.
Dec 15 19:00:05 testnet-5-lodestar lodestar[18306]: Dec-15 19:00:05.631[]                 info: Lodestar network=testnet, version=v1.2.1/df92e0c, commit=df92e0c6a76e9d1bbdbfae577634c9612b04c4e6
Dec 15 19:00:05 testnet-5-lodestar lodestar[18306]: Dec-15 19:00:05.642[]                 info: Connected to LevelDB database path=/home/etherum/data-lodestar/chain-db
Dec 15 19:00:06 testnet-5-lodestar lodestar[18306]: Dec-15 19:00:06.180[]                 info: Initializing beacon from a valid checkpoint state slot=0, epoch=0, stateRoot=0xce0b0ce7b47180ccb5cff36d558786bc348ce62c1d8cb3524cafd174379bbd29, isWithinWeakSubjectivityPeriod=true
Dec 15 19:00:06 testnet-5-lodestar lodestar[18306]: Dec-15 19:00:06.547[network]          info: PeerId 16Uiu2HAm4EzSPBGK6fyQzPsgqnYm3ngjeoUC5hJXuxL6yT89s8t2, Multiaddrs /ip4/127.0.0.1/tcp/9000/p2p/16Uiu2HAm4EzSPBGK6fyQzPsgqnYm3ngjeoUC5hJXuxL6yT89s8t2,/ip4/5.75.242.24/tcp/9000/p2p/16Uiu2HAm4EzSPBGK6fyQzPsgqnYm3ngjeoUC5hJXuxL6yT89s8t2,/ip4/10.16.97.6/tcp/9000/p2p/16Uiu2HAm4EzSPBGK6fyQzPsgqnYm3ngjeoUC5hJXuxL6yT89s8t2
Dec 15 19:00:06 testnet-5-lodestar lodestar[18306]: Dec-15 19:00:06.676[rest]             info: Started REST API server address=http://0.0.0.0:4000
Dec 15 19:00:06 testnet-5-lodestar lodestar[18306]: Dec-15 19:00:06.676[rest]             warn: REST API server is exposed, ensure untrusted traffic cannot reach this API
Dec 15 19:00:06 testnet-5-lodestar lodestar[18306]: Dec-15 19:00:06.677[]                 warn: Low peer count peers=0
Dec 15 19:00:06 testnet-5-lodestar lodestar[18306]: Dec-15 19:00:06.678[]                 info: Searching peers - peers: 0 - slot: -25 - head: 0 0xf773…040f - finalized: 0x0000…0000:0
Dec 15 19:00:18 testnet-5-lodestar lodestar[18306]: Dec-15 19:00:18.001[]                 info: Searching peers - peers: 0 - slot: -24 - head: 0 0xf773…040f - finalized: 0x0000…0000:0
Dec 15 19:00:30 testnet-5-lodestar lodestar[18306]: Dec-15 19:00:30.001[]                 info: Searching peers - peers: 0 - slot: -23 - head: 0 0xf773…040f - finalized: 0x0000…0000:0
Dec 15 19:00:42 testnet-5-lodestar lodestar[18306]: Dec-15 19:00:42.001[]                 info: Searching peers - peers: 0 - slot: -22 - head: 0 0xf773…040f - finalized: 0x0000…0000:0
Dec 15 19:00:54 testnet-5-lodestar lodestar[18306]: Dec-15 19:00:54.002[]                 info: Searching peers - peers: 0 - slot: -21 - head: 0 0xf773…040f - finalized: 0x0000…0000:0
Dec 15 19:01:06 testnet-5-lodestar lodestar[18306]: Dec-15 19:01:06.004[]                 info: Searching peers - peers: 0 - slot: -20 - head: 0 0xf773…040f - finalized: 0x0000…0000:0
Dec 15 19:01:06 testnet-5-lodestar lodestar[18306]: Dec-15 19:01:06.007[chain]            info: Validated transition configuration with execution client terminalTotalDifficulty=0x0, terminalBlockHash=0x0000000000000000000000000000000000000000000000000000000000000000, terminalBlockNumber=0x0
Dec 15 19:01:18 testnet-5-lodestar lodestar[18306]: Dec-15 19:01:18.003[]                 info: Searching peers - peers: 0 - slot: -19 - head: 0 0xf773…040f - finalized: 0x0000…0000:0
Dec 15 19:01:30 testnet-5-lodestar lodestar[18306]: Dec-15 19:01:30.001[]                 info: Searching peers - peers: 0 - slot: -18 - head: 0 0xf773…040f - finalized: 0x0000…0000:0
Dec 15 19:01:42 testnet-5-lodestar lodestar[18306]: Dec-15 19:01:42.000[]                 info: Searching peers - peers: 0 - slot: -17 - head: 0 0xf773…040f - finalized: 0x0000…0000:0
Dec 15 19:01:54 testnet-5-lodestar lodestar[18306]: Dec-15 19:01:54.001[]                 info: Searching peers - peers: 0 - slot: -16 - head: 0 0xf773…040f - finalized: 0x0000…0000:0
Dec 15 19:02:06 testnet-5-lodestar lodestar[18306]: Dec-15 19:02:06.003[]                 info: Searching peers - peers: 0 - slot: -15 - head: 0 0xf773…040f - finalized: 0x0000…0000:0
Dec 15 19:02:18 testnet-5-lodestar lodestar[18306]: Dec-15 19:02:18.002[]                 info: Searching peers - peers: 0 - slot: -14 - head: 0 0xf773…040f - finalized: 0x0000…0000:0
Dec 15 19:02:30 testnet-5-lodestar lodestar[18306]: Dec-15 19:02:30.001[]                 info: Searching peers - peers: 0 - slot: -13 - head: 0 0xf773…040f - finalized: 0x0000…0000:0
Dec 15 19:02:42 testnet-5-lodestar lodestar[18306]: Dec-15 19:02:42.002[]                 info: Searching peers - peers: 0 - slot: -12 - head: 0 0xf773…040f - finalized: 0x0000…0000:0
Dec 15 19:02:54 testnet-5-lodestar lodestar[18306]: Dec-15 19:02:54.001[]                 info: Searching peers - peers: 0 - slot: -11 - head: 0 0xf773…040f - finalized: 0x0000…0000:0
Dec 15 19:03:06 testnet-5-lodestar lodestar[18306]: Dec-15 19:03:06.003[]                 info: Searching peers - peers: 0 - slot: -10 - head: 0 0xf773…040f - finalized: 0x0000…0000:0
Dec 15 19:03:18 testnet-5-lodestar lodestar[18306]: Dec-15 19:03:18.002[]                 info: Searching peers - peers: 0 - slot: -9 - head: 0 0xf773…040f - finalized: 0x0000…0000:0
Dec 15 19:03:30 testnet-5-lodestar lodestar[18306]: Dec-15 19:03:30.002[]                 info: Searching peers - peers: 0 - slot: -8 - head: 0 0xf773…040f - finalized: 0x0000…0000:0
Dec 15 19:03:42 testnet-5-lodestar lodestar[18306]: Dec-15 19:03:42.002[]                 info: Searching peers - peers: 0 - slot: -7 - head: 0 0xf773…040f - finalized: 0x0000…0000:0
Dec 15 19:03:54 testnet-5-lodestar lodestar[18306]: Dec-15 19:03:54.001[]                 info: Searching peers - peers: 0 - slot: -6 - head: 0 0xf773…040f - finalized: 0x0000…0000:0
Dec 15 19:04:06 testnet-5-lodestar lodestar[18306]: Dec-15 19:04:06.002[]                 info: Searching peers - peers: 0 - slot: -5 - head: 0 0xf773…040f - finalized: 0x0000…0000:0
Dec 15 19:04:18 testnet-5-lodestar lodestar[18306]: Dec-15 19:04:18.001[]                 info: Searching peers - peers: 0 - slot: -4 - head: 0 0xf773…040f - finalized: 0x0000…0000:0
Dec 15 19:04:30 testnet-5-lodestar lodestar[18306]: Dec-15 19:04:30.000[]                 info: Searching peers - peers: 0 - slot: -3 - head: 0 0xf773…040f - finalized: 0x0000…0000:0
Dec 15 19:04:42 testnet-5-lodestar lodestar[18306]: Dec-15 19:04:42.000[]                 info: Searching peers - peers: 0 - slot: -2 - head: 0 0xf773…040f - finalized: 0x0000…0000:0
Dec 15 19:04:54 testnet-5-lodestar lodestar[18306]: Dec-15 19:04:54.002[]                 info: Searching peers - peers: 0 - slot: -1 - head: 0 0xf773…040f - finalized: 0x0000…0000:0
Dec 15 19:05:00 testnet-5-lodestar lodestar[18306]: Dec-15 19:05:00.407[network]          info: Subscribed gossip core topics
Dec 15 19:05:00 testnet-5-lodestar lodestar[18306]: Dec-15 19:05:00.411[sync]             info: Subscribed gossip core topics
Dec 15 19:05:04 testnet-5-lodestar lodestar[18306]: Dec-15 19:05:04.134[api]             error: Error on submitPoolAttestations [0] slot=0, index=0 PublishError.InsufficientPeers
Dec 15 19:05:04 testnet-5-lodestar lodestar[18306]: Error: PublishError.InsufficientPeers
Dec 15 19:05:04 testnet-5-lodestar lodestar[18306]:     at Eth2Gossipsub.publish (file:///home/etherum/src/lodestar.git/node_modules/@chainsafe/libp2p-gossipsub/src/index.ts:1957:13)
Dec 15 19:05:04 testnet-5-lodestar lodestar[18306]:     at Eth2Gossipsub.publishObject (file:///home/etherum/src/lodestar.git/packages/beacon-node/src/network/gossip/gossipsub.ts:171:20)
Dec 15 19:05:04 testnet-5-lodestar lodestar[18306]:     at Eth2Gossipsub.publishBeaconAttestation (file:///home/etherum/src/lodestar.git/packages/beacon-node/src/network/gossip/gossipsub.ts:221:12)
Dec 15 19:05:04 testnet-5-lodestar lodestar[18306]:     at file:///home/etherum/src/lodestar.git/packages/beacon-node/src/api/impl/beacon/pool/index.ts:52:31
Dec 15 19:05:04 testnet-5-lodestar lodestar[18306]:     at async Promise.all (index 0)
Dec 15 19:05:04 testnet-5-lodestar lodestar[18306]:     at Object.submitPoolAttestations (file:///home/etherum/src/lodestar.git/packages/beacon-node/src/api/impl/beacon/pool/index.ts:46:7)
Dec 15 19:05:04 testnet-5-lodestar lodestar[18306]:     at Object.handler (file:///home/etherum/src/lodestar.git/packages/api/src/utils/server/genericJsonServer.ts:41:23)
Dec 15 19:05:04 testnet-5-lodestar lodestar[18306]: Dec-15 19:05:04.158[rest]            error: Req req-o submitPoolAttestations error  PublishError.InsufficientPeers
Dec 15 19:05:04 testnet-5-lodestar lodestar[18306]: Error: PublishError.InsufficientPeers
Dec 15 19:05:04 testnet-5-lodestar lodestar[18306]:     at Eth2Gossipsub.publish (file:///home/etherum/src/lodestar.git/node_modules/@chainsafe/libp2p-gossipsub/src/index.ts:1957:13)
Dec 15 19:05:04 testnet-5-lodestar lodestar[18306]:     at Eth2Gossipsub.publishObject (file:///home/etherum/src/lodestar.git/packages/beacon-node/src/network/gossip/gossipsub.ts:171:20)
Dec 15 19:05:04 testnet-5-lodestar lodestar[18306]:     at Eth2Gossipsub.publishBeaconAttestation (file:///home/etherum/src/lodestar.git/packages/beacon-node/src/network/gossip/gossipsub.ts:221:12)
Dec 15 19:05:04 testnet-5-lodestar lodestar[18306]:     at file:///home/etherum/src/lodestar.git/packages/beacon-node/src/api/impl/beacon/pool/index.ts:52:31
Dec 15 19:05:04 testnet-5-lodestar lodestar[18306]:     at async Promise.all (index 0)
Dec 15 19:05:04 testnet-5-lodestar lodestar[18306]:     at Object.submitPoolAttestations (file:///home/etherum/src/lodestar.git/packages/beacon-node/src/api/impl/beacon/pool/index.ts:46:7)
Dec 15 19:05:04 testnet-5-lodestar lodestar[18306]:     at Object.handler (file:///home/etherum/src/lodestar.git/packages/api/src/utils/server/genericJsonServer.ts:41:23)
Dec 15 19:05:06 testnet-5-lodestar lodestar[18306]: Dec-15 19:05:06.001[]                 info: Synced - slot: 0 - head: 0 0xf773…040f - execution: valid(0xa155…a736) - finalized: 0x0000…0000:0 - peers: 1
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: Dec-15 19:05:12.471[api]             error: Error on submitPoolAttestations [0] slot=1, index=0 PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: Error: PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Eth2Gossipsub.publish (file:///home/etherum/src/lodestar.git/node_modules/@chainsafe/libp2p-gossipsub/src/index.ts:1957:13)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Eth2Gossipsub.publishObject (file:///home/etherum/src/lodestar.git/packages/beacon-node/src/network/gossip/gossipsub.ts:171:20)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Eth2Gossipsub.publishBeaconAttestation (file:///home/etherum/src/lodestar.git/packages/beacon-node/src/network/gossip/gossipsub.ts:221:12)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at file:///home/etherum/src/lodestar.git/packages/beacon-node/src/api/impl/beacon/pool/index.ts:52:31
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at async Promise.all (index 0)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Object.submitPoolAttestations (file:///home/etherum/src/lodestar.git/packages/beacon-node/src/api/impl/beacon/pool/index.ts:46:7)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Object.handler (file:///home/etherum/src/lodestar.git/packages/api/src/utils/server/genericJsonServer.ts:41:23)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: Dec-15 19:05:12.472[api]             error: Error on submitPoolAttestations [1] slot=1, index=0 PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: Error: PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Eth2Gossipsub.publish (file:///home/etherum/src/lodestar.git/node_modules/@chainsafe/libp2p-gossipsub/src/index.ts:1957:13)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Eth2Gossipsub.publishObject (file:///home/etherum/src/lodestar.git/packages/beacon-node/src/network/gossip/gossipsub.ts:171:20)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Eth2Gossipsub.publishBeaconAttestation (file:///home/etherum/src/lodestar.git/packages/beacon-node/src/network/gossip/gossipsub.ts:221:12)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at file:///home/etherum/src/lodestar.git/packages/beacon-node/src/api/impl/beacon/pool/index.ts:52:31
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at async Promise.all (index 1)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Object.submitPoolAttestations (file:///home/etherum/src/lodestar.git/packages/beacon-node/src/api/impl/beacon/pool/index.ts:46:7)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Object.handler (file:///home/etherum/src/lodestar.git/packages/api/src/utils/server/genericJsonServer.ts:41:23)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: Dec-15 19:05:12.472[api]             error: Error on submitPoolSyncCommitteeSignatures [0] slot=1, validatorIndex=411 PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: Error: PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Eth2Gossipsub.publish (file:///home/etherum/src/lodestar.git/node_modules/@chainsafe/libp2p-gossipsub/src/index.ts:1957:13)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Eth2Gossipsub.publishObject (file:///home/etherum/src/lodestar.git/packages/beacon-node/src/network/gossip/gossipsub.ts:171:20)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Eth2Gossipsub.publishSyncCommitteeSignature (file:///home/etherum/src/lodestar.git/packages/beacon-node/src/network/gossip/gossipsub.ts:250:5)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at async Promise.all (index 0)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at file:///home/etherum/src/lodestar.git/packages/beacon-node/src/api/impl/beacon/pool/index.ts:146:13
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at async Promise.all (index 0)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Object.submitPoolSyncCommitteeSignatures (file:///home/etherum/src/lodestar.git/packages/beacon-node/src/api/impl/beacon/pool/index.ts:116:7)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Object.handler (file:///home/etherum/src/lodestar.git/packages/api/src/utils/server/genericJsonServer.ts:41:23)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: Dec-15 19:05:12.473[api]             error: Error on submitPoolSyncCommitteeSignatures [1] slot=1, validatorIndex=408 PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: Error: PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Eth2Gossipsub.publish (file:///home/etherum/src/lodestar.git/node_modules/@chainsafe/libp2p-gossipsub/src/index.ts:1957:13)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Eth2Gossipsub.publishObject (file:///home/etherum/src/lodestar.git/packages/beacon-node/src/network/gossip/gossipsub.ts:171:20)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Eth2Gossipsub.publishSyncCommitteeSignature (file:///home/etherum/src/lodestar.git/packages/beacon-node/src/network/gossip/gossipsub.ts:250:5)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at async Promise.all (index 0)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at file:///home/etherum/src/lodestar.git/packages/beacon-node/src/api/impl/beacon/pool/index.ts:146:13
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at async Promise.all (index 1)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Object.submitPoolSyncCommitteeSignatures (file:///home/etherum/src/lodestar.git/packages/beacon-node/src/api/impl/beacon/pool/index.ts:116:7)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Object.handler (file:///home/etherum/src/lodestar.git/packages/api/src/utils/server/genericJsonServer.ts:41:23)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: Dec-15 19:05:12.473[api]             error: Error on submitPoolSyncCommitteeSignatures [2] slot=1, validatorIndex=436 PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: Error: PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Eth2Gossipsub.publish (file:///home/etherum/src/lodestar.git/node_modules/@chainsafe/libp2p-gossipsub/src/index.ts:1957:13)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Eth2Gossipsub.publishObject (file:///home/etherum/src/lodestar.git/packages/beacon-node/src/network/gossip/gossipsub.ts:171:20)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Eth2Gossipsub.publishSyncCommitteeSignature (file:///home/etherum/src/lodestar.git/packages/beacon-node/src/network/gossip/gossipsub.ts:250:5)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at async Promise.all (index 0)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at file:///home/etherum/src/lodestar.git/packages/beacon-node/src/api/impl/beacon/pool/index.ts:146:13
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at async Promise.all (index 2)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Object.submitPoolSyncCommitteeSignatures (file:///home/etherum/src/lodestar.git/packages/beacon-node/src/api/impl/beacon/pool/index.ts:116:7)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Object.handler (file:///home/etherum/src/lodestar.git/packages/api/src/utils/server/genericJsonServer.ts:41:23)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: Dec-15 19:05:12.474[api]             error: Error on submitPoolSyncCommitteeSignatures [3] slot=1, validatorIndex=431 PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: Error: PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Eth2Gossipsub.publish (file:///home/etherum/src/lodestar.git/node_modules/@chainsafe/libp2p-gossipsub/src/index.ts:1957:13)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Eth2Gossipsub.publishObject (file:///home/etherum/src/lodestar.git/packages/beacon-node/src/network/gossip/gossipsub.ts:171:20)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Eth2Gossipsub.publishSyncCommitteeSignature (file:///home/etherum/src/lodestar.git/packages/beacon-node/src/network/gossip/gossipsub.ts:250:5)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at async Promise.all (index 0)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at file:///home/etherum/src/lodestar.git/packages/beacon-node/src/api/impl/beacon/pool/index.ts:146:13
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at async Promise.all (index 3)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Object.submitPoolSyncCommitteeSignatures (file:///home/etherum/src/lodestar.git/packages/beacon-node/src/api/impl/beacon/pool/index.ts:116:7)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Object.handler (file:///home/etherum/src/lodestar.git/packages/api/src/utils/server/genericJsonServer.ts:41:23)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: Dec-15 19:05:12.474[api]             error: Error on submitPoolSyncCommitteeSignatures [4] slot=1, validatorIndex=441 PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: Error: PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Eth2Gossipsub.publish (file:///home/etherum/src/lodestar.git/node_modules/@chainsafe/libp2p-gossipsub/src/index.ts:1957:13)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Eth2Gossipsub.publishObject (file:///home/etherum/src/lodestar.git/packages/beacon-node/src/network/gossip/gossipsub.ts:171:20)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Eth2Gossipsub.publishSyncCommitteeSignature (file:///home/etherum/src/lodestar.git/packages/beacon-node/src/network/gossip/gossipsub.ts:250:5)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at async Promise.all (index 0)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at file:///home/etherum/src/lodestar.git/packages/beacon-node/src/api/impl/beacon/pool/index.ts:146:13
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at async Promise.all (index 4)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Object.submitPoolSyncCommitteeSignatures (file:///home/etherum/src/lodestar.git/packages/beacon-node/src/api/impl/beacon/pool/index.ts:116:7)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Object.handler (file:///home/etherum/src/lodestar.git/packages/api/src/utils/server/genericJsonServer.ts:41:23)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: Dec-15 19:05:12.475[api]             error: Error on submitPoolSyncCommitteeSignatures [5] slot=1, validatorIndex=426 PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: Error: PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Eth2Gossipsub.publish (file:///home/etherum/src/lodestar.git/node_modules/@chainsafe/libp2p-gossipsub/src/index.ts:1957:13)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Eth2Gossipsub.publishObject (file:///home/etherum/src/lodestar.git/packages/beacon-node/src/network/gossip/gossipsub.ts:171:20)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Eth2Gossipsub.publishSyncCommitteeSignature (file:///home/etherum/src/lodestar.git/packages/beacon-node/src/network/gossip/gossipsub.ts:250:5)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at async Promise.all (index 0)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at file:///home/etherum/src/lodestar.git/packages/beacon-node/src/api/impl/beacon/pool/index.ts:146:13
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at async Promise.all (index 5)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Object.submitPoolSyncCommitteeSignatures (file:///home/etherum/src/lodestar.git/packages/beacon-node/src/api/impl/beacon/pool/index.ts:116:7)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Object.handler (file:///home/etherum/src/lodestar.git/packages/api/src/utils/server/genericJsonServer.ts:41:23)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: Dec-15 19:05:12.475[api]             error: Error on submitPoolSyncCommitteeSignatures [6] slot=1, validatorIndex=421 PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: Error: PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Eth2Gossipsub.publish (file:///home/etherum/src/lodestar.git/node_modules/@chainsafe/libp2p-gossipsub/src/index.ts:1957:13)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Eth2Gossipsub.publishObject (file:///home/etherum/src/lodestar.git/packages/beacon-node/src/network/gossip/gossipsub.ts:171:20)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Eth2Gossipsub.publishSyncCommitteeSignature (file:///home/etherum/src/lodestar.git/packages/beacon-node/src/network/gossip/gossipsub.ts:250:5)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at async Promise.all (index 0)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at file:///home/etherum/src/lodestar.git/packages/beacon-node/src/api/impl/beacon/pool/index.ts:146:13
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at async Promise.all (index 6)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Object.submitPoolSyncCommitteeSignatures (file:///home/etherum/src/lodestar.git/packages/beacon-node/src/api/impl/beacon/pool/index.ts:116:7)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Object.handler (file:///home/etherum/src/lodestar.git/packages/api/src/utils/server/genericJsonServer.ts:41:23)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: Dec-15 19:05:12.476[api]             error: Error on submitPoolSyncCommitteeSignatures [7] slot=1, validatorIndex=424 PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: Error: PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Eth2Gossipsub.publish (file:///home/etherum/src/lodestar.git/node_modules/@chainsafe/libp2p-gossipsub/src/index.ts:1957:13)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Eth2Gossipsub.publishObject (file:///home/etherum/src/lodestar.git/packages/beacon-node/src/network/gossip/gossipsub.ts:171:20)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Eth2Gossipsub.publishSyncCommitteeSignature (file:///home/etherum/src/lodestar.git/packages/beacon-node/src/network/gossip/gossipsub.ts:250:5)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at async Promise.all (index 0)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at file:///home/etherum/src/lodestar.git/packages/beacon-node/src/api/impl/beacon/pool/index.ts:146:13
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at async Promise.all (index 7)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Object.submitPoolSyncCommitteeSignatures (file:///home/etherum/src/lodestar.git/packages/beacon-node/src/api/impl/beacon/pool/index.ts:116:7)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Object.handler (file:///home/etherum/src/lodestar.git/packages/api/src/utils/server/genericJsonServer.ts:41:23)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: Dec-15 19:05:12.476[api]             error: Error on submitPoolSyncCommitteeSignatures [8] slot=1, validatorIndex=419 PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: Error: PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Eth2Gossipsub.publish (file:///home/etherum/src/lodestar.git/node_modules/@chainsafe/libp2p-gossipsub/src/index.ts:1957:13)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Eth2Gossipsub.publishObject (file:///home/etherum/src/lodestar.git/packages/beacon-node/src/network/gossip/gossipsub.ts:171:20)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Eth2Gossipsub.publishSyncCommitteeSignature (file:///home/etherum/src/lodestar.git/packages/beacon-node/src/network/gossip/gossipsub.ts:250:5)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at async Promise.all (index 0)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at file:///home/etherum/src/lodestar.git/packages/beacon-node/src/api/impl/beacon/pool/index.ts:146:13
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at async Promise.all (index 8)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Object.submitPoolSyncCommitteeSignatures (file:///home/etherum/src/lodestar.git/packages/beacon-node/src/api/impl/beacon/pool/index.ts:116:7)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Object.handler (file:///home/etherum/src/lodestar.git/packages/api/src/utils/server/genericJsonServer.ts:41:23)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: Dec-15 19:05:12.477[api]             error: Error on submitPoolSyncCommitteeSignatures [9] slot=1, validatorIndex=403 PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: Error: PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Eth2Gossipsub.publish (file:///home/etherum/src/lodestar.git/node_modules/@chainsafe/libp2p-gossipsub/src/index.ts:1957:13)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Eth2Gossipsub.publishObject (file:///home/etherum/src/lodestar.git/packages/beacon-node/src/network/gossip/gossipsub.ts:171:20)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Eth2Gossipsub.publishSyncCommitteeSignature (file:///home/etherum/src/lodestar.git/packages/beacon-node/src/network/gossip/gossipsub.ts:250:5)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at async Promise.all (index 0)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at file:///home/etherum/src/lodestar.git/packages/beacon-node/src/api/impl/beacon/pool/index.ts:146:13
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at async Promise.all (index 9)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Object.submitPoolSyncCommitteeSignatures (file:///home/etherum/src/lodestar.git/packages/beacon-node/src/api/impl/beacon/pool/index.ts:116:7)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Object.handler (file:///home/etherum/src/lodestar.git/packages/api/src/utils/server/genericJsonServer.ts:41:23)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: Dec-15 19:05:12.477[api]             error: Error on submitPoolSyncCommitteeSignatures [10] slot=1, validatorIndex=422 PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: Error: PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Eth2Gossipsub.publish (file:///home/etherum/src/lodestar.git/node_modules/@chainsafe/libp2p-gossipsub/src/index.ts:1957:13)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Eth2Gossipsub.publishObject (file:///home/etherum/src/lodestar.git/packages/beacon-node/src/network/gossip/gossipsub.ts:171:20)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Eth2Gossipsub.publishSyncCommitteeSignature (file:///home/etherum/src/lodestar.git/packages/beacon-node/src/network/gossip/gossipsub.ts:250:5)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at async Promise.all (index 0)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at file:///home/etherum/src/lodestar.git/packages/beacon-node/src/api/impl/beacon/pool/index.ts:146:13
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at async Promise.all (index 10)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Object.submitPoolSyncCommitteeSignatures (file:///home/etherum/src/lodestar.git/packages/beacon-node/src/api/impl/beacon/pool/index.ts:116:7)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Object.handler (file:///home/etherum/src/lodestar.git/packages/api/src/utils/server/genericJsonServer.ts:41:23)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: Dec-15 19:05:12.478[api]             error: Error on submitPoolSyncCommitteeSignatures [11] slot=1, validatorIndex=443 PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: Error: PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Eth2Gossipsub.publish (file:///home/etherum/src/lodestar.git/node_modules/@chainsafe/libp2p-gossipsub/src/index.ts:1957:13)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Eth2Gossipsub.publishObject (file:///home/etherum/src/lodestar.git/packages/beacon-node/src/network/gossip/gossipsub.ts:171:20)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Eth2Gossipsub.publishSyncCommitteeSignature (file:///home/etherum/src/lodestar.git/packages/beacon-node/src/network/gossip/gossipsub.ts:250:5)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at async Promise.all (index 0)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at file:///home/etherum/src/lodestar.git/packages/beacon-node/src/api/impl/beacon/pool/index.ts:146:13
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at async Promise.all (index 11)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Object.submitPoolSyncCommitteeSignatures (file:///home/etherum/src/lodestar.git/packages/beacon-node/src/api/impl/beacon/pool/index.ts:116:7)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Object.handler (file:///home/etherum/src/lodestar.git/packages/api/src/utils/server/genericJsonServer.ts:41:23)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: Dec-15 19:05:12.478[api]             error: Error on submitPoolSyncCommitteeSignatures [12] slot=1, validatorIndex=448 PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: Error: PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Eth2Gossipsub.publish (file:///home/etherum/src/lodestar.git/node_modules/@chainsafe/libp2p-gossipsub/src/index.ts:1957:13)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Eth2Gossipsub.publishObject (file:///home/etherum/src/lodestar.git/packages/beacon-node/src/network/gossip/gossipsub.ts:171:20)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Eth2Gossipsub.publishSyncCommitteeSignature (file:///home/etherum/src/lodestar.git/packages/beacon-node/src/network/gossip/gossipsub.ts:250:5)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at async Promise.all (index 0)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at file:///home/etherum/src/lodestar.git/packages/beacon-node/src/api/impl/beacon/pool/index.ts:146:13
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at async Promise.all (index 12)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Object.submitPoolSyncCommitteeSignatures (file:///home/etherum/src/lodestar.git/packages/beacon-node/src/api/impl/beacon/pool/index.ts:116:7)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Object.handler (file:///home/etherum/src/lodestar.git/packages/api/src/utils/server/genericJsonServer.ts:41:23)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: Dec-15 19:05:12.479[api]             error: Error on submitPoolSyncCommitteeSignatures [13] slot=1, validatorIndex=404 PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: Error: PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Eth2Gossipsub.publish (file:///home/etherum/src/lodestar.git/node_modules/@chainsafe/libp2p-gossipsub/src/index.ts:1957:13)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Eth2Gossipsub.publishObject (file:///home/etherum/src/lodestar.git/packages/beacon-node/src/network/gossip/gossipsub.ts:171:20)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Eth2Gossipsub.publishSyncCommitteeSignature (file:///home/etherum/src/lodestar.git/packages/beacon-node/src/network/gossip/gossipsub.ts:250:5)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at async Promise.all (index 0)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at file:///home/etherum/src/lodestar.git/packages/beacon-node/src/api/impl/beacon/pool/index.ts:146:13
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at async Promise.all (index 13)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Object.submitPoolSyncCommitteeSignatures (file:///home/etherum/src/lodestar.git/packages/beacon-node/src/api/impl/beacon/pool/index.ts:116:7)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Object.handler (file:///home/etherum/src/lodestar.git/packages/api/src/utils/server/genericJsonServer.ts:41:23)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: Dec-15 19:05:12.480[api]             error: Error on submitPoolSyncCommitteeSignatures [14] slot=1, validatorIndex=450 PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: Error: PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Eth2Gossipsub.publish (file:///home/etherum/src/lodestar.git/node_modules/@chainsafe/libp2p-gossipsub/src/index.ts:1957:13)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Eth2Gossipsub.publishObject (file:///home/etherum/src/lodestar.git/packages/beacon-node/src/network/gossip/gossipsub.ts:171:20)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Eth2Gossipsub.publishSyncCommitteeSignature (file:///home/etherum/src/lodestar.git/packages/beacon-node/src/network/gossip/gossipsub.ts:250:5)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at async Promise.all (index 0)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at file:///home/etherum/src/lodestar.git/packages/beacon-node/src/api/impl/beacon/pool/index.ts:146:13
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at async Promise.all (index 14)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Object.submitPoolSyncCommitteeSignatures (file:///home/etherum/src/lodestar.git/packages/beacon-node/src/api/impl/beacon/pool/index.ts:116:7)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Object.handler (file:///home/etherum/src/lodestar.git/packages/api/src/utils/server/genericJsonServer.ts:41:23)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: Dec-15 19:05:12.480[api]             error: Error on submitPoolSyncCommitteeSignatures [15] slot=1, validatorIndex=418 PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: Error: PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Eth2Gossipsub.publish (file:///home/etherum/src/lodestar.git/node_modules/@chainsafe/libp2p-gossipsub/src/index.ts:1957:13)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Eth2Gossipsub.publishObject (file:///home/etherum/src/lodestar.git/packages/beacon-node/src/network/gossip/gossipsub.ts:171:20)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Eth2Gossipsub.publishSyncCommitteeSignature (file:///home/etherum/src/lodestar.git/packages/beacon-node/src/network/gossip/gossipsub.ts:250:5)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at async Promise.all (index 0)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at file:///home/etherum/src/lodestar.git/packages/beacon-node/src/api/impl/beacon/pool/index.ts:146:13
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at async Promise.all (index 15)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Object.submitPoolSyncCommitteeSignatures (file:///home/etherum/src/lodestar.git/packages/beacon-node/src/api/impl/beacon/pool/index.ts:116:7)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Object.handler (file:///home/etherum/src/lodestar.git/packages/api/src/utils/server/genericJsonServer.ts:41:23)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: Dec-15 19:05:12.480[api]             error: Error on submitPoolSyncCommitteeSignatures [16] slot=1, validatorIndex=428 PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: Error: PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Eth2Gossipsub.publish (file:///home/etherum/src/lodestar.git/node_modules/@chainsafe/libp2p-gossipsub/src/index.ts:1957:13)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Eth2Gossipsub.publishObject (file:///home/etherum/src/lodestar.git/packages/beacon-node/src/network/gossip/gossipsub.ts:171:20)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Eth2Gossipsub.publishSyncCommitteeSignature (file:///home/etherum/src/lodestar.git/packages/beacon-node/src/network/gossip/gossipsub.ts:250:5)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at async Promise.all (index 0)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at file:///home/etherum/src/lodestar.git/packages/beacon-node/src/api/impl/beacon/pool/index.ts:146:13
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at async Promise.all (index 16)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Object.submitPoolSyncCommitteeSignatures (file:///home/etherum/src/lodestar.git/packages/beacon-node/src/api/impl/beacon/pool/index.ts:116:7)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Object.handler (file:///home/etherum/src/lodestar.git/packages/api/src/utils/server/genericJsonServer.ts:41:23)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: Dec-15 19:05:12.480[api]             error: Error on submitPoolSyncCommitteeSignatures [17] slot=1, validatorIndex=420 PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: Error: PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Eth2Gossipsub.publish (file:///home/etherum/src/lodestar.git/node_modules/@chainsafe/libp2p-gossipsub/src/index.ts:1957:13)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Eth2Gossipsub.publishObject (file:///home/etherum/src/lodestar.git/packages/beacon-node/src/network/gossip/gossipsub.ts:171:20)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Eth2Gossipsub.publishSyncCommitteeSignature (file:///home/etherum/src/lodestar.git/packages/beacon-node/src/network/gossip/gossipsub.ts:250:5)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at async Promise.all (index 0)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at file:///home/etherum/src/lodestar.git/packages/beacon-node/src/api/impl/beacon/pool/index.ts:146:13
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at async Promise.all (index 17)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Object.submitPoolSyncCommitteeSignatures (file:///home/etherum/src/lodestar.git/packages/beacon-node/src/api/impl/beacon/pool/index.ts:116:7)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Object.handler (file:///home/etherum/src/lodestar.git/packages/api/src/utils/server/genericJsonServer.ts:41:23)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: Dec-15 19:05:12.481[api]             error: Error on submitPoolSyncCommitteeSignatures [18] slot=1, validatorIndex=406 PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: Error: PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Eth2Gossipsub.publish (file:///home/etherum/src/lodestar.git/node_modules/@chainsafe/libp2p-gossipsub/src/index.ts:1957:13)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Eth2Gossipsub.publishObject (file:///home/etherum/src/lodestar.git/packages/beacon-node/src/network/gossip/gossipsub.ts:171:20)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Eth2Gossipsub.publishSyncCommitteeSignature (file:///home/etherum/src/lodestar.git/packages/beacon-node/src/network/gossip/gossipsub.ts:250:5)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at async Promise.all (index 0)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at file:///home/etherum/src/lodestar.git/packages/beacon-node/src/api/impl/beacon/pool/index.ts:146:13
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at async Promise.all (index 18)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Object.submitPoolSyncCommitteeSignatures (file:///home/etherum/src/lodestar.git/packages/beacon-node/src/api/impl/beacon/pool/index.ts:116:7)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Object.handler (file:///home/etherum/src/lodestar.git/packages/api/src/utils/server/genericJsonServer.ts:41:23)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: Dec-15 19:05:12.481[api]             error: Error on submitPoolSyncCommitteeSignatures [19] slot=1, validatorIndex=402 PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: Error: PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Eth2Gossipsub.publish (file:///home/etherum/src/lodestar.git/node_modules/@chainsafe/libp2p-gossipsub/src/index.ts:1957:13)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Eth2Gossipsub.publishObject (file:///home/etherum/src/lodestar.git/packages/beacon-node/src/network/gossip/gossipsub.ts:171:20)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Eth2Gossipsub.publishSyncCommitteeSignature (file:///home/etherum/src/lodestar.git/packages/beacon-node/src/network/gossip/gossipsub.ts:250:5)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at async Promise.all (index 0)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at file:///home/etherum/src/lodestar.git/packages/beacon-node/src/api/impl/beacon/pool/index.ts:146:13
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at async Promise.all (index 19)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Object.submitPoolSyncCommitteeSignatures (file:///home/etherum/src/lodestar.git/packages/beacon-node/src/api/impl/beacon/pool/index.ts:116:7)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Object.handler (file:///home/etherum/src/lodestar.git/packages/api/src/utils/server/genericJsonServer.ts:41:23)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: Dec-15 19:05:12.481[api]             error: Error on submitPoolSyncCommitteeSignatures [20] slot=1, validatorIndex=410 PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: Error: PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Eth2Gossipsub.publish (file:///home/etherum/src/lodestar.git/node_modules/@chainsafe/libp2p-gossipsub/src/index.ts:1957:13)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Eth2Gossipsub.publishObject (file:///home/etherum/src/lodestar.git/packages/beacon-node/src/network/gossip/gossipsub.ts:171:20)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Eth2Gossipsub.publishSyncCommitteeSignature (file:///home/etherum/src/lodestar.git/packages/beacon-node/src/network/gossip/gossipsub.ts:250:5)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at async Promise.all (index 0)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at file:///home/etherum/src/lodestar.git/packages/beacon-node/src/api/impl/beacon/pool/index.ts:146:13
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at async Promise.all (index 20)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Object.submitPoolSyncCommitteeSignatures (file:///home/etherum/src/lodestar.git/packages/beacon-node/src/api/impl/beacon/pool/index.ts:116:7)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Object.handler (file:///home/etherum/src/lodestar.git/packages/api/src/utils/server/genericJsonServer.ts:41:23)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: Dec-15 19:05:12.481[api]             error: Error on submitPoolSyncCommitteeSignatures [21] slot=1, validatorIndex=442 PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: Error: PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Eth2Gossipsub.publish (file:///home/etherum/src/lodestar.git/node_modules/@chainsafe/libp2p-gossipsub/src/index.ts:1957:13)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Eth2Gossipsub.publishObject (file:///home/etherum/src/lodestar.git/packages/beacon-node/src/network/gossip/gossipsub.ts:171:20)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Eth2Gossipsub.publishSyncCommitteeSignature (file:///home/etherum/src/lodestar.git/packages/beacon-node/src/network/gossip/gossipsub.ts:250:5)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at async Promise.all (index 0)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at file:///home/etherum/src/lodestar.git/packages/beacon-node/src/api/impl/beacon/pool/index.ts:146:13
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at async Promise.all (index 21)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Object.submitPoolSyncCommitteeSignatures (file:///home/etherum/src/lodestar.git/packages/beacon-node/src/api/impl/beacon/pool/index.ts:116:7)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Object.handler (file:///home/etherum/src/lodestar.git/packages/api/src/utils/server/genericJsonServer.ts:41:23)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: Dec-15 19:05:12.481[api]             error: Error on submitPoolSyncCommitteeSignatures [22] slot=1, validatorIndex=417 PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: Error: PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Eth2Gossipsub.publish (file:///home/etherum/src/lodestar.git/node_modules/@chainsafe/libp2p-gossipsub/src/index.ts:1957:13)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Eth2Gossipsub.publishObject (file:///home/etherum/src/lodestar.git/packages/beacon-node/src/network/gossip/gossipsub.ts:171:20)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Eth2Gossipsub.publishSyncCommitteeSignature (file:///home/etherum/src/lodestar.git/packages/beacon-node/src/network/gossip/gossipsub.ts:250:5)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at async Promise.all (index 0)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at file:///home/etherum/src/lodestar.git/packages/beacon-node/src/api/impl/beacon/pool/index.ts:146:13
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at async Promise.all (index 22)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Object.submitPoolSyncCommitteeSignatures (file:///home/etherum/src/lodestar.git/packages/beacon-node/src/api/impl/beacon/pool/index.ts:116:7)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Object.handler (file:///home/etherum/src/lodestar.git/packages/api/src/utils/server/genericJsonServer.ts:41:23)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: Dec-15 19:05:12.482[api]             error: Error on submitPoolSyncCommitteeSignatures [23] slot=1, validatorIndex=447 PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: Error: PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Eth2Gossipsub.publish (file:///home/etherum/src/lodestar.git/node_modules/@chainsafe/libp2p-gossipsub/src/index.ts:1957:13)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Eth2Gossipsub.publishObject (file:///home/etherum/src/lodestar.git/packages/beacon-node/src/network/gossip/gossipsub.ts:171:20)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Eth2Gossipsub.publishSyncCommitteeSignature (file:///home/etherum/src/lodestar.git/packages/beacon-node/src/network/gossip/gossipsub.ts:250:5)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at async Promise.all (index 0)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at file:///home/etherum/src/lodestar.git/packages/beacon-node/src/api/impl/beacon/pool/index.ts:146:13
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at async Promise.all (index 23)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Object.submitPoolSyncCommitteeSignatures (file:///home/etherum/src/lodestar.git/packages/beacon-node/src/api/impl/beacon/pool/index.ts:116:7)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Object.handler (file:///home/etherum/src/lodestar.git/packages/api/src/utils/server/genericJsonServer.ts:41:23)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: Dec-15 19:05:12.482[api]             error: Error on submitPoolSyncCommitteeSignatures [24] slot=1, validatorIndex=407 PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: Error: PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Eth2Gossipsub.publish (file:///home/etherum/src/lodestar.git/node_modules/@chainsafe/libp2p-gossipsub/src/index.ts:1957:13)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Eth2Gossipsub.publishObject (file:///home/etherum/src/lodestar.git/packages/beacon-node/src/network/gossip/gossipsub.ts:171:20)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Eth2Gossipsub.publishSyncCommitteeSignature (file:///home/etherum/src/lodestar.git/packages/beacon-node/src/network/gossip/gossipsub.ts:250:5)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at async Promise.all (index 0)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at file:///home/etherum/src/lodestar.git/packages/beacon-node/src/api/impl/beacon/pool/index.ts:146:13
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at async Promise.all (index 24)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Object.submitPoolSyncCommitteeSignatures (file:///home/etherum/src/lodestar.git/packages/beacon-node/src/api/impl/beacon/pool/index.ts:116:7)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Object.handler (file:///home/etherum/src/lodestar.git/packages/api/src/utils/server/genericJsonServer.ts:41:23)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: Dec-15 19:05:12.482[api]             error: Error on submitPoolSyncCommitteeSignatures [25] slot=1, validatorIndex=446 PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: Error: PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Eth2Gossipsub.publish (file:///home/etherum/src/lodestar.git/node_modules/@chainsafe/libp2p-gossipsub/src/index.ts:1957:13)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Eth2Gossipsub.publishObject (file:///home/etherum/src/lodestar.git/packages/beacon-node/src/network/gossip/gossipsub.ts:171:20)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Eth2Gossipsub.publishSyncCommitteeSignature (file:///home/etherum/src/lodestar.git/packages/beacon-node/src/network/gossip/gossipsub.ts:250:5)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at async Promise.all (index 0)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at file:///home/etherum/src/lodestar.git/packages/beacon-node/src/api/impl/beacon/pool/index.ts:146:13
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at async Promise.all (index 25)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Object.submitPoolSyncCommitteeSignatures (file:///home/etherum/src/lodestar.git/packages/beacon-node/src/api/impl/beacon/pool/index.ts:116:7)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Object.handler (file:///home/etherum/src/lodestar.git/packages/api/src/utils/server/genericJsonServer.ts:41:23)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: Dec-15 19:05:12.482[api]             error: Error on submitPoolSyncCommitteeSignatures [26] slot=1, validatorIndex=445 PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: Error: PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Eth2Gossipsub.publish (file:///home/etherum/src/lodestar.git/node_modules/@chainsafe/libp2p-gossipsub/src/index.ts:1957:13)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Eth2Gossipsub.publishObject (file:///home/etherum/src/lodestar.git/packages/beacon-node/src/network/gossip/gossipsub.ts:171:20)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Eth2Gossipsub.publishSyncCommitteeSignature (file:///home/etherum/src/lodestar.git/packages/beacon-node/src/network/gossip/gossipsub.ts:250:5)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at async Promise.all (index 0)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at file:///home/etherum/src/lodestar.git/packages/beacon-node/src/api/impl/beacon/pool/index.ts:146:13
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at async Promise.all (index 26)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Object.submitPoolSyncCommitteeSignatures (file:///home/etherum/src/lodestar.git/packages/beacon-node/src/api/impl/beacon/pool/index.ts:116:7)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Object.handler (file:///home/etherum/src/lodestar.git/packages/api/src/utils/server/genericJsonServer.ts:41:23)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: Dec-15 19:05:12.483[rest]            error: Req req-v submitPoolAttestations error  Multiple errors on submitPoolAttestations
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: Error: Multiple errors on submitPoolAttestations
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Object.submitPoolAttestations (file:///home/etherum/src/lodestar.git/packages/beacon-node/src/api/impl/beacon/pool/index.ts:70:15)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Object.handler (file:///home/etherum/src/lodestar.git/packages/api/src/utils/server/genericJsonServer.ts:41:23)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: Dec-15 19:05:12.483[rest]            error: Req req-u submitPoolSyncCommitteeSignatures error  Multiple errors on publishAggregateAndProofs
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: Error: Multiple errors on publishAggregateAndProofs
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]: PublishError.InsufficientPeers
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Object.submitPoolSyncCommitteeSignatures (file:///home/etherum/src/lodestar.git/packages/beacon-node/src/api/impl/beacon/pool/index.ts:170:15)
Dec 15 19:05:12 testnet-5-lodestar lodestar[18306]:     at Object.handler (file:///home/etherum/src/lodestar.git/packages/api/src/utils/server/genericJsonServer.ts:41:23)
Dec 15 19:05:18 testnet-5-lodestar lodestar[18306]: Dec-15 19:05:18.001[]                 info: Synced - slot: 1 - head: 1 0x8e5d…0083 - execution: valid(0x2c58…b7fa) - finalized: 0x0000…0000:0 - peers: 1
Dec 15 19:05:30 testnet-5-lodestar lodestar[18306]: Dec-15 19:05:30.002[]                 info: Synced - slot: 2 - head: 2 0xe31d…fa98 - execution: valid(0xd2e4…adfc) - finalized: 0x0000…0000:0 - peers: 1
Dec 15 19:05:42 testnet-5-lodestar lodestar[18306]: Dec-15 19:05:42.000[]                 info: Synced - slot: 3 - head: 3 0x1e78…4dca - execution: valid(0x7665…29f3) - finalized: 0x0000…0000:0 - peers: 1
Dec 15 19:05:54 testnet-5-lodestar lodestar[18306]: Dec-15 19:05:54.001[]                 info: Synced - slot: 4 - head: 4 0x07c9…7af8 - execution: valid(0x6fb5…6e9e) - finalized: 0x0000…0000:0 - peers: 1
Dec 15 19:06:06 testnet-5-lodestar lodestar[18306]: Dec-15 19:06:06.001[]                 info: Synced - slot: 5 - head: 5 0x3643…20f4 - execution: valid(0x904d…1061) - finalized: 0x0000…0000:0 - peers: 1
Dec 15 19:06:18 testnet-5-lodestar lodestar[18306]: Dec-15 19:06:18.000[]                 info: Synced - slot: 6 - head: 6 0x86c6…2ff7 - execution: valid(0x0076…5c96) - finalized: 0x0000…0000:0 - peers: 1
Dec 15 19:06:30 testnet-5-lodestar lodestar[18306]: Dec-15 19:06:30.001[]                 info: Synced - slot: 7 - head: 7 0xa36c…cb0e - execution: valid(0x6815…fefa) - finalized: 0x0000…0000:0 - peers: 1
Dec 15 19:06:42 testnet-5-lodestar lodestar[18306]: Dec-15 19:06:42.002[]                 info: Synced - slot: 8 - head: 8 0x2b71…d703 - execution: valid(0x1602…f3c3) - finalized: 0x0000…0000:0 - peers: 1
Dec 15 19:06:54 testnet-5-lodestar lodestar[18306]: Dec-15 19:06:54.002[]                 info: Synced - slot: 9 - head: 9 0xecd0…8d9e - execution: valid(0xb07c…a98e) - finalized: 0x0000…0000:0 - peers: 1
Dec 15 19:07:06 testnet-5-lodestar lodestar[18306]: Dec-15 19:07:06.000[]                 info: Synced - slot: 10 - head: 10 0xfaf2…a85a - execution: valid(0x93b4…a323) - finalized: 0x0000…0000:0 - peers: 1
Dec 15 19:07:18 testnet-5-lodestar lodestar[18306]: Dec-15 19:07:18.001[]                 info: Synced - slot: 11 - head: 11 0xf8f1…0052 - execution: valid(0xdfe8…93fa) - finalized: 0x0000…0000:0 - peers: 1
Dec 15 19:07:30 testnet-5-lodestar lodestar[18306]: Dec-15 19:07:30.001[]                 info: Synced - slot: 12 - head: 12 0xae6b…a979 - execution: valid(0x1b49…35c3) - finalized: 0x0000…0000:0 - peers: 1
Dec 15 19:07:42 testnet-5-lodestar lodestar[18306]: Dec-15 19:07:42.000[]                 info: Synced - slot: 13 - head: 13 0x12d2…b135 - execution: valid(0x66c6…6526) - finalized: 0x0000…0000:0 - peers: 1
Dec 15 19:07:54 testnet-5-lodestar lodestar[18306]: Dec-15 19:07:54.002[]                 info: Synced - slot: 14 - head: 14 0x1037…8b79 - execution: valid(0x5927…6833) - finalized: 0x0000…0000:0 - peers: 1
Dec 15 19:08:06 testnet-5-lodestar lodestar[18306]: Dec-15 19:08:06.000[]                 info: Synced - slot: 15 - head: 15 0x8580…1c02 - execution: valid(0xc457…6dfa) - finalized: 0x0000…0000:0 - peers: 1
Dec 15 19:08:18 testnet-5-lodestar lodestar[18306]: Dec-15 19:08:18.000[]                 info: Synced - slot: 16 - head: 16 0x1d94…6028 - execution: valid(0x8b3d…9118) - finalized: 0x0000…0000:0 - peers: 1
Dec 15 19:08:30 testnet-5-lodestar lodestar[18306]: Dec-15 19:08:30.000[]                 info: Synced - slot: 17 - head: 17 0x73b2…205a - execution: valid(0x7163…2483) - finalized: 0x0000…0000:0 - peers: 1
Dec 15 19:08:42 testnet-5-lodestar lodestar[18306]: Dec-15 19:08:42.001[]                 info: Synced - slot: 18 - head: 18 0x2b71…32e5 - execution: valid(0x0cc8…378f) - finalized: 0x0000…0000:0 - peers: 1
Dec 15 19:08:54 testnet-5-lodestar lodestar[18306]: Dec-15 19:08:54.002[]                 info: Synced - slot: 19 - head: 19 0xdec2…d0f3 - execution: valid(0x9734…2c9a) - finalized: 0x0000…0000:0 - peers: 1
Dec 15 19:09:06 testnet-5-lodestar lodestar[18306]: Dec-15 19:09:06.002[]                 info: Synced - slot: 20 - head: 20 0xad82…49b9 - execution: valid(0x9573…6b9a) - finalized: 0x0000…0000:0 - peers: 1
Dec 15 19:09:18 testnet-5-lodestar lodestar[18306]: Dec-15 19:09:18.001[]                 info: Synced - slot: 21 - head: 21 0x4aa5…de6f - execution: valid(0x79c6…143f) - finalized: 0x0000…0000:0 - peers: 1
Dec 15 19:09:30 testnet-5-lodestar lodestar[18306]: Dec-15 19:09:30.002[]                 info: Synced - slot: 22 - head: 22 0x3954…b743 - execution: valid(0x643c…1aed) - finalized: 0x0000…0000:0 - peers: 1
Dec 15 19:09:42 testnet-5-lodestar lodestar[18306]: Dec-15 19:09:42.002[]                 info: Synced - slot: 23 - head: 23 0x6e5e…940f - execution: valid(0x5a22…6f3a) - finalized: 0x0000…0000:0 - peers: 1
Dec 15 19:09:54 testnet-5-lodestar lodestar[18306]: Dec-15 19:09:54.000[]                 info: Synced - slot: 24 - head: 24 0x4800…6085 - execution: valid(0x8dd0…1eca) - finalized: 0x0000…0000:0 - peers: 1
Dec 15 19:10:06 testnet-5-lodestar lodestar[18306]: Dec-15 19:10:06.000[]                 info: Synced - slot: 25 - head: 25 0x25c3…4656 - execution: valid(0x877f…717c) - finalized: 0x0000…0000:0 - peers: 1
Dec 15 19:10:18 testnet-5-lodestar lodestar[18306]: Dec-15 19:10:18.000[]                 info: Synced - slot: 26 - head: 26 0x1670…9ec8 - execution: valid(0xfae0…cfae) - finalized: 0x0000…0000:0 - peers: 1
Dec 15 19:10:30 testnet-5-lodestar lodestar[18306]: Dec-15 19:10:30.002[]                 info: Synced - slot: 27 - head: 27 0x8db8…b82d - execution: valid(0x9d34…adeb) - finalized: 0x0000…0000:0 - peers: 1
Dec 15 19:10:42 testnet-5-lodestar lodestar[18306]: Dec-15 19:10:42.002[]                 info: Synced - slot: 28 - head: 28 0x3d96…095b - execution: valid(0x0a87…16cd) - finalized: 0x0000…0000:0 - peers: 1
Dec 15 19:10:54 testnet-5-lodestar lodestar[18306]: Dec-15 19:10:54.000[]                 info: Synced - slot: 29 - head: 29 0x77d5…0bbe - execution: valid(0x4e33…8314) - finalized: 0x0000…0000:0 - peers: 1
Dec 15 19:11:06 testnet-5-lodestar lodestar[18306]: Dec-15 19:11:06.001[]                 info: Synced - slot: 30 - head: 30 0xdfe7…d936 - execution: valid(0xfc1f…4472) - finalized: 0x0000…0000:0 - peers: 1
Dec 15 19:11:18 testnet-5-lodestar lodestar[18306]: Dec-15 19:11:18.000[]                 info: Synced - slot: 31 - head: 31 0x5aa2…b17b - execution: valid(0x3ad8…a51a) - finalized: 0x0000…0000:0 - peers: 1
Dec 15 19:11:30 testnet-5-lodestar lodestar[18306]: Dec-15 19:11:30.000[]                 info: Synced - slot: 32 - head: 32 0xf2a4…1e6a - execution: valid(0x3622…5727) - finalized: 0x0000…0000:0 - peers: 1

# manually restarted lodestart

Dec 15 19:11:39 testnet-5-lodestar systemd[1]: Stopping eth2 beacon chain service...
Dec 15 19:11:39 testnet-5-lodestar lodestar[18306]: Dec-15 19:11:39.624[]                 info: Stopping gracefully, use Ctrl+C again to force process exit
Dec 15 19:11:39 testnet-5-lodestar lodestar[18306]: Dec-15 19:11:39.629[]                 info: Forcing process exit
Dec 15 19:11:39 testnet-5-lodestar systemd[1]: beacon-chain.service: Succeeded.
Dec 15 19:11:39 testnet-5-lodestar systemd[1]: Stopped eth2 beacon chain service.
Dec 15 19:11:39 testnet-5-lodestar systemd[1]: beacon-chain.service: Consumed 47.591s CPU time.
Dec 15 19:11:39 testnet-5-lodestar systemd[1]: Started eth2 beacon chain service.
Dec 15 19:11:42 testnet-5-lodestar lodestar[18411]: Dec-15 19:11:42.054[]                 info: Lodestar network=testnet, version=v1.2.1/df92e0c, commit=df92e0c6a76e9d1bbdbfae577634c9612b04c4e6
Dec 15 19:11:42 testnet-5-lodestar lodestar[18411]: Dec-15 19:11:42.081[]                 info: Connected to LevelDB database path=/home/etherum/data-lodestar/chain-db
Dec 15 19:11:42 testnet-5-lodestar lodestar[18411]: Dec-15 19:11:42.573[]                 info: Initializing beacon from a valid db state slot=0, epoch=0, stateRoot=0xce0b0ce7b47180ccb5cff36d558786bc348ce62c1d8cb3524cafd174379bbd29, isWithinWeakSubjectivityPeriod=true
Dec 15 19:11:42 testnet-5-lodestar lodestar[18411]: Dec-15 19:11:42.891[network]          info: PeerId 16Uiu2HAkurQpW5HcFcRAGtAWKNuiz2TfAHpaWUa6HfJu2oPEAv2X, Multiaddrs /ip4/127.0.0.1/tcp/9000/p2p/16Uiu2HAkurQpW5HcFcRAGtAWKNuiz2TfAHpaWUa6HfJu2oPEAv2X,/ip4/5.75.242.24/tcp/9000/p2p/16Uiu2HAkurQpW5HcFcRAGtAWKNuiz2TfAHpaWUa6HfJu2oPEAv2X,/ip4/10.16.97.6/tcp/9000/p2p/16Uiu2HAkurQpW5HcFcRAGtAWKNuiz2TfAHpaWUa6HfJu2oPEAv2X
Dec 15 19:11:42 testnet-5-lodestar lodestar[18411]: Dec-15 19:11:42.999[rest]             info: Started REST API server address=http://0.0.0.0:4000
Dec 15 19:11:42 testnet-5-lodestar lodestar[18411]: Dec-15 19:11:42.999[rest]             warn: REST API server is exposed, ensure untrusted traffic cannot reach this API
Dec 15 19:11:43 testnet-5-lodestar lodestar[18411]: Dec-15 19:11:43.000[]                 warn: Low peer count peers=0
Dec 15 19:11:43 testnet-5-lodestar lodestar[18411]: Dec-15 19:11:43.001[]                 info: Searching peers - peers: 0 - slot: 33 (skipped 33) - head: 0 0xf773…040f - execution: valid(0xa155…a736) - finalized: 0x0000…0000:0
Dec 15 19:11:44 testnet-5-lodestar lodestar[18411]: Dec-15 19:11:44.008[rest]            error: Req req-2 produceSyncCommitteeContribution error  Block not in forkChoice
Dec 15 19:11:44 testnet-5-lodestar lodestar[18411]: Error: Block not in forkChoice
Dec 15 19:11:44 testnet-5-lodestar lodestar[18411]:     at notOnOptimisticBlockRoot (file:///home/etherum/src/lodestar.git/packages/beacon-node/src/api/impl/validator/index.ts:164:13)
Dec 15 19:11:44 testnet-5-lodestar lodestar[18411]:     at Object.produceSyncCommitteeContribution (file:///home/etherum/src/lodestar.git/packages/beacon-node/src/api/impl/validator/index.ts:312:7)
Dec 15 19:11:44 testnet-5-lodestar lodestar[18411]:     at Object.handler (file:///home/etherum/src/lodestar.git/packages/api/src/utils/server/genericJsonServer.ts:41:41)
Dec 15 19:11:44 testnet-5-lodestar lodestar[18411]:     at preHandlerCallback (/home/etherum/src/lodestar.git/node_modules/fastify/lib/handleRequest.js:126:28)
Dec 15 19:11:44 testnet-5-lodestar lodestar[18411]:     at preValidationCallback (/home/etherum/src/lodestar.git/node_modules/fastify/lib/handleRequest.js:109:5)
Dec 15 19:11:44 testnet-5-lodestar lodestar[18411]:     at handler (/home/etherum/src/lodestar.git/node_modules/fastify/lib/handleRequest.js:72:7)
Dec 15 19:11:44 testnet-5-lodestar lodestar[18411]:     at handleRequest (/home/etherum/src/lodestar.git/node_modules/fastify/lib/handleRequest.js:20:5)
Dec 15 19:11:44 testnet-5-lodestar lodestar[18411]:     at runPreParsing (/home/etherum/src/lodestar.git/node_modules/fastify/lib/route.js:451:5)
Dec 15 19:11:44 testnet-5-lodestar lodestar[18411]:     at next (/home/etherum/src/lodestar.git/node_modules/fastify/lib/hooks.js:158:7)
Dec 15 19:11:44 testnet-5-lodestar lodestar[18411]:     at handleResolve (/home/etherum/src/lodestar.git/node_modules/fastify/lib/hooks.js:175:5)
Dec 15 19:11:44 testnet-5-lodestar lodestar[18411]: Dec-15 19:11:44.040[rest]            error: Req req-3 produceSyncCommitteeContribution error  Block not in forkChoice
Dec 15 19:11:44 testnet-5-lodestar lodestar[18411]: Error: Block not in forkChoice
Dec 15 19:11:44 testnet-5-lodestar lodestar[18411]:     at notOnOptimisticBlockRoot (file:///home/etherum/src/lodestar.git/packages/beacon-node/src/api/impl/validator/index.ts:164:13)
Dec 15 19:11:44 testnet-5-lodestar lodestar[18411]:     at Object.produceSyncCommitteeContribution (file:///home/etherum/src/lodestar.git/packages/beacon-node/src/api/impl/validator/index.ts:312:7)
Dec 15 19:11:44 testnet-5-lodestar lodestar[18411]:     at Object.handler (file:///home/etherum/src/lodestar.git/packages/api/src/utils/server/genericJsonServer.ts:41:41)
Dec 15 19:11:44 testnet-5-lodestar lodestar[18411]:     at preHandlerCallback (/home/etherum/src/lodestar.git/node_modules/fastify/lib/handleRequest.js:126:28)
Dec 15 19:11:44 testnet-5-lodestar lodestar[18411]:     at preValidationCallback (/home/etherum/src/lodestar.git/node_modules/fastify/lib/handleRequest.js:109:5)
Dec 15 19:11:44 testnet-5-lodestar lodestar[18411]:     at handler (/home/etherum/src/lodestar.git/node_modules/fastify/lib/handleRequest.js:72:7)
Dec 15 19:11:44 testnet-5-lodestar lodestar[18411]:     at handleRequest (/home/etherum/src/lodestar.git/node_modules/fastify/lib/handleRequest.js:20:5)
Dec 15 19:11:44 testnet-5-lodestar lodestar[18411]:     at runPreParsing (/home/etherum/src/lodestar.git/node_modules/fastify/lib/route.js:451:5)
Dec 15 19:11:44 testnet-5-lodestar lodestar[18411]:     at next (/home/etherum/src/lodestar.git/node_modules/fastify/lib/hooks.js:158:7)
Dec 15 19:11:44 testnet-5-lodestar lodestar[18411]:     at handleResolve (/home/etherum/src/lodestar.git/node_modules/fastify/lib/hooks.js:175:5)
Dec 15 19:11:44 testnet-5-lodestar lodestar[18411]: Dec-15 19:11:44.043[rest]            error: Req req-4 getAggregatedAttestation error  No attestation for slot=33 dataRoot=0x15d4176ee951d73c3a848b8282855a7ea29d6d27b2572a59a64f91c711cde57c
Dec 15 19:11:44 testnet-5-lodestar lodestar[18411]: Error: No attestation for slot=33 dataRoot=0x15d4176ee951d73c3a848b8282855a7ea29d6d27b2572a59a64f91c711cde57c
Dec 15 19:11:44 testnet-5-lodestar lodestar[18411]:     at AttestationPool.getAggregate (file:///home/etherum/src/lodestar.git/packages/beacon-node/src/chain/opPools/attestationPool.ts:126:13)
Dec 15 19:11:44 testnet-5-lodestar lodestar[18411]:     at Object.getAggregatedAttestation (file:///home/etherum/src/lodestar.git/packages/beacon-node/src/api/impl/validator/index.ts:473:37)
Dec 15 19:11:44 testnet-5-lodestar lodestar[18411]:     at processTicksAndRejections (node:internal/process/task_queues:95:5)
Dec 15 19:11:44 testnet-5-lodestar lodestar[18411]:     at Object.handler (file:///home/etherum/src/lodestar.git/packages/api/src/utils/server/genericJsonServer.ts:41:23)
Dec 15 19:11:44 testnet-5-lodestar lodestar[18411]: Dec-15 19:11:44.086[network]          info: Subscribed gossip core topics
Dec 15 19:11:44 testnet-5-lodestar lodestar[18411]: Dec-15 19:11:44.088[sync]             info: Subscribed gossip core topics
Dec 15 19:11:54 testnet-5-lodestar lodestar[18411]: Dec-15 19:11:54.001[]                 info: Synced - slot: 34 - head: 34 0x1e51…b3c1 - execution: valid(0x6c94…01d8) - finalized: 0x0000…0000:0 - peers: 1
Dec 15 19:12:00 testnet-5-lodestar lodestar[18411]: Dec-15 19:12:00.005[chain]            info: Validated transition configuration with execution client terminalTotalDifficulty=0x0, terminalBlockHash=0x0000000000000000000000000000000000000000000000000000000000000000, terminalBlockNumber=0x0
Dec 15 19:12:06 testnet-5-lodestar lodestar[18411]: Dec-15 19:12:06.002[]                 info: Synced - slot: 35 - head: 35 0x1218…9333 - execution: valid(0xe5dd…192b) - finalized: 0x0000…0000:0 - peers: 1
Dec 15 19:12:18 testnet-5-lodestar lodestar[18411]: Dec-15 19:12:18.002[]                 info: Synced - slot: 36 - head: 36 0xb540…a449 - execution: valid(0xe45c…10de) - finalized: 0x0000…0000:0 - peers: 6
Dec 15 19:12:30 testnet-5-lodestar lodestar[18411]: Dec-15 19:12:30.002[]                 info: Synced - slot: 37 - head: 37 0x818a…77a2 - execution: valid(0x5e30…0dd1) - finalized: 0x0000…0000:0 - peers: 6
Dec 15 19:12:42 testnet-5-lodestar lodestar[18411]: Dec-15 19:12:42.001[]                 info: Synced - slot: 38 - head: 38 0x8488…4398 - execution: valid(0x309d…6d65) - finalized: 0x0000…0000:0 - peers: 6
Dec 15 19:12:54 testnet-5-lodestar lodestar[18411]: Dec-15 19:12:54.000[]                 info: Synced - slot: 39 - head: 39 0x47f2…6e5a - execution: valid(0x988e…5213) - finalized: 0x0000…0000:0 - peers: 6
Dec 15 19:13:06 testnet-5-lodestar lodestar[18411]: Dec-15 19:13:06.000[]                 info: Synced - slot: 40 - head: 40 0xfd7b…59b5 - execution: valid(0x2c67…4774) - finalized: 0x0000…0000:0 - peers: 6
Dec 15 19:13:18 testnet-5-lodestar lodestar[18411]: Dec-15 19:13:18.001[]                 info: Synced - slot: 41 - head: 41 0x6951…5d25 - execution: valid(0x5e63…c666) - finalized: 0x0000…0000:0 - peers: 6
Dec 15 19:13:30 testnet-5-lodestar lodestar[18411]: Dec-15 19:13:30.000[]                 info: Synced - slot: 42 - head: 42 0xb8a1…06c3 - execution: valid(0xba6d…a95f) - finalized: 0x0000…0000:0 - peers: 6


SELECT
	DATE(paymentDateTime) paymentDate,
  COUNT(DISTINCT userID) usersWithFirstSubsPaymentCount

FROM
  payments

WHERE 
  paymentNewUpgradeRenewal = 2
  AND paymentPeriod IN (1,12)
	AND paymentStatus = 1 
  AND userID IS NOT NULL

GROUP BY
	paymentDate
	

ORDER BY 
	paymentDate DESC


{"Copy":[],"Skilltree":{"Crystal Blade":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"Crystal Blade"},"Substitution":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"Substitution"},"Crystal Prison":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"Crystal Prison"},"Rock Gun":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"Rock Gun"},"Crystal Command":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"Crystal Command"},"Crystal Crossing":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"Crystal Crossing"},"Earth Pillar":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"Earth Pillar"},"Earth Dragon Bomb":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"Earth Dragon Bomb"}},"Stats":{"kek":{"ObjectValue":"18","ObjectClass":"IntValue","ObjectName":"kek"},"ChakraArmorRGB":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"ChakraArmorRGB"},"AnbuLog":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"AnbuLog"},"Slot8":{"ObjectValue":"","ObjectClass":"StringValue","ObjectName":"Slot8"},"Title":{"ObjectValue":"Academy Student","ObjectClass":"StringValue","ObjectName":"Title"},"Influence":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"Influence"},"Key5":{"ObjectValue":"5","ObjectClass":"StringValue","ObjectName":"Key5"},"MissionSuccess":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"MissionSuccess"},"ParentID":{"ObjectValue":"","ObjectClass":"StringValue","ObjectName":"ParentID"},"Deaths":{"ObjectValue":"3","ObjectClass":"IntValue","ObjectName":"Deaths"},"startnewlife":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"startnewlife"},"LastStomach":{"ObjectValue":"86","ObjectClass":"IntValue","ObjectName":"LastStomach"},"MaxAge":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"MaxAge"},"KillStreak":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"KillStreak"},"Key3":{"ObjectValue":"3","ObjectClass":"StringValue","ObjectName":"Key3"},"Key1":{"ObjectValue":"1","ObjectClass":"StringValue","ObjectName":"Key1"},"Key8":{"ObjectValue":"8","ObjectClass":"StringValue","ObjectName":"Key8"},"WeaveSpeed":{"ObjectValue":"20","ObjectClass":"IntValue","ObjectName":"WeaveSpeed"},"Slot1":{"ObjectValue":"Crystal Blade","ObjectClass":"StringValue","ObjectName":"Slot1"},"EyeColorB":{"ObjectValue":"248","ObjectClass":"IntValue","ObjectName":"EyeColorB"},"Ryo":{"ObjectValue":"8","ObjectClass":"IntValue","ObjectName":"Ryo"},"CurrentWep":{"ObjectValue":"1","ObjectClass":"IntValue","ObjectName":"CurrentWep"},"SpentSkillPoints":{"ObjectValue":"-8","ObjectClass":"IntValue","ObjectName":"SpentSkillPoints"},"BerserkTimes":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"BerserkTimes"},"Slot5":{"ObjectValue":"Earth Pillar","ObjectClass":"StringValue","ObjectName":"Slot5"},"Blindness":{"ObjectValue":"0","ObjectClass":"NumberValue","ObjectName":"Blindness"},"Slot3":{"ObjectValue":"Crystal Prison","ObjectClass":"StringValue","ObjectName":"Slot3"},"PosX":{"ObjectValue":"685","ObjectClass":"IntValue","ObjectName":"PosX"},"LastChakra":{"ObjectValue":"373","ObjectClass":"IntValue","ObjectName":"LastChakra"},"Slot7":{"ObjectValue":"Earth Dragon Bomb","ObjectClass":"StringValue","ObjectName":"Slot7"},"RightEye":{"ObjectValue":"Default","ObjectClass":"StringValue","ObjectName":"RightEye"},"SkillPoints":{"ObjectValue":"8","ObjectClass":"IntValue","ObjectName":"SkillPoints"},"mapmove1":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"mapmove1"},"PrimaryAmmo":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"PrimaryAmmo"},"HairColorG":{"ObjectValue":"124","ObjectClass":"IntValue","ObjectName":"HairColorG"},"Slot10":{"ObjectValue":"","ObjectClass":"StringValue","ObjectName":"Slot10"},"Name":{"ObjectValue":"MEEZY","ObjectClass":"StringValue","ObjectName":"Name"},"MaxTails":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"MaxTails"},"RU":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"RU"},"SecondaryCN":{"ObjectValue":"2","ObjectClass":"IntValue","ObjectName":"SecondaryCN"},"Key4":{"ObjectValue":"4","ObjectClass":"StringValue","ObjectName":"Key4"},"Village":{"ObjectValue":"6","ObjectClass":"IntValue","ObjectName":"Village"},"LastHealth":{"ObjectValue":"118","ObjectClass":"IntValue","ObjectName":"LastHealth"},"OriginalVillage":{"ObjectValue":"6","ObjectClass":"IntValue","ObjectName":"OriginalVillage"},"WeaponSave":{"ObjectValue":"","ObjectClass":"StringValue","ObjectName":"WeaponSave"},"TimesRerolled":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"TimesRerolled"},"Slot=":{"ObjectValue":"","ObjectClass":"StringValue","ObjectName":"Slot="},"Ken":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"Ken"},"GrandParentID":{"ObjectValue":"","ObjectClass":"StringValue","ObjectName":"GrandParentID"},"Age":{"ObjectValue":"14","ObjectClass":"IntValue","ObjectName":"Age"},"LastKilledUser":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"LastKilledUser"},"TailedBeast":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"TailedBeast"},"CColorB":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"CColorB"},"RESTORE":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"RESTORE"},"Elo":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"Elo"},"MaxRank":{"ObjectValue":"24","ObjectClass":"IntValue","ObjectName":"MaxRank"},"TailedBeastEXP":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"TailedBeastEXP"},"BijuuSealed":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"BijuuSealed"},"AgeLimit":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"AgeLimit"},"WipeLog":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"WipeLog"},"FamilyID":{"ObjectValue":"MEEZY(18)1875443","ObjectClass":"StringValue","ObjectName":"FamilyID"},"Mastered":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"Mastered"},"Slot4":{"ObjectValue":"Crystal Command","ObjectClass":"StringValue","ObjectName":"Slot4"},"AwakenCD":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"AwakenCD"},"Key10":{"ObjectValue":"0","ObjectClass":"StringValue","ObjectName":"Key10"},"BijuuRelation":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"BijuuRelation"},"SecondaryAmmo":{"ObjectValue":"10","ObjectClass":"IntValue","ObjectName":"SecondaryAmmo"},"Scar":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"Scar"},"LastAge":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"LastAge"},"Slot0":{"ObjectValue":"","ObjectClass":"StringValue","ObjectName":"Slot0"},"Mangekyo":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"Mangekyo"},"BonusSkillPoints":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"BonusSkillPoints"},"TailedBeastMastered":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"TailedBeastMastered"},"DefaultMouth":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"DefaultMouth"},"TrainingEXP":{"ObjectValue":"100","ObjectClass":"IntValue","ObjectName":"TrainingEXP"},"CloakTime":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"CloakTime"},"RP":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"RP"},"BijuuXP":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"BijuuXP"},"Slot12":{"ObjectValue":"","ObjectClass":"StringValue","ObjectName":"Slot12"},"Kids":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"Kids"},"berserkcheck":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"berserkcheck"},"HairColorB":{"ObjectValue":"151","ObjectClass":"IntValue","ObjectName":"HairColorB"},"RaidCD":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"RaidCD"},"Slot6":{"ObjectValue":"Rock Gun","ObjectClass":"StringValue","ObjectName":"Slot6"},"PrimaryWep":{"ObjectValue":"Kunai","ObjectClass":"StringValue","ObjectName":"PrimaryWep"},"RecentTrainings":{"ObjectValue":"[\"Kunai Training\",\"Kunai Training\",\"Kunai Training\"]","ObjectClass":"StringValue","ObjectName":"RecentTrainings"},"Key9":{"ObjectValue":"9","ObjectClass":"StringValue","ObjectName":"Key9"},"SecondaryWep":{"ObjectValue":"Kunai","ObjectClass":"StringValue","ObjectName":"SecondaryWep"},"GripCount":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"GripCount"},"EyeColorR":{"ObjectValue":"103","ObjectClass":"IntValue","ObjectName":"EyeColorR"},"bald":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"bald"},"logcheck":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"logcheck"},"LINDAMINISTARTUP":{"ObjectValue":"9","ObjectClass":"IntValue","ObjectName":"LINDAMINISTARTUP"},"HairColorR":{"ObjectValue":"104","ObjectClass":"IntValue","ObjectName":"HairColorR"},"CombatEXP":{"ObjectValue":"-122","ObjectClass":"IntValue","ObjectName":"CombatEXP"},"jincooldown":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"jincooldown"},"BijuuConvo":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"BijuuConvo"},"Slot-":{"ObjectValue":"","ObjectClass":"StringValue","ObjectName":"Slot-"},"CColorR":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"CColorR"},"Version":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"Version"},"SPR":{"ObjectValue":"12","ObjectClass":"IntValue","ObjectName":"SPR"},"SkinColor":{"ObjectValue":"7","ObjectClass":"IntValue","ObjectName":"SkinColor"},"RyoRES":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"RyoRES"},"Slot9":{"ObjectValue":"","ObjectClass":"StringValue","ObjectName":"Slot9"},"SeenDeaths":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"SeenDeaths"},"HandsignTraining":{"ObjectValue":"1","ObjectClass":"IntValue","ObjectName":"HandsignTraining"},"Genjutsu":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"Genjutsu"},"BDAYS":{"ObjectValue":"0","ObjectClass":"StringValue","ObjectName":"BDAYS"},"CurseMarkEXP":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"CurseMarkEXP"},"CurseMarkLevel":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"CurseMarkLevel"},"KPos":{"ObjectValue":"2","ObjectClass":"IntValue","ObjectName":"KPos"},"DateRecord":{"ObjectValue":"2349","ObjectClass":"IntValue","ObjectName":"DateRecord"},"UnlockedCloak":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"UnlockedCloak"},"PosY":{"ObjectValue":"880","ObjectClass":"IntValue","ObjectName":"PosY"},"PosZ":{"ObjectValue":"1554","ObjectClass":"IntValue","ObjectName":"PosZ"},"Rank":{"ObjectValue":"7","ObjectClass":"IntValue","ObjectName":"Rank"},"MissionEXP":{"ObjectValue":"17","ObjectClass":"IntValue","ObjectName":"MissionEXP"},"Slot11":{"ObjectValue":"","ObjectClass":"StringValue","ObjectName":"Slot11"},"Personality":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"Personality"},"Parentq":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"Parentq"},"Key11":{"ObjectValue":"-","ObjectClass":"StringValue","ObjectName":"Key11"},"ToggleAccessories":{"ObjectValue":"1","ObjectClass":"IntValue","ObjectName":"ToggleAccessories"},"LastGripped":{"ObjectValue":"142229086","ObjectClass":"IntValue","ObjectName":"LastGripped"},"HideName":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"HideName"},"HBChoice":{"ObjectValue":"1","ObjectClass":"IntValue","ObjectName":"HBChoice"},"Prestige":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"Prestige"},"PrimaryCN":{"ObjectValue":"5","ObjectClass":"IntValue","ObjectName":"PrimaryCN"},"Trauma":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"Trauma"},"ResetPos":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"ResetPos"},"Key6":{"ObjectValue":"6","ObjectClass":"StringValue","ObjectName":"Key6"},"Slot2":{"ObjectValue":"Crystal Crossing","ObjectClass":"StringValue","ObjectName":"Slot2"},"Key2":{"ObjectValue":"2","ObjectClass":"StringValue","ObjectName":"Key2"},"Key7":{"ObjectValue":"7","ObjectClass":"StringValue","ObjectName":"Key7"},"TailedBeastLevel":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"TailedBeastLevel"},"SwordSave":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"SwordSave"},"PDLog":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"PDLog"},"LeftEye":{"ObjectValue":"Default","ObjectClass":"StringValue","ObjectName":"LeftEye"},"EyeColorG":{"ObjectValue":"109","ObjectClass":"IntValue","ObjectName":"EyeColorG"},"Gender":{"ObjectValue":"1","ObjectClass":"IntValue","ObjectName":"Gender"},"ItemSave":{"ObjectValue":"","ObjectClass":"StringValue","ObjectName":"ItemSave"},"Key12":{"ObjectValue":"=","ObjectClass":"StringValue","ObjectName":"Key12"},"CColorG":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"CColorG"},"IsExiled":{"ObjectValue":"0","ObjectClass":"IntValue","ObjectName":"IsExiled"},"CanRank":{"ObjectValue":"1","ObjectClass":"IntValue","ObjectName":"CanRank"},"Marking":{"ObjectValue":"69","ObjectClass":"IntValue","ObjectName":"Marking"},"Blind":{"ObjectValue":"0","ObjectClass":"NumberValue","ObjectName":"Blind"}}}

#!/usr/bin/perl

use strict;
use warnings;

no warnings 'recursion';

use List::AllUtils   qw(max pairwise);

sub vec_sum  ($$) { return [pairwise {$a + $b}   @{$_[0]}, @{$_[1]}] }
sub vec_step ($$) { return [pairwise {$b <=> $a} @{$_[0]}, @{$_[1]}] }
sub point_eq ($$) { return ($_[0]->[0] == $_[1]->[0] and $_[0]->[1] == $_[1]->[1]) }

my %grid;
my $maxY = 0;

# Read in rock structure:
foreach (<>) {
    my @corners = map { [split ','] } m#(\d+,\d+)#g;

    my $pos = shift @corners;
    $grid{ $pos->[0], $pos->[1] } = '#';

    $maxY = max ($maxY, $pos->[1]);

    while (my $next = shift @corners) {
        my $delta = vec_step( $pos, $next );

        do {
            $pos = vec_sum( $pos, $delta );
            $grid{ $pos->[0], $pos->[1] } = '#';
        } until (point_eq( $pos, $next ));

        $maxY = max ($maxY, $pos->[1]);
    }
}

$maxY += 1;                         # add in space to infinite floor

my $part1;
my $placed = 0;

sub recurse_fall {
    my ($px,$py) = @_;
    my $sand = 0;

    return (0) if ($py > $maxY);

    foreach my $fall ([0,1], [-1,1], [1,1]) {
        my ($nx,$ny) = ($px + $fall->[0], $py + $fall->[1]);

        if (!$grid{$nx, $ny}) {         # place to fall
            $sand += &recurse_fall( $nx, $ny );
        }
    }

    $grid{$px, $py} = 'o';
    $part1 //= $placed if ($py == $maxY);
    $placed++;

    return ($sand + 1);
}

print "Part 2: ", &recurse_fall( 500, 0 ), "\n";
print "Part 1: $part1\n";

SELECT
  *
FROM
payments

WHERE 

  paymentType = 3
	AND productID = 2
	AND paymentDateTime > '2022-12-11'

ORDER BY
  userID,
  paymentDateTime DESC

if (File.Exists(dataFile))
            {
                using (StreamReader sr = new StreamReader(dataFile))
                {
                    string? winsString = sr.ReadLine();
                    if (winsString != null)
                    {
                        wins = Int32.Parse(winsString);
                    }

                    string? lossesString = sr.ReadLine();
                    if (lossesString != null)
                    {
                        losses = Int32.Parse(lossesString);
                    }
                }
            }
            else
            {
                MessageBox.Show("data.txt not found");
            }

#include "bits/stdc++.h"
#include "lab1.h"

using namespace std;

void Print(lab1::Queue q){
    while(!q.isEmpty()){
        cout << q.front() << ' ';
        q.pop();
    }
}

void SimpleSort(lab1::Queue& q){

}

int main(){
    srand(std::time(0));
    lab1::Queue queue(10000);
    for(int i = 0; i < queue.size(); ++i)
        queue.push(rand() % 10000);
    Print(queue);
}

#include <iostream>

using namespace std;

class TablicaInt
{
    unsigned wielkosc;
    int* tablica;
public:
    TablicaInt();
    explicit TablicaInt(unsigned w);
    ~TablicaInt();
    void dodaj(int nowy);
    void zmien_rozmiar(unsigned nowy);
    void wypisz() const;
    void usun_dane();
    unsigned rozmiar() const;
    int& operator[](unsigned nr);
};

TablicaInt::TablicaInt() : wielkosc(0), tablica(nullptr) {}

TablicaInt::TablicaInt(unsigned w) : wielkosc(w), tablica(new int[w])
{
    for(unsigned i = 0; i < w; ++i)
        tablica[i] = 0;
}

TablicaInt::~TablicaInt()
{
    if(tablica != nullptr)
        delete[] tablica;
    cout << "Tablica poprawnie usunieta.\n";
}

void TablicaInt::dodaj(int nowy)
{
    // jeżeli tablica dotychczas jest pusta, alokujemy do niej pamięć dla tablicy jednoelementowej:
    if(tablica == nullptr)
    {
        tablica = new int[1];
        tablica[0] = nowy;
        wielkosc = 1;
        return;
    }
    // w przeciwnym wypadku:
    // tworzymy tablicę tymczasową o rozmiarze dotychczasowej tablicy
    int* temp = new int[wielkosc];
    // kopiujemy zawartość tablicy dotychczasowej do nowej, tymczasowej
    for(unsigned i = 0; i < wielkosc; ++i)
        temp[i] = tablica[i];
    // zwalniamy pamięć z dotychczasowej tablicy
    delete[] tablica;
    // na miejscu tablicy tworzymy nową, o rozmiarze o 1 większym
    tablica = new int[wielkosc + 1];
    // do nowej tablicy kopiujemy zawartość tymczasowej
    for(unsigned i = 0; i < wielkosc; ++i)
        tablica[i] = temp[i];
    // zwalniamy pamięć z tablicy tymczasowej
    delete[] temp;
    // na ostatni element tablicy wpisujemy nową wartość
    tablica[wielkosc] = nowy;
    // zwiększamy wielkość o 1
    ++wielkosc;
}

void TablicaInt::zmien_rozmiar(unsigned nowy)
{
    if(wielkosc==nowy)
        return;

    if(wielkosc == 0)
    {
        wielkosc = nowy;
        tablica = new int[wielkosc];

        for(unsigned i = 0; i < wielkosc; ++i)
            tablica[i] = 0;
        return;
    }

    if(wielkosc<nowy)
    {
        int* temp= new int[wielkosc];
        for(unsigned i=0; i<wielkosc; i++)
            temp[i]=tablica[i];

        delete[] tablica;

        tablica = new int[nowy];
        for (unsigned i=0; i<wielkosc; ++i)
            tablica[i] = temp[i];
        delete [] temp;

        for(unsigned i=wielkosc; i<nowy; i++)
            tablica[i] = 0;

        wielkosc=nowy;
        return;
    }

    if(nowy==0)
    {
        delete[] tablica;
        wielkosc=0;
        return;
    }

    wielkosc=nowy;
    int* temp = new int[wielkosc];
    for (unsigned i=0; i<wielkosc; i++)
        temp[i]= tablica[i];

    delete[] tablica;
    tablica = new int[wielkosc];
    for (unsigned i=0; i<wielkosc; ++i)
        tablica[i] = temp[i];
    delete [] temp;



}

void TablicaInt::wypisz() const
{
    if(wielkosc > 0)
        for(unsigned i = 0; i < wielkosc; ++i)
            cout << tablica[i] << '\t';
    cout << endl;
}

void TablicaInt::usun_dane()
{
    zmien_rozmiar(0);
}

unsigned TablicaInt::rozmiar() const
{
    return wielkosc;
}

int& TablicaInt::operator[](unsigned nr)
{
    return tablica[nr];
}

int main()
{
    TablicaInt tablica(5);
    tablica.wypisz();
    cin >> tablica[2];
    cout << tablica[2];
    tablica.wypisz();

    return 0;
}

unit interceptor_TLabel;

// Esta é uma classe interceptadora que acrescenta a funcionalidade 'MakeAsLink' ao TLabel
// Basicamente voce coloca a unit interceptor_TLabel na uses de seu form e poderá fazer algo como
// Label1.MakeAsLink:=true
// e então o Label1 sofrerá algumas modificações, por exemplo, ao passar o mouse por cima
// o caption é visto como um link para ser clicado.
// Atenção, a ordem que declarará a unit é importante, ela deve ficar depois de Vcl.StdCtrls

interface

uses
  Windows, Messages, SysUtils, Classes, Vcl.Graphics, Vcl.Controls, Vcl.Forms, Vcl.Dialogs,
  Vcl.StdCtrls;

type
  TLabel = class (Vcl.StdCtrls.TLabel)
  private
    FMakeAsLink: Boolean;
    FDoingMakeAsLink:Boolean;
    FOldColor:TColor;
    FOldStyle:TFontStyles;
    FOldCursor:TCursor;
    FOldLeft:Integer;
    FOldWidth:Integer;
    FOldTransparent:Boolean;
    procedure MouseEnter(var Message: TMessage); message CM_MOUSEENTER;
    procedure MouseLeave(var Message: TMessage); message CM_MOUSELEAVE;
    procedure SetMakeAsLink(const Value: Boolean);
    procedure EnableEffects;
    procedure DisableEffects;
  protected
  public
    constructor Create(AOwner: TComponent); override;
    property MakeAsLink:Boolean read FMakeAsLink write SetMakeAsLink default false;
  end;


implementation

const
  nMorePixelForBold = 50;  // valor arbitrado por causa do Bold na letra

{ TLabel }
constructor TLabel.Create(AOwner: TComponent);
begin
  inherited ;
  FDoingMakeAsLink:=false;
  BringToFront;
end;


procedure TLabel.SetMakeAsLink(const Value: Boolean);
var
  nTextWidthSize:Integer;
begin
  if Value<>FMakeAsLink then
  begin
    FMakeAsLink := Value;
    if FMakeAsLink then
    begin
      FOldCursor:=Cursor;
      FOldColor:=Font.Color;
      FOldStyle:=Font.Style;
      FOldWidth:=Width;
      FOldLeft:=Left;
      FOldTransparent:=Transparent;
      Font.Color:=clBlue;
      Font.Style:=Font.Style+[fsUnderline];
      Transparent:=true;
      nTextWidthSize:=Canvas.textwidth(caption);
      nTextWidthSize:=nTextWidthSize+(nMorePixelForBold);
      if Width<nTextWidthSize then
      begin
        Left:=Left-(nMorePixelForBold div 2);
        Width:=nTextWidthSize;
      end;
    end
    else
    begin
      if (FDoingMakeAsLink) then
      begin
        DisableEffects;
        FDoingMakeAsLink:=false;
        Font.Style:=FOldStyle;
        Font.Color:=FOldColor;
        Cursor:=FOldCursor;
        Transparent:=FOldTransparent;
        Left:=FOldLeft;
        Width:=FOldWidth;
      end;
    end;
  end;
end;

procedure TLabel.DisableEffects;
begin
  Cursor:=crDefault;
  Font.Style:=Font.Style-[fsBold];
end;

procedure TLabel.EnableEffects;
begin
  Cursor:=crHandPoint;
  if not (fsBold in Font.Style ) then
  begin
    Font.Style:=Font.Style+[fsBold];
    FDoingMakeAsLink:=true;
  end;
end;

procedure TLabel.MouseEnter(var Message: TMessage);
begin
  inherited;
  if FMakeAsLink then
  begin
    EnableEffects;
  end;
end;


procedure TLabel.MouseLeave(var Message: TMessage);
begin
  inherited;
  if FMakeAsLink then
  begin
    if FDoingMakeAsLink then
    begin
      DisableEffects;
    end;
  end;
end;


end.

Преведувач Problem 3 (2 / 5) 
Треба да изработите автоматски преведувач за зборови од анлиски јазик на македонски. Влезот се состои од парови од зборови разделени со празно место. Така прво е даден зборот на македонски, па има едно празно место, па преводот на зборот на англиски јазик Потоа на влез се добиваат странски зборови (секој во посебен ред). За излез треба да се преведат овие зборови. Доколку не е познат преводот на зборот на излез се печати "/"
 
Влез. Прво се дава број N на поими кои ќе ги содржи речникот. Потоа во наредните N реда се дадени поимите, прв на македонски, потоа на англиски. Потоа следуваат зборови на англиски (секој збор во посебен ред), кои треба да се преведат на македонски. За означување на крај во редицата се дава зборот KRAJ
 
Излез. За секој од дадените зборови на англиски во посебен ред е даден преводот на зборот на македонски. Доколку не е познат преводот на зборот се печати /
 
Забелешка. Работете со хеш табела со отворени кофички. Сами треба да го одредите бројот на кофички и хеш функцијата.
 
Име на класа: Preveduvac
 
 
import java.util.Scanner;
 
public class Preveduvac {
 
    public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);
        OBHT<String, String> dictionary = new OBHT<>(151);
        
        int n = scan.nextInt();
        scan.nextLine();
        
        for (int i=0; i<n; ++i) {
            String parts[] = scan.nextLine().split(" ");
            String macedonian = parts[0];
            String english = parts[1];
            dictionary.insert(english, macedonian);
        }
        
        while (true) {
            String english = scan.nextLine();
            
            if (english.equals("KRAJ"))
                break;
            
            int index = dictionary.search(english);
            
            if (index == -1)
                System.out.println("/");
            else
                System.out.println(dictionary.getValue(index));
        }
        
    }
}
 
class OBHT<K extends Comparable<K>,E> {
    
    private MapEntry<K,E> buckets[];
    
    private static final MapEntry former = new MapEntry(null, null);
    
    private int occupancy = 0;
    
    private static final int NONE = -1;
    
    @SuppressWarnings("unchecked")
    public OBHT (int m) {
        // Construct an empty OBHT with m buckets.
            buckets = (MapEntry<K,E>[]) new MapEntry[m];
        }
    
 
    private int hash (K key) {
    // Translate key to an index of the array buckets.
        String keys = key.toString();
        int sum = 0;
        for (int i=0; i < keys.length(); ++i) 
            sum += (i * i * keys.charAt(i));
        return sum % buckets.length;
    }
    
    public E getValue(int index) {
        return buckets[index].value;
    }
    
    public int search (K targetKey) {
        // Find which if any bucket of this OBHT is occupied by an entry whose key
        // is equal to targetKey. Return the index of that bucket.
            int b = hash(targetKey); int n_search=0;
            for (;;) {
                MapEntry<K,E> oldEntry = buckets[b];
                if (oldEntry == null)
                    return NONE;
                else if (targetKey.equals(oldEntry.key))
                    return b;
                else
                {
                    b = (b + 1) % buckets.length;
                    n_search++;
                    if(n_search==buckets.length)
                        return NONE;
 
                }
            }
        }
    
    public void insert (K key, E val) {
        // Insert the entry <key, val> into this OBHT.
            MapEntry<K,E> newEntry = new MapEntry<K,E>(key, val);
            int b = hash(key); int n_search=0;
            for (;;) {
                MapEntry<K,E> oldEntry = buckets[b];
                if (oldEntry == null) {
                    if (++occupancy == buckets.length) {
                        System.out.println("Hash tabelata e polna!!!");
                    }
                    buckets[b] = newEntry;
                    return;
                }
                else if (oldEntry == former
                        || key.equals(oldEntry.key)) {
                    buckets[b] = newEntry;
                    return;
                } 
                else
                {
                    b = (b + 1) % buckets.length;
                    n_search++;
                    if(n_search==buckets.length)
                        return;
 
                }
            }
        }
    
    @SuppressWarnings("unchecked")
    public void delete (K key) {
    // Delete the entry (if any) whose key is equal to key from this OBHT.
        int b = hash(key); int n_search=0;
        for (;;) {
            MapEntry<K,E> oldEntry = buckets[b];
            if (oldEntry == null) {
 
                return;
            }
            else if (key.equals(oldEntry.key)) {
                buckets[b] = former;//(MapEntry<K,E>)former;
                return;
            } 
            else{
                b = (b + 1) % buckets.length;
                n_search++;
                if(n_search==buckets.length)
                    return;
 
            }
        }
    }
    
    public String toString () {
        String temp = "";
        for (int i = 0; i < buckets.length; i++) {
            temp += i + ":";
            if (buckets[i] == null)
                temp += "\n";
            else if (buckets[i] == former)
                temp += "former\n";
            else
                temp += buckets[i] + "\n";
        }
        return temp;
    }
 
 
    public OBHT<K,E> clone () {
        OBHT<K,E> copy = new OBHT<K,E>(buckets.length);
        for (int i = 0; i < buckets.length; i++) {
            MapEntry<K,E> e = buckets[i];
            if (e != null&&e != former)
                copy.buckets[i] = new MapEntry<K,E>(e.key, e.value);
            else
                copy.buckets[i] = e;
        }
        return copy;
    }
 
}
 
class MapEntry<K extends Comparable<K>,E> implements Comparable<K> {
    
    K key;
    E value;
    
    public MapEntry(K key, E value) {
        this.key = key;
        this.value = value;
    }
    
    @Override
    public int compareTo(K that) {
        return this.key.compareTo(that);
    }
    
    @Override 
    public String toString () {
        return "<" + key + "," + value + ">";
    }
}
 
 
Sample input
5
machka cat
kuche dog
prase pig
papagal parrot
riba fish
cat
parrot
fish
KRAJ
Sample output
machka
papagal
riba

#include <stdio.h>
#include <stdlib.h>


int main() {
    int n;
    scanf("%d", &n);
    
    int niza[n];
    
    for(int i = 0; i < n; i++) {
        scanf("%d", &niza[i]);
    }
    int parni = 0;
    int neparni = 0;
    for(int i = 0; i < n; i++) {
        if(niza[i] % 2 == 0) {
            parni++;
        }
        else {
            neparni++;
        }
    }
    printf("Parni  %d\n", parni);
    printf("Neparni %d\n", neparni);
    
}


// FORM 1
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using static System.Windows.Forms.VisualStyles.VisualStyleElement;

namespace test2
{
    public partial class Form1 : Form
    {
        public Form1()
        {
            InitializeComponent();
        }

        private void comboBox1_SelectedIndexChanged(object sender, EventArgs e)
        {

        }

        private void button1_Click(object sender, EventArgs e)
        {

            textBox1.Text = ("New User");

        }
private void textBox2_TextChanged(object sender, EventArgs e)
        {

        }

        private void button2_Click(object sender, EventArgs e)
        {
            listBox1.Items.Add(textBox1.Text);
            listBox1.Items.Add(textBox2.Text);
            listBox1.Items.Add(textBox3.Text);
            listBox1.Items.Add(comboBox1.Text);
            listBox1.Items.Add(comboBox2.Text);

        }

        private void button3_Click(object sender, EventArgs e)
        {
            listBox1.Items.Clear();
        }

        private void button4_Click(object sender, EventArgs e)
        {
            
            double litre;
            int n;
            double ostupka;
            double sum;
            litre = Convert.ToDouble(textBox2.Text);
            n = Convert.ToInt32(textBox3.Text);
            ostupka = Convert.ToDouble(comboBox2.Text);
            sum= (litre*n- ((litre * n )* (ostupka / 100)))*1.2;
            textBox4.Text = sum.ToString();
            Form2 f = new Form2(textBox1.Text, textBox2.Text,textBox3.Text, comboBox1.Text, comboBox2.Text);
            f.Show();
        }
    }
}

// FORM 2
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace test2
{
    public partial class Form2 : Form
    {
        String a;
       
        public Form2(string b,string c,string d,string f,string a)
        {
            InitializeComponent();
            this.a = a+b+c+d+f;
        }

        private void button1_Click(object sender, EventArgs e)
        {
            StreamWriter s=new StreamWriter(@"File.txt");
            s.Write(a);
                s.Close();
        }
    }
}

using System;

namespace ConsoleApp8
{
    internal class Program
    {
        static void Main(string[] args)
        {
            int startPoint = 0;
            int countSymbolWrapper = 1;
            int endPoint;

            string name;

            char symbol;

            Console.Write("Введите имя: ");
            name = Console.ReadLine();

            Console.Write("Введите символ: ");
            symbol = Convert.ToChar(Console.ReadLine());

            endPoint = name.Length;

            for (int i = startPoint; i <= endPoint + countSymbolWrapper; i++)
            {
                Console.Write(symbol);
            }

            Console.Write($"\n{symbol}{name}{symbol}\n");

            for (int i = startPoint; i <= endPoint + countSymbolWrapper; i++)
            {
                Console.Write(symbol);
            }
            Console.ReadKey();
        }
    }
}

#include <iostream>

using namespace std;

class TablicaInt
{
    unsigned wielkosc;
    int* tablica;
public:
    TablicaInt();
    TablicaInt(unsigned w);
    void dodaj(int nowy);
    void zmien_rozmiar(unsigned nowy);
    void wypisz();
    void usun_dane();
};

TablicaInt::TablicaInt() : wielkosc(0), tablica(nullptr) {}


int main()
{
    cout << "Hello world!" << endl;
    return 0;
}


#include <stdio.h>
int main(){
    int a[3] = {1, 2, 3};
    int *ptr;
    ptr = a;
    for(int i = 0; i < 3; i++){
        printf("%d %p\n", *ptr, ptr);
        ptr++;
    }
    return 0;
}

#Create a student file (either .csv/.xlsx) that contains:
#Student Number
#Course (BSCS, BSIS, and BSIT only)
#Year
#Section

#Create unsorted 50 records of student.
#Analyze the records according to the courses, year and section. #Present the data in a graph.

#Determine how many students per course (pie graph)
#Determine how many students per year level in the course (line graph) #Determine how many students per section in every year level and course (bar graph)

library("readxl")
library("writexl")

courses <- c("BSCS", "BSIS", "BSIT")
#courses is for reference only. could be used if decided.
stud_data<-function(){
studnum <- c()
studname <- c()
studcourse <- c()
studyr <- c()
section <- c()


#requirement is up to 50 students only

i<-1
max <- 50
cont<-'exit'
roww<-0

while(cont!="n"||cont!="N"){
  
  if(file.exists("StudentRecord.xlsx")==TRUE){
    dt<-read_excel("StudentRecord.xlsx")
    items<-nrow(dt)
    roww=items
    print(paste("Record(s) : ",items))
    if(items==50){print("Record Full!");print("Only accepts 50 records");
      print("remove some data to continue...");
      break}
  }
  
  #check the number of students inside file
  
  snum <- readline(prompt=("STUDENT NUMBER > ")); print("________________")
  sname <- readline(prompt=("STUDENT NAME >")); print("________________")
  scourse <- readline(prompt=("[BSCS/BSIS/BSIT] COURSE >")); print("________________")
  syr <- readline(prompt=("YEAR >")); print("________________")
  sect <- readline(prompt=("SECTION >")); print("________________")
  
  studnum[i]=snum
  studname[i]=sname
  studcourse[i]=scourse
  studyr[i]=syr
  section[i]=sect
  
  print("=========================================")
  cont = readline(prompt=("Save Input? [y/n] >"))
  
  if(cont=='y'||cont=='Y'){ i<- i+1
  
  
  stud_data=data.frame(
    StudentNumber=c(studnum),
    StudentName=c(studname),
    StudentCourse=c(studcourse),
    StudentYear=c(studyr),
    Sections=c(section)
  )
  if(file.exists("StudentRecord.xlsx")==FALSE&&roww==0){
    write_xlsx(stud_data,"StudentRecord.xlsx", col_names = TRUE)
  }
  else{
    write_xlsx(stud_data,"Temporary.xlsx", col_names = TRUE)
    dt1<-read_excel("Temporary.xlsx")
    dt2<-read_excel("StudentRecord.xlsx")
    dtm<-merge(dt1,dt2, all.x=TRUE, all.y=TRUE)
    write_xlsx(dtm,"StudentRecord.xlsx")
    file.remove("Temporary.xlsx")
  }
  
  cont=readline(prompt=("Input Again? [y/n] >"))
  if(cont=='n'||cont=='N'){break;}
  
  }
  else if(cont=='N'||cont=='n'){
    cont=readline(prompt=("Input Again? [y/n] >"))
    if(cont=='n'||cont=='N'){break;}
  }
  else if((cont!='y'|cont!='Y')&&(cont!='N'|cont!='n'))
  { print("Invalid Input.");}
  
  
}
}

mn<-function(){
#x=stud_data()
#^call only stud_data for inputting records
if(file.exists("StudentRecord.xlsx")==TRUE){
  dt<-read_excel("StudentRecord.xlsx")
  s1<-sum(dt$StudentCourse=="BSIT")
  s2<-sum(dt$StudentCourse=="BSIS")
  s3<-sum(dt$StudentCourse=="BSCS")
  s1<-paste("BSIT = ",s1)
  s2<-paste("BSIS = ",s2)
  s3<-paste("BSCS = ",s3)
  lbl<-c(s1,s2,s3)
  vals<-as.numeric(gsub("[^[:digit:]]","",lbl))
  names(vals)<-seq_along(vals)
  lbl<-lbl[as.numeric(names(sort(vals, decreasing=TRUE)))]
  
  pie(table(dt$StudentCourse), main="Number of Students per Course", col=rainbow(3),clockwise=TRUE)
  legend("bottomright",lbl)
  #displaying students per course pie chart
  graphics.off()
  require(ggplot2)
  library(ggplot2)

 ggplot(data=dt,aes(x=StudentYear,y=StudentCourse))+geom_line(group=1)+geom_count()
 

 
}
}

mn()


- Download Nitro Pro 11 -
32bit: https://go.almaftuchin.com/nitropro11-x32
64bit: https://go.almaftuchin.com/nitropro11-x64

Buy Serial:
https://www.almaftuchin.com/product/license-nitro-pro-11-lifetime/

#include <stdio.h>
#include <stdlib.h>
#include<math.h>
#define PI 3.1415926535897932

double find_int(double a, double b, double eps, double (* f) (double x));
double helper(double a, double b, int eps, double (* f) (double x));

int main()
{
    double f (double x);
    double (* fpointer)(double x) = f;
    double a = 0, b = 1, eps = 0.0001;
    printf("Integral of f(x) from %g to %g with eps %g is about %g\n", a, b, eps, find_int(a, b, eps, fpointer));
    printf("Integral of cos(x) from %g to pi/2 with eps %g is about %g\n", a, eps, find_int(a, PI/2, eps, &cos));
    printf("Integral of cos(x) from %g to pi with eps %g is about %g\n", a, eps, find_int(a, PI, eps, &cos));
}

double find_int(double a, double b, double eps, double (* f) (double x)){
    int Np = 1, N = 2;
    double ansp = helper(a, b, Np, f), ans = helper(a, b, N, f);
    while (fabs(ansp - ans) > eps){
        Np = N;
        N *= 2;
        ansp = ans;
        ans = helper(a, b, N, f);
    }
    return ans;
}

double helper(double a, double b, int steps, double (* f) (double x)){
    double ans = 0;
    double step = fabs(a - b) / steps;
    double fa, fp = f(a);
    for(int i = 0; i < steps; i++){
        fa = fp;
        a += step;
        fp = f(a);
        ans += step * (fa + fp) / 2;
    }
    return ans;
}

double f(double x){
    return x*x*x;
}


using ConfigurableDashboard.Data.Model.Components.Core;
using ConfigurableDashboard.Data.Model.Core;
using ConfigurableDashboard.Data.Model.Core.Extensions;
using ConfigurableDashboard.Pages.Dashboard;
using Microsoft.AspNetCore.Components;
using Syncfusion.Blazor.Layouts;

namespace ConfigurableDashboard.Services;

public class DynamicComponentService {
    public List<Data.Model.Core.DynamicComponent> ComponentsToRender { get; set; } = new() { };
    public Main? Main { get; set; }

    public void AddDashboardLayoutPanel(Data.Model.Core.DynamicComponent dynamicComponent, bool isFixed=false) {
        dynamicComponent.Position.Row = !isFixed ? this.ProvideEmptyRow() : dynamicComponent.Position.Row;

        this.AddDashboardLayoutPanel(
            content: this.CreateComponentFragment(dynamicComponent.T, dynamicComponent.args),
            header: 
                dynamicComponent.HeaderText is null ? null :
                    this.CreateFragment<ComponentPanelHeader>(new() {
                        { "Value", dynamicComponent.HeaderText },
                        { "Style", "" }
                    }),
            minSizeX: dynamicComponent.Position.MinSizeX,
            minSizeY: dynamicComponent.Position.MinSizeY,
            sizeX : dynamicComponent.Position.SizeX,
            sizeY : dynamicComponent.Position.SizeY,
            row: dynamicComponent.Position.Row,
            column: dynamicComponent.Position.Column
        );
    }

    public void RemoveDashboardLayoutPanel(string id) {
        var panel = ComponentsToRender.FirstOrDefault(c => c.Id.ToString() == id);

        if(panel is not null) {
            ComponentsToRender.Remove(panel);
        }

        Main?.StateHasChanged();
    }

    private void AddDashboardLayoutPanel(RenderFragment content, RenderFragment? header, int minSizeX = 1, int minSizeY = 1, int sizeX=1, int sizeY=1, int? row = default, int? column = default) {
        var component = new Data.Model.Core.DynamicComponent() {
            T = typeof(DashboardLayoutPanel),
            args = new() {
                new(){ Key = nameof(DashboardLayoutPanel.Row), Value = row ?? 1 },
                new(){ Key = nameof(DashboardLayoutPanel.Column), Value = column ?? 1 },
                new(){ Key = nameof(DashboardLayoutPanel.Content), Value = content },
                new(){ Key = nameof(DashboardLayoutPanel.SizeX), Value = sizeX },
                new(){ Key = nameof(DashboardLayoutPanel.SizeY), Value = sizeY },
                new(){ Key = nameof(DashboardLayoutPanel.MinSizeX), Value = minSizeX },
                new(){ Key = nameof(DashboardLayoutPanel.MinSizeY), Value = minSizeY },
            }
        };

        if(header is not null) {
            component.args.Add(new() { Key = nameof(DashboardLayoutPanel.Header), Value = header });
        }

        component.args.Add(new() { Key = "Id", Value = component.Id.ToString() });
        ComponentsToRender.Add(component);
    }

    private RenderFragment CreateFragment(Type T, Dictionary<string, object>? args = null) => this.GetType().GetMethod(nameof(this.CreateFragment<>))!.MakeGenericMethod(T).Invoke(this, new object[] { args });


    private RenderFragment CreateFragment<T>(Dictionary<string, object>? args = null) where T : IComponent {
        int c = 0;

        RenderFragment frag = new RenderFragment(builder => {
            builder.OpenComponent<T>(c);

            if (args is not null) {
                foreach (var kv in args) {
                    c++;
                    builder.AddAttribute(c, kv.Key, kv.Value.CloneDeep());
                }
            }

            builder.CloseComponent();
        });

        return frag;
    }

    private void ProvideEmptyRow() {
        int emptyRow = 0;

        foreach (var c in ComponentsToRender) {
            if (c.Position.Row > emptyRow) emptyRow = c.Position.Row + 1;
        }

        return emptyRow;
    }
}


#include <stdio.h>
#include <stdlib.h>

int broj_na_deliteli_na_x(int x, int i) {
    if(i > x) {
        return 0;
    }
    int delitel = 0;
    if(x % i == 0) {
        delitel = 1;
    }
    return broj_na_deliteli_na_x(x, i + 1) + delitel;
}
int main() {
    printf("%d\n", broj_na_deliteli_na_x(10, 1));
    
}
// broj_na_deliteli_na_x(10, 1) --> broj_na_deliteli_na_x(10, 2) + 1
// broj_na_deliteli_na_x(10, 2) --> broj_na_deliteli_na_x(10, 3) + 1
// broj_na_deliteli_na_x(10, 3) --> broj_na_deliteli_na_x(10, 4) + 0
// broj_na_deliteli_na_x(10, 4) --> broj_na_deliteli_na_x(10, 5) + 0
// broj_na_deliteli_na_x(10, 5)....


-- @file floorer.lua
--
-------------------------------------------------------------------------------

-- wget https://raw.githubusercontent.com/renanmfd/turtlesworm/master/obsidian.lua obsidian

local args = {...}
local size
local count = 0

if args[1] == nil then
    size = 1
elseif tonumber(args[1]) < 1 then
    exit()
else
    size = tonumber(args[1])
end

while true do
    turtle.turnLeft()
    turtle.dig()
    turtle.turnRight()
    turtle.turnRight()
    turtle.dig()
    turtle.turnLeft()
    turtle.dig()
    turtle.forward()
    
    count = count + 1
    if count >= size then
        break
    end
end

turtle.turnLeft()
turtle.turnLeft()
turtle.digDown()
turtle.down()


import os
import shutil

#Python program that removes virus that makes folders named Conf and uses the inside of said folders to fill your processing power.
#Also removes the CnfCr0x120 - 125 files, that were made by same virus. 
#If the virus deleting program does not work, try upping the #allowed repeats number or changing the file locations

#IMPORTANT: RUNNING THIS PROGRAM WILL ALSO EMPTY YOUR TRASH PIN AND WINDOWS CACHE
#BY RUNNING THIS PROGRAM YOU AGREE THAT YOU ARE RESPONSIBILE TO ANY IMPORTANT FILES OR FOLDERS THAT MIGHT BE DELETED DURING THE RUNNING #PROCESS. TO ENSURE THAT NO FOLDERS YOU WANT TO KEEP ARE DELETED, PLEASE READ THE CODE AND MAKE SURE YOU UNDERSTAND IT
#If you have Minecraft installed know that it might be using a folder also named Conf and you may need to reinstall the game if you dont #backup the folder before(rename the folder before running this program and rename it back after)


# Get the path of the trashbin
trashbin_path = os.getenv('TRASH')

repeats = 0
while repeats < 3:#allowed repeats
    #removing all know conf files
    folder_location = 'C:\\Users\\Admin\\AppData\\Local\\Microsoft\\Conf'
    folder_location2 = 'C:\\Users\\Admin\\AppData\\Local\\Mozilla\\Conf'
    folder_location3 = 'C:\\Users\\Admin\\AppData\\Local\\Microsoft\\Conf'
    folder_location4 = 'C:\\Users\\Admin\\AppData\\Local\\Mozilla\\Conf'

    try:
        os.rmdir(folder_location)
        print("Folder 1 deleted successfully")
    except OSError:
        print("Folder 1 not deleted")
    try:
        os.rmdir(folder_location2)
        print("Folder 2 deleted successfully")
    except OSError:
        print("Folder 2 not deleted")
    try:
        os.rmdir(folder_location3)
        print("Folder 3 deleted successfully")
    except OSError:
        print("Folder 3 not deleted")
    try:
        os.rmdir(folder_location3)
        print("Folder 4 deleted successfully")
    except OSError:
        print("Folder 4 not deleted")

    #removing all CnfCr0x files
    file_path1 = "C:\\WINDOWS\\System32\\Tasks\\CnfCr0x120"
    file_path2 = "C:\\WINDOWS\\System32\\Tasks\\CnfCr0x121"
    file_path3 = "C:\\WINDOWS\\System32\\Tasks\\CnfCr0x122" 
    file_path4 = "C:\\WINDOWS\\System32\\Tasks\\CnfCr0x123"
    file_path5 = "C:\\WINDOWS\\System32\\Tasks\\CnfCr0x124"
    file_path6 = "C:\\WINDOWS\\System32\\Tasks\\CnfCr0x125" 
     
    if os.path.exists(file_path1): 
        os.remove(file_path1) 
        print("File 1 removed successfully") 
    else: 
        print("File 1 not found")
    if os.path.exists(file_path2): 
        os.remove(file_path2) 
        print("File 2 removed successfully") 
    else: 
        print("File 2 not found")
    if os.path.exists(file_path3): 
        os.remove(file_path3) 
        print("File 3 removed successfully") 
    else: 
        print("File 3 not found")
    if os.path.exists(file_path4): 
        os.remove(file_path4) 
        print("File 4 removed successfully") 
    else: 
        print("File 4 not found")
    if os.path.exists(file_path5): 
        os.remove(file_path5) 
        print("File 5 removed successfully") 
    else: 
        print("File 5 not found")
    if os.path.exists(file_path6): 
        os.remove(file_path6) 
        print("File 6 removed successfully") 
    else: 
        print("File 6 not found")

    #removes all conf files in computer
    for root, dirs, files in os.walk("C:\\"):
        if "Conf" in dirs:
            try:
                os.rmdir(os.path.join(root, "Conf"))
                print("removed ", os.path.join(root, 'Conf'))
            except:
                try:
                    shutil.rmtree(os.path.join(root, 'Conf'))
                    print("removed ", os.path.join(root, 'Conf'))
                except:
                    print("could not remove folder", os.path.join(root, 'Conf'))

    #empty trashpin
    # Loop through the files in the trashbin
    print('started emptying trash')
    try:
        for root, dirs, files in os.walk(trashbin_path):
            for file in files:
                # Delete the file
                os.remove(os.path.join(root, file))
        print('trash is empty')
    except:
        print('deleting files in trash failed')
    try:
        # Delete the empty folders in the trashbin
        for root, dirs, files in os.walk(trashbin_path):
            if not files:
                os.rmdir(root)
    except:
        print("deleting empty folders in trashpin failed, manual trash empty recommended")
    
    # Clear the Window's cache
    try:
        os.system('RunDll32.exe InetCpl.cpl, ClearMyTracksByProcess 8')
    except:
        print("could not clear cache")
    
    repeats+= 1
print('Done.')
print('Did', repeats, "repeats.")




local client:Player = game.Players.LocalPlayer

local clientAchievements:Folder = client:WaitForChild("ACHIEVEMENTS FOLDER")

local plrGui:PlayerGui = script.Parent

local mainGui:ScreenGui = plrGui:WaitForChild("AchievementsMainGui")
local openMainButton:TextButton = mainGui:WaitForChild("OpenButton")
local mainFrame:Frame = mainGui:WaitForChild("AchievementsFrame"); mainFrame.Visible = false

local notifGui:ScreenGui = plrGui:WaitForChild("AchievementsNotification"); notifGui.Enabled = false
local notifFrame:Frame = notifGui:WaitForChild("NotificationFrame")
local notifFramePos:UDim2 = notifFrame.Position


local rs:ReplicatedStorage = game.ReplicatedStorage:WaitForChild("AchievementSystemReplicatedStorage")
local remote:RemoteEvent = rs:WaitForChild("AchievementsRemoteEvent")
local allAchievements:ModuleScript = require(rs:WaitForChild("AchievementsList"))


--Open main GUI
openMainButton.MouseButton1Click:Connect(function()
	mainFrame.Visible = not mainFrame.Visible
end)

--Close main GUI
mainFrame:WaitForChild("CloseButton").MouseButton1Click:Connect(function()
	mainFrame.Visible = false
end)


--Notification GUI
local achievementsQueue = {}

remote.OnClientEvent:Connect(function(instruction, arg)
	
	if instruction == "AWARD ACHIEVEMENT" then
		
		local achievementInfo = allAchievements[arg]
		if achievementInfo then
			table.insert(achievementsQueue, arg)
			repeat
				task.wait(0.2)
			until table.find(achievementsQueue, arg) == 1
			
			local notifFrameClosedPos = notifFramePos + UDim2.new(notifFrame.Size.X.Scale, 0, 0, 0)
			
			notifFrame.Position = notifFrameClosedPos
			notifFrame.AchievementName.Text = arg
			notifFrame.AchievementImage.Image = type(achievementInfo.ImageId) == "number" and "rbxassetid://" .. achievementInfo.ImageId or achievementInfo.ImageId
			notifFrame.Description.Text = achievementInfo.Description
			
			notifGui.Enabled = true
			
			notifFrame:TweenPosition(notifFramePos, "Out", "Quart", 0.8, true)
			
			task.wait(2)
			
			notifFrame:TweenPosition(notifFrameClosedPos, "In", "Quart", 0.8, true)
			
			task.wait(0.8)
			notifGui.Enabled = false
			
			table.remove(achievementsQueue, table.find(achievementsQueue, arg))
		end
	end
end)


--Update main frame
local function updateMain()
	for _, frame in pairs(mainFrame:WaitForChild("AchievementsScroller"):GetChildren()) do
		if frame:IsA("Frame") or frame:IsA("ImageLabel") or frame:IsA("ImageButton") or frame:IsA("TextButton") or frame:IsA("TextLabel") then
			frame:Destroy()
		end
	end
	
	local newFrames = {}
	
	for achievement, achievementInfo in pairs(allAchievements) do
		local name = achievement
		local image = type(achievementInfo.ImageId) == "number" and "rbxassetid://" .. achievementInfo.ImageId or achievementInfo.ImageId
		local desc = achievementInfo.Description
		local owned = clientAchievements:FindFirstChild(name)
		
		local newFrame = script:WaitForChild("AchievementTemplate"):Clone()
		newFrame.Name, newFrame.AchievementName.Text = name, name
		newFrame.AchievementImage.Image = image
		newFrame.Description.Text = desc
		newFrame.Acquired.Visible = owned
		
		if not owned then
			newFrame.ImageColor3 = Color3.fromRGB(newFrame.ImageColor3.R - 50, newFrame.ImageColor3.G - 50, newFrame.ImageColor3.B - 50)
			for _, uiElement in pairs(newFrame:GetDescendants()) do
				if uiElement:IsA("Frame") then 
					uiElement.BackgroundColor3 = Color3.fromRGB(uiElement.BackgroundColor3.R - 50, uiElement.BackgroundColor3.G - 50, uiElement.BackgroundColor3.B - 50)
				elseif uiElement:IsA("TextLabel") or uiElement:IsA("TextButton") then
					uiElement.BackgroundColor3 = Color3.fromRGB(uiElement.BackgroundColor3.R - 50, uiElement.BackgroundColor3.G - 50, uiElement.BackgroundColor3.B - 50)
					uiElement.TextColor3 = Color3.fromRGB(uiElement.TextColor3.R - 50, uiElement.TextColor3.G - 50, uiElement.TextColor3.B - 50)
				elseif uiElement:IsA("ImageLabel") or uiElement:IsA("ImageButton") then
					uiElement.ImageColor3 = Color3.fromRGB(uiElement.ImageColor3.R - 50, uiElement.ImageColor3.G - 50, uiElement.ImageColor3.B - 50)
				end
			end
		end
		
		table.insert(newFrames, newFrame)
	end
	
	table.sort(newFrames, function(a, b)
		return allAchievements[a.Name].OrderRank < allAchievements[b.Name].OrderRank
	end)
	
	for _, newFrame in pairs(newFrames) do
		newFrame.Parent = mainFrame.AchievementsScroller
	end
end

updateMain()
clientAchievements.ChildAdded:Connect(updateMain)

unit utils;

interface
type two_d_array = Array[1..20, 1..20] of integer;

procedure read_mtrx(var in_file: TextFile; n: integer; var mtrx: two_d_array);
procedure write_mtrx(var out_file: TextFile; n: integer; mtrx: two_d_array);

function matrix_max(n: integer; mtrx: two_d_array): integer;
function matrix_min(n: integer; mtrx: two_d_array): integer;
function process_matrix(n: integer; var mtrx: two_d_array): integer;

implementation
procedure read_mtrx(var in_file: TextFile; n: integer; var mtrx: two_d_array);
var i, j: integer;
begin
  for i := 1 to n do
    begin
      for j := 1 to n - 1 do
        read(in_file, mtrx[i][j]);
      readln(in_file, mtrx[i][n]);
    end;
end;


procedure write_mtrx(var out_file: TextFile; n: integer; mtrx: two_d_array);
var i, j: integer;
begin
  for i := 1 to n do
  begin
    for j := 1 to n - 1 do
      write(out_file, mtrx[i][j]:4, ' ');
    writeln(out_file, mtrx[i][n]:4);
  end;
end;

function matrix_max(n: integer; mtrx: two_d_array): integer;
var i, j: integer;
begin
  result := -1000000;
  for i := 1 to n do
    for j := 1 to n do
      if mtrx[i][j] > result then result := mtrx[i][j];
end;

function matrix_min(n: integer; mtrx: two_d_array): integer;
var i, j: integer;
begin
  result := 10000;
  for i := 1 to n do
    for j := 1 to n do
      if mtrx[i][j] < result then result := mtrx[i][j];
end;

function process_matrix(n: integer; var mtrx: two_d_array): integer;
var i, j: integer;
begin
  result := 0;
  for i := 1 to n do
    for j := 1 to n do
      if (mtrx[i][j] > 0) and (mtrx[i][j] <> 1) then begin
        mtrx[i][j] := 1;
        result := result + 1;
      end
      else if (mtrx[i][j] < 0) then begin
        mtrx[i][j] := 0;
        result := result + 1;
      end;
end;

end.

Windows Explorer Problem 1 (5 / 10)
Потребно е да имплементирате Windows Explorer со помош на дрво. Јазлите треба да ви бидат фолдери/датотеки. Почетно ќе имате само еден фолдер c: и тој ви е тековен фолдер. Ќе ви биде дадена низа од команди што можат да бидат во еден од следните типови:
 
CREATE [име на фолдер/датотека] - треба да креирате нов фолдер/датотека во тековниот. Треба да внимавате при додавањето, новиот фолдер/датотека треба да се смести на онаа позиција така што сите фолдери/датотеки во тековниот фолдер ќе бидат подредени лексикографски
 
OPEN [име на фолдер/датотека] - го отварате фолдерот во тековниот фолдер и се менува тековниот фолдер
 
DELETE [име на фолдер/датотека] - го бришете фолдерот/датотеката
 
BACK - се враќате назад во претходниот фолдер
 
PATH - се печати патеката на тековниот фолдер на пример: c:\users\darko\mydocuments
 
PRINT - се печати целата структура на датотечниот систем така што секој фолдер/датотека се печати во еден ред со онолку празни места колку што е нивото на тој фолдер/датотека
 
Забелешка: Имињата на фолдерите/датотеките ќе бидат составени само од еден збор што содржи мали латинични букви. Сите операции ќе бидат валидни.
 
Име на класата: WindowsExplorer
 
 
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.StringTokenizer;
import java.util.Iterator;
import java.util.NoSuchElementException;
 
interface Tree<E> {
    ////////////Accessors ////////////
 
    public Node<E> root();
 
    public Node<E> parent(Node<E> node);
 
    public int childCount(Node<E> node);
 
    ////////////Transformers ////////////
    public void makeRoot(E elem);
 
    public Node<E> addChild(Node<E> node, E elem);
 
    public void remove(Node<E> node);
 
    ////////////Iterator ////////////
    public Iterator<E> children(Node<E> node);
    
}
 
interface Node<E> {
 
        public E getElement();
 
        public void setElement(E elem);
}
 
 
class SLLTree<E> implements Tree<E> {
    
    public SLLNode<E> root;
 
    public SLLTree() {
        root = null;
    }
 
    public Node<E> root() {
        return root;
    }
 
    public Node<E> parent(Node<E> node) {
        return ((SLLNode<E>) node).parent;
    }
 
    public int childCount(Node<E> node) {
        SLLNode<E> tmp = ((SLLNode<E>) node).firstChild;
        int num = 0;
        while (tmp != null) {
            tmp = tmp.sibling;
            num++;
        }
        return num;
    }
 
    public void makeRoot(E elem) {
        root = new SLLNode<E>(elem);
    }
 
    public Node<E> addChild(Node<E> node, E elem) {
        SLLNode<E> tmp = new SLLNode<E>(elem);
        SLLNode<E> curr = (SLLNode<E>) node;
        tmp.sibling = curr.firstChild;
        curr.firstChild = tmp;
        tmp.parent = curr;
        return tmp;
    }
 
    public void remove(Node<E> node) {
        SLLNode<E> curr = (SLLNode<E>) node;
        if (curr.parent != null) {
            if (curr.parent.firstChild == curr) {
                // The node is the first child of its parent
                // Reconnect the parent to the next sibling
                curr.parent.firstChild = curr.sibling;
            } else {
                // The node is not the first child of its parent
                // Start from the first and search the node in the sibling list and remove it
                SLLNode<E> tmp = curr.parent.firstChild;
                while (tmp.sibling != curr) {
                    tmp = tmp.sibling;
                }
                tmp.sibling = curr.sibling;
            }
        } else {
            root = null;
        }
    }
 
    class SLLTreeIterator<T> implements Iterator<T> {
 
        SLLNode<T> start, current;
 
        public SLLTreeIterator(SLLNode<T> node) {
            start = node;
            current = node;
        }
 
        public boolean hasNext() {
            return (current != null);
        }
 
        public T next() throws NoSuchElementException {
            if (current != null) {
                SLLNode<T> tmp = current;
                current = current.sibling;
                return tmp.getElement();
            } else {
                throw new NoSuchElementException();
            }
        }
 
        public void remove() {
            if (current != null) {
                current = current.sibling;
            }
        }
    }
 
    public Iterator<E> children(Node<E> node) {
        return new SLLTreeIterator<E>(((SLLNode<E>) node).firstChild);
    }
    
    void printTreeRecursive(Node<E> node, int level) {
        if (node == null)
            return;
        int i;
        SLLNode<E> tmp;
 
        for (i=0;i<level;i++)
            System.out.print(" ");
        System.out.println(node.getElement().toString());
        tmp = ((SLLNode<E>)node).firstChild;
        while (tmp != null) {
            printTreeRecursive(tmp, level+1);
            tmp = tmp.sibling;
        }
    }
    
    public void printTree() {
        printTreeRecursive(root, 0);
    }
    
    
    
}
 
class SLLNode<P> implements Node<P> {
 
    // Holds the links to the needed nodes
    public SLLNode<P> parent, sibling, firstChild;
    // Hold the data
    public P element;
 
    public SLLNode(P o) {
        element = o;
        parent = sibling = firstChild = null;
    }
 
    public P getElement() {
        return element;
    }
 
    public void setElement(P o) {
        element = o;
    }
}
 
public class WindowsExplorer {
    
    public static void main(String[] args) throws Exception {
        int i,j,k;
        
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        
        int N = Integer.parseInt(br.readLine());
        String commands[] = new String[N];
        
        for (i=0;i<N;i++)
            commands[i] = br.readLine();
            
        br.close();
        
        SLLTree<String> tree = new SLLTree<String>();
        tree.makeRoot("c:");
        
        build(tree,commands);
        
        
    }
    
    public static void build(SLLTree<String> tree, String [] commands) {
        
        SLLNode<String> curr = tree.root;
        
        for (int i=0; i < commands.length; ++i) {
            
            String parts[] = commands[i].split(" ");
            
            String command = parts[0];
            String node = null;
            if (parts.length == 2)
                node = parts[1];
            
            switch(command) {
            
            case "CREATE": {
                SLLNode<String> temp = curr.firstChild;
                if (temp == null || (temp.element.compareTo(node) > 0)) {
                    tree.addChild(curr,node);
                }
                else  {
                    SLLNode<String> ins = new SLLNode(node);
                    while (temp.sibling != null) {
                        if (node.compareTo(temp.sibling.element) < 0) {
                            ins.sibling = temp.sibling;
                            temp.sibling = ins;
                            ins.parent = curr;
                            break;
                        }
                        temp = temp.sibling;
                    }
                    ins.parent = curr;
                    temp.sibling = ins;
                }
                break;
            }
            
            case "OPEN": {
                SLLNode<String> toOpen = curr.firstChild;
                while (toOpen != null) {
                    if (toOpen.element.equals(node))
                        curr = toOpen;
                    toOpen = toOpen.sibling;
                }
                break;
            }
            
            case "DELETE": {
                SLLNode<String> toDelete = curr.firstChild;
                if (toDelete != null&&toDelete.element.equals(node)) {
                    toDelete.parent.firstChild = toDelete.sibling;
                    break;
                }
                while (toDelete.sibling != null) {
                    if (toDelete.sibling.element.equals(node)) {
                        toDelete.sibling = toDelete.sibling.sibling;
                        break;
                    }
                    toDelete = toDelete.sibling;
 
                }
                break;
            }
            
            case "BACK": {
                curr = curr.parent;
                break;
            }
            
            case "PATH": {
                SLLNode<String> temp = curr;
                StringBuilder sb = new StringBuilder();
                    
                while (temp != tree.root) {
                        sb.insert(0, "\\");
                        sb.insert(0, temp.element);
                        temp = temp.parent;
                    }
                    sb.insert(0,"\\");
                    sb.insert(0, tree.root.element);
                    System.out.println(sb.toString());
                break;
            }
            
            case "PRINT": {
                tree.printTree();
                break;
            }
            }   
        }
    }
    
}
 
 
 
Sample input
15
CREATE a
OPEN a
CREATE b
CREATE d
CREATE c
PATH
OPEN c
PATH
CREATE u
CREATE g
CREATE h
PATH
BACK
PATH
PRINT
Sample output
c:\a\
c:\a\c\
c:\a\c\
c:\a\
c:
 a
  b
  c
   g
   h
   u
  d

// AocZz.cpp : This file contains the 'main' function. Program execution begins and ends there.
//

#include <stdio.h>
#include <stdlib.h>

struct Sensor
{
    Sensor* prev{ 0 };
    int sx{ 0 };
    int sy{ 0 };
    int dist{ 0 };
};

bool isFound(Sensor* last, int x, int y)
{
    if (x > 4000000)
        return false;
    if (y > 4000000)
        return false;
    if (x < 0)
        return false;
    if (y < 0)
        return false;

    for (Sensor* p = last; p; p = p->prev)
    {
        int len = abs(p->sx - x) + abs(p->sy - y);
        if (len <= p->dist)
            return false;
    }

    printf("%lld", 4000000ull * x + y);
    return true; // exit of recursion
}



bool readValue(FILE * f, int& val)
{
    do 
    {
        int c = fgetc(f);
        if (c < 0)
            return false;
        if ('=' == c)
            break;
    } while (true);

    val = 0;
    int sign = 1;
    do
    {
        int c = fgetc(f);
        if (c < 0)
            return false;
        if ('-' == c)
        {
            sign = -1;
        }
        else if (('9' >= c) && ('0' <= c))
            val = val * 10 + sign * (c - '0');
        else
            return val;
    } while (true);
}

void traverse(Sensor * last)
{
    for (Sensor* p = last; p; p = p->prev)
    {
        int len = p->dist + 1;

        int dirX[] = { -1, +1, -1, +1 };
        int dirY[] = { -1, -1, +1, +1 };

        for (int i = 0; i <= len; i++)
        {
            for (int k = 0; k < 4; k++)
            {
                if (isFound(last, p->sx + dirX[k] * (len - i), p->sy + dirY[k] * i))
                    return;
            }
        }
    }
}

void recursiveReadValues(FILE* f, Sensor* pPrev)
{
    Sensor s;
    s.prev = pPrev;
    int bx;
    int by;
    if (readValue(f, s.sx) && readValue(f, s.sy) && readValue(f, bx) && readValue(f, by))
    {
        s.dist = abs(bx - s.sx) + abs(by - s.sy);
        recursiveReadValues(f, &s);
    }
    else
    {
        fclose(f);
        traverse(pPrev); // exit of recursion
    }
}

int main()
{
    FILE* f = NULL;
    fopen_s(&f, "input.txt", "r");

    recursiveReadValues(f, nullptr);

    return 0;
}


print("My id = C193033")
print("My name is Arman Hossain")
print("I am enrolled is 6th semester")
print("My section is 6AM")

#This is a single line comment
"""
I am arman hossain.I am Bangladeshi.
But i dont like this country.I wanto go abroad
"""

#string functionalities
name = "Arman Hossain"
age = 25
institution = "Internaional Islamic University Chittagong"
contact = "+8801874015451"
print("My name is " + name)
print("My age is" , age)
print("My institution is " + institution)
print("My contact is " + contact)

#int type variable functionalities
number1 = 100
number2 = 200
print(number1 + number2)
print(number1 * number2)
print(number1 - number2)
print(number1 / number2)


#float type variable functionalities
a = 10.45
b = 20.58
print(a + b)
print(a - b)
print(a * b)
print(a / b)




h1{
    color: darksalmon;
    margin-top: 50px;
    text-align: center;
}

body{
    margin: 0;
}

.jumbotron {
    background-color: #2EC1AC;
    padding: 50px 100px;
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: center;
}

.jumbotron img {
    width: 300px;
    margin: 30px;
}

.jumbotron h3,
p {
    color: white;
}

.main-container {
    flex-direction: row;
    display: flex;
    justify-content: center
}

.package-container {
    margin: 20px;
    padding: 16px;
    border: 3px solid black;
    border-radius: 16px;
    box-shadow: 5px 5px 10px
}

.package-container p {
    color: black
}

.package-container img {
    width: 300px;
}

button {
    background-color: #5fc8f5;
    padding: 10px;
    color: white;
    border-radius: 10px;
    border: none;

}

.left {
    margin-left: 60%;
}

table,
th,
td,
tr,
td {
    border: 1px solid black;
    border-collapse: collapse;
    padding: 10px;
}

th {
    background-color: darkseagreen;
    color: white;
}

.table {
    display: flex;
    justify-content: center;
    text-align: center;
}

.table img {
    width: 200px;
}

header {
    background-color: #2EC1AC;
    color: white;
    position: fixed;
    top: 0px;
    left: 0px;
    right: 0px;
    height: 50px;
    display: flex;
}

.header-title {
    text-align: left;
    color: white;
    margin: 14px;
    font-size: 18px;
}

nav {
    position: absolute;
    right: 0;
    display: flex;
}

a {
    text-decoration: none ;
    color: white;
    float: left;
    padding: 15px;
}
a:hover {
    color: black;
}
.package-container:hover {
    cursor: pointer;
    background-color: rgb(236, 236, 236);
}

button:hover {
    cursor: pointer;
    background-color: rgb(41, 159, 120);
}

footer {
    color: white;
    text-align: center;
    background-color: #2EC1AC;
    padding: 10px;
    margin-top: 50px;
}

.formcontainer {
    text-align: center;
}

.formcontainer img {
    width: 300px;
}

form {
    text-align: left;
    width: 50%;
    margin-left: auto;
    margin-right: auto;
}

input {
    width: 100%;
    display: inline-block;
    margin-bottom: 10px;
    padding: 5px;
    border-radius: 3px;
}

label {
    display: inline-block;
    margin-bottom: 5px;
    font-weight: bold;
}

select {
    width: 100%;
    display: inline-block;
    margin-bottom: 10px;
    padding: 5px;
    border-radius: 3px;
}

import csv
from enum import Enum
import datetime
import os


class Commands(Enum):
    DELETE_NOTE = 1
    ADD_NOTE = 2
    CHANGE_NOTE = 3
    GET_NOTE_INFO = 4
    SORT_BOOKS_YEAR_OF_PUBLISHING = 5
    SORT_BOOKS_NAME = 6
    SORT_BOOKS_AUTHOR = 7
    SAVE_IN_CSV_FILE = 8
    LOAD_FROM_CSV_FILE = 9
    PRINT_BOOKS = 10
    EXIT = 0


class Book:
    number_of_racks = 100  # количество стеллажей
    number_of_shelves = 10  # количество полок

    def __init__(self):
        self.__cipher: str = ''             # шифр книги
        self.__author: str = ''             # автор книги
        self.__name: str = ''               # название книги
        self.__year_of_publishing: int = 0  # год издания
        self.__rack_number: int = 1         # номер стеллажа
        self.__shelf_number: int = 1        # номер полки

    def print_book(self):
        print(f'Шифр: {self.cipher}\n'
              f'Автор: {self.author}\n'
              f'Название: {self.name}\n'
              f'Год издания: {self.year_of_publishing}\n'
              f'Номер стеллажа: {self.rack_number}\n'
              f'Номер полки: {self.shelf_number}')

    @property
    def cipher(self):
        return self.__cipher

    @cipher.setter
    def cipher(self, cipher: str):
        self.__cipher = cipher

    @property
    def author(self):
        return self.__author

    @author.setter
    def author(self, author: str):
        self.__author = author

    @property
    def name(self):
        return self.__name

    @name.setter
    def name(self, name: str):
        self.__name = name

    @property
    def year_of_publishing(self):
        return self.__year_of_publishing

    @year_of_publishing.setter
    def year_of_publishing(self, year_of_publishing: int):
        if not 1 <= year_of_publishing <= datetime.datetime.now().year:
            raise ValueError('Number out of range!')
        self.__year_of_publishing = year_of_publishing

    @property
    def rack_number(self):
        return self.__rack_number

    @rack_number.setter
    def rack_number(self, rack_number: int):
        if not 1 <= rack_number <= self.number_of_racks:
            raise ValueError('Number out of range!')
        else:
            self.__rack_number = rack_number

    @property
    def shelf_number(self):
        return self.__shelf_number

    @shelf_number.setter
    def shelf_number(self, shelf_number: int):
        if not 1 <= shelf_number <= self.number_of_shelves:
            raise ValueError('Number out of range!')
        self.__shelf_number = shelf_number


def input_int(message: str, start: int, end: int) -> int:
    valid = False
    n = 0
    while not valid:
        try:
            n = int(input(message))
        except ValueError:
            print('Вы ввели не число. Попробуйте снова.')
        else:
            if start <= n <= end:
                valid = True
            else:
                print('Введённое число вне диапазона!')
    return n


def input_book(data: list[Book]) -> Book:
    new_book = Book()
    new_cipher, valid_cipher = '', False
    while not valid_cipher:
        new_cipher = input('Введите шифр книги: ')
        valid_cipher = new_cipher not in list(i.cipher for i in data)
        if not valid_cipher:
            print('Шифр должен быть уникальным!')
    new_book.cipher = new_cipher
    new_book.author = input('Введите автора книги: ')
    new_book.name = input('Введите название книги: ')
    new_book.year_of_publishing = input_int('Введите год издания книги: ', 1, datetime.datetime.now().year)
    new_book.rack_number = input_int('Введите номер стеллажа: ', 1, Book.number_of_racks)
    new_book.shelf_number = input_int('Введите номер полки: ', 1, Book.number_of_shelves)
    return new_book


def m_print_books(data: list[Book]):
    if not data:
        print('Список пустой!')
    else:
        print('Книги:')
        for i in data:
            i.print_book()
            print()


def m_delete_note(data: list[Book]):
    if not data:
        print('Список пустой!')
    else:
        cipher = input('Введите шифр книги, которую хотите удалить: ')
        index = -1
        for i in range(len(data)):
            if data[i].cipher == cipher:
                index = i
                break
        if index != -1:
            data.pop(index)
            print(f'Элемент с шифром {cipher} удален')
        else:
            print('Книги с таким шифром не существует!')


def m_add_note(data: list[Book]):
    if not data:
        print('Список пустой!')
    else:
        data.append(input_book(data))


def m_change_note(data: list[Book]):
    if not data:
        print('Список пустой!')
    else:
        cipher = input('Введите шифр книги, которую хотите изменить: ')
        index = -1
        for i in range(len(data)):
            if data[i].cipher == cipher:
                index = i
                break
        if index != -1:
            data[index] = input_book(data)
        else:
            print('Книги с таким шифром не существует!')


def m_get_note_info(data: list[Book]):
    if not data:
        print('Список пустой!')
    else:
        cipher = input('Введите шифр книги, информацию о которой вы хотите получить: ')
        find_book = False
        for i in data:
            if i.cipher == cipher:
                find_book = True
                i.print_book()
        if not find_book:
            print('Не существует книги с таким шифром!')


def m_sort_books_year_of_publishing(data: list[Book]):
    data.sort(key=lambda x: x.year_of_publishing)
    print('Книги отсортированы по году издания')


def m_sort_books_name(data: list[Book]):
    data.sort(key=lambda x: x.name)
    print('Книги отсортированы по названию')


def m_sort_books_author(data: list[Book]):
    data.sort(key=lambda x: x.author)
    print('Книги отсортированы по автору')


def m_save_in_csv_file(data: list[Book], data_file: str):
    with open(data_file, 'w', encoding='utf-8',newline='') as file:
        writer = csv.writer(file)
        for i in data:
            if i:
                writer.writerow([i.cipher, i.author, i.name, i.year_of_publishing, i.rack_number, i.shelf_number])
    print('Книги сохранены в файл')


def m_load_from_csv_file(data: list[Book], data_file: str):
    with open(data_file, 'r', encoding='utf-8') as file:
        reader = csv.reader(file)
        for curr_book in reader:
            if curr_book:
                book = Book()
                print(curr_book)
                book.cipher = curr_book[0]
                book.author = curr_book[1]
                book.name = curr_book[2]
                book.year_of_publishing = int(curr_book[3])
                book.rack_number = int(curr_book[4])
                book.shelf_number = int(curr_book[5])
                data.append(book)
    print('Данные успешно считаны из файла!')


def print_menu():
    print(f' 1. Удалить записать по шифру (по шифру)\n'
          f' 2. Добавить новую запись\n'
          f' 3. Изменить запись (по шифру)\n'
          f' 4. Получить информацию о книге (по шифру)\n'
          f' 5. Отсортировать книги по году издания\n'
          f' 6. Отсортировать книги по названию\n'
          f' 7. Отсортировать книги по автору\n'
          f' 8. Сохранить книги в файл\n'
          f' 9. Загрузить книги из файла\n'
          f'10. Вывести книги\n'
          f' 0. Выход')


def main():
    _exit = False
    data_file = 'data.csv'
    data = []
    while not _exit:
        os.system('cls')
        print_menu()
        command = input_int('Введите команду: ', 0, 10)
        #  os.system('cls')
        if command == Commands.DELETE_NOTE.value:
            m_delete_note(data)
        elif command == Commands.ADD_NOTE.value:
            m_add_note(data)
        elif command == Commands.CHANGE_NOTE.value:
            m_change_note(data)
        elif command == Commands.GET_NOTE_INFO.value:
            m_get_note_info(data)
        elif command == Commands.SORT_BOOKS_YEAR_OF_PUBLISHING.value:
            m_sort_books_year_of_publishing(data)
        elif command == Commands.SORT_BOOKS_NAME.value:
            m_sort_books_name(data)
        elif command == Commands.SORT_BOOKS_AUTHOR.value:
            m_sort_books_author(data)
        elif command == Commands.SAVE_IN_CSV_FILE.value:
            m_save_in_csv_file(data, data_file)
        elif command == Commands.LOAD_FROM_CSV_FILE.value:
            data = []
            m_load_from_csv_file(data, data_file)
        elif command == Commands.PRINT_BOOKS.value:
            m_print_books(data)
        elif command == Commands.EXIT.value:
            _exit = True
        if not _exit:
            os.system('pause')


if __name__ == '__main__':
    main()


'''
code1,Харпер Ли,Убить пересмешника,1960,4,7
code2,Джейн Остен,Гордость и предубеждение,1813,5,8
code3,Джордж Оруэлл,1984,1948,31,5
code4,Джоан Роулинг,Гарри Поттер и философский камень,1995,1,8
code5,Дж. Р. Р. Толкиен,Властелин колец,1954,7,2
'''

String = 20221133

Loop, parse, String, , ; После String следующий параметр пустой, в этом слушае цикл считывает строку побуквенно
{
	If (A_Index < 5)
		year := year A_LoopField
	If (A_Index > 4) and (A_Index < 7)
		month := month A_LoopField
	If (A_Index > 6) and (A_Index < 9)
		day := day A_LoopField
}

MsgBox, Год: %year% `nМесяц: %month% `nДень: %day%

import pandas as pd
from datetime import datetime, timedelta
from matplotlib import pyplot as plt


def get_retention(
    profiles, sessions, observation_date, horizon_days, ignore_horizon=False
):

    # исключаем пользователей, не «доживших» до горизонта анализа
    last_suitable_acquisition_date = observation_date
    if not ignore_horizon:
        last_suitable_acquisition_date = observation_date - timedelta(
            days=horizon_days - 1
        )
    result_raw = profiles.query('dt <= @last_suitable_acquisition_date')

    # собираем «сырые» данные для расчёта удержания
    result_raw = result_raw.merge(
        sessions[['user_id', 'session_start']], on='user_id', how='left'
    )
    result_raw['lifetime'] = (
        result_raw['session_start'] - result_raw['first_ts']
    ).dt.days

    # рассчитываем удержание
    result_grouped = result_raw.pivot_table(
        index=['dt'], columns='lifetime', values='user_id', aggfunc='nunique'
    )
    cohort_sizes = (
        result_raw.groupby('dt')
        .agg({'user_id': 'nunique'})
        .rename(columns={'user_id': 'cohort_size'})
    )
    result_grouped = cohort_sizes.merge(
        result_grouped, on='dt', how='left'
    ).fillna(0)
    result_grouped = result_grouped.div(result_grouped['cohort_size'], axis=0)

    # исключаем все лайфтаймы, превышающие горизонт анализа
    result_grouped = result_grouped[
        ['cohort_size'] + list(range(horizon_days))
    ]

    # восстанавливаем столбец с размерами когорт
    result_grouped['cohort_size'] = cohort_sizes

    # возвращаем таблицу удержания и сырые данные
    return result_raw, result_grouped


users = pd.read_csv('ch02_problems01_users.csv')  # профили
visits = pd.read_csv('ch02_problems01_visits.csv')  # сессии

# преобразование данных о времени
users['dt'] = pd.to_datetime(users['dt']).dt.date
users['first_ts'] = pd.to_datetime(users['first_ts'])
visits['session_start'] = pd.to_datetime(visits['session_start'])

# доступный интервал привлечения пользователей
min_analysis_date = users['dt'].min()
observation_date = users['dt'].max()  # момент анализа

# горизонт анализа
analysis_horizon = 14

# постройте таблицу удержания
retention_raw, retention = get_retention(users, visits, observation_date, analysis_horizon  )



# выведите retention на экран
print(retention)


// given a text, create a function that returns the top 5 most common words sorted by the number of occurrences

const text = 'Nearly ten years had passed since the Dursleys had woken up to find their nephew on the front step but Privet Drive had hardly changed at all The sun rose on the same tidy front gardens and lit up the brass number four on the Dursleys’ front door it crept into their living-room which was almost exactly the same as it had been on the night when Mr Dursley had seen that fateful news report about the owls Only the photographs on the mantelpiece really showed how much time had passed Ten years ago there had been lots of pictures of what looked like a large pink beach ball wearing different coloured bobble hats but Dudley Dursley was no longer a baby and now the photographs showed a large blond boy riding his first bicycle on a roundabout at the fair playing a computer game with his father being hugged and kissed by his mother The room held no sign at all that another boy lived in the house too';


module TristantineDisplay
  PANEL_WIDTH = 176
  PANEL_HEIGHT = 240
  
  BACKGROUND = Color.new(200,191,231)
  BORDER = Color.new(0,0,0)
  
  CENTER_BORDER = Color.new(195,195,195)
  CENTER_BG = Color.new(248,248,248)
  
  TEXT_BASE_COLOR = Color.new(248,248,248)
  TEXT_SHADOW_COLOR = Color.new(128,120,112)
  
  FONT_NAME = MessageConfig::SMALL_FONT_NAME
  FONT_SIZE = MessageConfig::SMALL_FONT_SIZE
  FONT_Y_OFFSET = MessageConfig::FONT_Y_OFFSET
  
  ROW_LENGTH = 6 #Number of Pokemon displayed per row
  PANEL_GAP_X = 2
  PANEL_GAP_Y = 2
  
  TYPE_COLORS = [
  #Light,Main,Dark
  [Color.new(216,216,192),Color.new(168,168,120),Color.new(112,88,72)],  #Normal
  [Color.new(240,128,48),Color.new(192,48,40),Color.new(72,64,56)],      #Fighting
  [Color.new(200,192,248),Color.new(168,144,240),Color.new(112,88,152)], #Flying
  [Color.new(216,128,184),Color.new(160,64,160),Color.new(72,56,80)],    #Poison
  [Color.new(248,248,120),Color.new(224,192,104),Color.new(136,104,48)], #Ground
  [Color.new(224,192,104),Color.new(184,160,56),Color.new(136,104,48)],  #Rock
  [Color.new(216,224,48),Color.new(168,184,32),Color.new(120,144,16)],   #Bug
  [Color.new(168,144,240),Color.new(112,88,152),Color.new(72,56,80)],    #Ghost
  [Color.new(216,216,192),Color.new(184,184,208),Color.new(128,120,112)],#Steel
  [Color.new(112,200,176),Color.new(104,160,144),Color.new(32,104,96)],  #???
  [Color.new(248,208,48),Color.new(240,128,48),Color.new(192,48,40)],    #Fire
  [Color.new(152,216,216),Color.new(104,144,240),Color.new(128,120,112)],#Water
  [Color.new(192,248,96),Color.new(120,200,80),Color.new(88,128,64)],    #Grass
  [Color.new(248,248,120),Color.new(248,208,48),Color.new(184,160,56)],  #Electric
  [Color.new(248,192,176),Color.new(248,88,136),Color.new(144,96,96)],   #Psychic
  [Color.new(208,248,232),Color.new(152,216,216),Color.new(144,144,160)],#Ice
  [Color.new(184,160,248),Color.new(112,56,248),Color.new(72,56,144)],   #Dragon
  [Color.new(168,168,120),Color.new(112,88,72),Color.new(72,64,56)],     #Dark
  [Color.new(248,216,224),Color.new(240,168,176),Color.new(168,120,136)],#Fairy
  
  ]
  
  def self.pbFakedexPanel(species,regiondex)
    species = GameData::Species.get(species)
    monotype = (species.types.length == 1)
    type = species.types[0]
    type2 = species.types[1] if !monotype
    type_number = GameData::Type.get(type).icon_position
    colors = TYPE_COLORS[type_number]
    color_light = colors[0]
    color_main = colors[1]
    color_dark = colors[2]
    base = Bitmap.new(PANEL_WIDTH,PANEL_HEIGHT)
    base.fill_rect(0, 0, base.width, base.height, BACKGROUND)
    base.fill_rect(2, 0, base.width - 4 , base.height, BORDER)
    base.fill_rect(0, 2, base.width , base.height - 4, BORDER)
    base.fill_rect(2, 2, base.width - 4, base.height - 4, color_light)
    base.fill_rect(4, 4, base.width - 6, base.height - 6, color_dark)
    base.fill_rect(4, 4, base.width - 8, base.height - 8, color_main)
    base.fill_rect(4, 22, 168, 168, BORDER)
    base.fill_rect(6, 24, 164, 164, CENTER_BORDER)
    base.fill_rect(8, 26, 160, 160, CENTER_BG)
    
    shadow = Bitmap.new(GameData::Species.shadow_filename(species))
    shadow_x = (base.width/2) - (shadow.width/2)
    shadow_y = 182 - shadow.height
    shadow_rect = Rect.new(0,0,shadow.width,shadow.height)
    base.blt(shadow_x, shadow_y, shadow, shadow_rect)
    sprite = Bitmap.new(GameData::Species.front_sprite_filename(species.id))
    metrics = GameData::SpeciesMetrics.get_species_form(species.id,0)
    sprite_x = (base.width/2) - (sprite.width/2)
    sprite_x += (metrics.front_sprite[0] * 2)
    sprite_y = 14
    sprite_y += metrics.front_sprite[1] * 2
    sprite_rect = Rect.new(0,0,sprite.width,sprite.height)
    base.blt(sprite_x, sprite_y, sprite, sprite_rect)
    
    base.font.name = FONT_NAME
    base.font.size = FONT_SIZE
    base.text_offset_y = FONT_Y_OFFSET
    nationalDexList = [:NONE]
    dexnum = regiondex.index(species.species) + 1
    dexnum = sprintf("%03d", dexnum)
    textpos = [
    [dexnum, 8, 6, 0, TEXT_BASE_COLOR, TEXT_SHADOW_COLOR],
    ["#{species.real_name.upcase}", 172, 6, 1, TEXT_BASE_COLOR, TEXT_SHADOW_COLOR],
    ]
    pbDrawTextPositions(base,textpos)
    typebitmap    = AnimatedBitmap.new(_INTL("Graphics/Pictures/types"))
    type_number = GameData::Type.get(type).icon_position
    type_rect = Rect.new(0, type_number * 28, 64, 28)
    type_x = (monotype) ? 56 : 18
    if type2 
      type2_number = GameData::Type.get(type2).icon_position
      type2_rect = Rect.new(0, type2_number * 28, 64, 28)
      type2_x = 94
    end
    base.fill_rect(type_x, 198, 64, 32, CENTER_BG)
    base.fill_rect(type_x - 2, 200, 68, 28, CENTER_BG)
    base.blt(type_x, 200, typebitmap.bitmap, type_rect)
    if type2
      base.fill_rect(type2_x, 198, 64, 32, CENTER_BG)
      base.fill_rect(type2_x - 2, 200, 68, 28, CENTER_BG)
      base.blt(type2_x, 200, typebitmap.bitmap, type2_rect)
    end
    return base
  end
  
  def self.pbFullFakedex(region=-1)
    regionalSpecies = pbAllRegionalSpecies(region)
    if !regionalSpecies || regionalSpecies.length == 0
      # If no Regional Dex specified, use the National Pokédex
      regionalSpecies = []
      GameData::Species.each_species { |s| regionalSpecies.push(s.id) }
    end
    columns = (regionalSpecies.length/ROW_LENGTH)
    columns += 1 if !((regionalSpecies.length%ROW_LENGTH) == 0)
    fullwidth = (PANEL_WIDTH + PANEL_GAP_X) * ROW_LENGTH
    fullheight = (PANEL_HEIGHT + PANEL_GAP_Y) * columns
    fullbase = Bitmap.new(fullwidth,fullheight)
    fullbase.fill_rect(0, 0, fullbase.width, fullbase.height, BACKGROUND)
    for i in 0...regionalSpecies.length
      s = regionalSpecies[i]
      newbitmap = self.pbFakedexPanel(s,regionalSpecies)
      newrect = Rect.new(0,0,newbitmap.width,newbitmap.height)
      newx = (i%ROW_LENGTH)*(PANEL_WIDTH + PANEL_GAP_X)
      newy = (i/ROW_LENGTH)*(PANEL_HEIGHT + PANEL_GAP_Y)
      fullbase.blt(newx, newy, newbitmap, newrect)
    end
    fullbase.to_file("Graphics/Pictures/DexDisplay.png")
  end

end

Pasted at: 15/12/2022 10:31
Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3

DATA_ID_TESTDATATOFIND

www.qatesting.com
blog.qatesting.com
www.qatesting.com/index.html
www.qatesting.com/home
www.qatestingblog.com
www.qatestingtutorials.com
shop.qatesting.co.uk
admin.qatesting.io 
qatesting
qatesting.co.uk
qatesting.cn
qatesting.io
findmetesting.com
www.qatesting-blog.com
www.qatesting-blog23.com
www.qatesting
www.qatesting.co.uk
www.qatesting.cn
www.qatesting.io
www.findmetesting.com
www.wobsut.gov

The difference is that QA is process oriented and QC is product oriented.

Testing, therefore is product oriented and thus is in the QC domain. Testing for quality isn't assuring quality, it's controlling it.



Fuzzy-Wuzzy	- DASH
Fuzzy;Wuzzy	- COLON
Fuzzy!Wuzzy	- EXCLAMATION
Fuzzy£Wuzzy	- POUND
Fuzzy#Wuzzy	- HASH
Fuzzy%Wuzzy	- PERCENT
Fuzzy@Wuzzy	- AT
Fuzzy&Wuzzy	- AND
Fuzzy=Wuzzy	- EQUAL
Fuzzy§Wuzzy
Fuzzy~Wuzzy
Fuzzy?Wuzzy	 - QUESTION MARK
Fuzzy$Wuzzy	 - DOLLAR
Fuzzy[Wuzzy] - BRACKETS
Fuzzy^Wuzzy
Fuzzy(Wuzzy) - BRACKETS
Fuzzy+Wuzzy	 - PLUS
Fuzzy±Wuzzy	 - PLUS/MINUE
Fuzzy|Wuzzy	 - PIPE
Fuzzy/Wuzzy	 - FORWARDSLASH
Fuzzy<Wuzzy> - BRACKETS
Fuzzy{Wuzzy} - CURLY
Fuzzy\Wuzzy  - BACKSLASH


// Error 1:

{
  "reqId": "tF4MFehlCzHFmjEMaS6u",
  "level": 3,
  "time": "2022-12-15T18:14:22+00:00",
  "remoteAddr": "192.168.0.180",
  "user": "mike",
  "app": "PHP",
  "method": "GET",
  "url": "/remote.php/dav/calendars/mike/personal/?export",
  "message": "Trying to access array offset on value of type null at /var/www/html/3rdparty/sabre/dav/lib/CalDAV/CalendarObject.php#88",
  "userAgent": "Mozilla/5.0 (X11; Linux x86_64; rv:106.0) Gecko/20100101 Firefox/106.0",
  "version": "25.0.2.3",
  "exception": {
    "Exception": "Error",
    "Message": "Trying to access array offset on value of type null at /var/www/html/3rdparty/sabre/dav/lib/CalDAV/CalendarObject.php#88",
    "Code": 0,
    "Trace": [
      {
        "file": "/var/www/html/3rdparty/sabre/dav/lib/CalDAV/CalendarObject.php",
        "line": 88,
        "function": "onError",
        "class": "OC\\Log\\ErrorHandler",
        "type": "::",
        "args": [
          2,
          "Trying to access array offset on value of type null",
          "/var/www/html/3rdparty/sabre/dav/lib/CalDAV/CalendarObject.php",
          88
        ]
      },
      {
        "file": "/var/www/html/apps/dav/lib/CalDAV/CalendarObject.php",
        "line": 63,
        "function": "get",
        "class": "Sabre\\CalDAV\\CalendarObject",
        "type": "->",
        "args": []
      },
      {
        "file": "/var/www/html/3rdparty/sabre/dav/lib/CalDAV/Plugin.php",
        "line": 406,
        "function": "get",
        "class": "OCA\\DAV\\CalDAV\\CalendarObject",
        "type": "->",
        "args": []
      },
      {
        "file": "/var/www/html/3rdparty/sabre/dav/lib/DAV/PropFind.php",
        "line": 95,
        "function": "Sabre\\CalDAV\\{closure}",
        "class": "Sabre\\CalDAV\\Plugin",
        "type": "->",
        "args": [
          "*** sensitive parameters replaced ***"
        ]
      },
      {
        "file": "/var/www/html/3rdparty/sabre/dav/lib/CalDAV/Plugin.php",
        "line": 413,
        "function": "handle",
        "class": "Sabre\\DAV\\PropFind",
        "type": "->",
        "args": [
          "{urn:ietf:params:xml:ns:caldav}calendar-data",
          {
            "__class__": "Closure"
          }
        ]
      },
      {
        "file": "/var/www/html/3rdparty/sabre/event/lib/WildcardEmitterTrait.php",
        "line": 89,
        "function": "propFind",
        "class": "Sabre\\CalDAV\\Plugin",
        "type": "->",
        "args": [
          {
            "__class__": "Sabre\\DAV\\PropFind"
          },
          {
            "__class__": "OCA\\DAV\\CalDAV\\CalendarObject"
          }
        ]
      },
      {
        "file": "/var/www/html/3rdparty/sabre/dav/lib/DAV/Server.php",
        "line": 1052,
        "function": "emit",
        "class": "Sabre\\DAV\\Server",
        "type": "->",
        "args": [
          "propFind",
          [
            {
              "__class__": "Sabre\\DAV\\PropFind"
            },
            {
              "__class__": "OCA\\DAV\\CalDAV\\CalendarObject"
            }
          ]
        ]
      },
      {
        "file": "/var/www/html/3rdparty/sabre/dav/lib/DAV/Server.php",
        "line": 984,
        "function": "getPropertiesByNode",
        "class": "Sabre\\DAV\\Server",
        "type": "->",
        "args": [
          {
            "__class__": "Sabre\\DAV\\PropFind"
          },
          {
            "__class__": "OCA\\DAV\\CalDAV\\CalendarObject"
          }
        ]
      },
      {
        "function": "getPropertiesIteratorForPath",
        "class": "Sabre\\DAV\\Server",
        "type": "->",
        "args": [
          "calendars/mike/personal",
          [
            "{urn:ietf:params:xml:ns:caldav}calendar-data"
          ],
          1
        ]
      },
      {
        "file": "/var/www/html/3rdparty/sabre/dav/lib/DAV/Server.php",
        "line": 941,
        "function": "iterator_to_array",
        "args": [
          {
            "__class__": "Generator"
          }
        ]
      },
      {
        "file": "/var/www/html/3rdparty/sabre/dav/lib/CalDAV/ICSExportPlugin.php",
        "line": 214,
        "function": "getPropertiesForPath",
        "class": "Sabre\\DAV\\Server",
        "type": "->",
        "args": [
          "calendars/mike/personal",
          [
            "{urn:ietf:params:xml:ns:caldav}calendar-data"
          ],
          1
        ]
      },
      {
        "file": "/var/www/html/apps/dav/lib/CalDAV/ICSExportPlugin/ICSExportPlugin.php",
        "line": 61,
        "function": "generateResponse",
        "class": "Sabre\\CalDAV\\ICSExportPlugin",
        "type": "->",
        "args": [
          "calendars/mike/personal",
          null,
          null,
          false,
          false,
          "text/calendar",
          [
            {
              "__class__": "Sabre\\DAV\\Xml\\Property\\ResourceType"
            },
            "Mike",
            325,
            "http://sabre.io/ns/sync/325",
            "#1a5fb4",
            "And 1 more entries, set log level to debug to see all entries"
          ],
          {
            "__class__": "Sabre\\HTTP\\Response"
          }
        ]
      },
      {
        "file": "/var/www/html/3rdparty/sabre/dav/lib/CalDAV/ICSExportPlugin.php",
        "line": 155,
        "function": "generateResponse",
        "class": "OCA\\DAV\\CalDAV\\ICSExportPlugin\\ICSExportPlugin",
        "type": "->",
        "args": [
          "calendars/mike/personal",
          null,
          null,
          false,
          false,
          "text/calendar",
          [
            {
              "__class__": "Sabre\\DAV\\Xml\\Property\\ResourceType"
            },
            "Mike",
            325,
            "http://sabre.io/ns/sync/325",
            "#1a5fb4",
            "And 1 more entries, set log level to debug to see all entries"
          ],
          {
            "__class__": "Sabre\\HTTP\\Response"
          }
        ]
      },
      {
        "file": "/var/www/html/3rdparty/sabre/event/lib/WildcardEmitterTrait.php",
        "line": 89,
        "function": "httpGet",
        "class": "Sabre\\CalDAV\\ICSExportPlugin",
        "type": "->",
        "args": [
          {
            "__class__": "Sabre\\HTTP\\Request"
          },
          {
            "__class__": "Sabre\\HTTP\\Response"
          }
        ]
      },
      {
        "file": "/var/www/html/3rdparty/sabre/dav/lib/DAV/Server.php",
        "line": 472,
        "function": "emit",
        "class": "Sabre\\DAV\\Server",
        "type": "->",
        "args": [
          "method:GET",
          [
            {
              "__class__": "Sabre\\HTTP\\Request"
            },
            {
              "__class__": "Sabre\\HTTP\\Response"
            }
          ]
        ]
      },
      {
        "file": "/var/www/html/3rdparty/sabre/dav/lib/DAV/Server.php",
        "line": 253,
        "function": "invokeMethod",
        "class": "Sabre\\DAV\\Server",
        "type": "->",
        "args": [
          {
            "__class__": "Sabre\\HTTP\\Request"
          },
          {
            "__class__": "Sabre\\HTTP\\Response"
          }
        ]
      },
      {
        "file": "/var/www/html/3rdparty/sabre/dav/lib/DAV/Server.php",
        "line": 321,
        "function": "start",
        "class": "Sabre\\DAV\\Server",
        "type": "->",
        "args": []
      },
      {
        "file": "/var/www/html/apps/dav/lib/Server.php",
        "line": 360,
        "function": "exec",
        "class": "Sabre\\DAV\\Server",
        "type": "->",
        "args": []
      },
      {
        "file": "/var/www/html/apps/dav/appinfo/v2/remote.php",
        "line": 35,
        "function": "exec",
        "class": "OCA\\DAV\\Server",
        "type": "->",
        "args": []
      },
      {
        "file": "/var/www/html/remote.php",
        "line": 171,
        "args": [
          "/var/www/html/apps/dav/appinfo/v2/remote.php"
        ],
        "function": "require_once"
      }
    ],
    "File": "/var/www/html/lib/private/Log/ErrorHandler.php",
    "Line": 92,
    "CustomMessage": "--"
  },
  "id": "639b6940727da"
}

// Error 2:

{
  "reqId": "tF4MFehlCzHFmjEMaS6u",
  "level": 3,
  "time": "2022-12-15T18:14:22+00:00",
  "remoteAddr": "192.168.0.180",
  "user": "mike",
  "app": "webdav",
  "method": "GET",
  "url": "/remote.php/dav/calendars/mike/personal/?export",
  "message": "str_replace(): Argument #3 ($subject) must be of type array|string, null given",
  "userAgent": "Mozilla/5.0 (X11; Linux x86_64; rv:106.0) Gecko/20100101 Firefox/106.0",
  "version": "25.0.2.3",
  "exception": {
    "Exception": "TypeError",
    "Message": "str_replace(): Argument #3 ($subject) must be of type array|string, null given",
    "Code": 0,
    "Trace": [
      {
        "file": "/var/www/html/3rdparty/sabre/dav/lib/CalDAV/Plugin.php",
        "line": 412,
        "function": "str_replace",
        "args": [
          "\r",
          "",
          null
        ]
      },
      {
        "file": "/var/www/html/3rdparty/sabre/dav/lib/DAV/PropFind.php",
        "line": 95,
        "function": "Sabre\\CalDAV\\{closure}",
        "class": "Sabre\\CalDAV\\Plugin",
        "type": "->",
        "args": [
          "*** sensitive parameters replaced ***"
        ]
      },
      {
        "file": "/var/www/html/3rdparty/sabre/dav/lib/CalDAV/Plugin.php",
        "line": 413,
        "function": "handle",
        "class": "Sabre\\DAV\\PropFind",
        "type": "->",
        "args": [
          "{urn:ietf:params:xml:ns:caldav}calendar-data",
          {
            "__class__": "Closure"
          }
        ]
      },
      {
        "file": "/var/www/html/3rdparty/sabre/event/lib/WildcardEmitterTrait.php",
        "line": 89,
        "function": "propFind",
        "class": "Sabre\\CalDAV\\Plugin",
        "type": "->",
        "args": [
          {
            "__class__": "Sabre\\DAV\\PropFind"
          },
          {
            "__class__": "OCA\\DAV\\CalDAV\\CalendarObject"
          }
        ]
      },
      {
        "file": "/var/www/html/3rdparty/sabre/dav/lib/DAV/Server.php",
        "line": 1052,
        "function": "emit",
        "class": "Sabre\\DAV\\Server",
        "type": "->",
        "args": [
          "propFind",
          [
            {
              "__class__": "Sabre\\DAV\\PropFind"
            },
            {
              "__class__": "OCA\\DAV\\CalDAV\\CalendarObject"
            }
          ]
        ]
      },
      {
        "file": "/var/www/html/3rdparty/sabre/dav/lib/DAV/Server.php",
        "line": 984,
        "function": "getPropertiesByNode",
        "class": "Sabre\\DAV\\Server",
        "type": "->",
        "args": [
          {
            "__class__": "Sabre\\DAV\\PropFind"
          },
          {
            "__class__": "OCA\\DAV\\CalDAV\\CalendarObject"
          }
        ]
      },
      {
        "function": "getPropertiesIteratorForPath",
        "class": "Sabre\\DAV\\Server",
        "type": "->",
        "args": [
          "calendars/mike/personal",
          [
            "{urn:ietf:params:xml:ns:caldav}calendar-data"
          ],
          1
        ]
      },
      {
        "file": "/var/www/html/3rdparty/sabre/dav/lib/DAV/Server.php",
        "line": 941,
        "function": "iterator_to_array",
        "args": [
          {
            "__class__": "Generator"
          }
        ]
      },
      {
        "file": "/var/www/html/3rdparty/sabre/dav/lib/CalDAV/ICSExportPlugin.php",
        "line": 214,
        "function": "getPropertiesForPath",
        "class": "Sabre\\DAV\\Server",
        "type": "->",
        "args": [
          "calendars/mike/personal",
          [
            "{urn:ietf:params:xml:ns:caldav}calendar-data"
          ],
          1
        ]
      },
      {
        "file": "/var/www/html/apps/dav/lib/CalDAV/ICSExportPlugin/ICSExportPlugin.php",
        "line": 61,
        "function": "generateResponse",
        "class": "Sabre\\CalDAV\\ICSExportPlugin",
        "type": "->",
        "args": [
          "calendars/mike/personal",
          null,
          null,
          false,
          false,
          "text/calendar",
          [
            {
              "__class__": "Sabre\\DAV\\Xml\\Property\\ResourceType"
            },
            "Mike",
            325,
            "http://sabre.io/ns/sync/325",
            "#1a5fb4",
            "And 1 more entries, set log level to debug to see all entries"
          ],
          {
            "__class__": "Sabre\\HTTP\\Response"
          }
        ]
      },
      {
        "file": "/var/www/html/3rdparty/sabre/dav/lib/CalDAV/ICSExportPlugin.php",
        "line": 155,
        "function": "generateResponse",
        "class": "OCA\\DAV\\CalDAV\\ICSExportPlugin\\ICSExportPlugin",
        "type": "->",
        "args": [
          "calendars/mike/personal",
          null,
          null,
          false,
          false,
          "text/calendar",
          [
            {
              "__class__": "Sabre\\DAV\\Xml\\Property\\ResourceType"
            },
            "Mike",
            325,
            "http://sabre.io/ns/sync/325",
            "#1a5fb4",
            "And 1 more entries, set log level to debug to see all entries"
          ],
          {
            "__class__": "Sabre\\HTTP\\Response"
          }
        ]
      },
      {
        "file": "/var/www/html/3rdparty/sabre/event/lib/WildcardEmitterTrait.php",
        "line": 89,
        "function": "httpGet",
        "class": "Sabre\\CalDAV\\ICSExportPlugin",
        "type": "->",
        "args": [
          {
            "__class__": "Sabre\\HTTP\\Request"
          },
          {
            "__class__": "Sabre\\HTTP\\Response"
          }
        ]
      },
      {
        "file": "/var/www/html/3rdparty/sabre/dav/lib/DAV/Server.php",
        "line": 472,
        "function": "emit",
        "class": "Sabre\\DAV\\Server",
        "type": "->",
        "args": [
          "method:GET",
          [
            {
              "__class__": "Sabre\\HTTP\\Request"
            },
            {
              "__class__": "Sabre\\HTTP\\Response"
            }
          ]
        ]
      },
      {
        "file": "/var/www/html/3rdparty/sabre/dav/lib/DAV/Server.php",
        "line": 253,
        "function": "invokeMethod",
        "class": "Sabre\\DAV\\Server",
        "type": "->",
        "args": [
          {
            "__class__": "Sabre\\HTTP\\Request"
          },
          {
            "__class__": "Sabre\\HTTP\\Response"
          }
        ]
      },
      {
        "file": "/var/www/html/3rdparty/sabre/dav/lib/DAV/Server.php",
        "line": 321,
        "function": "start",
        "class": "Sabre\\DAV\\Server",
        "type": "->",
        "args": []
      },
      {
        "file": "/var/www/html/apps/dav/lib/Server.php",
        "line": 360,
        "function": "exec",
        "class": "Sabre\\DAV\\Server",
        "type": "->",
        "args": []
      },
      {
        "file": "/var/www/html/apps/dav/appinfo/v2/remote.php",
        "line": 35,
        "function": "exec",
        "class": "OCA\\DAV\\Server",
        "type": "->",
        "args": []
      },
      {
        "file": "/var/www/html/remote.php",
        "line": 171,
        "args": [
          "/var/www/html/apps/dav/appinfo/v2/remote.php"
        ],
        "function": "require_once"
      }
    ],
    "File": "/var/www/html/3rdparty/sabre/dav/lib/CalDAV/Plugin.php",
    "Line": 412,
    "message": "str_replace(): Argument #3 ($subject) must be of type array|string, null given",
    "exception": [],
    "CustomMessage": "str_replace(): Argument #3 ($subject) must be of type array|string, null given"
  },
  "id": "639b694072759"
}

budget_of_the_movie = float(input())
number_of_extras = int(input())
price_for_one_extra = float(input())
decor_for_the_movie = budget_of_the_movie / 10

if number_of_extras > 150:
    price_for_one_extra -= (price_for_one_extra / 10)

sum_of_extras_expenses = number_of_extras * price_for_one_extra

sum_of_expenses = decor_for_the_movie + sum_of_extras_expenses

if budget_of_the_movie >= sum_of_expenses:
    print("Action!")
    left_money = budget_of_the_movie - sum_of_expenses
    print(f'Wingard starts filming with {left_money:.2f} leva left.')
else:
    print(f'Not enough money!')
    needed_money = sum_of_expenses - budget_of_the_movie
    print(f'Wingard needs {needed_money:.2f} leva more.')

#include <stdio.h>
int main(){
    int arr[5] = {13, 45, 67, 19, 11};
    int (*ptr)[5];          //Declares a pointer to an array
    ptr = &arr;             //points to the beginning of the array
    //Equivalent to *ptr = a
    for(int i = 0; i < 5; i++){
        printf("%d ", *(*ptr + i));     
        //Here, *ptr basically refers to the start of the array, i.e index is 0.
        //So, *(0 + i) equals to a[i]
        //Therefore, prints the value of a[i]
    }
    printf("\n");
    return 0;
}